<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Data</name>
  </assembly>
  <members>
    <member name="T:Microsoft.SqlServer.Server.DataAccessKind">
      <summary>Описывает тип доступа к пользовательским данным для определенного пользователем метода или функции.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.DataAccessKind.None">
      <summary>Метод или функция не выполняет доступ к пользовательским данным.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.DataAccessKind.Read">
      <summary>Метод или функция читает пользовательские данные.</summary>
    </member>
    <member name="T:Microsoft.SqlServer.Server.Format">
      <summary>Используется классами <see cref="T:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute" /> и <see cref="T:Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute" /> для указания формата сериализации пользовательского типа или агрегатной функции.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.Format.Native">
      <summary>Формат сериализации <see langword="Native" /> использует простейший алгоритм, позволяющий серверу SQL Server сохранять на диске эффективное представление пользовательского типа. Типами, отмеченными для сериализации <see langword="Native" />, могут быть только типы значений (структуры в Microsoft Visual C# и в Microsoft Visual Basic .NET) в качестве элементов. Члены в виде ссылочных типов (таких, как классы Visual C# или Visual Basic), определенных пользователем или существующих в базовой структуре (например, <see cref="T:System.String" />), не поддерживаются.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.Format.Unknown">
      <summary>Формат сериализации неизвестен.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.Format.UserDefined">
      <summary>Формат сериализации <see langword="UserDefined" /> обеспечивает разработчику полный контроль над форматом двоичных данных, осуществляемый с помощью методов <see cref="T:Microsoft.SqlServer.Server.IBinarySerialize" /><see langword=".Write" /> и <see cref="T:Microsoft.SqlServer.Server.IBinarySerialize" /><see langword=".Read" />.</summary>
    </member>
    <member name="T:Microsoft.SqlServer.Server.IBinarySerialize">
      <summary>Предоставляет настраиваемую реализацию для сериализации и десериализации пользовательских типов (UDT) и пользовательских агрегатных функций.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Server.IBinarySerialize.Read(System.IO.BinaryReader)">
      <summary>Генерирует пользовательский тип (UDT) или пользовательскую агрегатную функцию из соответствующей двоичной формы.</summary>
      <param name="r">Поток <see cref="T:System.IO.BinaryReader" />, из которого выполняется десериализация объекта.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Server.IBinarySerialize.Write(System.IO.BinaryWriter)">
      <summary>Преобразует пользовательский тип или пользовательскую агрегатную функцию в двоичный формат для возможности сохранения.</summary>
      <param name="w">Поток <see cref="T:System.IO.BinaryWriter" />, в который выполняется сериализация пользовательского типа или пользовательской агрегатной функции.</param>
    </member>
    <member name="T:Microsoft.SqlServer.Server.InvalidUdtException">
      <summary>Генерируется, когда поставщик <see cref="N:System.Data.SqlClient" /> для ADO.NET или SQL Server обнаруживает недопустимый пользовательский тип (UDT).</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Server.InvalidUdtException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Переносит все свойства <see cref="T:Microsoft.SqlServer.Server.InvalidUdtException" /> в класс <see cref="T:System.Runtime.Serialization.SerializationInfo" /> для данного объекта <see cref="T:System.Runtime.Serialization.StreamingContext" />.</summary>
      <param name="si">Объект <see cref="T:System.Runtime.Serialization.SerializationInfo" />.</param>
      <param name="context">Объект <see cref="T:System.Runtime.Serialization.StreamingContext" />.</param>
    </member>
    <member name="T:Microsoft.SqlServer.Server.SqlContext">
      <summary>Представляет абстракцию контекста вызывающего кода, обеспечивающую доступ к объектам <see cref="T:Microsoft.SqlServer.Server.SqlPipe" />, <see cref="T:Microsoft.SqlServer.Server.SqlTriggerContext" /> и <see cref="T:System.Security.Principal.WindowsIdentity" />. Этот класс не наследуется.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlContext.IsAvailable">
      <summary>Показывает, выполняется ли вызывающий код в SQL Server и доступно ли контекстное соединение.</summary>
      <returns>
        <see langword="True" />, если контекстное соединение доступно, равно как и остальные члены класса <see cref="T:Microsoft.SqlServer.Server.SqlContext" />.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlContext.Pipe">
      <summary>Получает объект канала, позволяющий отправлять из вызывающего кода клиенту результирующие наборы, сообщения и результаты выполнения команд.</summary>
      <returns>Экземпляр <see cref="T:Microsoft.SqlServer.Server.SqlPipe" />, если канал доступен, или <see langword="null" /> при вызове из контекста, в котором канал недоступен (например, в пользовательской функции).</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlContext.TriggerContext">
      <summary>Получает контекст триггера, используемый для передачи в вызывающий код сведений о причинах срабатывания триггера и таблицы обновленных столбцов.</summary>
      <returns>Экземпляр <see cref="T:Microsoft.SqlServer.Server.SqlTriggerContext" />, если контекст триггера доступен, или <see langword="null" /> при вызове извне области действия триггера.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlContext.WindowsIdentity">
      <summary>Удостоверение Microsoft Windows для вызывающего кода.</summary>
      <returns>Экземпляр <see cref="T:System.Security.Principal.WindowsIdentity" />, представляющий удостоверение Windows для вызывающего кода, или <see langword="null" />, если клиент прошел проверку подлинности с помощью средств проверки подлинности SQL Server.</returns>
    </member>
    <member name="T:Microsoft.SqlServer.Server.SqlDataRecord">
      <summary>Представляет одиночную строку данных и ее метаданные. Этот класс не наследуется.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.#ctor(Microsoft.SqlServer.Server.SqlMetaData[])">
      <summary>Инициализирует новый экземпляр <see cref="T:Microsoft.SqlServer.Server.SqlDataRecord" /> схемой на основе массива объектов <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" />, передаваемого в качестве аргумента.</summary>
      <param name="metaData">Массив объектов <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" />, которые описывают каждый столбец в <see cref="T:Microsoft.SqlServer.Server.SqlDataRecord" />.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="metaData" /> — <see langword="null" />.</exception>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount">
      <summary>Возвращает число столбцов в строке данных. Это свойство доступно только для чтения.</summary>
      <returns>Число столбцов в строке данных в виде целого числа.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetBoolean(System.Int32)">
      <summary>Возвращает значение столбца, определенное порядковым номером, в виде <see cref="T:System.Boolean" />.</summary>
      <param name="ordinal">Отсчитываемый от нуля порядковый номер столбца.</param>
      <returns>Значение столбца в виде <see cref="T:System.Boolean" />.</returns>
      <exception cref="T:System.IndexOutOfRangeException">Значение <paramref name="ordinal" /> меньше 0 или больше количества столбцов (то есть <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">Столбец, указанный <paramref name="ordinal" />, имеет значение NULL.</exception>
      <exception cref="T:System.InvalidCastException">Существует несоответствие типов.</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetByte(System.Int32)">
      <summary>Возвращает значение столбца, определенное порядковым номером, в виде <see cref="T:System.Byte" />.</summary>
      <param name="ordinal">Отсчитываемый от нуля порядковый номер столбца.</param>
      <returns>Значение столбца в виде <see cref="T:System.Byte" />.</returns>
      <exception cref="T:System.IndexOutOfRangeException">Значение <paramref name="ordinal" /> меньше 0 или больше количества столбцов (то есть <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">Столбец, указанный <paramref name="ordinal" />, имеет значение NULL.</exception>
      <exception cref="T:System.InvalidCastException">Существует несоответствие типов.</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
      <summary>Возвращает значение столбца, указанное порядковым номером, в виде массива объектов <see cref="T:System.Byte" />.</summary>
      <param name="ordinal">Отсчитываемый от нуля порядковый номер столбца.</param>
      <param name="fieldOffset">Смещение в значении поля, с которого следует начать извлечение байтов.</param>
      <param name="buffer">Целевой буфер для копирования байтов.</param>
      <param name="bufferOffset">Смещение в буфере, с которого следует начать копирование байтов.</param>
      <param name="length">Число байтов для копирования в буфер.</param>
      <returns>Скопированное число байт.</returns>
      <exception cref="T:System.IndexOutOfRangeException">Значение <paramref name="ordinal" /> меньше 0 или больше количества столбцов (то есть <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">Столбец, указанный <paramref name="ordinal" />, имеет значение NULL.</exception>
      <exception cref="T:System.InvalidCastException">Существует несоответствие типов.</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetChar(System.Int32)">
      <summary>Возвращает значение столбца, определенное порядковым номером, в виде <see cref="T:System.Char" />.</summary>
      <param name="ordinal">Отсчитываемый от нуля порядковый номер столбца.</param>
      <returns>Значение столбца в виде <see cref="T:System.Char" />.</returns>
      <exception cref="T:System.IndexOutOfRangeException">Значение <paramref name="ordinal" /> меньше 0 или больше количества столбцов (то есть <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">Столбец, указанный <paramref name="ordinal" />, имеет значение NULL.</exception>
      <exception cref="T:System.InvalidCastException">Существует несоответствие типов.</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
      <summary>Возвращает значение столбца, указанное порядковым номером, в виде массива объектов <see cref="T:System.Char" />.</summary>
      <param name="ordinal">Отсчитываемый от нуля порядковый номер столбца.</param>
      <param name="fieldOffset">Смещение в значении поля, с которого следует начать извлечение символов.</param>
      <param name="buffer">Целевой буфер для копирования символов.</param>
      <param name="bufferOffset">Смещение в буфере, куда следует начать копировать символы.</param>
      <param name="length">Число символов для копирования в буфер.</param>
      <returns>Число скопированных символов.</returns>
      <exception cref="T:System.IndexOutOfRangeException">Значение <paramref name="ordinal" /> меньше 0 или больше количества столбцов (то есть <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">Столбец, указанный <paramref name="ordinal" />, имеет значение NULL.</exception>
      <exception cref="T:System.InvalidCastException">Существует несоответствие типов.</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetDataTypeName(System.Int32)">
      <summary>Возвращает имя типа данных для столбца, указанного аргументом порядкового номера.</summary>
      <param name="ordinal">Отсчитываемый от нуля порядковый номер столбца.</param>
      <returns>Объект <see cref="T:System.String" />, содержащий тип данных столбца.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение <paramref name="ordinal" /> меньше 0 или больше количества столбцов (то есть <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
      <exception cref="T:System.InvalidCastException">Существует несоответствие типов.</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetDateTime(System.Int32)">
      <summary>Возвращает значение столбца, определенное порядковым номером, в виде <see cref="T:System.DateTime" />.</summary>
      <param name="ordinal">Отсчитываемый от нуля порядковый номер столбца.</param>
      <returns>Значение столбца в виде <see cref="T:System.DateTime" />.</returns>
      <exception cref="T:System.IndexOutOfRangeException">Значение <paramref name="ordinal" /> меньше 0 или больше количества столбцов (то есть <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">Столбец, указанный <paramref name="ordinal" />, имеет значение NULL.</exception>
      <exception cref="T:System.InvalidCastException">Существует несоответствие типов.</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetDateTimeOffset(System.Int32)">
      <summary>Возвращает данные указанного столбца в виде <see cref="T:System.DateTimeOffset" />.</summary>
      <param name="ordinal">Порядковый номер столбца (от нуля).</param>
      <returns>Значение указанного столбца в виде <see cref="T:System.DateTimeOffset" />.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetDecimal(System.Int32)">
      <summary>Возвращает значение столбца, определенное порядковым номером, в виде <see cref="T:System.Decimal" />.</summary>
      <param name="ordinal">Отсчитываемый от нуля порядковый номер столбца.</param>
      <returns>Значение столбца в виде <see cref="T:System.Decimal" />.</returns>
      <exception cref="T:System.IndexOutOfRangeException">Значение <paramref name="ordinal" /> меньше 0 или больше количества столбцов (то есть <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">Столбец, указанный <paramref name="ordinal" />, имеет значение NULL.</exception>
      <exception cref="T:System.InvalidCastException">Существует несоответствие типов.</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetDouble(System.Int32)">
      <summary>Возвращает значение столбца, определенное порядковым номером, в виде <see cref="T:System.Double" />.</summary>
      <param name="ordinal">Отсчитываемый от нуля порядковый номер столбца.</param>
      <returns>Значение столбца в виде <see cref="T:System.Double" />.</returns>
      <exception cref="T:System.IndexOutOfRangeException">Значение <paramref name="ordinal" /> меньше 0 или больше количества столбцов (то есть <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">Столбец, указанный <paramref name="ordinal" />, имеет значение NULL.</exception>
      <exception cref="T:System.InvalidCastException">Существует несоответствие типов.</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetFieldType(System.Int32)">
      <summary>Возвращает объект <see cref="T:System.Type" />, представляющий тип параметра среды CLR, который соответствует типу SQL Server для столбца, указанного аргументом <paramref name="ordinal" />.</summary>
      <param name="ordinal">Отсчитываемый от нуля порядковый номер столбца.</param>
      <returns>Тип столбца в виде объекта <see cref="T:System.Type" />.</returns>
      <exception cref="T:System.IndexOutOfRangeException">Значение <paramref name="ordinal" /> меньше 0 или больше количества столбцов (то есть <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
      <exception cref="T:System.TypeLoadException">Столбец имеет определяемый пользователем тип, который недоступен домену вызывающего приложения.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Столбец имеет определяемый пользователем тип, который недоступен домену вызывающего приложения.</exception>
      <exception cref="T:System.InvalidCastException">Существует несоответствие типов.</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetFloat(System.Int32)">
      <summary>Возвращает значение столбца, определенное порядковым номером, в виде <see langword="float" />.</summary>
      <param name="ordinal">Отсчитываемый от нуля порядковый номер столбца.</param>
      <returns>Значение столбца в виде <see langword="float" />.</returns>
      <exception cref="T:System.IndexOutOfRangeException">Значение <paramref name="ordinal" /> меньше 0 или больше количества столбцов (то есть <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">Столбец, указанный <paramref name="ordinal" />, имеет значение NULL.</exception>
      <exception cref="T:System.InvalidCastException">Существует несоответствие типов.</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetGuid(System.Int32)">
      <summary>Возвращает значение столбца, определенное порядковым номером, в виде <see cref="T:System.Guid" />.</summary>
      <param name="ordinal">Отсчитываемый от нуля порядковый номер столбца.</param>
      <returns>Значение столбца в виде <see cref="T:System.Guid" />.</returns>
      <exception cref="T:System.IndexOutOfRangeException">Значение <paramref name="ordinal" /> меньше 0 или больше количества столбцов (то есть <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">Столбец, указанный <paramref name="ordinal" />, имеет значение NULL.</exception>
      <exception cref="T:System.InvalidCastException">Существует несоответствие типов.</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetInt16(System.Int32)">
      <summary>Возвращает значение столбца, определенное порядковым номером, в виде <see cref="T:System.Int16" />.</summary>
      <param name="ordinal">Отсчитываемый от нуля порядковый номер столбца.</param>
      <returns>Значение столбца в виде <see cref="T:System.Int16" />.</returns>
      <exception cref="T:System.IndexOutOfRangeException">Значение <paramref name="ordinal" /> меньше 0 или больше количества столбцов (то есть <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">Столбец, указанный <paramref name="ordinal" />, имеет значение NULL.</exception>
      <exception cref="T:System.InvalidCastException">Существует несоответствие типов.</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetInt32(System.Int32)">
      <summary>Возвращает значение столбца, определенное порядковым номером, в виде <see cref="T:System.Int32" />.</summary>
      <param name="ordinal">Отсчитываемый от нуля порядковый номер столбца.</param>
      <returns>Значение столбца в виде <see cref="T:System.Int32" />.</returns>
      <exception cref="T:System.IndexOutOfRangeException">Значение <paramref name="ordinal" /> меньше 0 или больше количества столбцов (то есть <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">Столбец, указанный <paramref name="ordinal" />, имеет значение NULL.</exception>
      <exception cref="T:System.InvalidCastException">Существует несоответствие типов.</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetInt64(System.Int32)">
      <summary>Возвращает значение столбца, определенное порядковым номером, в виде <see cref="T:System.Int64" />.</summary>
      <param name="ordinal">Отсчитываемый от нуля порядковый номер столбца.</param>
      <returns>Значение столбца в виде <see cref="T:System.Int64" />.</returns>
      <exception cref="T:System.IndexOutOfRangeException">Значение <paramref name="ordinal" /> меньше 0 или больше количества столбцов (то есть <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">Столбец, указанный <paramref name="ordinal" />, имеет значение NULL.</exception>
      <exception cref="T:System.InvalidCastException">Существует несоответствие типов.</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetName(System.Int32)">
      <summary>Возвращает имя столбца, указанного аргументом порядкового номера.</summary>
      <param name="ordinal">Отсчитываемый от нуля порядковый номер столбца.</param>
      <returns>Объект <see cref="T:System.String" />, содержащий имя столбца.</returns>
      <exception cref="T:System.IndexOutOfRangeException">Значение <paramref name="ordinal" /> меньше 0 или больше количества столбцов (то есть <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
      <exception cref="T:System.InvalidCastException">Существует несоответствие типов.</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetOrdinal(System.String)">
      <summary>Возвращает порядковый номер столбца, указанный по имени столбца.</summary>
      <param name="name">Имя столбца, которое нужно найти.</param>
      <returns>Отсчитываемый от нуля порядковый номер столбца в виде целого числа.</returns>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="name" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.IndexOutOfRangeException">Не удалось найти имя столбца.</exception>
      <exception cref="T:System.InvalidCastException">Существует несоответствие типов.</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetSqlBinary(System.Int32)">
      <summary>Возвращает значение столбца, определенное порядковым номером, в виде <see cref="T:System.Data.SqlTypes.SqlBinary" />.</summary>
      <param name="ordinal">Отсчитываемый от нуля порядковый номер столбца.</param>
      <returns>Значение столбца в виде <see cref="T:System.Data.SqlTypes.SqlBinary" />.</returns>
      <exception cref="T:System.IndexOutOfRangeException">Значение <paramref name="ordinal" /> меньше 0 или больше количества столбцов (то есть <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
      <exception cref="T:System.InvalidCastException">Существует несоответствие типов.</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetSqlBoolean(System.Int32)">
      <summary>Возвращает значение столбца, определенное порядковым номером, в виде <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <param name="ordinal">Отсчитываемый от нуля порядковый номер столбца.</param>
      <returns>Значение столбца в виде <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</returns>
      <exception cref="T:System.IndexOutOfRangeException">Значение <paramref name="ordinal" /> меньше 0 или больше количества столбцов (то есть <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
      <exception cref="T:System.InvalidCastException">Существует несоответствие типов.</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetSqlByte(System.Int32)">
      <summary>Возвращает значение столбца, определенное порядковым номером, в виде <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="ordinal">Отсчитываемый от нуля порядковый номер столбца.</param>
      <returns>Значение столбца в виде <see cref="T:System.Data.SqlTypes.SqlByte" />.</returns>
      <exception cref="T:System.IndexOutOfRangeException">Значение <paramref name="ordinal" /> меньше 0 или больше количества столбцов (то есть <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
      <exception cref="T:System.InvalidCastException">Существует несоответствие типов.</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetSqlBytes(System.Int32)">
      <summary>Возвращает значение столбца, определенное порядковым номером, в виде <see cref="T:System.Data.SqlTypes.SqlBytes" />.</summary>
      <param name="ordinal">Отсчитываемый от нуля порядковый номер столбца.</param>
      <returns>Значение столбца в виде <see cref="T:System.Data.SqlTypes.SqlBytes" />.</returns>
      <exception cref="T:System.IndexOutOfRangeException">Значение <paramref name="ordinal" /> меньше 0 или больше количества столбцов (то есть <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
      <exception cref="T:System.InvalidCastException">Существует несоответствие типов.</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetSqlChars(System.Int32)">
      <summary>Возвращает значение столбца, определенное порядковым номером, в виде <see cref="T:System.Data.SqlTypes.SqlChars" />.</summary>
      <param name="ordinal">Отсчитываемый от нуля порядковый номер столбца.</param>
      <returns>Значение столбца в виде <see cref="T:System.Data.SqlTypes.SqlChars" />.</returns>
      <exception cref="T:System.IndexOutOfRangeException">Значение <paramref name="ordinal" /> меньше 0 или больше количества столбцов (то есть <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
      <exception cref="T:System.InvalidCastException">Существует несоответствие типов.</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetSqlDateTime(System.Int32)">
      <summary>Возвращает значение столбца, определенное порядковым номером, в виде <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</summary>
      <param name="ordinal">Отсчитываемый от нуля порядковый номер столбца.</param>
      <returns>Значение столбца в виде <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</returns>
      <exception cref="T:System.IndexOutOfRangeException">Значение <paramref name="ordinal" /> меньше 0 или больше количества столбцов (то есть <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
      <exception cref="T:System.InvalidCastException">Существует несоответствие типов.</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetSqlDecimal(System.Int32)">
      <summary>Возвращает значение столбца, определенное порядковым номером, в виде <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <param name="ordinal">Отсчитываемый от нуля порядковый номер столбца.</param>
      <returns>Значение столбца в виде <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
      <exception cref="T:System.IndexOutOfRangeException">Значение <paramref name="ordinal" /> меньше 0 или больше количества столбцов (то есть <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
      <exception cref="T:System.InvalidCastException">Существует несоответствие типов.</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetSqlDouble(System.Int32)">
      <summary>Возвращает значение столбца, определенное порядковым номером, в виде <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <param name="ordinal">Отсчитываемый от нуля порядковый номер столбца.</param>
      <returns>Значение столбца в виде <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
      <exception cref="T:System.IndexOutOfRangeException">Значение <paramref name="ordinal" /> меньше 0 или больше количества столбцов (то есть <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
      <exception cref="T:System.InvalidCastException">Существует несоответствие типов.</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetSqlFieldType(System.Int32)">
      <summary>Возвращает объект <see cref="T:System.Type" />, представляющий тип (в виде типа SQL Server, определенного в <see cref="N:System.Data.SqlTypes" />), который сопоставляется с типом SQL Server столбца.</summary>
      <param name="ordinal">Отсчитываемый от нуля порядковый номер столбца.</param>
      <returns>Тип столбца в виде объекта <see cref="T:System.Type" />.</returns>
      <exception cref="T:System.IndexOutOfRangeException">Значение <paramref name="ordinal" /> меньше 0 или больше количества столбцов (то есть <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
      <exception cref="T:System.TypeLoadException">Столбец имеет определяемый пользователем тип, который недоступен домену вызывающего приложения.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Столбец имеет определяемый пользователем тип, который недоступен домену вызывающего приложения.</exception>
      <exception cref="T:System.InvalidCastException">Существует несоответствие типов.</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetSqlGuid(System.Int32)">
      <summary>Возвращает значение столбца, определенное порядковым номером, в виде <see cref="T:System.Data.SqlTypes.SqlGuid" />.</summary>
      <param name="ordinal">Отсчитываемый от нуля порядковый номер столбца.</param>
      <returns>Значение столбца в виде <see cref="T:System.Data.SqlTypes.SqlGuid" />.</returns>
      <exception cref="T:System.IndexOutOfRangeException">Значение <paramref name="ordinal" /> меньше 0 или больше количества столбцов (то есть <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
      <exception cref="T:System.InvalidCastException">Существует несоответствие типов.</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetSqlInt16(System.Int32)">
      <summary>Возвращает значение столбца, определенное порядковым номером, в виде <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="ordinal">Отсчитываемый от нуля порядковый номер столбца.</param>
      <returns>Значение столбца в виде <see cref="T:System.Data.SqlTypes.SqlInt16" />.</returns>
      <exception cref="T:System.IndexOutOfRangeException">Значение <paramref name="ordinal" /> меньше 0 или больше количества столбцов (то есть <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
      <exception cref="T:System.InvalidCastException">Существует несоответствие типов.</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetSqlInt32(System.Int32)">
      <summary>Возвращает значение столбца, определенное порядковым номером, в виде <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <param name="ordinal">Отсчитываемый от нуля порядковый номер столбца.</param>
      <returns>Значение столбца в виде <see cref="T:System.Data.SqlTypes.SqlInt32" />.</returns>
      <exception cref="T:System.IndexOutOfRangeException">Значение <paramref name="ordinal" /> меньше 0 или больше количества столбцов (то есть <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
      <exception cref="T:System.InvalidCastException">Существует несоответствие типов.</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetSqlInt64(System.Int32)">
      <summary>Возвращает значение столбца, определенное порядковым номером, в виде <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="ordinal">Отсчитываемый от нуля порядковый номер столбца.</param>
      <returns>Значение столбца в виде <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
      <exception cref="T:System.IndexOutOfRangeException">Значение <paramref name="ordinal" /> меньше 0 или больше количества столбцов (то есть <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
      <exception cref="T:System.InvalidCastException">Существует несоответствие типов.</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetSqlMetaData(System.Int32)">
      <summary>Возвращает объект <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" />, описывающий метаданные столбца, определенного порядковым номером.</summary>
      <param name="ordinal">Отсчитываемый от нуля порядковый номер столбца.</param>
      <returns>Метаданные столбца в виде объекта <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" />.</returns>
      <exception cref="T:System.IndexOutOfRangeException">Значение <paramref name="ordinal" /> меньше 0 или больше количества столбцов (то есть <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
      <exception cref="T:System.InvalidCastException">Существует несоответствие типов.</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetSqlMoney(System.Int32)">
      <summary>Возвращает значение столбца, определенное порядковым номером, в виде <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <param name="ordinal">Отсчитываемый от нуля порядковый номер столбца.</param>
      <returns>Значение столбца в виде <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
      <exception cref="T:System.IndexOutOfRangeException">Значение <paramref name="ordinal" /> меньше 0 или больше количества столбцов (то есть <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
      <exception cref="T:System.InvalidCastException">Существует несоответствие типов.</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetSqlSingle(System.Int32)">
      <summary>Возвращает значение столбца, определенное порядковым номером, в виде <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <param name="ordinal">Отсчитываемый от нуля порядковый номер столбца.</param>
      <returns>Значение столбца в виде <see cref="T:System.Data.SqlTypes.SqlSingle" />.</returns>
      <exception cref="T:System.IndexOutOfRangeException">Значение <paramref name="ordinal" /> меньше 0 или больше количества столбцов (то есть <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
      <exception cref="T:System.InvalidCastException">Существует несоответствие типов.</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetSqlString(System.Int32)">
      <summary>Возвращает значение столбца, определенное порядковым номером, в виде <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <param name="ordinal">Отсчитываемый от нуля порядковый номер столбца.</param>
      <returns>Значение столбца в виде <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
      <exception cref="T:System.IndexOutOfRangeException">Значение <paramref name="ordinal" /> меньше 0 или больше количества столбцов (то есть <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
      <exception cref="T:System.InvalidCastException">Существует несоответствие типов.</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetSqlValue(System.Int32)">
      <summary>Возвращает значение данных, хранящееся в столбце, выраженном как тип SQL Server, определенный порядковым номером столбца.</summary>
      <param name="ordinal">Отсчитываемый от нуля порядковый номер столбца.</param>
      <returns>Значение столбца, выраженное как тип SQL Server, как <see cref="T:System.Object" />.</returns>
      <exception cref="T:System.IndexOutOfRangeException">Значение <paramref name="ordinal" /> меньше 0 или больше количества столбцов (то есть <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
      <exception cref="T:System.InvalidCastException">Существует несоответствие типов.</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetSqlValues(System.Object[])">
      <summary>Возвращает значения для всех столбцов в записи, выраженные в виде типов SQL Server, в массиве.</summary>
      <param name="values">Массив, в который копируются значения столбцов.</param>
      <returns>
        <see cref="T:System.Int32" />, указывающий количество скопированных столбцов.</returns>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="values" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.InvalidCastException">Существует несоответствие типов.</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetSqlXml(System.Int32)">
      <summary>Возвращает значение столбца, определенное порядковым номером, в виде <see cref="T:System.Data.SqlTypes.SqlXml" />.</summary>
      <param name="ordinal">Отсчитываемый от нуля порядковый номер столбца.</param>
      <returns>Значение столбца в виде <see cref="T:System.Data.SqlTypes.SqlXml" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение <paramref name="ordinal" /> меньше 0 или больше количества столбцов (то есть <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
      <exception cref="T:System.InvalidCastException">Существует несоответствие типов.</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetString(System.Int32)">
      <summary>Возвращает значение столбца, определенное порядковым номером, в виде <see cref="T:System.String" />.</summary>
      <param name="ordinal">Отсчитываемый от нуля порядковый номер столбца.</param>
      <returns>Значение столбца в виде <see cref="T:System.String" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение <paramref name="ordinal" /> меньше 0 или больше количества столбцов (то есть <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
      <exception cref="T:System.InvalidCastException">Существует несоответствие типов.</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetTimeSpan(System.Int32)">
      <summary>Возвращает данные указанного столбца в виде <see cref="T:System.TimeSpan" />.</summary>
      <param name="ordinal">Порядковый номер столбца (от нуля).</param>
      <returns>Значение указанного столбца в виде <see cref="T:System.TimeSpan" />.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetValue(System.Int32)">
      <summary>Возвращает значение типа среды CLR для столбца, заданного аргументом порядкового типа.</summary>
      <param name="ordinal">Отсчитываемый от нуля порядковый номер столбца.</param>
      <returns>Значение типа CLR для столбца, заданного порядковым номером.</returns>
      <exception cref="T:System.IndexOutOfRangeException">Значение <paramref name="ordinal" /> меньше 0 или больше количества столбцов (то есть <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
      <exception cref="T:System.InvalidCastException">Существует несоответствие типов.</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetValues(System.Object[])">
      <summary>Возвращает значения для всех столбцов в записи, выраженные в виде типов среды CLR, в массиве.</summary>
      <param name="values">Массив, в который копируются значения столбцов.</param>
      <returns>
        <see cref="T:System.Int32" />, указывающий количество скопированных столбцов.</returns>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="values" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.InvalidCastException">Существует несоответствие типов.</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.IsDBNull(System.Int32)">
      <summary>Возвращает значение true, если столбец, указанный параметром порядкового номера, имеет значение NULL.</summary>
      <param name="ordinal">Отсчитываемый от нуля порядковый номер столбца.</param>
      <returns>Значение <see langword="true" />, если столбец имеет значение NULL; в противном случае — значение <see langword="false" />.</returns>
      <exception cref="T:System.IndexOutOfRangeException">Значение <paramref name="ordinal" /> меньше 0 или больше количества столбцов (то есть <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlDataRecord.Item(System.Int32)">
      <summary>Возвращает значение типа среды CLR для столбца, указанного аргументом <paramref name="ordinal" /> столбца.</summary>
      <param name="ordinal">Отсчитываемый от нуля порядковый номер столбца.</param>
      <returns>Значение типа CLR для столбца, указанного <paramref name="ordinal" />.</returns>
      <exception cref="T:System.IndexOutOfRangeException">Значение <paramref name="ordinal" /> меньше 0 или больше количества столбцов (то есть <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlDataRecord.Item(System.String)">
      <summary>Возвращает значение типа среды CLR для столбца, указанного аргументом <paramref name="name" /> столбца.</summary>
      <param name="name">Имя столбца.</param>
      <returns>Значение типа CLR для столбца, указанного <paramref name="name" />.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetBoolean(System.Int32,System.Boolean)">
      <summary>Задает для данных, хранимых в столбце, указанное значение <see cref="T:System.Boolean" />.</summary>
      <param name="ordinal">Отсчитываемый от нуля порядковый номер столбца.</param>
      <param name="value">Новое значение столбца.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetByte(System.Int32,System.Byte)">
      <summary>Задает для данных, хранимых в столбце, указанное значение <see cref="T:System.Byte" />.</summary>
      <param name="ordinal">Отсчитываемый от нуля порядковый номер столбца.</param>
      <param name="value">Новое значение столбца.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение <paramref name="ordinal" /> меньше 0 или больше количества столбцов (то есть <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
      <summary>Задает данные, сохраненные в столбце, в указанный массив значений <see cref="T:System.Byte" />.</summary>
      <param name="ordinal">Отсчитываемый от нуля порядковый номер столбца.</param>
      <param name="fieldOffset">Смещение в значении поля, с которого следует начать копирование байтов.</param>
      <param name="buffer">Целевой буфер, из которого необходимо скопировать байты.</param>
      <param name="bufferOffset">Смещение в буфере, из которого следует начать копирование байтов.</param>
      <param name="length">Число байтов для копирования из буфера.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение <paramref name="ordinal" /> меньше 0 или больше количества столбцов (то есть <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetChar(System.Int32,System.Char)">
      <summary>Задает для данных, хранимых в столбце, указанное значение <see cref="T:System.Char" />.</summary>
      <param name="ordinal">Отсчитываемый от нуля порядковый номер столбца.</param>
      <param name="value">Новое значение столбца.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение <paramref name="ordinal" /> меньше 0 или больше количества столбцов (то есть <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
      <summary>Задает данные, сохраненные в столбце, в указанный массив значений <see cref="T:System.Char" />.</summary>
      <param name="ordinal">Отсчитываемый от нуля порядковый номер столбца.</param>
      <param name="fieldOffset">Смещение в значении поля, с которого следует начать копирование символов.</param>
      <param name="buffer">Целевой буфер, из которого необходимо скопировать символы.</param>
      <param name="bufferOffset">Смещение в буфере, из которого следует начать копирование символов.</param>
      <param name="length">Число символов для копирования из буфера.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение <paramref name="ordinal" /> меньше 0 или больше количества столбцов (то есть <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetDateTime(System.Int32,System.DateTime)">
      <summary>Задает для данных, хранимых в столбце, указанное значение <see cref="T:System.DateTime" />.</summary>
      <param name="ordinal">Отсчитываемый от нуля порядковый номер столбца.</param>
      <param name="value">Новое значение столбца.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение <paramref name="ordinal" /> меньше 0 или больше количества столбцов (то есть <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetDateTimeOffset(System.Int32,System.DateTimeOffset)">
      <summary>Задает для указанного столбца значение <see cref="T:System.DateTimeOffset" />.</summary>
      <param name="ordinal">Отсчитываемый от нуля порядковый номер столбца.</param>
      <param name="value">Новое значение столбца.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetDBNull(System.Int32)">
      <summary>Задает для указанного столбца значение <see cref="T:System.DBNull" />.</summary>
      <param name="ordinal">Отсчитываемый от нуля порядковый номер столбца.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetDecimal(System.Int32,System.Decimal)">
      <summary>Задает для данных, хранимых в столбце, указанное значение <see cref="T:System.Decimal" />.</summary>
      <param name="ordinal">Отсчитываемый от нуля порядковый номер столбца.</param>
      <param name="value">Новое значение столбца.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение <paramref name="ordinal" /> меньше 0 или больше количества столбцов (то есть <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetDouble(System.Int32,System.Double)">
      <summary>Задает для данных, хранимых в столбце, указанное значение <see cref="T:System.Double" />.</summary>
      <param name="ordinal">Отсчитываемый от нуля порядковый номер столбца.</param>
      <param name="value">Новое значение столбца.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение <paramref name="ordinal" /> меньше 0 или больше количества столбцов (то есть <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetFloat(System.Int32,System.Single)">
      <summary>Задает для данных, хранимых в столбце, указанное значение <see langword="float" />.</summary>
      <param name="ordinal">Отсчитываемый от нуля порядковый номер столбца.</param>
      <param name="value">Новое значение столбца.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение <paramref name="ordinal" /> меньше 0 или больше количества столбцов (то есть <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetGuid(System.Int32,System.Guid)">
      <summary>Задает для данных, хранимых в столбце, указанное значение <see cref="T:System.Guid" />.</summary>
      <param name="ordinal">Отсчитываемый от нуля порядковый номер столбца.</param>
      <param name="value">Новое значение столбца.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение <paramref name="ordinal" /> меньше 0 или больше количества столбцов (то есть <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetInt16(System.Int32,System.Int16)">
      <summary>Задает для данных, хранимых в столбце, указанное значение <see cref="T:System.Int16" />.</summary>
      <param name="ordinal">Отсчитываемый от нуля порядковый номер столбца.</param>
      <param name="value">Новое значение столбца.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение <paramref name="ordinal" /> меньше 0 или больше количества столбцов (то есть <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetInt32(System.Int32,System.Int32)">
      <summary>Задает для данных, хранимых в столбце, указанное значение <see cref="T:System.Int32" />.</summary>
      <param name="ordinal">Отсчитываемый от нуля порядковый номер столбца.</param>
      <param name="value">Новое значение столбца.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение <paramref name="ordinal" /> меньше 0 или больше количества столбцов (то есть <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetInt64(System.Int32,System.Int64)">
      <summary>Задает для данных, хранимых в столбце, указанное значение <see cref="T:System.Int64" />.</summary>
      <param name="ordinal">Отсчитываемый от нуля порядковый номер столбца.</param>
      <param name="value">Новое значение столбца.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение <paramref name="ordinal" /> меньше 0 или больше количества столбцов (то есть <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetSqlBinary(System.Int32,System.Data.SqlTypes.SqlBinary)">
      <summary>Задает для данных, хранимых в столбце, указанное значение <see cref="T:System.Data.SqlTypes.SqlBinary" />.</summary>
      <param name="ordinal">Отсчитываемый от нуля порядковый номер столбца.</param>
      <param name="value">Новое значение столбца.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение <paramref name="ordinal" /> меньше 0 или больше количества столбцов (то есть <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetSqlBoolean(System.Int32,System.Data.SqlTypes.SqlBoolean)">
      <summary>Задает для данных, хранимых в столбце, указанное значение <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <param name="ordinal">Отсчитываемый от нуля порядковый номер столбца.</param>
      <param name="value">Новое значение столбца.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение <paramref name="ordinal" /> меньше 0 или больше количества столбцов (то есть <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetSqlByte(System.Int32,System.Data.SqlTypes.SqlByte)">
      <summary>Задает для данных, хранимых в столбце, указанное значение <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="ordinal">Отсчитываемый от нуля порядковый номер столбца.</param>
      <param name="value">Новое значение столбца.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение <paramref name="ordinal" /> меньше 0 или больше количества столбцов (то есть <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetSqlBytes(System.Int32,System.Data.SqlTypes.SqlBytes)">
      <summary>Задает для данных, хранимых в столбце, указанное значение <see cref="T:System.Data.SqlTypes.SqlBytes" />.</summary>
      <param name="ordinal">Отсчитываемый от нуля порядковый номер столбца.</param>
      <param name="value">Новое значение столбца.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение <paramref name="ordinal" /> меньше 0 или больше количества столбцов (то есть <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetSqlChars(System.Int32,System.Data.SqlTypes.SqlChars)">
      <summary>Задает для данных, хранимых в столбце, указанное значение <see cref="T:System.Data.SqlTypes.SqlChars" />.</summary>
      <param name="ordinal">Отсчитываемый от нуля порядковый номер столбца.</param>
      <param name="value">Новое значение столбца.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение <paramref name="ordinal" /> меньше 0 или больше количества столбцов (то есть <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetSqlDateTime(System.Int32,System.Data.SqlTypes.SqlDateTime)">
      <summary>Задает для данных, хранимых в столбце, указанное значение <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</summary>
      <param name="ordinal">Отсчитываемый от нуля порядковый номер столбца.</param>
      <param name="value">Новое значение столбца.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение <paramref name="ordinal" /> меньше 0 или больше количества столбцов (то есть <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetSqlDecimal(System.Int32,System.Data.SqlTypes.SqlDecimal)">
      <summary>Задает для данных, хранимых в столбце, указанное значение <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <param name="ordinal">Отсчитываемый от нуля порядковый номер столбца.</param>
      <param name="value">Новое значение столбца.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение <paramref name="ordinal" /> меньше 0 или больше количества столбцов (то есть <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetSqlDouble(System.Int32,System.Data.SqlTypes.SqlDouble)">
      <summary>Задает для данных, хранимых в столбце, указанное значение <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <param name="ordinal">Отсчитываемый от нуля порядковый номер столбца.</param>
      <param name="value">Новое значение столбца.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение <paramref name="ordinal" /> меньше 0 или больше количества столбцов (то есть <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetSqlGuid(System.Int32,System.Data.SqlTypes.SqlGuid)">
      <summary>Задает для данных, хранимых в столбце, указанное значение <see cref="T:System.Data.SqlTypes.SqlGuid" />.</summary>
      <param name="ordinal">Отсчитываемый от нуля порядковый номер столбца.</param>
      <param name="value">Новое значение столбца.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение <paramref name="ordinal" /> меньше 0 или больше количества столбцов (то есть <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetSqlInt16(System.Int32,System.Data.SqlTypes.SqlInt16)">
      <summary>Задает для данных, хранимых в столбце, указанное значение <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="ordinal">Отсчитываемый от нуля порядковый номер столбца.</param>
      <param name="value">Новое значение столбца.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение <paramref name="ordinal" /> меньше 0 или больше количества столбцов (то есть <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetSqlInt32(System.Int32,System.Data.SqlTypes.SqlInt32)">
      <summary>Задает для данных, хранимых в столбце, указанное значение <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <param name="ordinal">Отсчитываемый от нуля порядковый номер столбца.</param>
      <param name="value">Новое значение столбца.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение <paramref name="ordinal" /> меньше 0 или больше количества столбцов (то есть <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetSqlInt64(System.Int32,System.Data.SqlTypes.SqlInt64)">
      <summary>Задает для данных, хранимых в столбце, указанное значение <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="ordinal">Отсчитываемый от нуля порядковый номер столбца.</param>
      <param name="value">Новое значение столбца.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение <paramref name="ordinal" /> меньше 0 или больше количества столбцов (то есть <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetSqlMoney(System.Int32,System.Data.SqlTypes.SqlMoney)">
      <summary>Задает для данных, хранимых в столбце, указанное значение <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <param name="ordinal">Отсчитываемый от нуля порядковый номер столбца.</param>
      <param name="value">Новое значение столбца.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение <paramref name="ordinal" /> меньше 0 или больше количества столбцов (то есть <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetSqlSingle(System.Int32,System.Data.SqlTypes.SqlSingle)">
      <summary>Задает для данных, хранимых в столбце, указанное значение <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <param name="ordinal">Отсчитываемый от нуля порядковый номер столбца.</param>
      <param name="value">Новое значение столбца.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение <paramref name="ordinal" /> меньше 0 или больше количества столбцов (то есть <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetSqlString(System.Int32,System.Data.SqlTypes.SqlString)">
      <summary>Задает для данных, хранимых в столбце, указанное значение <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <param name="ordinal">Отсчитываемый от нуля порядковый номер столбца.</param>
      <param name="value">Новое значение столбца.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение <paramref name="ordinal" /> меньше 0 или больше количества столбцов (то есть <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetSqlXml(System.Int32,System.Data.SqlTypes.SqlXml)">
      <summary>Задает для данных, хранимых в столбце, указанное значение <see cref="T:System.Data.SqlTypes.SqlXml" />.</summary>
      <param name="ordinal">Отсчитываемый от нуля порядковый номер столбца.</param>
      <param name="value">Новое значение столбца.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение <paramref name="ordinal" /> меньше 0 или больше количества столбцов (то есть <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetString(System.Int32,System.String)">
      <summary>Задает для данных, хранимых в столбце, указанное значение <see cref="T:System.String" />.</summary>
      <param name="ordinal">Отсчитываемый от нуля порядковый номер столбца.</param>
      <param name="value">Новое значение столбца.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение <paramref name="ordinal" /> меньше 0 или больше количества столбцов (то есть <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetTimeSpan(System.Int32,System.TimeSpan)">
      <summary>Задает для указанного столбца значение <see cref="T:System.TimeSpan" />.</summary>
      <param name="ordinal">Отсчитываемый от нуля порядковый номер столбца.</param>
      <param name="value">Новое значение столбца.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Переданное значение <paramref name="ordinal" /> является отрицательным числом.</exception>
      <exception cref="T:System.ArgumentException">Переданное значение <see cref="T:System.TimeSpan" /> длиннее 24 часов.</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetValue(System.Int32,System.Object)">
      <summary>Задает новое значение, выраженное как тип среды CLR, для столбца, указанного порядковым номером столбца.</summary>
      <param name="ordinal">Отсчитываемый от нуля порядковый номер столбца.</param>
      <param name="value">Новое значение указанного столбца.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение <paramref name="ordinal" /> меньше 0 или больше количества столбцов (то есть <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetValues(System.Object[])">
      <summary>Задает новые значения для всех столбцов в <see cref="T:Microsoft.SqlServer.Server.SqlDataRecord" />. Эти значения представлены в виде типов среды CLR.</summary>
      <param name="values">Массив новых значений  для экземпляра <see cref="T:Microsoft.SqlServer.Server.SqlDataRecord" />, выраженных в виде типов CLR, упакованных как ссылки <see cref="T:System.Object" />.</param>
      <returns>Количество значений столбцов, заданное как целое число.</returns>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="values" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Размер значений не соответствует числу столбцов в экземпляре <see cref="T:Microsoft.SqlServer.Server.SqlDataRecord" />.</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.System#Data#IDataRecord#GetData(System.Int32)">
      <summary>Не поддерживается в данном выпуске.</summary>
      <param name="ordinal">Отсчитываемый от нуля порядковый номер столбца.</param>
      <returns>
        <see cref="T:System.Data.IDataReader" />  

Всегда создает исключение.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение <paramref name="ordinal" /> меньше 0 или больше количества столбцов (то есть <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
    </member>
    <member name="T:Microsoft.SqlServer.Server.SqlFacetAttribute">
      <summary>Добавляет к возвращаемому результату пользовательского типа (UDT) дополнительную информацию, которая может быть использована в Transact-SQL.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlFacetAttribute.#ctor">
      <summary>Необязательный атрибут типа возвращаемого значения для пользовательского типа, используемый для добавления к возвращаемому результату заметки с дополнительными сведениями, которые могут быть использованы в Transact-SQL.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlFacetAttribute.IsFixedLength">
      <summary>Показывает, имеет ли тип возвращаемого значения пользовательского типа фиксированную длину.</summary>
      <returns>
        <see langword="true" />, если тип возвращаемого значения имеет фиксированную длину, в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlFacetAttribute.IsNullable">
      <summary>Показывает, допускается ли <see langword="null" /> в качестве типа возвращаемого значения пользовательского типа.</summary>
      <returns>
        <see langword="true" />, если типом возвращаемого значения пользовательского типа может быть <see langword="null" />, в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlFacetAttribute.MaxSize">
      <summary>Максимальный размер базового типа поля для пользовательского типа (в логических единицах).</summary>
      <returns>Значение <see cref="T:System.Int32" />, представляющее максимальный размер базового типа поля в логических единицах.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlFacetAttribute.Precision">
      <summary>Точность типа возвращаемого значения пользовательского типа.</summary>
      <returns>Значение <see cref="T:System.Int32" />, представляющее точность типа возвращаемого значения.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlFacetAttribute.Scale">
      <summary>Масштаб типа возвращаемого значения пользовательского типа.</summary>
      <returns>Значение <see cref="T:System.Int32" />, представляющее масштаб типа возвращаемого значения.</returns>
    </member>
    <member name="T:Microsoft.SqlServer.Server.SqlFunctionAttribute">
      <summary>Используется, чтобы пометить определение метода пользовательской агрегатной функции как функцию в SQL Server. Свойства этого атрибута отражают физические характеристики, используемые при регистрации типа в SQL Server.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlFunctionAttribute.#ctor">
      <summary>Необязательный атрибут пользовательской агрегатной функции, указывающий, следует ли регистрировать этот метод в SQL Server как функцию. Используется также для задания свойств <see cref="P:Microsoft.SqlServer.Server.SqlFunctionAttribute.DataAccess" />, <see cref="P:Microsoft.SqlServer.Server.SqlFunctionAttribute.FillRowMethodName" />, <see cref="P:Microsoft.SqlServer.Server.SqlFunctionAttribute.IsDeterministic" />, <see cref="P:Microsoft.SqlServer.Server.SqlFunctionAttribute.IsPrecise" />, <see cref="P:Microsoft.SqlServer.Server.SqlFunctionAttribute.Name" />, <see cref="P:Microsoft.SqlServer.Server.SqlFunctionAttribute.SystemDataAccess" /> и <see cref="P:Microsoft.SqlServer.Server.SqlFunctionAttribute.TableDefinition" /> атрибута функции.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlFunctionAttribute.DataAccess">
      <summary>Показывает, предусматривает ли функция доступ к пользовательским данным, хранящимся в локальном экземпляре SQL Server.</summary>
      <returns>
        <see cref="T:Microsoft.SqlServer.Server.DataAccessKind" />. <see langword="None" />: Не доступ к данным. <see cref="T:Microsoft.SqlServer.Server.DataAccessKind" />. <see langword="Read" />: Считываются только пользовательские данные.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlFunctionAttribute.FillRowMethodName">
      <summary>Имя метода в том же классе, который используется для заполнения строки данных в таблице, возвращаемой функцией с табличным значением.</summary>
      <returns>Объект <see cref="T:System.String" /> значение, представляющее имя метода в том же классе, который используется для заполнения строки данных в таблицу, возвращаемую функцией возвращающих табличные значения.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlFunctionAttribute.IsDeterministic">
      <summary>Показывает, детерминирована ли пользовательская функция.</summary>
      <returns>
        <see langword="true" />, если функция детерминирована, в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlFunctionAttribute.IsPrecise">
      <summary>Показывает, предусматривает ли функция неточные вычисления, например операции с плавающей запятой.</summary>
      <returns>
        <see langword="true" />, если функция выполняет точные вычисления, в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlFunctionAttribute.Name">
      <summary>Имя, под которым функция должна быть зарегистрирована в SQL Server.</summary>
      <returns>Значение типа <see cref="T:System.String" />, представляющее имя, под которым функция должна быть зарегистрирована.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlFunctionAttribute.SystemDataAccess">
      <summary>Показывает, требуется ли функции доступ к данным, хранящимся в системных каталогах или виртуальных системных таблицах SQL Server.</summary>
      <returns>
        <see cref="T:Microsoft.SqlServer.Server.DataAccessKind" />. <see langword="None" />: Не доступ к системным данным. <see cref="T:Microsoft.SqlServer.Server.DataAccessKind" />. <see langword="Read" />: Только чтение системных данных.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlFunctionAttribute.TableDefinition">
      <summary>Строка, представляющая определение таблицы результатов, если метод используется в качестве функции с табличным значением (TVF).</summary>
      <returns>Значение типа <see cref="T:System.String" />, представляющее определение таблицы результатов.</returns>
    </member>
    <member name="T:Microsoft.SqlServer.Server.SqlMetaData">
      <summary>Задает и извлекает метаданные из параметров и столбцов объектов <see cref="T:Microsoft.SqlServer.Server.SqlDataRecord" />. Этот класс не наследуется.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.#ctor(System.String,System.Data.SqlDbType)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> заданными именем столбца и типом.</summary>
      <param name="name">Имя столбца.</param>
      <param name="dbType">Тип SQL Server параметра или столбца.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="Name" /> — <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">В качестве <paramref name="dbType" /> в конструктор передано недопустимое значение <see langword="SqlDbType" />.</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.#ctor(System.String,System.Data.SqlDbType,System.Boolean,System.Boolean,System.Data.SqlClient.SortOrder,System.Int32)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> с использованием заданных значений имени столбца и сервера по умолчанию. Данная форма конструктора поддерживает параметры с табличными значениями, разрешая указывать признак уникальности столбца в параметре с табличным значением, порядок сортировки для столбца и порядковый номер столбца сортировки.</summary>
      <param name="name">Имя столбца.</param>
      <param name="dbType">Тип SQL Server параметра или столбца.</param>
      <param name="useServerDefault">Указывает, должен ли данный столбец использовать значение сервера по умолчанию.</param>
      <param name="isUniqueKey">Указывает, уникален ли столбец в параметре с табличным значением.</param>
      <param name="columnSortOrder">Указывает порядок сортировки для столбца.</param>
      <param name="sortOrdinal">Указывает порядковый номер столбца сортировки.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.#ctor(System.String,System.Data.SqlDbType,System.Byte,System.Byte)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> с указанным именем столбца, типом, точностью и масштабом.</summary>
      <param name="name">Имя параметра или столбца.</param>
      <param name="dbType">Тип SQL Server параметра или столбца.</param>
      <param name="precision">Точность параметра или столбца.</param>
      <param name="scale">Масштаб параметра или столбца.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="Name" /> — <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">В конструктор в качестве <paramref name="dbType" /> передано недопустимое значение <see langword="SqlDbType" />, или значение <paramref name="scale" /> больше, чем <paramref name="precision" />.</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.#ctor(System.String,System.Data.SqlDbType,System.Byte,System.Byte,System.Boolean,System.Boolean,System.Data.SqlClient.SortOrder,System.Int32)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> с использованием заданных значений имени столбца, типа, точности, масштаба и сервера по умолчанию. Данная форма конструктора поддерживает параметры с табличными значениями, разрешая указывать признак уникальности столбца в параметре с табличным значением, порядок сортировки для столбца и порядковый номер столбца сортировки.</summary>
      <param name="name">Имя столбца.</param>
      <param name="dbType">Тип SQL Server параметра или столбца.</param>
      <param name="precision">Точность параметра или столбца.</param>
      <param name="scale">Масштаб параметра или столбца.</param>
      <param name="useServerDefault">Указывает, должен ли данный столбец использовать значение сервера по умолчанию.</param>
      <param name="isUniqueKey">Указывает, уникален ли столбец в параметре с табличным значением.</param>
      <param name="columnSortOrder">Указывает порядок сортировки для столбца.</param>
      <param name="sortOrdinal">Указывает порядковый номер столбца сортировки.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.#ctor(System.String,System.Data.SqlDbType,System.Int64)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> заданными именем столбца, типом и максимальной длиной.</summary>
      <param name="name">Имя столбца.</param>
      <param name="dbType">Тип SQL Server параметра или столбца.</param>
      <param name="maxLength">Максимальная длина заданного типа.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="Name" /> — <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">В качестве <paramref name="dbType" /> в конструктор передано недопустимое значение SqlDbType.</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.#ctor(System.String,System.Data.SqlDbType,System.Int64,System.Boolean,System.Boolean,System.Data.SqlClient.SortOrder,System.Int32)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> с использованием заданных значений имени столбца, максимальной длины и сервера по умолчанию. Данная форма конструктора поддерживает параметры с табличными значениями, разрешая указывать признак уникальности столбца в параметре с табличным значением, порядок сортировки для столбца и порядковый номер столбца сортировки.</summary>
      <param name="name">Имя столбца.</param>
      <param name="dbType">Тип SQL Server параметра или столбца.</param>
      <param name="maxLength">Максимальная длина заданного типа.</param>
      <param name="useServerDefault">Указывает, должен ли данный столбец использовать значение сервера по умолчанию.</param>
      <param name="isUniqueKey">Указывает, уникален ли столбец в параметре с табличным значением.</param>
      <param name="columnSortOrder">Указывает порядок сортировки для столбца.</param>
      <param name="sortOrdinal">Указывает порядковый номер столбца сортировки.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.#ctor(System.String,System.Data.SqlDbType,System.Int64,System.Byte,System.Byte,System.Int64,System.Data.SqlTypes.SqlCompareOptions,System.Type)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> заданным именем столбца, типом, максимальной длиной, точностью, масштабом, кодом языка, параметрами сравнения и пользовательским типом (UDT).</summary>
      <param name="name">Имя столбца.</param>
      <param name="dbType">Тип SQL Server параметра или столбца.</param>
      <param name="maxLength">Максимальная длина заданного типа.</param>
      <param name="precision">Точность параметра или столбца.</param>
      <param name="scale">Масштаб параметра или столбца.</param>
      <param name="locale">Код языка параметра или столбца.</param>
      <param name="compareOptions">Правила сравнения параметра или столбца.</param>
      <param name="userDefinedType">Экземпляр <see cref="T:System.Type" />, указывающий на пользовательский тип (UDT).</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="Name" /> — <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">В конструктор в качестве <paramref name="dbType" /> передано недопустимое значение <see langword="SqlDbType" />, или <paramref name="userDefinedType" /> указывает на тип, для которого не объявлен атрибут <see cref="T:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute" />.</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.#ctor(System.String,System.Data.SqlDbType,System.Int64,System.Byte,System.Byte,System.Int64,System.Data.SqlTypes.SqlCompareOptions,System.Type,System.Boolean,System.Boolean,System.Data.SqlClient.SortOrder,System.Int32)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> заданным именем столбца, типом, максимальной длиной, точностью, масштабом, кодом языка, параметрами сравнения и пользовательским типом (UDT). Данная форма конструктора поддерживает параметры с табличными значениями, разрешая указывать признак уникальности столбца в параметре с табличным значением, порядок сортировки для столбца и порядковый номер столбца сортировки.</summary>
      <param name="name">Имя столбца.</param>
      <param name="dbType">Тип SQL Server параметра или столбца.</param>
      <param name="maxLength">Максимальная длина заданного типа.</param>
      <param name="precision">Точность параметра или столбца.</param>
      <param name="scale">Масштаб параметра или столбца.</param>
      <param name="localeId">Код языка параметра или столбца.</param>
      <param name="compareOptions">Правила сравнения параметра или столбца.</param>
      <param name="userDefinedType">Экземпляр <see cref="T:System.Type" />, указывающий на пользовательский тип (UDT).</param>
      <param name="useServerDefault">Указывает, должен ли данный столбец использовать значение сервера по умолчанию.</param>
      <param name="isUniqueKey">Указывает, уникален ли столбец в параметре с табличным значением.</param>
      <param name="columnSortOrder">Указывает порядок сортировки для столбца.</param>
      <param name="sortOrdinal">Указывает порядковый номер столбца сортировки.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.#ctor(System.String,System.Data.SqlDbType,System.Int64,System.Int64,System.Data.SqlTypes.SqlCompareOptions)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> с использованием заданных значений имени столбца, типа, максимальной длины, языка и параметров сравнения.</summary>
      <param name="name">Имя параметра или столбца.</param>
      <param name="dbType">Тип SQL Server параметра или столбца.</param>
      <param name="maxLength">Максимальная длина заданного типа.</param>
      <param name="locale">Код языка параметра или столбца.</param>
      <param name="compareOptions">Правила сравнения параметра или столбца.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="Name" /> — <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">В качестве <paramref name="dbType" /> в конструктор передано недопустимое значение SqlDbType.</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.#ctor(System.String,System.Data.SqlDbType,System.Int64,System.Int64,System.Data.SqlTypes.SqlCompareOptions,System.Boolean,System.Boolean,System.Data.SqlClient.SortOrder,System.Int32)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> с использованием заданных значений имени столбца, типа, максимальной длины, языка, параметров сравнения и сервера по умолчанию. Данная форма конструктора поддерживает параметры с табличными значениями, разрешая указывать признак уникальности столбца в параметре с табличным значением, порядок сортировки для столбца и порядковый номер столбца сортировки.</summary>
      <param name="name">Имя столбца.</param>
      <param name="dbType">Тип SQL Server параметра или столбца.</param>
      <param name="maxLength">Максимальная длина заданного типа.</param>
      <param name="locale">Код языка параметра или столбца.</param>
      <param name="compareOptions">Правила сравнения параметра или столбца.</param>
      <param name="useServerDefault">Указывает, должен ли данный столбец использовать значение сервера по умолчанию.</param>
      <param name="isUniqueKey">Указывает, уникален ли столбец в параметре с табличным значением.</param>
      <param name="columnSortOrder">Указывает порядок сортировки для столбца.</param>
      <param name="sortOrdinal">Указывает порядковый номер столбца сортировки.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.#ctor(System.String,System.Data.SqlDbType,System.String,System.String,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> с использованием заданных значений имени столбца, типа, имени базы данных, схемы-владельца и имени объекта.</summary>
      <param name="name">Имя столбца.</param>
      <param name="dbType">Тип SQL Server параметра или столбца.</param>
      <param name="database">Имя базы данных с коллекцией схем XML для типизированного экземпляра XML.</param>
      <param name="owningSchema">Имя реляционной схемы с коллекцией схем XML для типизированного экземпляра XML.</param>
      <param name="objectName">Имя коллекции схем XML для типизированного экземпляра XML.</param>
      <exception cref="T:System.ArgumentNullException">В качестве <paramref name="Name" /> задано <see langword="null" /> или в качестве <paramref name="objectName" /> задано <see langword="null" />, в то время как значения <paramref name="database" /> и <paramref name="owningSchema" /> отличны от <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">В качестве <paramref name="dbType" /> в конструктор передано недопустимое значение SqlDbType.</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.#ctor(System.String,System.Data.SqlDbType,System.String,System.String,System.String,System.Boolean,System.Boolean,System.Data.SqlClient.SortOrder,System.Int32)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> с использованием заданных значений имени столбца, имени базы данных, схемы-владельца, имени объекта и сервера по умолчанию. Данная форма конструктора поддерживает параметры с табличными значениями, разрешая указывать признак уникальности столбца в параметре с табличным значением, порядок сортировки для столбца и порядковый номер столбца сортировки.</summary>
      <param name="name">Имя столбца.</param>
      <param name="dbType">Тип SQL Server параметра или столбца.</param>
      <param name="database">Имя базы данных с коллекцией схем XML для типизированного экземпляра XML.</param>
      <param name="owningSchema">Имя реляционной схемы с коллекцией схем XML для типизированного экземпляра XML.</param>
      <param name="objectName">Имя коллекции схем XML для типизированного экземпляра XML.</param>
      <param name="useServerDefault">Указывает, должен ли данный столбец использовать значение сервера по умолчанию.</param>
      <param name="isUniqueKey">Указывает, уникален ли столбец в параметре с табличным значением.</param>
      <param name="columnSortOrder">Указывает порядок сортировки для столбца.</param>
      <param name="sortOrdinal">Указывает порядковый номер столбца сортировки.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.#ctor(System.String,System.Data.SqlDbType,System.Type)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> с заданными именем столбца, типом и пользовательским типом (UDT).</summary>
      <param name="name">Имя столбца.</param>
      <param name="dbType">Тип SQL Server параметра или столбца.</param>
      <param name="userDefinedType">Экземпляр <see cref="T:System.Type" />, указывающий на пользовательский тип (UDT).</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="Name" /> — <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">В конструктор в качестве <paramref name="dbType" /> передано недопустимое значение SqlDbType, или <paramref name="userDefinedType" /> указывает на тип, для которого не объявлен атрибут <see cref="T:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute" />.</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.#ctor(System.String,System.Data.SqlDbType,System.Type,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> с использованием заданных значений имени столбца, пользовательского типа (UDT) и типа SQLServer.</summary>
      <param name="name">Имя столбца.</param>
      <param name="dbType">Тип SQL Server параметра или столбца.</param>
      <param name="userDefinedType">Экземпляр <see cref="T:System.Type" />, указывающий на пользовательский тип (UDT).</param>
      <param name="serverTypeName">Имя типа SQL Server для <paramref name="userDefinedType" />.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.#ctor(System.String,System.Data.SqlDbType,System.Type,System.String,System.Boolean,System.Boolean,System.Data.SqlClient.SortOrder,System.Int32)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> с использованием заданных значений имени столбца, типа, пользовательского типа, типа SQL Server и сервера по умолчанию. Данная форма конструктора поддерживает параметры с табличными значениями, разрешая указывать признак уникальности столбца в параметре с табличным значением, порядок сортировки для столбца и порядковый номер столбца сортировки.</summary>
      <param name="name">Имя столбца.</param>
      <param name="dbType">Тип SQL Server параметра или столбца.</param>
      <param name="userDefinedType">Экземпляр <see cref="T:System.Type" />, указывающий на пользовательский тип (UDT).</param>
      <param name="serverTypeName">Имя типа SQL Server для <paramref name="userDefinedType" />.</param>
      <param name="useServerDefault">Указывает, должен ли данный столбец использовать значение сервера по умолчанию.</param>
      <param name="isUniqueKey">Указывает, уникален ли столбец в параметре с табличным значением.</param>
      <param name="columnSortOrder">Указывает порядок сортировки для столбца.</param>
      <param name="sortOrdinal">Указывает порядковый номер столбца сортировки.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Boolean)">
      <summary>Проверяет указанное значение типа <see cref="T:System.Boolean" /> на соответствие метаданным и корректирует его, если это необходимо.</summary>
      <param name="value">Значение, которое следует проверить на соответствие метаданным, представленным экземпляром <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" />.</param>
      <returns>Скорректированное значение типа <see cref="T:System.Boolean" />.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" /> не соответствует типу экземпляра <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" />, или <paramref name="value" /> не удалось скорректировать.</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Byte)">
      <summary>Проверяет указанное значение типа <see cref="T:System.Byte" /> на соответствие метаданным и корректирует его, если это необходимо.</summary>
      <param name="value">Значение, которое следует проверить на соответствие метаданным, представленным экземпляром <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" />.</param>
      <returns>Скорректированное значение типа <see cref="T:System.Byte" />.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" /> не соответствует типу экземпляра <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" />, или <paramref name="value" /> не удалось скорректировать.</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Byte[])">
      <summary>Проверяет указанный массив значений типа <see cref="T:System.Byte" /> на соответствие метаданным и корректирует его, если это необходимо.</summary>
      <param name="value">Значение, которое следует проверить на соответствие метаданным, представленным экземпляром <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" />.</param>
      <returns>Скорректированное значение в виде массива значений типа <see cref="T:System.Byte" />.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" /> не соответствует типу экземпляра <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" />, или <paramref name="value" /> не удалось скорректировать.</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Char)">
      <summary>Проверяет указанное значение типа <see cref="T:System.Char" /> на соответствие метаданным и корректирует его, если это необходимо.</summary>
      <param name="value">Значение, которое следует проверить на соответствие метаданным, представленным экземпляром <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" />.</param>
      <returns>Скорректированное значение типа <see cref="T:System.Char" />.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" /> не соответствует типу экземпляра <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" />, или <paramref name="value" /> не удалось скорректировать.</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Char[])">
      <summary>Проверяет указанный массив значений типа <see cref="T:System.Char" /> на соответствие метаданным и корректирует его, если это необходимо.</summary>
      <param name="value">Значение, которое следует проверить на соответствие метаданным, представленным экземпляром <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" />.</param>
      <returns>Скорректированное значение в виде массива значений типа <see cref="T:System.Char" />.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" /> не соответствует типу экземпляра <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" />, или <paramref name="value" /> не удалось скорректировать.</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlBinary)">
      <summary>Проверяет указанное значение типа <see cref="T:System.Data.SqlTypes.SqlBinary" /> на соответствие метаданным и корректирует его, если это необходимо.</summary>
      <param name="value">Значение, которое следует проверить на соответствие метаданным, представленным экземпляром <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" />.</param>
      <returns>Скорректированное значение типа <see cref="T:System.Data.SqlTypes.SqlBinary" />.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" /> не соответствует типу экземпляра <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" />, или <paramref name="value" /> не удалось скорректировать.</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlBoolean)">
      <summary>Проверяет указанное значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" /> на соответствие метаданным и корректирует его, если это необходимо.</summary>
      <param name="value">Значение, которое следует проверить на соответствие метаданным, представленным экземпляром <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" />.</param>
      <returns>Скорректированное значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" /> не соответствует типу экземпляра <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" />, или <paramref name="value" /> не удалось скорректировать.</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlByte)">
      <summary>Проверяет указанное значение типа <see cref="T:System.Data.SqlTypes.SqlByte" /> на соответствие метаданным и корректирует его, если это необходимо.</summary>
      <param name="value">Значение, которое следует проверить на соответствие метаданным, представленным экземпляром <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" />.</param>
      <returns>Скорректированное значение типа <see cref="T:System.Data.SqlTypes.SqlByte" />.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" /> не соответствует типу экземпляра <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" />, или <paramref name="value" /> не удалось скорректировать.</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlBytes)">
      <summary>Проверяет указанное значение типа <see cref="T:System.Data.SqlTypes.SqlBytes" /> на соответствие метаданным и корректирует его, если это необходимо.</summary>
      <param name="value">Значение, которое следует проверить на соответствие метаданным, представленным экземпляром <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" />.</param>
      <returns>Скорректированное значение типа <see cref="T:System.Data.SqlTypes.SqlBytes" />.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" /> не соответствует типу экземпляра <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" />, или <paramref name="value" /> не удалось скорректировать.</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlChars)">
      <summary>Проверяет указанное значение типа <see cref="T:System.Data.SqlTypes.SqlChars" /> на соответствие метаданным и корректирует его, если это необходимо.</summary>
      <param name="value">Значение, которое следует проверить на соответствие метаданным, представленным экземпляром <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" />.</param>
      <returns>Скорректированное значение типа <see cref="T:System.Data.SqlTypes.SqlChars" />.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" /> не соответствует типу экземпляра <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" />, или <paramref name="value" /> не удалось скорректировать.</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlDateTime)">
      <summary>Проверяет указанное значение типа <see cref="T:System.Data.SqlTypes.SqlDateTime" /> на соответствие метаданным и корректирует его, если это необходимо.</summary>
      <param name="value">Значение, которое следует проверить на соответствие метаданным, представленным экземпляром <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" />.</param>
      <returns>Скорректированное значение типа <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" /> не соответствует типу экземпляра <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" />, или <paramref name="value" /> не удалось скорректировать.</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlDecimal)">
      <summary>Проверяет указанное значение типа <see cref="T:System.Data.SqlTypes.SqlDecimal" /> на соответствие метаданным и корректирует его, если это необходимо.</summary>
      <param name="value">Значение, которое следует проверить на соответствие метаданным, представленным экземпляром <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" />.</param>
      <returns>Скорректированное значение типа <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" /> не соответствует типу экземпляра <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" />, или <paramref name="value" /> не удалось скорректировать.</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlDouble)">
      <summary>Проверяет указанное значение типа <see cref="T:System.Data.SqlTypes.SqlDouble" /> на соответствие метаданным и корректирует его, если это необходимо.</summary>
      <param name="value">Значение, которое следует проверить на соответствие метаданным, представленным экземпляром <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" />.</param>
      <returns>Скорректированное значение типа <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" /> не соответствует типу экземпляра <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" />, или <paramref name="value" /> не удалось скорректировать.</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlGuid)">
      <summary>Проверяет указанное значение типа <see cref="T:System.Data.SqlTypes.SqlGuid" /> на соответствие метаданным и корректирует его, если это необходимо.</summary>
      <param name="value">Значение, которое следует проверить на соответствие метаданным, представленным экземпляром <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" />.</param>
      <returns>Скорректированное значение типа <see cref="T:System.Data.SqlTypes.SqlGuid" />.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" /> не соответствует типу экземпляра <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" />, или <paramref name="value" /> не удалось скорректировать.</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlInt16)">
      <summary>Проверяет указанное значение типа <see cref="T:System.Data.SqlTypes.SqlInt16" /> на соответствие метаданным и корректирует его, если это необходимо.</summary>
      <param name="value">Значение, которое следует проверить на соответствие метаданным, представленным экземпляром <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" />.</param>
      <returns>Скорректированное значение типа <see cref="T:System.Data.SqlTypes.SqlInt16" />.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" /> не соответствует типу экземпляра <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" />, или <paramref name="value" /> не удалось скорректировать.</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlInt32)">
      <summary>Проверяет указанное значение типа <see cref="T:System.Data.SqlTypes.SqlInt32" /> на соответствие метаданным и корректирует его, если это необходимо.</summary>
      <param name="value">Значение, которое следует проверить на соответствие метаданным, представленным экземпляром <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" />.</param>
      <returns>Скорректированное значение типа <see cref="T:System.Data.SqlTypes.SqlInt32" />.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" /> не соответствует типу экземпляра <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" />, или <paramref name="value" /> не удалось скорректировать.</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlInt64)">
      <summary>Проверяет указанное значение типа <see cref="T:System.Data.SqlTypes.SqlInt64" /> на соответствие метаданным и корректирует его, если это необходимо.</summary>
      <param name="value">Значение, которое следует проверить на соответствие метаданным, представленным экземпляром <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" />.</param>
      <returns>Скорректированное значение типа <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" /> не соответствует типу экземпляра <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" />, или <paramref name="value" /> не удалось скорректировать.</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlMoney)">
      <summary>Проверяет указанное значение типа <see cref="T:System.Data.SqlTypes.SqlMoney" /> на соответствие метаданным и корректирует его, если это необходимо.</summary>
      <param name="value">Значение, которое следует проверить на соответствие метаданным, представленным экземпляром <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" />.</param>
      <returns>Скорректированное значение типа <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" /> не соответствует типу экземпляра <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" />, или <paramref name="value" /> не удалось скорректировать.</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlSingle)">
      <summary>Проверяет указанное значение типа <see cref="T:System.Data.SqlTypes.SqlSingle" /> на соответствие метаданным и корректирует его, если это необходимо.</summary>
      <param name="value">Значение, которое следует проверить на соответствие метаданным, представленным экземпляром <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" />.</param>
      <returns>Скорректированное значение типа <see cref="T:System.Data.SqlTypes.SqlSingle" />.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" /> не соответствует типу экземпляра <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" />, или <paramref name="value" /> не удалось скорректировать.</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlString)">
      <summary>Проверяет указанное значение типа <see cref="T:System.Data.SqlTypes.SqlString" /> на соответствие метаданным и корректирует его, если это необходимо.</summary>
      <param name="value">Значение, которое следует проверить на соответствие метаданным, представленным экземпляром <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" />.</param>
      <returns>Скорректированное значение типа <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" /> не соответствует типу экземпляра <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" />, или <paramref name="value" /> не удалось скорректировать.</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlXml)">
      <summary>Проверяет указанное значение типа <see cref="T:System.Data.SqlTypes.SqlXml" /> на соответствие метаданным и корректирует его, если это необходимо.</summary>
      <param name="value">Значение, которое следует проверить на соответствие метаданным, представленным экземпляром <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" />.</param>
      <returns>Скорректированное значение типа <see cref="T:System.Data.SqlTypes.SqlXml" />.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" /> не соответствует типу экземпляра <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" />, или <paramref name="value" /> не удалось скорректировать.</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.DateTime)">
      <summary>Проверяет указанное значение типа <see cref="T:System.DateTime" /> на соответствие метаданным и корректирует его, если это необходимо.</summary>
      <param name="value">Значение, которое следует проверить на соответствие метаданным, представленным экземпляром <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" />.</param>
      <returns>Скорректированное значение типа <see cref="T:System.DateTime" />.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" /> не соответствует типу экземпляра <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" />, или <paramref name="value" /> не удалось скорректировать.</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.DateTimeOffset)">
      <summary>Проверяет указанное значение типа <see cref="T:System.DateTimeOffset" /> на соответствие метаданным и корректирует его, если это необходимо.</summary>
      <param name="value">Значение, которое следует проверить на соответствие метаданным, представленным экземпляром <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" />.</param>
      <returns>Скорректированное значение в виде массива значений типа <see cref="T:System.DateTimeOffset" />.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" /> не соответствует типу экземпляра <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" />, или <paramref name="value" /> не удалось скорректировать.</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Decimal)">
      <summary>Проверяет указанное значение типа <see cref="T:System.Decimal" /> на соответствие метаданным и корректирует его, если это необходимо.</summary>
      <param name="value">Значение, которое следует проверить на соответствие метаданным, представленным экземпляром <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" />.</param>
      <returns>Скорректированное значение типа <see cref="T:System.Decimal" />.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" /> не соответствует типу экземпляра <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" />, или <paramref name="value" /> не удалось скорректировать.</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Double)">
      <summary>Проверяет указанное значение типа <see cref="T:System.Double" /> на соответствие метаданным и корректирует его, если это необходимо.</summary>
      <param name="value">Значение, которое следует проверить на соответствие метаданным, представленным экземпляром <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" />.</param>
      <returns>Скорректированное значение типа <see cref="T:System.Double" />.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" /> не соответствует типу экземпляра <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" />, или <paramref name="value" /> не удалось скорректировать.</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Guid)">
      <summary>Проверяет указанное значение типа <see cref="T:System.Guid" /> на соответствие метаданным и корректирует его, если это необходимо.</summary>
      <param name="value">Значение, которое следует проверить на соответствие метаданным, представленным экземпляром <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" />.</param>
      <returns>Скорректированное значение типа <see cref="T:System.Guid" />.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" /> не соответствует типу экземпляра <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" />, или <paramref name="value" /> не удалось скорректировать.</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Int16)">
      <summary>Проверяет указанное значение типа <see cref="T:System.Int16" /> на соответствие метаданным и корректирует его, если это необходимо.</summary>
      <param name="value">Значение, которое следует проверить на соответствие метаданным, представленным экземпляром <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" />.</param>
      <returns>Скорректированное значение типа <see cref="T:System.Int16" />.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" /> не соответствует типу экземпляра <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" />, или <paramref name="value" /> не удалось скорректировать.</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Int32)">
      <summary>Проверяет указанное значение типа <see cref="T:System.Int32" /> на соответствие метаданным и корректирует его, если это необходимо.</summary>
      <param name="value">Значение, которое следует проверить на соответствие метаданным, представленным экземпляром <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" />.</param>
      <returns>Скорректированное значение типа <see cref="T:System.Int32" />.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" /> не соответствует типу экземпляра <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" />, или <paramref name="value" /> не удалось скорректировать.</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Int64)">
      <summary>Проверяет указанное значение типа <see cref="T:System.Int64" /> на соответствие метаданным и корректирует его, если это необходимо.</summary>
      <param name="value">Значение, которое следует проверить на соответствие метаданным, представленным экземпляром <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" />.</param>
      <returns>Скорректированное значение типа <see cref="T:System.Int64" />.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" /> не соответствует типу экземпляра <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" />, или <paramref name="value" /> не удалось скорректировать.</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Object)">
      <summary>Проверяет указанное значение типа <see cref="T:System.Object" /> на соответствие метаданным и корректирует его, если это необходимо.</summary>
      <param name="value">Значение, которое следует проверить на соответствие метаданным, представленным экземпляром <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" />.</param>
      <returns>Скорректированное значение типа <see cref="T:System.Object" />.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" /> не соответствует типу экземпляра <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" />, или <paramref name="value" /> не удалось скорректировать.</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Single)">
      <summary>Проверяет указанное значение типа <see cref="T:System.Single" /> на соответствие метаданным и корректирует его, если это необходимо.</summary>
      <param name="value">Значение, которое следует проверить на соответствие метаданным, представленным экземпляром <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" />.</param>
      <returns>Скорректированное значение типа <see cref="T:System.Single" />.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" /> не соответствует типу экземпляра <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" />, или <paramref name="value" /> не удалось скорректировать.</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.String)">
      <summary>Проверяет указанное значение типа <see cref="T:System.String" /> на соответствие метаданным и корректирует его, если это необходимо.</summary>
      <param name="value">Значение, которое следует проверить на соответствие метаданным, представленным экземпляром <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" />.</param>
      <returns>Скорректированное значение типа <see cref="T:System.String" />.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" /> не соответствует типу экземпляра <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" />, или <paramref name="value" /> не удалось скорректировать.</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.TimeSpan)">
      <summary>Проверяет указанное значение типа <see cref="T:System.TimeSpan" /> на соответствие метаданным и корректирует его, если это необходимо.</summary>
      <param name="value">Значение, которое следует проверить на соответствие метаданным, представленным экземпляром <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" />.</param>
      <returns>Скорректированное значение в виде массива значений типа <see cref="T:System.TimeSpan" />.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" /> не соответствует типу экземпляра <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" />, или <paramref name="value" /> не удалось скорректировать.</exception>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlMetaData.CompareOptions">
      <summary>Получает правила сравнения, используемые для столбца или параметра.</summary>
      <returns>Правила сравнения для столбца или параметра в виде объекта типа <see cref="T:System.Data.SqlTypes.SqlCompareOptions" />.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlMetaData.DbType">
      <summary>Получает тип данных столбца или параметра.</summary>
      <returns>Тип данных столбца или параметра в виде объекта типа <see cref="T:System.Data.DbType" />.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.InferFromValue(System.Object,System.String)">
      <summary>Определяет метаданные на основе указанного объекта и возвращает их в виде экземпляра <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" />.</summary>
      <param name="value">Объект, на основе которого получаются метаданные.</param>
      <param name="name">Имя, присваиваемое возвращенному экземпляру <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" />.</param>
      <returns>Полученные метаданные в виде экземпляра <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" />.</returns>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="value" /> — <see langword="null" />.</exception>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlMetaData.IsUniqueKey">
      <summary>Указывает, уникален ли столбец в параметре с табличным значением.</summary>
      <returns>Значение <see langword="Boolean" />.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlMetaData.LocaleId">
      <summary>Получает код языка параметра или столбца.</summary>
      <returns>Код языка столбца или параметра в виде числа типа <see cref="T:System.Int64" />.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlMetaData.Max">
      <summary>Получает длину типов данных <see langword="text" />, <see langword="ntext" /> и <see langword="image" />.</summary>
      <returns>Длина типов данных <see langword="text" />, <see langword="ntext" /> и <see langword="image" />.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlMetaData.MaxLength">
      <summary>Получает максимальную длину столбца или параметра.</summary>
      <returns>Максимальная длина столбца или параметра в виде числа типа <see cref="T:System.Int64" />.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlMetaData.Name">
      <summary>Получает имя столбца или параметра.</summary>
      <returns>Имя столбца или параметра в виде строки <see cref="T:System.String" />.</returns>
      <exception cref="T:System.InvalidOperationException">Значение <paramref name="Name" />, указанное в конструкторе, содержит свыше 128 символов.</exception>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlMetaData.Precision">
      <summary>Получает точность значения столбца или параметра.</summary>
      <returns>Точность столбца или параметра в виде числа типа <see cref="T:System.Byte" />.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlMetaData.Scale">
      <summary>Получает масштаб значения столбца или параметра.</summary>
      <returns>Масштаб столбца или параметра.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlMetaData.SortOrder">
      <summary>Возвращает порядок сортировки для столбца.</summary>
      <returns>Объект <see cref="T:System.Data.SqlClient.SortOrder" />.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlMetaData.SortOrdinal">
      <summary>Возвращает порядковый номер столбца сортировки.</summary>
      <returns>Порядковый номер столбца сортировки.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlMetaData.SqlDbType">
      <summary>Получает тип данных столбца или параметра.</summary>
      <returns>Тип данных столбца или параметра в виде объекта типа <see cref="T:System.Data.DbType" />.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlMetaData.Type">
      <summary>Получает тип данных CLR для пользовательского типа.</summary>
      <returns>Имя типа данных CLR для пользовательского типа в виде значения <see cref="T:System.Type" />.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlMetaData.TypeName">
      <summary>Получает состоящее из трех частей имя пользовательского типа (UDT) или типа SQL Server, представленного экземпляром.</summary>
      <returns>Имя пользовательского типа или типа SQL Server в виде значения типа <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlMetaData.UseServerDefault">
      <summary>Указывает, должен ли данный столбец использовать значение сервера по умолчанию.</summary>
      <returns>Значение <see langword="Boolean" />.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlMetaData.XmlSchemaCollectionDatabase">
      <summary>Возвращает имя базы данных, в которой находится коллекция схем для данного экземпляра XML.</summary>
      <returns>Имя базы данных, в которой находится коллекция схем для данного экземпляра XML, в виде значения типа <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlMetaData.XmlSchemaCollectionName">
      <summary>Возвращает имя коллекции схем для данного экземпляра XML.</summary>
      <returns>Имя коллекции схем для данного экземпляра XML в виде значения типа <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlMetaData.XmlSchemaCollectionOwningSchema">
      <summary>Получает имя реляционной схемы-владельца, в которой находится коллекция схем для данного экземпляра XML.</summary>
      <returns>Реляционная схема-владелец, в которой находится коллекция схем для данного экземпляра XML, в виде значения типа <see cref="T:System.String" />.</returns>
    </member>
    <member name="T:Microsoft.SqlServer.Server.SqlMethodAttribute">
      <summary>Определяет детерминизм и свойства доступа к данным для метода или свойства пользовательского типа. Свойства этого атрибута отражают физические характеристики, используемые при регистрации типа в SQL Server.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMethodAttribute.#ctor">
      <summary>Атрибут пользовательского типа, определяющий детерминизм и свойства доступа к данным для метода или свойства этого типа.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlMethodAttribute.InvokeIfReceiverIsNull">
      <summary>Указывает, должен ли SQL Server вызывать метод для экземпляров со значением null.</summary>
      <returns>Значение <see langword="true" />, если SQL Server должен вызвать метод для экземпляров со значением null. В противном случае — значение <see langword="false" />. Если метод не может быть вызвана (из-за атрибута метода), SQL Server <see langword="DbNull" /> возвращается.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlMethodAttribute.IsMutator">
      <summary>Показывает, является ли метод пользовательского типа мутатором.</summary>
      <returns>
        <see langword="true" />, если метод является мутатором, в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlMethodAttribute.OnNullCall">
      <summary>Указывает, вызывается ли метод для пользовательского типа, когда в вызове метода указаны входные аргументы <see langword="null" />.</summary>
      <returns>Значение <see langword="true" />, если метод вызывается, когда в вызове метода указаны входные аргументы <see langword="null" />. Значение <see langword="false" />, если метод возвращает значение <see langword="null" /> в одном из его входных параметров <see langword="null" />. Если метод не может быть вызвана (из-за атрибута метода), SQL Server <see langword="DbNull" /> возвращается.</returns>
    </member>
    <member name="T:Microsoft.SqlServer.Server.SqlPipe">
      <summary>Разрешает управляемым хранимым процедурам, выполняемым внутри процесса в базе данных SQL Server, возвращать результаты в вызывающую программу. Этот класс не наследуется.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlPipe.Execute*******Send(System.Data.SqlClient.SqlComm*******)">
      <summary>Выполняет команду, переданную в качестве параметра, и отправляет результаты клиенту.</summary>
      <param name="comm*******">Объект <see cref="T:System.Data.SqlClient.SqlComm*******" />, который требуется выполнить.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="comm*******" /> — <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Данный метод не поддерживается для команд, привязанных к подключениям вне процессов.</exception>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlPipe.IsSendingResults">
      <summary>Получает значение, показывающее, находится ли объект <see cref="T:Microsoft.SqlServer.Server.SqlPipe" /> в режиме отправки одиночных результирующих наборов клиенту. Это свойство доступно только для чтения.</summary>
      <returns>
        <see langword="true" />, если вызван метод <see cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart(Microsoft.SqlServer.Server.SqlDataRecord)" /> и объект <see cref="T:Microsoft.SqlServer.Server.SqlPipe" /> находится в режиме отправки одиночных результирующих наборов клиенту; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlPipe.Send(Microsoft.SqlServer.Server.SqlDataRecord)">
      <summary>Отправляет однострочный результирующий набор непосредственно клиенту или текущему получателю выходных данных.</summary>
      <param name="record">Однострочный результирующий набор, отправляемый клиенту: объект <see cref="T:Microsoft.SqlServer.Server.SqlDataRecord" />.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="record" /> — <see langword="null" />.</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlPipe.Send(System.Data.SqlClient.SqlDataReader)">
      <summary>Отправляет многострочный результирующий набор непосредственно клиенту или текущему получателю выходных данных.</summary>
      <param name="reader">Многострочный результирующий набор, отправляемый клиенту: объект <see cref="T:System.Data.SqlClient.SqlDataReader" />.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="reader" /> — <see langword="null" />.</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlPipe.Send(System.String)">
      <summary>Отправляет строковое сообщение непосредственно клиенту или текущему получателю выходных данных.</summary>
      <param name="message">Строка сообщения, отправляемая клиенту.</param>
      <exception cref="T:System.ArgumentException">Длина сообщения <paramref name="message" /> превышает 4000 символов.</exception>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="message" /> — <see langword="null" />.</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd">
      <summary>Помечает окончание результирующего набора и возвращает экземпляр <see cref="T:Microsoft.SqlServer.Server.SqlPipe" /> в начальное состояние.</summary>
      <exception cref="T:System.InvalidOperationException">Перед этим не был вызван метод <see cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart(Microsoft.SqlServer.Server.SqlDataRecord)" />.</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow(Microsoft.SqlServer.Server.SqlDataRecord)">
      <summary>Отправляет клиенту одну строку данных.</summary>
      <param name="record">Объект <see cref="T:Microsoft.SqlServer.Server.SqlDataRecord" />, содержащий значения столбцов для строки, отправляемой клиенту. Схема для записи должна соответствовать схеме, описанной метаданными объекта <see cref="T:Microsoft.SqlServer.Server.SqlDataRecord" />, переданного в метод <see cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart(Microsoft.SqlServer.Server.SqlDataRecord)" />.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="record" /> — <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Перед этим не был вызван метод <see cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart(Microsoft.SqlServer.Server.SqlDataRecord)" />.</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart(Microsoft.SqlServer.Server.SqlDataRecord)">
      <summary>Помечает начало результирующего набора, отправляемого клиенту, и использует указанную запись для конструирования метаданных, описывающих результирующий набор.</summary>
      <param name="record">Объект <see cref="T:Microsoft.SqlServer.Server.SqlDataRecord" />, из которого извлекаются метаданные, используемые для описания результирующего набора.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="record" /> — <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Объект <paramref name="record" /> не содержит столбцов или не был инициализирован.</exception>
      <exception cref="T:System.InvalidOperationException">После вызова метода <see cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow(Microsoft.SqlServer.Server.SqlDataRecord)" /> был вызван метод, отличный от <see cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd" /> и <see cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart(Microsoft.SqlServer.Server.SqlDataRecord)" />.</exception>
    </member>
    <member name="T:Microsoft.SqlServer.Server.SqlProcedureAttribute">
      <summary>Используется, чтобы пометить определение метода в сборке как хранимую процедуру. Свойства этого атрибута отражают физические характеристики, используемые при регистрации типа в SQL Server. Этот класс не наследуется.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlProcedureAttribute.#ctor">
      <summary>Атрибут определения метода в сборке, показывающий, следует ли регистрировать данный метод в SQL Server как хранимую процедуру.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlProcedureAttribute.Name">
      <summary>Имя хранимой процедуры.</summary>
      <returns>Значение типа <see cref="T:System.String" />, представляющее имя хранимой процедуры.</returns>
    </member>
    <member name="T:Microsoft.SqlServer.Server.SqlTriggerAttribute">
      <summary>Используется, чтобы пометить определение метода в сборке как триггер в SQL Server. Свойства этого атрибута отражают значения физических атрибутов, используемых при регистрации типа в SQL Server. Этот класс не наследуется.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlTriggerAttribute.#ctor">
      <summary>Атрибут определения метода в сборке, помечающий метод как триггер в SQL Server.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlTriggerAttribute.Event">
      <summary>Тип триггера и действие языка обработки данных (DML), активирующее триггер.</summary>
      <returns>Значение типа <see cref="T:System.String" />, представляющее тип триггера и действие DML, активирующее триггер.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlTriggerAttribute.Name">
      <summary>Имя триггера.</summary>
      <returns>Значение типа <see cref="T:System.String" />, представляющее имя триггера.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlTriggerAttribute.Target">
      <summary>Таблица, к которой применяется триггер.</summary>
      <returns>Значение типа <see cref="T:System.String" />, представляющее имя таблицы.</returns>
    </member>
    <member name="T:Microsoft.SqlServer.Server.SqlTriggerContext">
      <summary>Предоставляет контекстную информацию о сработавшем триггере.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlTriggerContext.ColumnCount">
      <summary>Получает число столбцов, содержащихся в таблице данных, привязанной к триггеру. Это свойство доступно только для чтения.</summary>
      <returns>Целое число, обозначающее количество столбцов в таблице данных, привязанной к триггеру.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlTriggerContext.EventData">
      <summary>Получает данные о событии, связанном с действием, которое вызвало срабатывание триггера.</summary>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlXml" /> с данными о событии, связанном с действием, вызвавшем срабатывание триггера, если имеется дополнительная информация; в противном случае возвращается <see langword="null" />.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlTriggerContext.IsUpdatedColumn(System.Int32)">
      <summary>Возвращает <see langword="true" />, если столбец был обработан оператором INSERT или UPDATE.</summary>
      <param name="columnOrdinal">Отсчитываемый от нуля порядковый номер столбца.</param>
      <returns>
        <see langword="true" />, если столбец был подвергнут операции INSERT или UPDATE.</returns>
      <exception cref="T:System.InvalidOperationException">Метод вызван в контексте триггера, в котором значение свойства <see cref="P:Microsoft.SqlServer.Server.SqlTriggerContext.TriggerAction" /> отлично от <see langword="Insert" /> и <see langword="Update" />.</exception>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlTriggerContext.TriggerAction">
      <summary>Показывает, какое действие вызвало срабатывание триггера.</summary>
      <returns>Действие, вызвавшее срабатывание триггера, в виде объекта <see cref="T:Microsoft.SqlServer.Server.TriggerAction" />.</returns>
    </member>
    <member name="T:Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute">
      <summary>Показывает, что тип должен быть зарегистрирован как определяемая пользователем Агрегатная функция. Свойства этого атрибута отражают значения физических атрибутов, используемых при регистрации типа в SQL Server. Этот класс не наследуется.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute.#ctor(Microsoft.SqlServer.Server.Format)">
      <summary>Обязательный атрибут пользовательской агрегатной функции, показывающий, что данный тип является пользовательской статистической функцией, и задающий формат ее хранения.</summary>
      <param name="format">Одно из значений <see cref="T:Microsoft.SqlServer.Server.Format" />, представляющее формат сериализации агрегатной функции.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute.Format">
      <summary>Формат сериализации в виде значения <see cref="T:Microsoft.SqlServer.Server.Format" />.</summary>
      <returns>Значение <see cref="T:Microsoft.SqlServer.Server.Format" />, представляющее формат сериализации.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute.IsInvariantToDuplicates">
      <summary>Показывает, инвариантна ли Агрегатная функция относительно дубликатов.</summary>
      <returns>
        <see langword="true" />, если Агрегатная функция инвариантна относительно дубликатов, в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute.IsInvariantToNulls">
      <summary>Показывает, инвариантна ли Агрегатная функция относительно значений null.</summary>
      <returns>
        <see langword="true" />, если Агрегатная функция инвариантна относительно значений null, в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute.IsInvariantToOrder">
      <summary>Показывает, инвариантна ли Агрегатная функция относительно порядка.</summary>
      <returns>
        <see langword="true" />, если Агрегатная функция инвариантна относительно порядка, в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute.IsNullIfEmpty">
      <summary>Показывает, возвращает ли Агрегатная функция <see langword="null" /> при отсутствии накопленных значений.</summary>
      <returns>
        <see langword="true" />, если Агрегатная функция возвращает <see langword="null" /> при отсутствии накопленных значений, в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute.MaxByteSize">
      <summary>Максимальный размер экземпляра агрегатной функции в байтах.</summary>
      <returns>Значение типа <see cref="T:System.Int32" />, представляющее максимальный размер экземпляра агрегатной функции.</returns>
    </member>
    <member name="F:Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute.MaxByteSizeValue">
      <summary>Максимальный размер в байтах, необходимый для сохранения состояния этого статистического экземпляра во время вычисления.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute.Name">
      <summary>Имя агрегатной функции.</summary>
      <returns>Значение типа <see cref="T:System.String" />, представляющее имя агрегатной функции.</returns>
    </member>
    <member name="T:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute">
      <summary>Используется, чтобы пометить определение типа в сборке как пользовательский тип в SQL Server. Свойства этого атрибута отражают физические характеристики, используемые при регистрации типа в SQL Server. Этот класс не наследуется.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.#ctor(Microsoft.SqlServer.Server.Format)">
      <summary>Обязательный атрибут пользовательского типа (UDT), используемый для подтверждения того, что данный тип является UDT, и задающий формат хранения UDT.</summary>
      <param name="format">Одно из значений <see cref="T:Microsoft.SqlServer.Server.Format" />, представляющее формат сериализации типа.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.Format">
      <summary>Формат сериализации в виде значения <see cref="T:Microsoft.SqlServer.Server.Format" />.</summary>
      <returns>Значение <see cref="T:Microsoft.SqlServer.Server.Format" />, представляющее формат сериализации.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsByteOrdered">
      <summary>Показывает, упорядочен ли пользовательский тип по байтам.</summary>
      <returns>
        <see langword="true" />, если пользовательский тип побайтно упорядочен, в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsFixedLength">
      <summary>Показывает, все ли экземпляры данного пользовательского типа имеют одинаковую длину.</summary>
      <returns>
        <see langword="true" />, если все экземпляры типа имеют одинаковую длину, в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.MaxByteSize">
      <summary>Максимальный размер экземпляра в байтах.</summary>
      <returns>Значение типа <see cref="T:System.Int32" />, представляющее максимальный размер экземпляра.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.Name">
      <summary>Имя пользовательского типа SQL Server.</summary>
      <returns>Значение типа <see cref="T:System.String" />, представляющее имя пользовательского типа SQL Server.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.ValidationMethodName">
      <summary>Имя метода, используемого для проверки экземпляров пользовательского типа.</summary>
      <returns>Значение типа <see cref="T:System.String" />, представляющее имя метода проверки экземпляров пользовательского типа.</returns>
    </member>
    <member name="T:Microsoft.SqlServer.Server.SystemDataAccessKind">
      <summary>Описывает тип доступа к системным данным для определенного пользователем метода или функции.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.SystemDataAccessKind.None">
      <summary>Метод или функция не выполняет доступ к системным данным.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.SystemDataAccessKind.Read">
      <summary>Метод или функция читает системные данные.</summary>
    </member>
    <member name="T:Microsoft.SqlServer.Server.TriggerAction">
      <summary>Перечисление <see cref="T:Microsoft.SqlServer.Server.TriggerAction" /> используется классом <see cref="T:Microsoft.SqlServer.Server.SqlTriggerContext" /> для обозначения действия, вызвавшего срабатывание триггера.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.AlterAppRole">
      <summary>Был выполнен оператор Transact-SQL ALTER APPLICATION ROLE.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.AlterAssembly">
      <summary>Был выполнен оператор Transact-SQL ALTER APPLICATION ROLE.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.AlterBinding">
      <summary>При создании уведомления о событии в базе данных или экземпляре сервера был указан тип события ALTER_REMOTE_SERVICE_BINDING.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.AlterFunction">
      <summary>Был выполнен оператор Transact-SQL ALTER FUNCTION.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.AlterIndex">
      <summary>Был выполнен оператор Transact-SQL ALTER INDEX.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.AlterLogin">
      <summary>Был выполнен оператор Transact-SQL ALTER LOGIN.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.AlterPartitionFunction">
      <summary>Был выполнен оператор Transact-SQL ALTER PARTITION FUNCTION.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.AlterPartitionScheme">
      <summary>Был выполнен оператор Transact-SQL ALTER PARTITION SCHEME.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.AlterProcedure">
      <summary>Был выполнен оператор Transact-SQL ALTER PROCEDURE.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.AlterQueue">
      <summary>Был выполнен оператор Transact-SQL ALTER QUEUE.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.AlterRole">
      <summary>Был выполнен оператор Transact-SQL ALTER ROLE.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.AlterRoute">
      <summary>Был выполнен оператор Transact-SQL ALTER ROUTE.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.AlterSchema">
      <summary>Был выполнен оператор Transact-SQL ALTER SCHEMA.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.AlterService">
      <summary>Был выполнен оператор Transact-SQL ALTER SERVICE.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.AlterTable">
      <summary>Был выполнен оператор Transact-SQL ALTER TABLE.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.AlterTrigger">
      <summary>Был выполнен оператор Transact-SQL ALTER TRIGGER.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.AlterUser">
      <summary>Был выполнен оператор Transact-SQL ALTER USER.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.AlterView">
      <summary>Был выполнен оператор Transact-SQL ALTER VIEW.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.CreateAppRole">
      <summary>Был выполнен оператор Transact-SQL CREATE APPLICATION ROLE.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.CreateAssembly">
      <summary>Был выполнен оператор Transact-SQL CREATE ASSEMBLY.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.CreateBinding">
      <summary>При создании уведомления о событии в базе данных или экземпляре сервера был указан тип события CREATE_REMOTE_SERVICE_BINDING.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.CreateContract">
      <summary>Был выполнен оператор Transact-SQL CREATE CONTRACT.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.CreateEventNotification">
      <summary>Был выполнен оператор Transact-SQL CREATE EVENT NOTIFICATION.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.CreateFunction">
      <summary>Был выполнен оператор Transact-SQL CREATE FUNCTION.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.CreateIndex">
      <summary>Был выполнен оператор Transact-SQL CREATE INDEX.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.CreateLogin">
      <summary>Был выполнен оператор Transact-SQL CREATE LOGIN.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.CreateMsgType">
      <summary>Был выполнен оператор Transact-SQL CREATE MESSAGE TYPE.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.CreatePartitionFunction">
      <summary>Был выполнен оператор Transact-SQL CREATE PARTITION FUNCTION.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.CreatePartitionScheme">
      <summary>Был выполнен оператор Transact-SQL CREATE PARTITION SCHEME.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.CreateProcedure">
      <summary>Был выполнен оператор Transact-SQL CREATE PROCEDURE.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.CreateQueue">
      <summary>Был выполнен оператор Transact-SQL CREATE QUEUE.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.CreateRole">
      <summary>Был выполнен оператор Transact-SQL CREATE ROLE.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.CreateRoute">
      <summary>Был выполнен оператор Transact-SQL CREATE ROUTE.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.CreateSchema">
      <summary>Был выполнен оператор Transact-SQL CREATE SCHEMA.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.CreateSecurityExpression">
      <summary>Недоступно.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.CreateService">
      <summary>Был выполнен оператор Transact-SQL CREATE SERVICE.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.CreateSynonym">
      <summary>Был выполнен оператор Transact-SQL CREATE SYNONYM.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.CreateTable">
      <summary>Был выполнен оператор Transact-SQL CREATE TABLE.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.CreateTrigger">
      <summary>Был выполнен оператор Transact-SQL CREATE TRIGGER.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.CreateType">
      <summary>Был выполнен оператор Transact-SQL CREATE TYPE.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.CreateUser">
      <summary>Был выполнен оператор Transact-SQL CREATE USER.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.CreateView">
      <summary>Был выполнен оператор Transact-SQL CREATE VIEW.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.Delete">
      <summary>Был выполнен оператор Transact-SQL DELETE.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.DenyObject">
      <summary>Был выполнен оператор Transact-SQL DENY для разрешений на доступ к объекту.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.DenyStatement">
      <summary>Был выполнен оператор Transact-SQL DENY.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.DropAppRole">
      <summary>Был выполнен оператор Transact-SQL DROP APPLICATION ROLE.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.DropAssembly">
      <summary>Был выполнен оператор Transact-SQL DROP ASSEMBLY.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.DropBinding">
      <summary>При создании уведомления о событии в базе данных или экземпляре сервера был указан тип события DROP_REMOTE_SERVICE_BINDING.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.DropContract">
      <summary>Был выполнен оператор Transact-SQL DROP CONTRACT.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.DropEventNotification">
      <summary>Был выполнен оператор Transact-SQL DROP EVENT NOTIFICATION.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.DropFunction">
      <summary>Был выполнен оператор Transact-SQL DROP FUNCTION.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.DropIndex">
      <summary>Был выполнен оператор Transact-SQL DROP INDEX.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.DropLogin">
      <summary>Был выполнен оператор Transact-SQL DROP LOGIN.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.DropMsgType">
      <summary>Был выполнен оператор Transact-SQL DROP MESSAGE TYPE.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.DropPartitionFunction">
      <summary>Был выполнен оператор Transact-SQL DROP PARTITION FUNCTION.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.DropPartitionScheme">
      <summary>Был выполнен оператор Transact-SQL DROP PARTITION SCHEME.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.DropProcedure">
      <summary>Был выполнен оператор Transact-SQL DROP PROCEDURE.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.DropQueue">
      <summary>Был выполнен оператор Transact-SQL DROP QUEUE.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.DropRole">
      <summary>Был выполнен оператор Transact-SQL DROP ROLE.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.DropRoute">
      <summary>Был выполнен оператор Transact-SQL DROP ROUTE.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.DropSchema">
      <summary>Был выполнен оператор Transact-SQL DROP SCHEMA.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.DropSecurityExpression">
      <summary>Недоступно.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.DropService">
      <summary>Был выполнен оператор Transact-SQL DROP SERVICE.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.DropSynonym">
      <summary>Был выполнен оператор Transact-SQL DROP SYNONYM.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.DropTable">
      <summary>Был выполнен оператор Transact-SQL DROP TABLE.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.DropTrigger">
      <summary>Был выполнен оператор Transact-SQL DROP TRIGGER.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.DropType">
      <summary>Был выполнен оператор Transact-SQL DROP TYPE.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.DropUser">
      <summary>Был выполнен оператор Transact-SQL DROP USER.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.DropView">
      <summary>Был выполнен оператор Transact-SQL DROP VIEW.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.GrantObject">
      <summary>Был выполнен оператор Transact-SQL GRANT OBJECT.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.GrantStatement">
      <summary>Был выполнен оператор Transact-SQL GRANT.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.Insert">
      <summary>Был выполнен оператор Transact-SQL INSERT.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.Invalid">
      <summary>Произошло недопустимое действие триггера, не показанное пользователю.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.RevokeObject">
      <summary>Был выполнен оператор Transact-SQL REVOKE OBJECT.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.RevokeStatement">
      <summary>Был выполнен оператор Transact-SQL REVOKE.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.Update">
      <summary>Был выполнен оператор Transact-SQL UPDATE.</summary>
    </member>
    <member name="T:System.Data.AcceptRejectRule">
      <summary>Определяет действие, выполняемое, когда метод <see cref="M:System.Data.DataSet.AcceptChanges" /> или <see cref="M:System.Data.DataTable.RejectChanges" /> вызывается в объекте <see cref="T:System.Data.DataTable" /> с объектом <see cref="T:System.Data.ForeignKeyConstraint" />.</summary>
    </member>
    <member name="F:System.Data.AcceptRejectRule.Cascade">
      <summary>Изменения располагаются каскадом в отношении.</summary>
    </member>
    <member name="F:System.Data.AcceptRejectRule.None">
      <summary>Никакие действия не выполняются (по умолчанию).</summary>
    </member>
    <member name="T:System.Data.Comm*******Behavior">
      <summary>Предоставляет описание результатов запроса и его влияние на базу данных.</summary>
    </member>
    <member name="F:System.Data.Comm*******Behavior.CloseConnection">
      <summary>При выполнении этой команды связанный объект <see langword="Connection" /> закрывается, когда закрывается связанный объект <see langword="DataReader" />.</summary>
    </member>
    <member name="F:System.Data.Comm*******Behavior.Default">
      <summary>Запрос может вернуть несколько наборов результатов. Выполнение запроса может повлиять на состояние базы данных. Поле <see langword="Default" /> не задает флаги <see cref="T:System.Data.Comm*******Behavior" />, поэтому вызов метода <see langword="ExecuteReader(Comm*******Behavior.Default)" /> функционально эквивалентен вызову метода <see langword="ExecuteReader()" />.</summary>
    </member>
    <member name="F:System.Data.Comm*******Behavior.KeyInfo">
      <summary>Запрос возвращает информацию колонки и первичного ключа.</summary>
    </member>
    <member name="F:System.Data.Comm*******Behavior.SchemaOnly">
      <summary>Запрос возвращает только сведения о столбце. При использовании <see cref="F:System.Data.Comm*******Behavior.SchemaOnly" /> поставщик данных .NET Framework для SQL Server предваряет оператор, выполняемый с параметром SET FMTONLY ON.</summary>
    </member>
    <member name="F:System.Data.Comm*******Behavior.SequentialAccess">
      <summary>Содержит способ для <see langword="DataReader" /> для обработки строк, содержащих столбцы с большими двоичными значениями. Вместо загрузки всей строки, <see langword="SequentialAccess" /> позволяет <see langword="DataReader" /> загрузить данные как поток. Затем можно использовать метод <see langword="GetBytes" /> или метод <see langword="GetChars" />, чтобы указать положение байта для начала операции чтения и ограниченный размер буфера для возврата данных.</summary>
    </member>
    <member name="F:System.Data.Comm*******Behavior.SingleResult">
      <summary>Запрос возвращает один набор результатов.</summary>
    </member>
    <member name="F:System.Data.Comm*******Behavior.SingleRow">
      <summary>Ожидается, что запрос вернет одну строку из первого набора результатов. Выполнение запроса может повлиять на состояние базы данных. Некоторые поставщики данных .NET Framework могут, но не обязательно, использовать эту информацию для оптимизации производительности команды. При указании <see cref="F:System.Data.Comm*******Behavior.SingleRow" /> с методом <see cref="M:System.Data.OleDb.OleDbComm*******.ExecuteReader" /> объекта <see cref="T:System.Data.OleDb.OleDbComm*******" />, поставщик данных .NET Framework для OLE DB выполняет привязку с помощью интерфейса <see langword="IRow" /> OLE DB, если он доступен. В обратном случае, используется интерфейс <see langword="IRowset" />. Если оператор SQL должен вернуть только одну строку, рекомендуется указать <see cref="F:System.Data.Comm*******Behavior.SingleRow" /> для повышения производительности приложения. Можно также указать <see langword="SingleRow" /> при выполнении запросов, которые должны возвращать несколько наборов результатов.  В этом случае, если заданы и SQL-запрос с несколькими наборами результатом, и одна строка, возвращаемый результат будет содержать только первую строку первого набора результатов. Другие наборы результатов запроса не возвращаются.</summary>
    </member>
    <member name="T:System.Data.Comm*******Type">
      <summary>Указывает способ интерпретации строки команды.</summary>
    </member>
    <member name="F:System.Data.Comm*******Type.StoredProcedure">
      <summary>Имя хранимой процедуры.</summary>
    </member>
    <member name="F:System.Data.Comm*******Type.TableDirect">
      <summary>Имя таблицы.</summary>
    </member>
    <member name="F:System.Data.Comm*******Type.Text">
      <summary>Текстовая команда SQL. (по умолчанию).</summary>
    </member>
    <member name="T:System.Data.Common.CatalogLocation">
      <summary>Указывает позицию имени каталога в полном имени таблицы в составе текстовой команды.</summary>
    </member>
    <member name="F:System.Data.Common.CatalogLocation.End">
      <summary>Указывает, что местоположение имени каталога находится после части, отведенной для схемы, в полном имени таблицы в текстовой команде.</summary>
    </member>
    <member name="F:System.Data.Common.CatalogLocation.Start">
      <summary>Указывает, что местоположение имени каталога находится перед частью, отведенной для схемы, в полном имени таблицы в текстовой команде.</summary>
    </member>
    <member name="T:System.Data.Common.DataAdapter">
      <summary>Представляет набор команд SQL и подключение к базе данных, которые используются для заполнения <see cref="T:System.Data.DataSet" /> и обновления источника данных.</summary>
    </member>
    <member name="M:System.Data.Common.DataAdapter.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.Common.DataAdapter" />.</summary>
    </member>
    <member name="M:System.Data.Common.DataAdapter.#ctor(System.Data.Common.DataAdapter)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.Common.DataAdapter" /> из существующего объекта того же типа.</summary>
      <param name="from">Объект <see cref="T:System.Data.Common.DataAdapter" /> используется для создания нового <see cref="T:System.Data.Common.DataAdapter" />.</param>
    </member>
    <member name="P:System.Data.Common.DataAdapter.AcceptChangesDuringFill">
      <summary>Возвращает или задает значение, указывающее, вызывается ли метод <see cref="M:System.Data.DataRow.AcceptChanges" /> в объекте <see cref="T:System.Data.DataRow" /> после его добавления к объекту <see cref="T:System.Data.DataTable" /> при выполнении любой из операций Fill.</summary>
      <returns>Значение <see langword="true" />, если метод <see cref="M:System.Data.DataRow.AcceptChanges" /> вызывается в объект <see cref="T:System.Data.DataRow" />; в противном случае — значение <see langword="false" />. Значение по умолчанию — <see langword="true" />.</returns>
    </member>
    <member name="P:System.Data.Common.DataAdapter.AcceptChangesDuringUpdate">
      <summary>Возвращает или задает, вызывается ли метод <see cref="M:System.Data.DataRow.AcceptChanges" /> при вызове метода <see cref="M:System.Data.Common.DataAdapter.Update(System.Data.DataSet)" />.</summary>
      <returns>Значение <see langword="true" />, если метод <see cref="M:System.Data.DataRow.AcceptChanges" /> вызывается при вызове метода <see cref="M:System.Data.Common.DataAdapter.Update(System.Data.DataSet)" />; в противном случае — значение <see langword="false" />. Значение по умолчанию — <see langword="true" />.</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.CloneInternals">
      <summary>Создает дубликат этого экземпляра класса <see cref="T:System.Data.Common.DataAdapter" />.</summary>
      <returns>Клонированный экземпляр <see cref="T:System.Data.Common.DataAdapter" />.</returns>
    </member>
    <member name="P:System.Data.Common.DataAdapter.ContinueUpdateOnError">
      <summary>Возвращает или задает значение, указывающее, следует ли генерировать ли исключение при обнаружении ошибки во время обновления строки.</summary>
      <returns>Значение <see langword="true" /> для продолжения обновления без генерации исключения; в противном случае — значение <see langword="false" />. Значение по умолчанию — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.CreateTableMappings">
      <summary>Создает новый экземпляр <see cref="T:System.Data.Common.DataTableMappingCollection" />.</summary>
      <returns>Новая коллекция сопоставления таблицы.</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.Dispose(System.Boolean)">
      <summary>Освобождает неуправляемые ресурсы, используемые объектом <see cref="T:System.Data.Common.DataAdapter" />, а при необходимости освобождает также управляемые ресурсы.</summary>
      <param name="disposing">Значение <see langword="true" /> позволяет освободить управляемые и неуправляемые ресурсы; значение <see langword="false" /> позволяет освободить только неуправляемые ресурсы.</param>
    </member>
    <member name="M:System.Data.Common.DataAdapter.Fill(System.Data.DataSet)">
      <summary>Добавляет или обновляет строки в <see cref="T:System.Data.DataSet" /> для получения соответствия строкам в источнике данных.</summary>
      <param name="dataSet">Объект <see cref="T:System.Data.DataSet" /> для заполнения записями и, если необходимо, — схемой.</param>
      <returns>Количество строк, успешно добавленных или обновленных в объекте <see cref="T:System.Data.DataSet" />. Не включает строки, на которые воздействуют операторы, не возвращающие строк.</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.Fill(System.Data.DataSet,System.String,System.Data.IDataReader,System.Int32,System.Int32)">
      <summary>Добавляет или обновляет строки в указанном диапазоне в объект <see cref="T:System.Data.DataSet" /> для получения соответствия строкам в источнике данных с использованием имен <see cref="T:System.Data.DataSet" /> и <see cref="T:System.Data.DataTable" />.</summary>
      <param name="dataSet">
        <see cref="T:System.Data.DataSet" /> для заполнения записями.</param>
      <param name="srcTable">Строка, указывающая имя исходной таблицы.</param>
      <param name="dataReader">Экземпляр <see cref="T:System.Data.IDataReader" />.</param>
      <param name="startRecord">Индекс (с нуля) начальной записи.</param>
      <param name="maxRecords">Целое число, указывающее максимальное количество записей.</param>
      <returns>Количество строк, успешно добавленных или обновленных в объекте <see cref="T:System.Data.DataSet" />. Не включает строки, на которые воздействуют операторы, не возвращающие строк.</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.Fill(System.Data.DataTable,System.Data.IDataReader)">
      <summary>Добавляет или обновляет строки в <see cref="T:System.Data.DataTable" /> для получения соответствия строкам в источнике данных с помощью имени <see cref="T:System.Data.DataTable" /> и указанного интерфейса <see cref="T:System.Data.IDataReader" />.</summary>
      <param name="dataTable">
        <see cref="T:System.Data.DataTable" /> для заполнения записями.</param>
      <param name="dataReader">Экземпляр <see cref="T:System.Data.IDataReader" />.</param>
      <returns>Количество строк, успешно добавленных или обновленных в объекте <see cref="T:System.Data.DataTable" />. Не включает строки, на которые воздействуют операторы, не возвращающие строк.</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.Fill(System.Data.DataTable[],System.Data.IDataReader,System.Int32,System.Int32)">
      <summary>Добавляет или обновляет строки в указанной коллекции объектов <see cref="T:System.Data.DataTable" /> для получения соответствия строкам в источнике данных.</summary>
      <param name="dataTables">Коллекция объектов <see cref="T:System.Data.DataTable" /> для заполнения записями.</param>
      <param name="dataReader">Экземпляр <see cref="T:System.Data.IDataReader" />.</param>
      <param name="startRecord">Индекс (с нуля) начальной записи.</param>
      <param name="maxRecords">Целое число, указывающее максимальное количество записей.</param>
      <returns>Количество строк, успешно добавленных или обновленных в объекте <see cref="T:System.Data.DataTable" />. Не включает строки, на которые воздействуют операторы, не возвращающие строк.</returns>
    </member>
    <member name="E:System.Data.Common.DataAdapter.FillError">
      <summary>Возвращается при возникновении ошибки во время работы операции заполнения.</summary>
    </member>
    <member name="P:System.Data.Common.DataAdapter.FillLoadOption">
      <summary>Возвращает или задает значение перечисления типа <see cref="T:System.Data.LoadOption" />, определяющее, как адаптер заполняет объект <see cref="T:System.Data.DataTable" /> из объекта <see cref="T:System.Data.Common.DbDataReader" />.</summary>
      <returns>Значение <see cref="T:System.Data.LoadOption" />.</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
      <summary>Добавляет объект <see cref="T:System.Data.DataTable" /> к указанному объекту <see cref="T:System.Data.DataSet" /> и настраивает схему в соответствии с источником данных, основанном на указанном значении типа <see cref="T:System.Data.SchemaType" />.</summary>
      <param name="dataSet">Объект <see cref="T:System.Data.DataSet" /> для заполнения схемой из источника данных.</param>
      <param name="schemaType">Одно из значений <see cref="T:System.Data.SchemaType" />.</param>
      <returns>Объект <see cref="T:System.Data.DataTable" /> содержит сведения схемы, возвращенные из источника данных.</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String,System.Data.IDataReader)">
      <summary>Добавляет объект <see cref="T:System.Data.DataTable" /> к указанному объекту <see cref="T:System.Data.DataSet" />.</summary>
      <param name="dataSet">Объект <see cref="T:System.Data.DataTable" />, заполняемый из <see cref="T:System.Data.IDataReader" />.</param>
      <param name="schemaType">Одно из значений <see cref="T:System.Data.SchemaType" />.</param>
      <param name="srcTable">Имя исходной таблицы, используемое для сопоставления таблиц.</param>
      <param name="dataReader">Интерфейс <see cref="T:System.Data.IDataReader" />, используемый в качестве источника данных при заполнении объекта <see cref="T:System.Data.DataTable" />.</param>
      <returns>Ссылка на коллекцию объектов <see cref="T:System.Data.DataTable" />, которые были добавлены в <see cref="T:System.Data.DataSet" />.</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType,System.Data.IDataReader)">
      <summary>Добавляет объект <see cref="T:System.Data.DataTable" /> к указанному объекту <see cref="T:System.Data.DataSet" />.</summary>
      <param name="dataTable">Объект <see cref="T:System.Data.DataTable" />, заполняемый из <see cref="T:System.Data.IDataReader" />.</param>
      <param name="schemaType">Одно из значений <see cref="T:System.Data.SchemaType" />.</param>
      <param name="dataReader">Интерфейс <see cref="T:System.Data.IDataReader" />, используемый в качестве источника данных при заполнении объекта <see cref="T:System.Data.DataTable" />.</param>
      <returns>Объект <see cref="T:System.Data.DataTable" /> содержит сведения схемы, возвращенные из источника данных.</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.GetFillParameters">
      <summary>Получает параметры, заданные пользователем при выполнении оператора SQL SELECT.</summary>
      <returns>Массив объектов <see cref="T:System.Data.IDataParameter" /> содержит параметры, заданные пользователем.</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.HasTableMappings">
      <summary>Указывает, был ли создан <see cref="T:System.Data.Common.DataTableMappingCollection" />.</summary>
      <returns>Значение <see langword="true" />, если <see cref="T:System.Data.Common.DataTableMappingCollection" /> был создан; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Common.DataAdapter.MissingMappingAction">
      <summary>Определяет действие, выполняемое, если входные данные не соответствуют таблице или столбцу.</summary>
      <returns>Одно из значений <see cref="T:System.Data.MissingMappingAction" />. Значение по умолчанию — <see langword="Passthrough" />.</returns>
      <exception cref="T:System.ArgumentException">Заданное значение не является одним из значений <see cref="T:System.Data.MissingMappingAction" />.</exception>
    </member>
    <member name="P:System.Data.Common.DataAdapter.MissingSchemaAction">
      <summary>Определяет действие, которое должно быть выполнено, если существующая схема <see cref="T:System.Data.DataSet" /> не соответствует входным данным.</summary>
      <returns>Одно из значений <see cref="T:System.Data.MissingSchemaAction" />. Значение по умолчанию — <see langword="Add" />.</returns>
      <exception cref="T:System.ArgumentException">Заданное значение не является одним из значений <see cref="T:System.Data.MissingSchemaAction" />.</exception>
    </member>
    <member name="M:System.Data.Common.DataAdapter.OnFillError(System.Data.FillErrorEventArgs)">
      <summary>Вызывается при возникновении ошибки, когда применяется метод <see langword="Fill" />.</summary>
      <param name="value">Объект <see cref="T:System.Data.FillErrorEventArgs" />.</param>
    </member>
    <member name="M:System.Data.Common.DataAdapter.ResetFillLoadOption">
      <summary>Сбрасывает свойство <see cref="P:System.Data.Common.DataAdapter.FillLoadOption" /> к состоянию по умолчанию и вызывает метод <see cref="M:System.Data.Common.DataAdapter.Fill(System.Data.DataSet)" /> для обеспечения поддержки свойства <see cref="P:System.Data.Common.DataAdapter.AcceptChangesDuringFill" />.</summary>
    </member>
    <member name="P:System.Data.Common.DataAdapter.ReturnProviderSpecificTypes">
      <summary>Возвращает или задает, должен ли метод <see langword="Fill" /> возвращать зависящие от поставщика значения или обычные CLS-совместимые значения.</summary>
      <returns>Значение <see langword="true" />, если метод <see langword="Fill" /> должен возвращать зависящие от поставщика значения; в противном случае — значение <see langword="false" />, чтобы возвращать обычные CLS-совместимые значения.</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.ShouldSerializeAcceptChangesDuringFill">
      <summary>Определяет, должно ли сохраняться свойство <see cref="P:System.Data.Common.DataAdapter.AcceptChangesDuringFill" />.</summary>
      <returns>Значение <see langword="true" />, если свойство <see cref="P:System.Data.Common.DataAdapter.AcceptChangesDuringFill" /> должно сохраняться; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.ShouldSerializeFillLoadOption">
      <summary>Определяет, должно ли сохраняться свойство <see cref="P:System.Data.Common.DataAdapter.FillLoadOption" />.</summary>
      <returns>Значение <see langword="true" />, если свойство <see cref="P:System.Data.Common.DataAdapter.FillLoadOption" /> должно сохраняться; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.ShouldSerializeTableMappings">
      <summary>Определяет, существует ли один или несколько объектов <see cref="T:System.Data.Common.DataTableMapping" /> и нужно ли их сохранить.</summary>
      <returns>Значение <see langword="true" />, если существует один или несколько объектов <see cref="T:System.Data.Common.DataTableMapping" />, в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Common.DataAdapter.System#Data#IDataAdapter#TableMappings">
      <summary>Указывает, как исходная таблица сопоставлена с таблицей набора данных.</summary>
      <returns>Коллекция, обеспечивающая основное сопоставление между возвращенными записями и объектом <see cref="T:System.Data.DataSet" />. Значение по умолчанию — пустая коллекция.</returns>
    </member>
    <member name="P:System.Data.Common.DataAdapter.TableMappings">
      <summary>Получает коллекцию, обеспечивающую основное сопоставление между исходной таблицей и <see cref="T:System.Data.DataTable" />.</summary>
      <returns>Коллекция, обеспечивающая основное сопоставление между возвращенными записями и объектом <see cref="T:System.Data.DataSet" />. Значение по умолчанию — пустая коллекция.</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.Update(System.Data.DataSet)">
      <summary>Вызывает соответствующие операторы INSERT, UPDATE или DELETE для каждой вставленной, обновленной или удаленной строки в указанном объекте <see cref="T:System.Data.DataSet" /> из <see cref="T:System.Data.DataTable" /> с именем "Table".</summary>
      <param name="dataSet">Объект <see cref="T:System.Data.DataSet" />, использованный для обновления источника данных.</param>
      <returns>Количество строк, успешно обновленных из объекта <see cref="T:System.Data.DataSet" />.</returns>
      <exception cref="T:System.InvalidOperationException">Исходная таблица является недопустимой.</exception>
      <exception cref="T:System.Data.DBConcurrencyException">Попытка выполнить оператор INSERT, UPDATE или DELETE привела к нулевому количеству обработанных записей.</exception>
    </member>
    <member name="T:System.Data.Common.DataColumnMapping">
      <summary>Содержит универсальное сопоставление столбца для объекта, который наследуется из объекта <see cref="T:System.Data.Common.DataAdapter" />. Этот класс не наследуется.</summary>
    </member>
    <member name="M:System.Data.Common.DataColumnMapping.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.Common.DataColumnMapping" />.</summary>
    </member>
    <member name="M:System.Data.Common.DataColumnMapping.#ctor(System.String,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.Common.DataColumnMapping" /> с указанным именем исходного столбца и именем столбца <see cref="T:System.Data.DataSet" /> для сопоставления.</summary>
      <param name="sourceColumn">Зависящее от регистра имя столбца из источника данных.</param>
      <param name="dataSetColumn">Имя столбца без учета регистра из объекта <see cref="T:System.Data.DataSet" /> для сопоставления.</param>
    </member>
    <member name="P:System.Data.Common.DataColumnMapping.DataSetColumn">
      <summary>Возвращает или задает имя столбца в объекте <see cref="T:System.Data.DataSet" /> для сопоставления.</summary>
      <returns>Имя столбца в объекте <see cref="T:System.Data.DataSet" /> для сопоставления. Имя без учета регистра.</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMapping.GetDataColumnBySchemaAction(System.Data.DataTable,System.Type,System.Data.MissingSchemaAction)">
      <summary>Получает объект <see cref="T:System.Data.DataColumn" /> из данного объекта <see cref="T:System.Data.DataTable" /> с использованием объекта <see cref="T:System.Data.MissingSchemaAction" /> и свойства <see cref="P:System.Data.Common.DataColumnMapping.DataSetColumn" />.</summary>
      <param name="dataTable">Объект <see cref="T:System.Data.DataTable" />, из которого получается столбец.</param>
      <param name="dataType">Объект <see cref="T:System.Type" /> столбца данных.</param>
      <param name="schemaAction">Одно из значений <see cref="T:System.Data.MissingSchemaAction" />.</param>
      <returns>Столбец данных.</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMapping.GetDataColumnBySchemaAction(System.String,System.String,System.Data.DataTable,System.Type,System.Data.MissingSchemaAction)">
      <summary>Статическая версия метода <see cref="M:System.Data.Common.DataColumnMapping.GetDataColumnBySchemaAction(System.Data.DataTable,System.Type,System.Data.MissingSchemaAction)" />, который может быть вызван без создания экземпляра объекта <see cref="T:System.Data.Common.DataColumnMapping" />.</summary>
      <param name="sourceColumn">Зависящее от регистра имя столбца из источника данных.</param>
      <param name="dataSetColumn">Имя столбца без учета регистра из объекта <see cref="T:System.Data.DataSet" /> для сопоставления.</param>
      <param name="dataTable">Экземпляр <see cref="T:System.Data.DataTable" />.</param>
      <param name="dataType">Тип данных для сопоставляемого столбца.</param>
      <param name="schemaAction">Определяет действие, которое должно быть выполнено, если существующая схема <see cref="T:System.Data.DataSet" /> не соответствует входным данным.</param>
      <returns>Объект <see cref="T:System.Data.DataColumn" />.</returns>
    </member>
    <member name="P:System.Data.Common.DataColumnMapping.SourceColumn">
      <summary>Возвращает или задает имя столбца в источнике данных для сопоставления. Имя указано с учетом регистра.</summary>
      <returns>Имя столбца в источнике данных, определяемое с учетом регистра.</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMapping.System#ICloneable#Clone">
      <summary>Создает новый объект, являющийся копией текущего экземпляра.</summary>
      <returns>Копия текущего объекта.</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMapping.ToString">
      <summary>Преобразует текущее имя <see cref="P:System.Data.Common.DataColumnMapping.SourceColumn" /> в строку.</summary>
      <returns>Текущее имя <see cref="P:System.Data.Common.DataColumnMapping.SourceColumn" /> как строка.</returns>
    </member>
    <member name="T:System.Data.Common.DataColumnMappingCollection">
      <summary>Содержит коллекцию объектов <see cref="T:System.Data.Common.DataColumnMapping" />.</summary>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.#ctor">
      <summary>Создает пустой словарь <see cref="T:System.Data.Common.DataColumnMappingCollection" />.</summary>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.Add(System.Object)">
      <summary>Добавляет объект <see cref="T:System.Data.Common.DataColumnMapping" /> в коллекцию.</summary>
      <param name="value">Объект <see langword="DataColumnMapping" /> для добавления в коллекцию.</param>
      <returns>Индекс объекта <see langword="DataColumnMapping" />, который был добавлен в коллекцию.</returns>
      <exception cref="T:System.InvalidCastException">Переданный объект не был объектом <see cref="T:System.Data.Common.DataColumnMapping" />.</exception>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.Add(System.String,System.String)">
      <summary>Добавляет объект <see cref="T:System.Data.Common.DataColumnMapping" /> в коллекцию на основе заданного имени исходного столбца и имени столбца <see cref="T:System.Data.DataSet" />.</summary>
      <param name="sourceColumn">Зависящее от регистра имя исходного столбца для сопоставления.</param>
      <param name="dataSetColumn">Независящее от регистра имя столбца <see cref="T:System.Data.DataSet" /> для сопоставления.</param>
      <returns>Объект <see langword="DataColumnMapping" />, который был добавлен в коллекцию.</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.AddRange(System.Array)">
      <summary>Копирует элементы указанного объекта <see cref="T:System.Array" /> в конец коллекции.</summary>
      <param name="values">Параметр <see cref="T:System.Array" /> для добавления в коллекцию.</param>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.AddRange(System.Data.Common.DataColumnMapping[])">
      <summary>Копирует элементы указанного массива <see cref="T:System.Data.Common.DataColumnMapping" /> в конец коллекции.</summary>
      <param name="values">Массив объектов <see cref="T:System.Data.Common.DataColumnMapping" />, добавляемый в коллекцию.</param>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.Clear">
      <summary>Удаляет все объекты <see cref="T:System.Data.Common.DataColumnMapping" /> из коллекции.</summary>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.Contains(System.Object)">
      <summary>Возвращает значение, указывающее, существует ли объект <see cref="T:System.Data.Common.DataColumnMapping" /> с данным объектом <see cref="T:System.Object" /> в коллекции.</summary>
      <param name="value">Объект <see cref="T:System.Object" />, который является объектом <see cref="T:System.Data.Common.DataColumnMapping" />.</param>
      <returns>Значение <see langword="true" />, если коллекция содержит указанный объект <see cref="T:System.Data.Common.DataColumnMapping" />; в противном случае — значение <see langword="false" />.</returns>
      <exception cref="T:System.InvalidCastException">Переданный объект не был объектом <see cref="T:System.Data.Common.DataColumnMapping" />.</exception>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.Contains(System.String)">
      <summary>Возвращает значение, указывающее, существует ли объект <see cref="T:System.Data.Common.DataColumnMapping" /> с данным именем исходного столбца в коллекции.</summary>
      <param name="value">Зависящее от регистра имя исходного столбца объекта <see cref="T:System.Data.Common.DataColumnMapping" />.</param>
      <returns>Значение <see langword="true" />, если коллекция содержит объект <see cref="T:System.Data.Common.DataColumnMapping" /> с указанным именем исходного столбца; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.CopyTo(System.Array,System.Int32)">
      <summary>Копирует элементы объекта <see cref="T:System.Data.Common.DataColumnMappingCollection" /> в указанный массив.</summary>
      <param name="array">Массив <see cref="T:System.Array" />, в который копируются элементы <see cref="T:System.Data.Common.DataColumnMappingCollection" />.</param>
      <param name="index">Начальный индекс массива.</param>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.CopyTo(System.Data.Common.DataColumnMapping[],System.Int32)">
      <summary>Копирует элементы объекта <see cref="T:System.Data.Common.DataColumnMappingCollection" /> в указанный массив <see cref="T:System.Data.Common.DataColumnMapping" />.</summary>
      <param name="array">Массив <see cref="T:System.Data.Common.DataColumnMapping" />, в который копируются элементы <see cref="T:System.Data.Common.DataColumnMappingCollection" />.</param>
      <param name="index">Индекс (с нуля) в <paramref name="array" />, с которого начинается копирование.</param>
    </member>
    <member name="P:System.Data.Common.DataColumnMappingCollection.Count">
      <summary>Возвращает количество объектов <see cref="T:System.Data.Common.DataColumnMapping" /> в коллекции.</summary>
      <returns>Количество элементов в коллекции.</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.GetByDataSetColumn(System.String)">
      <summary>Возвращает объект <see cref="T:System.Data.Common.DataColumnMapping" /> с указанным именем столбца <see cref="T:System.Data.DataSet" />.</summary>
      <param name="value">Независящее от регистра имя искомого столбца <see cref="T:System.Data.DataSet" />.</param>
      <returns>Объект <see cref="T:System.Data.Common.DataColumnMapping" /> с указанным именем столбца <see cref="T:System.Data.DataSet" />.</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.GetColumnMappingBySchemaAction(System.Data.Common.DataColumnMappingCollection,System.String,System.Data.MissingMappingAction)">
      <summary>Возвращает объект <see cref="T:System.Data.Common.DataColumnMapping" /> для указанного <see cref="T:System.Data.Common.DataColumnMappingCollection" />, имени исходного столбца и <see cref="T:System.Data.MissingMappingAction" />.</summary>
      <param name="columnMappings">
        <see cref="T:System.Data.Common.DataColumnMappingCollection" />.</param>
      <param name="sourceColumn">Зависящее от регистра имя исходного столбца для поиска.</param>
      <param name="mappingAction">Одно из значений <see cref="T:System.Data.MissingMappingAction" />.</param>
      <returns>Объект <see cref="T:System.Data.Common.DataColumnMapping" />.</returns>
      <exception cref="T:System.InvalidOperationException">Для параметра <paramref name="mappingAction" /> было задано значение <see langword="Error" /> и не было указано сопоставление.</exception>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.GetDataColumn(System.Data.Common.DataColumnMappingCollection,System.String,System.Type,System.Data.DataTable,System.Data.MissingMappingAction,System.Data.MissingSchemaAction)">
      <summary>Статический метод, который возвращает объект <see cref="T:System.Data.DataColumn" />, не создавая экземпляр объекта <see cref="T:System.Data.Common.DataColumnMappingCollection" />.</summary>
      <param name="columnMappings">
        <see cref="T:System.Data.Common.DataColumnMappingCollection" />.</param>
      <param name="sourceColumn">Зависящее от регистра имя столбца из источника данных.</param>
      <param name="dataType">Тип данных для сопоставляемого столбца.</param>
      <param name="dataTable">Экземпляр <see cref="T:System.Data.DataTable" />.</param>
      <param name="mappingAction">Одно из значений <see cref="T:System.Data.MissingMappingAction" />.</param>
      <param name="schemaAction">Определяет действие, которое должно быть выполнено, если существующая схема <see cref="T:System.Data.DataSet" /> не соответствует входным данным.</param>
      <returns>Объект <see cref="T:System.Data.DataColumn" />.</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.GetEnumerator">
      <summary>Возвращает перечислитель, который может выполнять итерацию элементов коллекции.</summary>
      <returns>Объект <see cref="T:System.Collections.IEnumerator" />, который может использоваться для итерации элементов коллекции.</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.IndexOf(System.Object)">
      <summary>Возвращает расположение указанного объекта <see cref="T:System.Object" />, который является объектом <see cref="T:System.Data.Common.DataColumnMapping" /> в коллекции.</summary>
      <param name="value">Объект <see cref="T:System.Object" />, являющийся объектом <see cref="T:System.Data.Common.DataColumnMapping" /> для поиска.</param>
      <returns>Отсчитываемое от нуля расположение указанного объекта <see cref="T:System.Object" />, который является объектом <see cref="T:System.Data.Common.DataColumnMapping" /> в коллекции.</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.IndexOf(System.String)">
      <summary>Возвращает местоположение объекта <see cref="T:System.Data.Common.DataColumnMapping" /> с указанным именем исходного столбца.</summary>
      <param name="sourceColumn">Зависящее от регистра имя исходного столбца.</param>
      <returns>Отсчитываемое от нуля расположение объекта <see cref="T:System.Data.Common.DataColumnMapping" /> с указанным зависящим от регистра именем исходного столбца.</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.IndexOfDataSetColumn(System.String)">
      <summary>Возвращает местоположение указанного объекта <see cref="T:System.Data.Common.DataColumnMapping" /> с заданным именем столбца <see cref="T:System.Data.DataSet" />.</summary>
      <param name="dataSetColumn">Независящее от регистра имя столбца набора данных для поиска.</param>
      <returns>Отсчитываемое от нуля расположение указанного объекта <see cref="T:System.Data.Common.DataColumnMapping" /> с данным именем столбца <see langword="DataSet" /> или -1, если объект <see langword="DataColumnMapping" /> не существует в коллекции.</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.Insert(System.Int32,System.Data.Common.DataColumnMapping)">
      <summary>Вставляет объект <see cref="T:System.Data.Common.DataColumnMapping" /> в коллекцию <see cref="T:System.Data.Common.DataColumnMappingCollection" /> по указанному индексу.</summary>
      <param name="index">Отсчитываемый от нуля индекс вставляемого объекта <see cref="T:System.Data.Common.DataColumnMapping" />.</param>
      <param name="value">Объект <see cref="T:System.Data.Common.DataColumnMapping" />.</param>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.Insert(System.Int32,System.Object)">
      <summary>Вставляет объект <see cref="T:System.Data.Common.DataColumnMapping" /> в коллекцию <see cref="T:System.Data.Common.DataColumnMappingCollection" /> по указанному индексу.</summary>
      <param name="index">Отсчитываемый от нуля индекс вставляемого объекта <see cref="T:System.Data.Common.DataColumnMapping" />.</param>
      <param name="value">Объект <see cref="T:System.Data.Common.DataColumnMapping" />.</param>
    </member>
    <member name="P:System.Data.Common.DataColumnMappingCollection.Item(System.Int32)">
      <summary>Возвращает или задает объект <see cref="T:System.Data.Common.DataColumnMapping" /> по указанному индексу.</summary>
      <param name="index">Отсчитываемый от нуля индекс объекта <see cref="T:System.Data.Common.DataColumnMapping" /> для поиска.</param>
      <returns>Объект <see cref="T:System.Data.Common.DataColumnMapping" />, расположенный по указанному индексу.</returns>
    </member>
    <member name="P:System.Data.Common.DataColumnMappingCollection.Item(System.String)">
      <summary>Возвращает или задает объект <see cref="T:System.Data.Common.DataColumnMapping" /> с указанным именем исходного столбца.</summary>
      <param name="sourceColumn">Зависящее от регистра имя исходного столбца.</param>
      <returns>Объект <see cref="T:System.Data.Common.DataColumnMapping" /> с указанным именем исходного столбца.</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.Remove(System.Data.Common.DataColumnMapping)">
      <summary>Удаляет указанный объект <see cref="T:System.Data.Common.DataColumnMapping" /> из коллекции.</summary>
      <param name="value">Объект <see cref="T:System.Data.Common.DataColumnMapping" /> для удаления.</param>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.Remove(System.Object)">
      <summary>Удаляет из коллекции объект <see cref="T:System.Object" />, который является объектом <see cref="T:System.Data.Common.DataColumnMapping" />.</summary>
      <param name="value">Объект <see cref="T:System.Object" />, являющийся объектом <see cref="T:System.Data.Common.DataColumnMapping" /> для удаления.</param>
      <exception cref="T:System.InvalidCastException">Указанный объект не являлся объектом <see cref="T:System.Data.Common.DataColumnMapping" />.</exception>
      <exception cref="T:System.ArgumentException">Указанный объект отсутствует в коллекции.</exception>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.RemoveAt(System.Int32)">
      <summary>Удаляет объект <see cref="T:System.Data.Common.DataColumnMapping" /> с указанным индексом из коллекции.</summary>
      <param name="index">Индекс (отсчет с нуля) удаляемого объекта <see cref="T:System.Data.Common.DataColumnMapping" />.</param>
      <exception cref="T:System.IndexOutOfRangeException">Отсутствует объект <see cref="T:System.Data.Common.DataColumnMapping" /> с указанным индексом.</exception>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.RemoveAt(System.String)">
      <summary>Удаляет из коллекции объект <see cref="T:System.Data.Common.DataColumnMapping" /> с указанным именем исходного столбца.</summary>
      <param name="sourceColumn">Зависящее от регистра имя исходного столбца.</param>
      <exception cref="T:System.IndexOutOfRangeException">Отсутствует объект <see cref="T:System.Data.Common.DataColumnMapping" /> с указанным именем исходного столбца.</exception>
    </member>
    <member name="P:System.Data.Common.DataColumnMappingCollection.System#Collections#ICollection#IsSynchronized">
      <summary>Получает значение, определяющее, является ли доступ к коллекции <see cref="T:System.Collections.ICollection" /> синхронизированным (потокобезопасным).</summary>
      <returns>
        <see langword="true" />, если доступ к классу <see cref="T:System.Collections.ICollection" /> является синхронизированным (потокобезопасным); в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Common.DataColumnMappingCollection.System#Collections#ICollection#SyncRoot">
      <summary>Получает объект, с помощью которого можно синхронизировать доступ к коллекции <see cref="T:System.Collections.ICollection" />.</summary>
      <returns>Объект, который может использоваться для синхронизации доступа к <see cref="T:System.Collections.ICollection" />.</returns>
    </member>
    <member name="P:System.Data.Common.DataColumnMappingCollection.System#Collections#IList#IsFixedSize">
      <summary>Возвращает значение, показывающее, имеет ли объект <see cref="T:System.Collections.IList" /> фиксированный размер.</summary>
      <returns>Значение <see langword="true" />, если словарь <see cref="T:System.Collections.IList" /> имеет фиксированный размер; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Common.DataColumnMappingCollection.System#Collections#IList#IsReadOnly">
      <summary>Возвращает значение, которое определяет, является ли коллекция <see cref="T:System.Collections.IList" /> доступной только для чтения.</summary>
      <returns>Значение <see langword="true" />, если интерфейс <see cref="T:System.Collections.IList" /> доступен только для чтения; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Common.DataColumnMappingCollection.System#Collections#IList#Item(System.Int32)">
      <summary>Возвращает или задает элемент по указанному индексу.</summary>
      <param name="index">Отсчитываемый от нуля индекс элемента, который требуется возвратить или задать.</param>
      <returns>Элемент, расположенный по указанному индексу.</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.System#Data#IColumnMappingCollection#Add(System.String,System.String)">
      <summary>Добавляет объект <see cref="T:System.Data.Common.DataColumnMapping" /> в коллекцию <see cref="T:System.Data.Common.DataColumnMappingCollection" /> с помощью имени исходного столбца и имени столбца <see cref="T:System.Data.DataSet" />.</summary>
      <param name="sourceColumnName">Зависящее от регистра имя исходного столбца.</param>
      <param name="dataSetColumnName">Имя столбца <see cref="T:System.Data.DataSet" />.</param>
      <returns>Объект ColumnMapping, который был добавлен в коллекцию.</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.System#Data#IColumnMappingCollection#GetByDataSetColumn(System.String)">
      <summary>Возвращает объект <see cref="T:System.Data.Common.DataColumnMapping" /> с заданным именем столбца <see cref="T:System.Data.DataSet" />.</summary>
      <param name="dataSetColumnName">Независящее от регистра имя искомого столбца <see cref="T:System.Data.DataSet" />.</param>
      <returns>Объект <see cref="T:System.Data.Common.DataColumnMapping" /> с заданным именем столбца <see cref="T:System.Data.DataSet" />.</returns>
    </member>
    <member name="P:System.Data.Common.DataColumnMappingCollection.System#Data#IColumnMappingCollection#Item(System.String)">
      <summary>Возвращает или задает объект <see cref="T:System.Data.IColumnMapping" /> с указанным именем <see langword="SourceColumn" />.</summary>
      <param name="index">Индекс элемента.</param>
      <returns>Объект <see langword="IColumnMapping" /> с указанным именем <see langword="SourceColumn" />.</returns>
    </member>
    <member name="T:System.Data.Common.DataTableMapping">
      <summary>Содержит описание сопоставленного отношения между исходной таблицей и <see cref="T:System.Data.DataTable" />. Этот класс используется объектом <see cref="T:System.Data.Common.DataAdapter" /> при заполнении <see cref="T:System.Data.DataSet" />.</summary>
    </member>
    <member name="M:System.Data.Common.DataTableMapping.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.Common.DataTableMapping" />.</summary>
    </member>
    <member name="M:System.Data.Common.DataTableMapping.#ctor(System.String,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.Common.DataTableMapping" /> с источником, если дано имя исходной таблицы и имя <see cref="T:System.Data.DataTable" />.</summary>
      <param name="sourceTable">Имя исходной таблицы из источника данных, определяемое с учетом регистра.</param>
      <param name="dataSetTable">Имя таблицы из <see cref="T:System.Data.DataSet" /> для сопоставления.</param>
    </member>
    <member name="M:System.Data.Common.DataTableMapping.#ctor(System.String,System.String,System.Data.Common.DataColumnMapping[])">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.Common.DataTableMapping" />, если дано имя исходной таблицы, имя объекта <see cref="T:System.Data.DataTable" /> и массив объектов <see cref="T:System.Data.Common.DataColumnMapping" />.</summary>
      <param name="sourceTable">Имя исходной таблицы из источника данных, определяемое с учетом регистра.</param>
      <param name="dataSetTable">Имя таблицы из <see cref="T:System.Data.DataSet" /> для сопоставления.</param>
      <param name="columnMappings">Массив объектов <see cref="T:System.Data.Common.DataColumnMapping" />.</param>
    </member>
    <member name="P:System.Data.Common.DataTableMapping.ColumnMappings">
      <summary>Возвращает состояние <see cref="T:System.Data.Common.DataColumnMappingCollection" /> для экземпляра <see cref="T:System.Data.DataTable" />.</summary>
      <returns>Коллекция сопоставлений столбцов данных.</returns>
    </member>
    <member name="P:System.Data.Common.DataTableMapping.DataSetTable">
      <summary>Возвращает или задает имя таблицы из <see cref="T:System.Data.DataSet" />.</summary>
      <returns>Имя таблицы из <see cref="T:System.Data.DataSet" />.</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMapping.GetColumnMappingBySchemaAction(System.String,System.Data.MissingMappingAction)">
      <summary>Получает объект <see cref="T:System.Data.DataColumn" /> из указанного объекта <see cref="T:System.Data.DataTable" /> с использованием указанного значения <see cref="T:System.Data.MissingMappingAction" /> и имени объекта <see cref="T:System.Data.DataColumn" />.</summary>
      <param name="sourceColumn">Имя <see cref="T:System.Data.DataColumn" />.</param>
      <param name="mappingAction">Одно из значений <see cref="T:System.Data.MissingMappingAction" />.</param>
      <returns>Столбец данных.</returns>
      <exception cref="T:System.InvalidOperationException">Для параметра <paramref name="mappingAction" /> было задано значение <see langword="Error" /> и не было указано сопоставление.</exception>
    </member>
    <member name="M:System.Data.Common.DataTableMapping.GetDataColumn(System.String,System.Type,System.Data.DataTable,System.Data.MissingMappingAction,System.Data.MissingSchemaAction)">
      <summary>Возвращает объект <see cref="T:System.Data.DataColumn" /> для данного имени столбца.</summary>
      <param name="sourceColumn">Имя <see cref="T:System.Data.DataColumn" />.</param>
      <param name="dataType">Тип данных для объекта <paramref name="sourceColumn" />.</param>
      <param name="dataTable">Имя таблицы из <see cref="T:System.Data.DataSet" /> для сопоставления.</param>
      <param name="mappingAction">Одно из значений <see cref="T:System.Data.MissingMappingAction" />.</param>
      <param name="schemaAction">Одно из значений <see cref="T:System.Data.MissingSchemaAction" />.</param>
      <returns>Объект <see cref="T:System.Data.DataColumn" />.</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMapping.GetDataTableBySchemaAction(System.Data.DataSet,System.Data.MissingSchemaAction)">
      <summary>Получает текущий объект <see cref="T:System.Data.DataTable" /> для указанного объекта <see cref="T:System.Data.DataSet" /> с использованием указанного значения <see cref="T:System.Data.MissingSchemaAction" />.</summary>
      <param name="dataSet">Объект <see cref="T:System.Data.DataSet" />, из которого получается объект <see cref="T:System.Data.DataTable" />.</param>
      <param name="schemaAction">Одно из значений <see cref="T:System.Data.MissingSchemaAction" />.</param>
      <returns>Таблица данных.</returns>
    </member>
    <member name="P:System.Data.Common.DataTableMapping.SourceTable">
      <summary>Возвращает или задает имя исходной таблицы из источника данных, определяемое с учетом регистра.</summary>
      <returns>Имя исходной таблицы из источника данных, определяемое с учетом регистра.</returns>
    </member>
    <member name="P:System.Data.Common.DataTableMapping.System#Data#ITableMapping#ColumnMappings">
      <summary>Получает производной коллекции <see cref="T:System.Data.Common.DataColumnMappingCollection" /> для объекта <see cref="T:System.Data.DataTable" />.</summary>
      <returns>Коллекция сопоставлений столбцов данных.</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMapping.System#ICloneable#Clone">
      <summary>Создает новый объект, являющийся копией текущего экземпляра.</summary>
      <returns>Новый объект, который является копией текущего экземпляра.</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMapping.ToString">
      <summary>Преобразует текущее имя <see cref="P:System.Data.Common.DataTableMapping.SourceTable" /> в строку.</summary>
      <returns>Текущее имя <see cref="P:System.Data.Common.DataTableMapping.SourceTable" /> как строка.</returns>
    </member>
    <member name="T:System.Data.Common.DataTableMappingCollection">
      <summary>Коллекция объектов <see cref="T:System.Data.Common.DataTableMapping" />. Этот класс не наследуется.</summary>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.Common.DataTableMappingCollection" />. Этот новый экземпляр пуст, т. е. пока не содержит объектов <see cref="T:System.Data.Common.DataTableMapping" />.</summary>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.Add(System.Object)">
      <summary>Добавляет объект <see cref="T:System.Object" />, являющийся сопоставлением таблиц в коллекции.</summary>
      <param name="value">Объект <see langword="DataTableMapping" /> для добавления в коллекцию.</param>
      <returns>Индекс объекта <see langword="DataTableMapping" />, который был добавлен к коллекции.</returns>
      <exception cref="T:System.InvalidCastException">Переданный объект не был объектом <see cref="T:System.Data.Common.DataTableMapping" />.</exception>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.Add(System.String,System.String)">
      <summary>Добавляет <see cref="T:System.Data.Common.DataTableMapping" /> к коллекции для данного имени исходной таблицы и имени таблицы <see cref="T:System.Data.DataSet" />.</summary>
      <param name="sourceTable">Имя исходной таблицы для сопоставления, определяемое с учетом регистра.</param>
      <param name="dataSetTable">Имя таблицы <see cref="T:System.Data.DataSet" /> для сопоставления, определяемое без учета регистра.</param>
      <returns>Объект <see cref="T:System.Data.Common.DataTableMapping" />, который был добавлен в коллекцию.</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.AddRange(System.Array)">
      <summary>Копирует элементы указанного объекта <see cref="T:System.Array" /> в конец коллекции.</summary>
      <param name="values">Массив значений типа <see cref="T:System.Array" />, добавляемый в коллекцию.</param>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.AddRange(System.Data.Common.DataTableMapping[])">
      <summary>Копирует элементы указанного массива <see cref="T:System.Data.Common.DataTableMapping" /> в конец коллекции.</summary>
      <param name="values">Массив объектов <see cref="T:System.Data.Common.DataTableMapping" />, добавляемый в коллекцию.</param>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.Clear">
      <summary>Удаляет все объекты <see cref="T:System.Data.Common.DataTableMapping" /> из коллекции.</summary>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.Contains(System.Object)">
      <summary>Получает значение, показывающее, существует ли данный объект <see cref="T:System.Data.Common.DataTableMapping" /> в коллекции.</summary>
      <param name="value">Объект <see cref="T:System.Object" />, который является объектом <see cref="T:System.Data.Common.DataTableMapping" />.</param>
      <returns>Значение <see langword="true" />, если коллекция содержит указанный объект <see cref="T:System.Data.Common.DataTableMapping" />; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.Contains(System.String)">
      <summary>Получает значение, показывающее, существует ли объект <see cref="T:System.Data.Common.DataTableMapping" /> с указанным именем исходной таблицы в коллекции.</summary>
      <param name="value">Имя исходной таблицы, содержащей объект <see cref="T:System.Data.Common.DataTableMapping" />, определяемое с учетом регистра.</param>
      <returns>Значение <see langword="true" />, если коллекция содержит объект <see cref="T:System.Data.Common.DataTableMapping" /> с этим именем исходной таблицы; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.CopyTo(System.Array,System.Int32)">
      <summary>Копирует элементы объекта <see cref="T:System.Data.Common.DataTableMappingCollection" /> в указанный массив.</summary>
      <param name="array">Массив <see cref="T:System.Array" />, в который копируются элементы <see cref="T:System.Data.Common.DataTableMappingCollection" />.</param>
      <param name="index">Начальный индекс массива.</param>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.CopyTo(System.Data.Common.DataTableMapping[],System.Int32)">
      <summary>Копирует элементы объекта <see cref="T:System.Data.Common.DataTableMapping" /> в указанный массив.</summary>
      <param name="array">Объект <see cref="T:System.Data.Common.DataTableMapping" />, в который копируются элементы <see cref="T:System.Data.Common.DataTableMappingCollection" />.</param>
      <param name="index">Начальный индекс массива.</param>
    </member>
    <member name="P:System.Data.Common.DataTableMappingCollection.Count">
      <summary>Возвращает количество объектов <see cref="T:System.Data.Common.DataTableMapping" /> в коллекции.</summary>
      <returns>Количество объектов <see langword="DataTableMapping" /> в коллекции.</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.GetByDataSetTable(System.String)">
      <summary>Получает объект <see cref="T:System.Data.Common.DataTableMapping" /> с указанным именем таблицы <see cref="T:System.Data.DataSet" />.</summary>
      <param name="dataSetTable">Имя таблицы <see cref="T:System.Data.DataSet" /> для поиска, определяемое без учета регистра.</param>
      <returns>Объект <see cref="T:System.Data.Common.DataTableMapping" /> с указанным именем таблицы <see cref="T:System.Data.DataSet" />.</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.GetEnumerator">
      <summary>Возвращает перечислитель, который может выполнять итерацию элементов коллекции.</summary>
      <returns>Объект <see cref="T:System.Collections.IEnumerator" />, который может использоваться для итерации элементов коллекции.</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.GetTableMappingBySchemaAction(System.Data.Common.DataTableMappingCollection,System.String,System.String,System.Data.MissingMappingAction)">
      <summary>Получает объект <see cref="T:System.Data.Common.DataColumnMapping" /> с указанным именем исходной таблицы и именем таблицы <see cref="T:System.Data.DataSet" /> с помощью заданного <see cref="T:System.Data.MissingMappingAction" />.</summary>
      <param name="tableMappings">Коллекция <see cref="T:System.Data.Common.DataTableMappingCollection" /> для поиска.</param>
      <param name="sourceTable">Имя сопоставленной исходной таблицы, определяемое с учетом регистра.</param>
      <param name="dataSetTable">Имя сопоставленной таблицы <see cref="T:System.Data.DataSet" /> без учета регистра.</param>
      <param name="mappingAction">Одно из значений <see cref="T:System.Data.MissingMappingAction" />.</param>
      <returns>Объект <see cref="T:System.Data.Common.DataTableMapping" />.</returns>
      <exception cref="T:System.InvalidOperationException">Для параметра <paramref name="mappingAction" /> было задано значение <see langword="Error" /> и не было указано сопоставление.</exception>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.IndexOf(System.Object)">
      <summary>Получает местоположение указанного объекта <see cref="T:System.Data.Common.DataTableMapping" /> в коллекции.</summary>
      <param name="value">Объект <see cref="T:System.Object" />, который является объектом <see cref="T:System.Data.Common.DataTableMapping" /> для поиска.</param>
      <returns>Местоположение (с нуля) указанного объекта <see cref="T:System.Data.Common.DataTableMapping" /> в коллекции.</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.IndexOf(System.String)">
      <summary>Получает расположение объекта <see cref="T:System.Data.Common.DataTableMapping" /> с указанным именем исходной таблицы.</summary>
      <param name="sourceTable">Имя исходной таблицы с учетом регистра.</param>
      <returns>Местоположение (с нуля) объекта <see cref="T:System.Data.Common.DataTableMapping" /> с указанным именем исходной таблицы.</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.IndexOfDataSetTable(System.String)">
      <summary>Получает расположение объекта <see cref="T:System.Data.Common.DataTableMapping" /> с указанным именем таблицы <see cref="T:System.Data.DataSet" />.</summary>
      <param name="dataSetTable">Имя таблицы <see langword="DataSet" /> для поиска, определяемое без учета регистра.</param>
      <returns>Местоположение (с нуля) объекта <see cref="T:System.Data.Common.DataTableMapping" /> с данным именем таблицы <see cref="T:System.Data.DataSet" />; -1, если объект <see cref="T:System.Data.Common.DataTableMapping" /> не существует в коллекции.</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.Insert(System.Int32,System.Data.Common.DataTableMapping)">
      <summary>Вставляет объект <see cref="T:System.Data.Common.DataTableMapping" /> в коллекцию <see cref="T:System.Data.Common.DataTableMappingCollection" /> по указанному индексу.</summary>
      <param name="index">Отсчитываемый от нуля индекс вставляемого объекта <see cref="T:System.Data.Common.DataTableMapping" />.</param>
      <param name="value">Вставляемый объект <see cref="T:System.Data.Common.DataTableMapping" />.</param>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.Insert(System.Int32,System.Object)">
      <summary>Вставляет объект <see cref="T:System.Data.Common.DataTableMapping" /> в коллекцию <see cref="T:System.Data.Common.DataTableMappingCollection" /> по указанному индексу.</summary>
      <param name="index">Отсчитываемый от нуля индекс вставляемого объекта <see cref="T:System.Data.Common.DataTableMapping" />.</param>
      <param name="value">Вставляемый объект <see cref="T:System.Data.Common.DataTableMapping" />.</param>
    </member>
    <member name="P:System.Data.Common.DataTableMappingCollection.Item(System.Int32)">
      <summary>Возвращает или задает объект <see cref="T:System.Data.Common.DataTableMapping" /> по указанному индексу.</summary>
      <param name="index">Индекс (с нуля) объекта <see cref="T:System.Data.Common.DataTableMapping" /> для возвращения.</param>
      <returns>Объект <see cref="T:System.Data.Common.DataTableMapping" />, расположенный по указанному индексу.</returns>
    </member>
    <member name="P:System.Data.Common.DataTableMappingCollection.Item(System.String)">
      <summary>Возвращает или задает объект <see cref="T:System.Data.Common.DataTableMapping" /> с указанным именем исходной таблицы.</summary>
      <param name="sourceTable">Имя исходной таблицы с учетом регистра.</param>
      <returns>Объект <see cref="T:System.Data.Common.DataTableMapping" /> с указанным именем исходной таблицы.</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.Remove(System.Data.Common.DataTableMapping)">
      <summary>Удаляет указанный объект <see cref="T:System.Data.Common.DataTableMapping" /> из коллекции.</summary>
      <param name="value">Удаляемый объект <see cref="T:System.Data.Common.DataTableMapping" />.</param>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.Remove(System.Object)">
      <summary>Удаляет указанный объект <see cref="T:System.Data.Common.DataTableMapping" /> из коллекции.</summary>
      <param name="value">Удаляемый объект <see cref="T:System.Data.Common.DataTableMapping" />.</param>
      <exception cref="T:System.InvalidCastException">Указанный объект не являлся объектом <see cref="T:System.Data.Common.DataTableMapping" />.</exception>
      <exception cref="T:System.ArgumentException">Указанный объект отсутствует в коллекции.</exception>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.RemoveAt(System.Int32)">
      <summary>Удаляет объект <see cref="T:System.Data.Common.DataTableMapping" />, находящийся по указанному индексу, из коллекции.</summary>
      <param name="index">Индекс (отсчет с нуля) удаляемого объекта <see cref="T:System.Data.Common.DataTableMapping" />.</param>
      <exception cref="T:System.IndexOutOfRangeException">Объект <see cref="T:System.Data.Common.DataTableMapping" /> не существует по указанному индексу.</exception>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.RemoveAt(System.String)">
      <summary>Удаляет из коллекции объект <see cref="T:System.Data.Common.DataTableMapping" /> с указанным именем исходной таблицы.</summary>
      <param name="sourceTable">Имя исходной таблицы для поиска, определяемое с учетом регистра.</param>
      <exception cref="T:System.IndexOutOfRangeException">Не существует объект <see cref="T:System.Data.Common.DataTableMapping" /> с указанным именем исходной таблицы.</exception>
    </member>
    <member name="P:System.Data.Common.DataTableMappingCollection.System#Collections#ICollection#IsSynchronized">
      <summary>Возвращает значение, показывающее, является ли доступ к коллекции <see cref="T:System.Collections.ICollection" /> синхронизированным (потокобезопасным).</summary>
      <returns>
        <see langword="true" />, если доступ к классу <see cref="T:System.Collections.ICollection" /> является синхронизированным (потокобезопасным); в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Common.DataTableMappingCollection.System#Collections#ICollection#SyncRoot">
      <summary>Получает объект, с помощью которого можно синхронизировать доступ к коллекции <see cref="T:System.Collections.ICollection" />.</summary>
      <returns>Объект, который может использоваться для синхронизации доступа к <see cref="T:System.Collections.ICollection" />.</returns>
    </member>
    <member name="P:System.Data.Common.DataTableMappingCollection.System#Collections#IList#IsFixedSize">
      <summary>Получает значение, указывающее, имеет ли список <see cref="T:System.Collections.IList" /> фиксированный размер.</summary>
      <returns>Значение <see langword="true" />, если словарь <see cref="T:System.Collections.IList" /> имеет фиксированный размер; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Common.DataTableMappingCollection.System#Collections#IList#IsReadOnly">
      <summary>Получает значение, указывающее, является ли объект <see cref="T:System.Collections.IList" /> доступным только для чтения.</summary>
      <returns>Значение <see langword="true" />, если интерфейс <see cref="T:System.Collections.IList" /> доступен только для чтения; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Common.DataTableMappingCollection.System#Collections#IList#Item(System.Int32)">
      <summary>Возвращает или задает элемент, расположенный в коллекции по указанному индексу.</summary>
      <param name="index">Отсчитываемый от нуля индекс получаемого или задаваемого элемента.</param>
      <returns>Элемент, расположенный по указанному индексу.</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.System#Data#ITableMappingCollection#Add(System.String,System.String)">
      <summary>Добавляет сопоставление таблицы в коллекцию.</summary>
      <param name="sourceTableName">Имя исходной таблицы с учетом регистра.</param>
      <param name="dataSetTableName">Имя таблицы <see cref="T:System.Data.DataSet" />.</param>
      <returns>Ссылка на вновь сопоставленный объект <see cref="T:System.Data.ITableMapping" />.</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.System#Data#ITableMappingCollection#GetByDataSetTable(System.String)">
      <summary>Получает объект TableMapping с указанным именем таблицы <see cref="T:System.Data.DataSet" />.</summary>
      <param name="dataSetTableName">Имя таблицы <see langword="DataSet" /> в коллекции.</param>
      <returns>Объект TableMapping с указанным именем таблицы <see langword="DataSet" />.</returns>
    </member>
    <member name="P:System.Data.Common.DataTableMappingCollection.System#Data#ITableMappingCollection#Item(System.String)">
      <summary>Возвращает или задает экземпляр класса <see cref="T:System.Data.ITableMapping" /> с указанным именем <see cref="P:System.Data.ITableMapping.SourceTable" />.</summary>
      <param name="index">Имя <see langword="SourceTable" /> объекта <see cref="T:System.Data.ITableMapping" />.</param>
      <returns>Экземпляр класса <see cref="T:System.Data.ITableMapping" /> с указанным именем <see langword="SourceTable" />.</returns>
    </member>
    <member name="T:System.Data.Common.DbColumn">
      <summary>Представляет столбец в источнике данных.</summary>
    </member>
    <member name="M:System.Data.Common.DbColumn.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.Common.DbColumn" />.</summary>
    </member>
    <member name="P:System.Data.Common.DbColumn.AllowDBNull">
      <summary>Возвращает логическое значение, допускающее присвоение null, указывающее, разрешены ли значения <see langword="DBNull" /> в этом столбце, или возвращает <see langword="null" />, если значение не задано. Можно задать значение <see langword="true" /> или <see langword="false" />, указывающее, разрешены ли значения <see langword="DBNull" /> в этом столбце, или <see langword="null" /> (<see langword="Nothing" /> в Visual Basic) при переопределении в производном классе.</summary>
      <returns>Возвращает <see langword="true" />, если значения <see langword="DBNull" /> разрешены в этом столбце; в противном случае — <see langword="false" />. Если значение не задано, возвратит пустую ссылку (<see langword="Nothing" /> в Visual Basic).</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.BaseCatalogName">
      <summary>Получает имя каталога, связанного с источником данных; в противном случае — <see langword="null" />, если значение не задано. Можно задать имя каталога или <see langword="null" /> при переопределении в производном классе.</summary>
      <returns>Имя каталога, связанного с источником данных; в противном случае — пустая ссылка (<see langword="Nothing" /> в Visual Basic), если значение не задано.</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.BaseColumnName">
      <summary>Возвращает имя базового столбца; в противном случае — <see langword="null" />, если значение не задано. Можно задать имя столбца или <see langword="null" /> при переопределении в производном классе.</summary>
      <returns>Имя базового столбца; в противном случае — пустая ссылка (<see langword="Nothing" /> в Visual Basic), если значение не задано.</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.BaseSchemaName">
      <summary>Получает имя схемы, связанной с источником данных; в противном случае — <see langword="null" />, если значение не задано. Можно задать имя схемы или <see langword="null" /> при переопределении в производном классе.</summary>
      <returns>Имя схемы, связанной с источником данных; в противном случае — пустая ссылка (<see langword="Nothing" /> в Visual Basic), если значение не задано.</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.BaseServerName">
      <summary>Получает имя сервера, связанное со столбцом; в противном случае — <see langword="null" />, если значение не задано. Можно задать имя сервера или <see langword="null" /> при переопределении в производном классе.</summary>
      <returns>Имя сервера, связанное со столбцом; в противном случае — пустая ссылка (<see langword="Nothing" /> в Visual Basic), если значение не задано.</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.BaseTableName">
      <summary>Возвращает имя таблицы в схеме; в противном случае возвращает <see langword="null" />, если значение не задано. Можно задать имя таблицы или <see langword="null" /> при переопределении в производном классе.</summary>
      <returns>Имя таблицы в схеме; в противном случае — пустая ссылка (<see langword="Nothing" /> в Visual Basic), если значение не задано.</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.ColumnName">
      <summary>Возвращает имя столбца. Можно задать имя столбца при переопределении в производном классе.</summary>
      <returns>Имя столбца.</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.ColumnOrdinal">
      <summary>Возвращает позицию столбца (порядковый номер) в строке источника данных; в противном случае — <see langword="null" />, если значение не задано. Можно задать либо значение <see langword="int32" />, указывающее позицию столбца, либо <see langword="null" /> при переопределении в производном классе.</summary>
      <returns>Значение <see langword="int32" /> для порядкового номера столбца; в противном случае — пустая ссылка (<see langword="Nothing" /> в Visual Basic), если значение не задано.</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.ColumnSize">
      <summary>Возвращает размер столбца; в противном случае — <see langword="null" />, если значение не задано. Можно задать либо значение <see langword="int32" />, указывающее размер столбца, либо <see langword="null" /> при переопределении в производном классе.</summary>
      <returns>
        <see langword="int32" /> Значение для размера столбца; в противном случае — пустая ссылка (<see langword="Nothing" /> в Visual Basic), если значение не задано.</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.DataType">
      <summary>Возвращает тип данных, хранящихся в столбце. Можно задать объект <see cref="T:System.Type" />, представляющий тип данных в столбце при переопределении в производном классе.</summary>
      <returns>Объект <see cref="T:System.Type" />, представляющий тип данных, хранящихся в столбце.</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.DataTypeName">
      <summary>Получает имя типа данных; в противном случае — <see langword="null" />, если значение не задано. Можно задать имя типа данных или <see langword="null" /> при переопределении в производном классе.</summary>
      <returns>Имя типа данных; в противном случае — пустая ссылка (<see langword="Nothing" /> в Visual Basic), если значение не задано.</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.IsAliased">
      <summary>Возвращает логическое значение, допускающее присвоение null, указывающее, обозначен ли этот столбец псевдонимом, или возвращает <see langword="null" />, если значение не задано. Можно задать значение <see langword="true" /> или <see langword="false" />, указывающее, обозначен ли этот столбец псевдонимом, или <see langword="null" /> (<see langword="Nothing" /> в Visual Basic) при переопределении в производном классе.</summary>
      <returns>Возвращает <see langword="true" />, если этот столбец обозначен псевдонимом, в противном случае возвращает <see langword="false" />. Если значение не задано, возвратит пустую ссылку (<see langword="Nothing" /> в Visual Basic).</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.IsAutoIncrement">
      <summary>Возвращает логическое значение, допускающее присвоение null, указывающее, выполняется ли автоматическое увеличение значений в этом столбце, или возвращает <see langword="null" />, если значение не задано. Можно задать значение <see langword="true" /> или <see langword="false" />, указывающее, выполняется ли автоматическое увеличение значений в этом столбце, или <see langword="null" /> (<see langword="Nothing" /> в Visual Basic) при переопределении в производном классе.</summary>
      <returns>Возвращает <see langword="true" />, если выполняется автоматическое увеличение значений в этом столбце; в противном случае — <see langword="false" />. Если значение не задано, возвратит пустую ссылку (<see langword="Nothing" /> в Visual Basic).</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.IsExpression">
      <summary>Возвращает логическое значение, допускающее присвоение null, указывающее, является ли этот столбец выражением, или возвращает <see langword="null" />, если значение не задано. Можно задать значение <see langword="true" /> или <see langword="false" />, указывающее, является ли этот столбец выражением, или <see langword="null" /> (<see langword="Nothing" /> в Visual Basic) при переопределении в производном классе.</summary>
      <returns>Возвращает <see langword="true" />, если этот столбец является выражением; в противном случае возвращает <see langword="false" />. Если значение не задано, возвратит пустую ссылку (<see langword="Nothing" /> в Visual Basic).</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.IsHidden">
      <summary>Возвращает логическое значение, допускающее присвоение null, указывающее, является ли этот столбец скрытым, или возвращает <see langword="null" />, если значение не задано. Можно задать значение <see langword="true" /> или <see langword="false" />, указывающее, является ли этот столбец скрытым, или <see langword="null" /> (<see langword="Nothing" /> в Visual Basic) при переопределении в производном классе.</summary>
      <returns>Возвращает <see langword="true" />, если этот столбец является скрытым, в противном случае возвращает <see langword="false" />. Если значение не задано, возвратит пустую ссылку (<see langword="Nothing" /> в Visual Basic).</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.IsIdentity">
      <summary>Возвращает логическое значение, допускающее присвоение null, указывающее, является ли этот столбец идентификатором, или возвращает <see langword="null" />, если значение не задано. Можно задать значение <see langword="true" /> или <see langword="false" />, указывающее, является ли этот столбец идентификатором, или <see langword="null" /> (<see langword="Nothing" /> в Visual Basic) при переопределении в производном классе.</summary>
      <returns>Возвращает <see langword="true" />, если этот столбец является идентификатором, в противном случае возвращает <see langword="false" />. Если значение не задано, возвратит пустую ссылку (<see langword="Nothing" /> в Visual Basic).</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.IsKey">
      <summary>Возвращает логическое значение, допускающее присвоение null, указывающее, является ли этот столбец ключом, или возвращает <see langword="null" />, если значение не задано. Можно задать значение <see langword="true" /> или <see langword="false" />, указывающее, является ли этот столбец ключом, или <see langword="null" /> (<see langword="Nothing" /> в Visual Basic) при переопределении в производном классе.</summary>
      <returns>Возвращает <see langword="true" />, если этот столбец является ключом, в противном случае возвращает <see langword="false" />. Если значение не задано, возвратит пустую ссылку (<see langword="Nothing" /> в Visual Basic).</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.IsLong">
      <summary>Возвращает логическое значение, допускающее присвоение null, указывающее, содержит ли этот столбец данные большого формата, или возвращает <see langword="null" />, если значение не задано. Можно задать значение <see langword="true" /> или <see langword="false" />, указывающее, содержит ли этот столбец данные большого формата, или <see langword="null" /> (<see langword="Nothing" /> в Visual Basic) при переопределении в производном классе.</summary>
      <returns>Возвращает <see langword="true" />, если этот столбец содержит данные большого формата; в противном случае — <see langword="false" />. Если значение не задано, возвратит пустую ссылку (<see langword="Nothing" /> в Visual Basic).</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.IsReadOnly">
      <summary>Возвращает логическое значение, допускающее присвоение null, указывающее, доступен ли этот столбец только для чтения, или возвращает <see langword="null" />, если значение не задано. Можно задать значение <see langword="true" /> или <see langword="false" />, указывающее, доступен ли этот столбец только для чтения, или <see langword="null" /> (<see langword="Nothing" /> в Visual Basic) при переопределении в производном классе.</summary>
      <returns>Возвращает <see langword="true" />, если этот столбец доступен только для чтения; в противном случае — значение <see langword="false" />. Если значение не задано, возвратит пустую ссылку (<see langword="Nothing" /> в Visual Basic).</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.IsUnique">
      <summary>Возвращает логическое значение, допускающее присвоение null, указывающее, применяется ли к этому столбцу уникальное ограничение, или возвращает <see langword="null" />, если значение не задано. Можно задать значение <see langword="true" /> или <see langword="false" />, указывающее, применяется ли к этому столбцу уникальное ограничение, или <see langword="null" /> (<see langword="Nothing" /> в Visual Basic) при переопределении в производном классе.</summary>
      <returns>Возвращает <see langword="true" />, если к этому столбцу применяется уникальное ограничение; в противном случае — <see langword="false" />. Если значение не задано, возвратит пустую ссылку (<see langword="Nothing" /> в Visual Basic).</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.Item(System.String)">
      <summary>Получает объект на основе имени свойства столбца.</summary>
      <param name="property">Имя свойства столбца.</param>
      <returns>Объект на основе имени свойства столбца.</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.NumericPrecision">
      <summary>Получает точность чисел данных в столбце; в противном случае — <see langword="null" />, если значение не задано. Можно задать либо значение <see langword="int32" />, указывающее точность чисел данных в столбце, либо <see langword="null" /> при переопределении в производном классе.</summary>
      <returns>
        <see langword="int32" /> Значение, указывающее точность данных в столбце, в том случае, если данные являются числовыми; в противном случае, пустая ссылка (<see langword="Nothing" /> в Visual Basic), если значение не задано.</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.NumericScale">
      <summary>Получает значение <see langword="int32" />, допускающее null, которое возвращает <see langword="null" /> или числовой масштаб данных в столбце. Можно задать значение <see langword="null" /> или <see langword="int32" /> для числового масштаба данных в столбце при переопределении в производном классе.</summary>
      <returns>Пустая ссылка (<see langword="Nothing" /> в Visual Basic), если значение не задано; в противном случае — значение <see langword="int32" />, указывающее масштаб данных в столбце, если данные являются числовыми.</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.UdtAssemblyQualifiedName">
      <summary>Получает имя с указанием сборки для объекта <see cref="T:System.Type" />, представляющего тип данных в столбце; в противном случае — <see langword="null" />, если значение не задано. Можно задать имя с указанием сборки или <see langword="null" /> при переопределении в производном классе.</summary>
      <returns>Имя с указанием сборки для объекта <see cref="T:System.Type" />, представляющего тип данных в столбце; в противном случае — пустая сборка (<see langword="Nothing" /> в Visual Basic), если значение не задано.</returns>
    </member>
    <member name="T:System.Data.Common.DbComm*******">
      <summary>Представляет инструкцию SQL или хранимую процедуру, выполняемую с источником данных. Предоставляет базовый класс для классов, определяемых базой данных, которые представляют команды. <see cref="Overload:System.Data.Common.DbComm*******.ExecuteNonQueryAsync" /></summary>
    </member>
    <member name="M:System.Data.Common.DbComm*******.#ctor">
      <summary>Создает экземпляр объекта <see cref="T:System.Data.Common.DbComm*******" />.</summary>
    </member>
    <member name="M:System.Data.Common.DbComm*******.Cancel">
      <summary>Пытается отменить выполнение объекта <see cref="T:System.Data.Common.DbComm*******" />.</summary>
    </member>
    <member name="P:System.Data.Common.DbComm*******.Comm*******Text">
      <summary>Возвращает или задает текстовую команду для выполнения в отношении источника данных.</summary>
      <returns>Текстовая команда для выполнения. Значением по умолчанию является пустая строка ("").</returns>
    </member>
    <member name="P:System.Data.Common.DbComm*******.Comm*******Timeout">
      <summary>Возвращает или задает время ожидания перед завершением попытки выполнить команду и созданием ошибки.</summary>
      <returns>Время в секундах, в течение которого должно происходить ожидание выполнения команды.</returns>
    </member>
    <member name="P:System.Data.Common.DbComm*******.Comm*******Type">
      <summary>Указывает или определяет, как интерпретируется свойство <see cref="P:System.Data.Common.DbComm*******.Comm*******Text" />.</summary>
      <returns>Одно из значений <see cref="T:System.Data.Comm*******Type" />. Значение по умолчанию — <see langword="Text" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbComm*******.Connection">
      <summary>Возвращает или задает соединение <see cref="T:System.Data.Common.DbConnection" />, используемое этой командой <see cref="T:System.Data.Common.DbComm*******" />.</summary>
      <returns>Подключение к источнику данных.</returns>
    </member>
    <member name="M:System.Data.Common.DbComm*******.CreateDbParameter">
      <summary>Создает новый экземпляр объекта <see cref="T:System.Data.Common.DbParameter" />.</summary>
      <returns>Объект <see cref="T:System.Data.Common.DbParameter" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbComm*******.CreateParameter">
      <summary>Создает новый экземпляр объекта <see cref="T:System.Data.Common.DbParameter" />.</summary>
      <returns>Объект <see cref="T:System.Data.Common.DbParameter" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbComm*******.DbConnection">
      <summary>Возвращает или задает соединение <see cref="T:System.Data.Common.DbConnection" />, используемое этой командой <see cref="T:System.Data.Common.DbComm*******" />.</summary>
      <returns>Подключение к источнику данных.</returns>
    </member>
    <member name="P:System.Data.Common.DbComm*******.DbParameterCollection">
      <summary>Возвращает коллекцию объектов <see cref="T:System.Data.Common.DbParameter" />.</summary>
      <returns>Параметры инструкции SQL или хранимой процедуры.</returns>
    </member>
    <member name="P:System.Data.Common.DbComm*******.DbTransaction">
      <summary>Возвращает или задает контекст <see cref="P:System.Data.Common.DbComm*******.DbTransaction" />, в котором выполняется этот объект <see cref="T:System.Data.Common.DbComm*******" />.</summary>
      <returns>Транзакция, в которой выполняется объект Comm******* поставщика данных .NET Framework. Значением по умолчанию является пустая ссылка (<see langword="Nothing" /> в Visual Basic).</returns>
    </member>
    <member name="P:System.Data.Common.DbComm*******.DesignTimeVisible">
      <summary>Возвращает или задает значение, определяющее, должен ли объект команды выводиться на экран в настраиваемом элементе управления интерфейса.</summary>
      <returns>Значение <see langword="true" />, если объект команды должен выводиться на экран в элементе управления; в противном случае — значение <see langword="false" />. Значение по умолчанию — <see langword="true" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbComm*******.ExecuteDbDataReader(System.Data.Comm*******Behavior)">
      <summary>Выполняет текст команды применительно к подключению.</summary>
      <param name="behavior">Экземпляр <see cref="T:System.Data.Comm*******Behavior" />.</param>
      <returns>Задача, представляющая операцию.</returns>
      <exception cref="T:System.Data.Common.DbException">Ошибка, произошедшая при попытке выполнения текста команды.</exception>
      <exception cref="T:System.ArgumentException">Недопустимое значение <see cref="T:System.Data.Comm*******Behavior" />.</exception>
    </member>
    <member name="M:System.Data.Common.DbComm*******.ExecuteDbDataReaderAsync(System.Data.Comm*******Behavior,System.Threading.CancellationToken)">
      <summary>Поставщики должны реализовать этот метод, чтобы предоставить реализацию, отличную от реализации по умолчанию, для перегрузок <see cref="Overload:System.Data.Common.DbComm*******.ExecuteReader" />.  
Реализация по умолчанию вызывает синхронный метод <see cref="M:System.Data.Common.DbComm*******.ExecuteReader" /> и возвращает завершенную задачу, блокируя вызывающий поток. Реализация по умолчанию возвращает отмененную задачу, если ей передается уже отмененный токен отмены. Исключения, создаваемые ExecuteReader, будут связаны через возвращаемое свойство исключения задачи.  
Этот метод принимает токен отмены, который может использоваться для запроса ранней отмены операции. Реализации могут игнорировать данный запрос.</summary>
      <param name="behavior">Параметры для завершения инструкции и извлечения данных.</param>
      <param name="cancellationToken">Токен для отслеживания запросов отмены.</param>
      <returns>Задача, представляющая асинхронную операцию.</returns>
      <exception cref="T:System.Data.Common.DbException">Ошибка, произошедшая при попытке выполнения текста команды.</exception>
      <exception cref="T:System.ArgumentException">Недопустимое значение <see cref="T:System.Data.Comm*******Behavior" />.</exception>
    </member>
    <member name="M:System.Data.Common.DbComm*******.ExecuteNonQuery">
      <summary>Выполняет оператор SQL применительно к объекту подключения.</summary>
      <returns>Число обработанных строк.</returns>
    </member>
    <member name="M:System.Data.Common.DbComm*******.ExecuteNonQueryAsync">
      <summary>Асинхронная версия <see cref="M:System.Data.Common.DbComm*******.ExecuteNonQuery" />, которая выполняет инструкцию SQL относительно объекта соединения.  
Вызывает <see cref="M:System.Data.Common.DbComm*******.ExecuteNonQueryAsync(System.Threading.CancellationToken)" /> с CancellationToken.None.</summary>
      <returns>Задача, представляющая асинхронную операцию.</returns>
      <exception cref="T:System.Data.Common.DbException">Ошибка, произошедшая при попытке выполнения текста команды.</exception>
    </member>
    <member name="M:System.Data.Common.DbComm*******.ExecuteNonQueryAsync(System.Threading.CancellationToken)">
      <summary>Это асинхронная версия метода <see cref="M:System.Data.Common.DbComm*******.ExecuteNonQuery" />. Поставщики должны выполнить переопределение с помощью соответствующей реализации. При необходимости можно игнорировать токен отмены.  
Реализация по умолчанию вызывает синхронный метод <see cref="M:System.Data.Common.DbComm*******.ExecuteNonQuery" /> и возвращает завершенную задачу, блокируя вызывающий поток. Реализация по умолчанию возвращает отмененную задачу, если ей передается уже отмененный токен отмены.  Исключения, создаваемые <see cref="M:System.Data.Common.DbComm*******.ExecuteNonQuery" />, будут связаны через возвращаемое свойство исключения задачи.  
Не вызывайте другие методы и свойства объекта <see langword="DbComm*******" /> до тех пор, пока возвращаемая задача не будет завершена.</summary>
      <param name="cancellationToken">Токен для отслеживания запросов отмены.</param>
      <returns>Задача, представляющая асинхронную операцию.</returns>
      <exception cref="T:System.Data.Common.DbException">Ошибка, произошедшая при попытке выполнения текста команды.</exception>
    </member>
    <member name="M:System.Data.Common.DbComm*******.ExecuteReader">
      <summary>Выполняет свойство <see cref="P:System.Data.Common.DbComm*******.Comm*******Text" /> применительно к свойству <see cref="P:System.Data.Common.DbComm*******.Connection" /> и возвращает объект <see cref="T:System.Data.Common.DbDataReader" />.</summary>
      <returns>Объект <see cref="T:System.Data.Common.DbDataReader" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbComm*******.ExecuteReader(System.Data.Comm*******Behavior)">
      <summary>Выполняет свойство <see cref="P:System.Data.Common.DbComm*******.Comm*******Text" /> применительно к свойству <see cref="P:System.Data.Common.DbComm*******.Connection" /> и возвращает объект <see cref="T:System.Data.Common.DbDataReader" />, используя одно из значений типа <see cref="T:System.Data.Comm*******Behavior" />.</summary>
      <param name="behavior">Одно из значений <see cref="T:System.Data.Comm*******Behavior" />.</param>
      <returns>Объект <see cref="T:System.Data.Common.DbDataReader" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbComm*******.ExecuteReaderAsync">
      <summary>Асинхронная версия <see cref="Overload:System.Data.Common.DbComm*******.ExecuteReader" />, которая выполняет <see cref="P:System.Data.Common.DbComm*******.Comm*******Text" /> относительно <see cref="P:System.Data.Common.DbComm*******.Connection" /> и возвращает <see cref="T:System.Data.Common.DbDataReader" />.  
Вызывает <see cref="M:System.Data.Common.DbComm*******.ExecuteDbDataReaderAsync(System.Data.Comm*******Behavior,System.Threading.CancellationToken)" /> с CancellationToken.None.</summary>
      <returns>Задача, представляющая асинхронную операцию.</returns>
      <exception cref="T:System.Data.Common.DbException">Ошибка, произошедшая при попытке выполнения текста команды.</exception>
      <exception cref="T:System.ArgumentException">Недопустимое значение <see cref="T:System.Data.Comm*******Behavior" />.</exception>
    </member>
    <member name="M:System.Data.Common.DbComm*******.ExecuteReaderAsync(System.Data.Comm*******Behavior)">
      <summary>Асинхронная версия <see cref="Overload:System.Data.Common.DbComm*******.ExecuteReader" />, которая выполняет <see cref="P:System.Data.Common.DbComm*******.Comm*******Text" /> относительно <see cref="P:System.Data.Common.DbComm*******.Connection" /> и возвращает <see cref="T:System.Data.Common.DbDataReader" />.  
Вызывает <see cref="M:System.Data.Common.DbComm*******.ExecuteDbDataReaderAsync(System.Data.Comm*******Behavior,System.Threading.CancellationToken)" />.</summary>
      <param name="behavior">Одно из значений <see cref="T:System.Data.Comm*******Behavior" />.</param>
      <returns>Задача, представляющая асинхронную операцию.</returns>
      <exception cref="T:System.Data.Common.DbException">Ошибка, произошедшая при попытке выполнения текста команды.</exception>
      <exception cref="T:System.ArgumentException">Недопустимое значение <see cref="T:System.Data.Comm*******Behavior" />.</exception>
    </member>
    <member name="M:System.Data.Common.DbComm*******.ExecuteReaderAsync(System.Data.Comm*******Behavior,System.Threading.CancellationToken)">
      <summary>Вызывает <see cref="M:System.Data.Common.DbComm*******.ExecuteDbDataReaderAsync(System.Data.Comm*******Behavior,System.Threading.CancellationToken)" />.</summary>
      <param name="behavior">Одно из значений <see cref="T:System.Data.Comm*******Behavior" />.</param>
      <param name="cancellationToken">Токен для отслеживания запросов отмены.</param>
      <returns>Задача, представляющая асинхронную операцию.</returns>
      <exception cref="T:System.Data.Common.DbException">Ошибка, произошедшая при попытке выполнения текста команды.</exception>
      <exception cref="T:System.ArgumentException">Недопустимое значение <see cref="T:System.Data.Comm*******Behavior" />.</exception>
    </member>
    <member name="M:System.Data.Common.DbComm*******.ExecuteReaderAsync(System.Threading.CancellationToken)">
      <summary>Асинхронная версия <see cref="Overload:System.Data.Common.DbComm*******.ExecuteReader" />, которая выполняет <see cref="P:System.Data.Common.DbComm*******.Comm*******Text" /> относительно <see cref="P:System.Data.Common.DbComm*******.Connection" /> и возвращает <see cref="T:System.Data.Common.DbDataReader" />. Этот метод распространяет уведомление о том, что операции следует отменить.  
Вызывает <see cref="M:System.Data.Common.DbComm*******.ExecuteDbDataReaderAsync(System.Data.Comm*******Behavior,System.Threading.CancellationToken)" />.</summary>
      <param name="cancellationToken">Токен для отслеживания запросов отмены.</param>
      <returns>Задача, представляющая асинхронную операцию.</returns>
      <exception cref="T:System.Data.Common.DbException">Ошибка, произошедшая при попытке выполнения текста команды.</exception>
      <exception cref="T:System.ArgumentException">Недопустимое значение <see cref="T:System.Data.Comm*******Behavior" />.</exception>
    </member>
    <member name="M:System.Data.Common.DbComm*******.ExecuteScalar">
      <summary>Выполняет запрос и возвращает первый столбец первой строки результирующего набора, возвращаемого запросом. Все другие столбцы и строки игнорируются.</summary>
      <returns>Первый столбец первой строки в результирующем наборе.</returns>
    </member>
    <member name="M:System.Data.Common.DbComm*******.ExecuteScalarAsync">
      <summary>Асинхронная версия метода <see cref="M:System.Data.Common.DbComm*******.ExecuteScalar" />, который выполняет запрос и возвращает первый столбец первой строки в наборе результатов, возвращаемых запросом. Все другие столбцы и строки игнорируются.  
Вызывает <see cref="M:System.Data.Common.DbComm*******.ExecuteScalarAsync(System.Threading.CancellationToken)" /> с CancellationToken.None.</summary>
      <returns>Задача, представляющая асинхронную операцию.</returns>
      <exception cref="T:System.Data.Common.DbException">Ошибка, произошедшая при попытке выполнения текста команды.</exception>
    </member>
    <member name="M:System.Data.Common.DbComm*******.ExecuteScalarAsync(System.Threading.CancellationToken)">
      <summary>Это асинхронная версия метода <see cref="M:System.Data.Common.DbComm*******.ExecuteScalar" />. Поставщики должны выполнить переопределение с помощью соответствующей реализации. При необходимости можно игнорировать токен отмены.  
Реализация по умолчанию вызывает синхронный метод <see cref="M:System.Data.Common.DbComm*******.ExecuteScalar" /> и возвращает завершенную задачу, блокируя вызывающий поток. Реализация по умолчанию возвращает отмененную задачу, если ей передается уже отмененный токен отмены. Исключения, создаваемые ExecuteScalar, будут связаны через возвращаемое свойство исключения задачи.  
Не вызывайте другие методы и свойства объекта <see langword="DbComm*******" /> до тех пор, пока возвращаемая задача не будет завершена.</summary>
      <param name="cancellationToken">Токен для отслеживания запросов отмены.</param>
      <returns>Задача, представляющая асинхронную операцию.</returns>
      <exception cref="T:System.Data.Common.DbException">Ошибка, произошедшая при попытке выполнения текста команды.</exception>
    </member>
    <member name="P:System.Data.Common.DbComm*******.Parameters">
      <summary>Возвращает коллекцию объектов <see cref="T:System.Data.Common.DbParameter" />. Дополнительные сведения о параметрах см. в разделе Настройка параметров и типов данных параметров.</summary>
      <returns>Параметры инструкции SQL или хранимой процедуры.</returns>
    </member>
    <member name="M:System.Data.Common.DbComm*******.Prepare">
      <summary>Создает подготовленную (или скомпилированную) версию команды в источнике данных.</summary>
    </member>
    <member name="P:System.Data.Common.DbComm*******.System#Data#IDbComm*******#Connection">
      <summary>Возвращает или задает объект <see cref="T:System.Data.IDbConnection" />, используемый этим экземпляром класса <see cref="T:System.Data.IDbComm*******" />.</summary>
      <returns>Подключение к источнику данных.</returns>
    </member>
    <member name="M:System.Data.Common.DbComm*******.System#Data#IDbComm*******#CreateParameter">
      <summary>Создает новый экземпляр объекта <see cref="T:System.Data.IDbDataParameter" />.</summary>
      <returns>Объект <see langword="IDbDataParameter" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbComm*******.System#Data#IDbComm*******#ExecuteReader">
      <summary>Выполняет <see cref="P:System.Data.IDbComm*******.Comm*******Text" /> в <see cref="P:System.Data.IDbComm*******.Connection" /> и создает <see cref="T:System.Data.IDataReader" />.</summary>
      <returns>Объект <see cref="T:System.Data.IDataReader" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbComm*******.System#Data#IDbComm*******#ExecuteReader(System.Data.Comm*******Behavior)">
      <summary>Выполняет <see cref="P:System.Data.IDbComm*******.Comm*******Text" /> в <see cref="P:System.Data.IDbComm*******.Connection" /> и строит <see cref="T:System.Data.IDataReader" /> с помощью одного из значений <see cref="T:System.Data.Comm*******Behavior" />.</summary>
      <param name="behavior">Одно из значений <see cref="T:System.Data.Comm*******Behavior" />.</param>
      <returns>Объект <see cref="T:System.Data.IDataReader" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbComm*******.System#Data#IDbComm*******#Parameters">
      <summary>Возвращает набор <see cref="T:System.Data.IDataParameterCollection" />.</summary>
      <returns>Параметры инструкции SQL или хранимой процедуры.</returns>
    </member>
    <member name="P:System.Data.Common.DbComm*******.System#Data#IDbComm*******#Transaction">
      <summary>Возвращает или задает контекст <see cref="P:System.Data.Common.DbComm*******.DbTransaction" />, в котором выполняется этот объект <see cref="T:System.Data.Common.DbComm*******" />.</summary>
      <returns>Транзакция, в рамках которой выполняется объект <see langword="Comm*******" /> поставщика данных .NET Framework. Значением по умолчанию является пустая ссылка (<see langword="Nothing" /> в Visual Basic).</returns>
    </member>
    <member name="P:System.Data.Common.DbComm*******.Transaction">
      <summary>Возвращает или задает контекст <see cref="T:System.Data.Common.DbTransaction" />, в котором выполняется этот объект <see cref="T:System.Data.Common.DbComm*******" />.</summary>
      <returns>Транзакция, в рамках которой выполняется объект <see langword="Comm*******" /> поставщика данных .NET Framework. Значением по умолчанию является пустая ссылка (<see langword="Nothing" /> в Visual Basic).</returns>
    </member>
    <member name="P:System.Data.Common.DbComm*******.UpdatedRowSource">
      <summary>Возвращает или задает способ применения результатов команды к объекту <see cref="T:System.Data.DataRow" />, если он используется методом Update объекта <see cref="T:System.Data.Common.DbDataAdapter" />.</summary>
      <returns>Одно из значений <see cref="T:System.Data.UpdateRowSource" />. Значение по умолчанию — <see langword="Both" />, если команда не создается автоматически. Значение по умолчанию — <see langword="None" />.</returns>
    </member>
    <member name="T:System.Data.Common.DbComm*******Builder">
      <summary>Автоматически создает однотабличные команды, которые позволяют согласовать изменения, внесенные в <see cref="T:System.Data.DataSet" />, со связанной базой данных. Это абстрактный класс, который может только наследоваться.</summary>
    </member>
    <member name="M:System.Data.Common.DbComm*******Builder.#ctor">
      <summary>Инициализирует новый экземпляр класса, который наследует от класса <see cref="T:System.Data.Common.DbComm*******Builder" />.</summary>
    </member>
    <member name="M:System.Data.Common.DbComm*******Builder.ApplyParameterInfo(System.Data.Common.DbParameter,System.Data.DataRow,System.Data.StatementType,System.Boolean)">
      <summary>Разрешает реализации поставщика класса <see cref="T:System.Data.Common.DbComm*******Builder" /> обрабатывать дополнительные свойства параметров.</summary>
      <param name="parameter">Объект <see cref="T:System.Data.Common.DbParameter" />, к которому применяются дополнительные изменения.</param>
      <param name="row">Объект <see cref="T:System.Data.DataRow" />, из которого таблица схемы предоставляется с помощью метода <see cref="M:System.Data.Common.DbDataReader.GetSchemaTable" />.</param>
      <param name="statementType">Тип создаваемой команды: INSERT, UPDATE или DELETE.</param>
      <param name="whereClause">Значение <see langword="true" />, если параметр является частью значений команд UPDATE или DELETE предложения WHERE, значение <see langword="false" />, если он является частью значений команд INSERT или UPDATE.</param>
    </member>
    <member name="P:System.Data.Common.DbComm*******Builder.CatalogLocation">
      <summary>Возвращает или задает <see cref="T:System.Data.Common.CatalogLocation" /> для экземпляра класса <see cref="T:System.Data.Common.DbComm*******Builder" />.</summary>
      <returns>Объект <see cref="T:System.Data.Common.CatalogLocation" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbComm*******Builder.CatalogSeparator">
      <summary>Возвращает или задает строку, которую можно использовать в качестве разделителя каталогов, для экземпляра класса <see cref="T:System.Data.Common.DbComm*******Builder" />.</summary>
      <returns>Строка, указывающая разделитель каталогов, который используется в экземпляре класса <see cref="T:System.Data.Common.DbComm*******Builder" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbComm*******Builder.ConflictOption">
      <summary>Указывает, какое значение типа <see cref="T:System.Data.ConflictOption" /> должно использоваться объектом <see cref="T:System.Data.Common.DbComm*******Builder" />.</summary>
      <returns>Возвращает одно из значений <see cref="T:System.Data.ConflictOption" />, описывающих функционирование этого объекта <see cref="T:System.Data.Common.DbComm*******Builder" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbComm*******Builder.DataAdapter">
      <summary>Возвращает или задает объект <see cref="T:System.Data.Common.DbDataAdapter" />, для которого автоматически создаются инструкции Transact-SQL.</summary>
      <returns>Объект <see cref="T:System.Data.Common.DbDataAdapter" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbComm*******Builder.Dispose(System.Boolean)">
      <summary>Освобождает неуправляемые ресурсы, используемые объектом <see cref="T:System.Data.Common.DbComm*******Builder" />, а при необходимости освобождает также управляемые ресурсы.</summary>
      <param name="disposing">Значение <see langword="true" /> позволяет освободить как управляемые, так и неуправляемые ресурсы; значение <see langword="false" /> освобождает только неуправляемые ресурсы.</param>
    </member>
    <member name="M:System.Data.Common.DbComm*******Builder.GetDeleteComm*******">
      <summary>Возвращает автоматически созданный объект <see cref="T:System.Data.Common.DbComm*******" />, который требуется для выполнения операций удаления в источнике данных.</summary>
      <returns>Автоматически созданный объект <see cref="T:System.Data.Common.DbComm*******" />, необходимый для выполнения операций удаления.</returns>
    </member>
    <member name="M:System.Data.Common.DbComm*******Builder.GetDeleteComm*******(System.Boolean)">
      <summary>Возвращает автоматически созданный объект <see cref="T:System.Data.Common.DbComm*******" />, который требуется для выполнения операций удаления в источнике данных (дополнительно могут использоваться имена столбцов для определения имен параметров).</summary>
      <param name="useColumnsForParameterNames">Если значением является <see langword="true" />, создаются имена параметров, совпадающие с именами столбцов, если это возможно. Если значение равно <see langword="false" />, создаются @p1, @p2 и т. д.</param>
      <returns>Автоматически созданный объект <see cref="T:System.Data.Common.DbComm*******" />, необходимый для выполнения операций удаления.</returns>
    </member>
    <member name="M:System.Data.Common.DbComm*******Builder.GetInsertComm*******">
      <summary>Возвращает автоматически созданный объект <see cref="T:System.Data.Common.DbComm*******" />, который требуется для выполнения операций вставки в источнике данных.</summary>
      <returns>Автоматически созданный объект <see cref="T:System.Data.Common.DbComm*******" />, необходимый для выполнения операций вставки.</returns>
    </member>
    <member name="M:System.Data.Common.DbComm*******Builder.GetInsertComm*******(System.Boolean)">
      <summary>Возвращает автоматически созданный объект <see cref="T:System.Data.Common.DbComm*******" />, который требуется для выполнения операций вставки в источнике данных (дополнительно могут использоваться столбцы для определения имен параметров).</summary>
      <param name="useColumnsForParameterNames">Если значением является <see langword="true" />, создаются имена параметров, совпадающие с именами столбцов, если это возможно. Если значение равно <see langword="false" />, создаются @p1, @p2 и т. д.</param>
      <returns>Автоматически созданный объект <see cref="T:System.Data.Common.DbComm*******" />, необходимый для выполнения операций вставки.</returns>
    </member>
    <member name="M:System.Data.Common.DbComm*******Builder.GetParameterName(System.Int32)">
      <summary>Возвращает имя указанного параметра в формате @p#. Используется при создании пользовательского построителя команд.</summary>
      <param name="parameterOrdinal">Число, включаемое как часть имени параметра.</param>
      <returns>Имя параметра с заданным числом, добавляемым в качестве части имени этого параметра.</returns>
    </member>
    <member name="M:System.Data.Common.DbComm*******Builder.GetParameterName(System.String)">
      <summary>Возвращает полное имя параметра при данном частичном имени параметра.</summary>
      <param name="parameterName">Частичное имя параметра.</param>
      <returns>Полное имя параметра, соответствующее запрошенному частичному имени параметра.</returns>
    </member>
    <member name="M:System.Data.Common.DbComm*******Builder.GetParameterPlaceholder(System.Int32)">
      <summary>Возвращает местозаполнитель для параметра в связанной инструкции SQL.</summary>
      <param name="parameterOrdinal">Число, включаемое как часть имени параметра.</param>
      <returns>Имя параметра с указанным добавленным числом.</returns>
    </member>
    <member name="M:System.Data.Common.DbComm*******Builder.GetSchemaTable(System.Data.Common.DbComm*******)">
      <summary>Возвращает таблицу схемы для объекта <see cref="T:System.Data.Common.DbComm*******Builder" />.</summary>
      <param name="sourceComm*******">Объект <see cref="T:System.Data.Common.DbComm*******" />, для которого выполняется извлечение соответствующей таблицы схемы.</param>
      <returns>Объект <see cref="T:System.Data.DataTable" />, представляющий схему для указанного объекта <see cref="T:System.Data.Common.DbComm*******" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbComm*******Builder.GetUpdateComm*******">
      <summary>Возвращает автоматически созданный объект <see cref="T:System.Data.Common.DbComm*******" />, который требуется для выполнения операций обновления в источнике данных.</summary>
      <returns>Автоматически созданный объект <see cref="T:System.Data.Common.DbComm*******" />, необходимый для выполнения операций обновления.</returns>
    </member>
    <member name="M:System.Data.Common.DbComm*******Builder.GetUpdateComm*******(System.Boolean)">
      <summary>Возвращает автоматически созданный объект <see cref="T:System.Data.Common.DbComm*******" />, который требуется для выполнения операций обновления в источнике данных (дополнительно могут использоваться столбцы для определения имен параметров).</summary>
      <param name="useColumnsForParameterNames">Если значением является <see langword="true" />, создаются имена параметров, совпадающие с именами столбцов, если это возможно. Если значение равно <see langword="false" />, создаются @p1, @p2 и т. д.</param>
      <returns>Автоматически созданный объект <see cref="T:System.Data.Common.DbComm*******" />, необходимый для выполнения операций обновления.</returns>
    </member>
    <member name="M:System.Data.Common.DbComm*******Builder.InitializeComm*******(System.Data.Common.DbComm*******)">
      <summary>Сбрасывает свойства <see cref="P:System.Data.Common.DbComm*******.Comm*******Timeout" />, <see cref="P:System.Data.Common.DbComm*******.Transaction" />, <see cref="P:System.Data.Common.DbComm*******.Comm*******Type" /> и <see cref="T:System.Data.UpdateRowSource" /> в объекте <see cref="T:System.Data.Common.DbComm*******" />.</summary>
      <param name="comm*******">Объект <see cref="T:System.Data.Common.DbComm*******" />, который должен использоваться построителем команд для соответствующих команд INSERT, UPDATE или DELETE.</param>
      <returns>Экземпляр объекта <see cref="T:System.Data.Common.DbComm*******" />, используемый для каждой операции вставки, обновления или удаления. Передача значения NULL позволяет методу <see cref="M:System.Data.Common.DbComm*******Builder.InitializeComm*******(System.Data.Common.DbComm*******)" /> создавать объект <see cref="T:System.Data.Common.DbComm*******" /> на основе команды Select, связанной с объектом <see cref="T:System.Data.Common.DbComm*******Builder" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbComm*******Builder.QuoteIdentifier(System.String)">
      <summary>Если у идентификатора нет кавычек, при наличии правильного каталога возвращает правильную форму этого идентификатора, взятую в кавычки, при этом корректно избегает кавычек, встроенных в идентификатор.</summary>
      <param name="unquotedIdentifier">Исходный идентификатор без кавычек.</param>
      <returns>Версия идентификатора, заключенного кавычки. Кавычки, встроенные в идентификатор, корректно игнорируются.</returns>
    </member>
    <member name="P:System.Data.Common.DbComm*******Builder.QuotePrefix">
      <summary>Возвращает или задает начальный символ или символы, используемые для указания объектов базы данных (например, таблиц или столбцов), имена которых содержат такие символы, как пробелы или зарезервированные токены.</summary>
      <returns>Используемый начальный символ или символы. Значение по умолчанию - пустая строка.</returns>
      <exception cref="T:System.InvalidOperationException">Это свойство не может быть изменено после создания команды INSERT, UPDATE или DELETE.</exception>
    </member>
    <member name="P:System.Data.Common.DbComm*******Builder.QuoteSuffix">
      <summary>Получает или задает конечный символ или символы, используемые для указания объектов базы данных (например, таблиц или столбцов), имена которых содержат такие символы, как пробелы или зарезервированные токены.</summary>
      <returns>Используемый конечный символ или символы. Значение по умолчанию - пустая строка.</returns>
    </member>
    <member name="M:System.Data.Common.DbComm*******Builder.RefreshSchema">
      <summary>Очищает команды, связанные с этим объектом <see cref="T:System.Data.Common.DbComm*******Builder" />.</summary>
    </member>
    <member name="M:System.Data.Common.DbComm*******Builder.RowUpdatingH*******ler(System.Data.Common.RowUpdatingEventArgs)">
      <summary>Добавляет обработчик событий для события <see cref="E:System.Data.OleDb.OleDbDataAdapter.RowUpdating" />.</summary>
      <param name="rowUpdatingEvent">Экземпляр класса <see cref="T:System.Data.Common.RowUpdatingEventArgs" />, содержащий сведения о событии.</param>
    </member>
    <member name="P:System.Data.Common.DbComm*******Builder.SchemaSeparator">
      <summary>Возвращает или задает символ, который используется в качестве разделителя между идентификатором схемы и остальными идентификаторами.</summary>
      <returns>Символ, который необходимо использовать в схеме в качестве разделителя.</returns>
    </member>
    <member name="P:System.Data.Common.DbComm*******Builder.SetAllValues">
      <summary>Указывает, включены все значения столбца в инструкции UPDATE или только измененные значения.</summary>
      <returns>Значение <see langword="true" />, если оператор UPDATE, созданный объектом <see cref="T:System.Data.Common.DbComm*******Builder" />, включает все столбцы; значение <see langword="false" />, если он включает только измененные столбцы.</returns>
    </member>
    <member name="M:System.Data.Common.DbComm*******Builder.SetRowUpdatingH*******ler(System.Data.Common.DbDataAdapter)">
      <summary>Регистрирует объект <see cref="T:System.Data.Common.DbComm*******Builder" />, чтобы обработать событие <see cref="E:System.Data.OleDb.OleDbDataAdapter.RowUpdating" /> для объекта <see cref="T:System.Data.Common.DbDataAdapter" />.</summary>
      <param name="adapter">Объект <see cref="T:System.Data.Common.DbDataAdapter" />, который требуется использовать для обновления.</param>
    </member>
    <member name="M:System.Data.Common.DbComm*******Builder.UnquoteIdentifier(System.String)">
      <summary>Если у идентификатора есть кавычки, возвращает форму этого идентификатора без кавычек, при этом корректно учитывая кавычки, встроенные в идентификатор.</summary>
      <param name="quotedIdentifier">Идентификатор, из которого будут удалены внедренные кавычки.</param>
      <returns>Идентификатор без кавычек, в котором встроенные кавычки корректно учтены.</returns>
    </member>
    <member name="T:System.Data.Common.DbConnection">
      <summary>Представляет подключение к базе данных.</summary>
    </member>
    <member name="M:System.Data.Common.DbConnection.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.Common.DbConnection" />.</summary>
    </member>
    <member name="M:System.Data.Common.DbConnection.BeginDbTransaction(System.Data.IsolationLevel)">
      <summary>Начинает транзакцию базы данных.</summary>
      <param name="isolationLevel">Указывает уровень изоляции транзакции.</param>
      <returns>Объект, представляющий новую транзакцию.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.BeginTransaction">
      <summary>Начинает транзакцию базы данных.</summary>
      <returns>Объект, представляющий новую транзакцию.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.BeginTransaction(System.Data.IsolationLevel)">
      <summary>Начинает транзакцию базы данных с указанным уровнем изоляции.</summary>
      <param name="isolationLevel">Указывает уровень изоляции транзакции.</param>
      <returns>Объект, представляющий новую транзакцию.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.ChangeDatabase(System.String)">
      <summary>Изменяет текущую базу данных для открытого подключения.</summary>
      <param name="databaseName">Указывает имя базы данных для используемого подключения.</param>
    </member>
    <member name="M:System.Data.Common.DbConnection.Close">
      <summary>Закрывает соединение с базой данных. Рекомендуется использовать этот метод для закрытия любого открытого подключения.</summary>
      <exception cref="T:System.Data.Common.DbException">При открытии подключения произошла ошибка на уровне подключения.</exception>
    </member>
    <member name="P:System.Data.Common.DbConnection.ConnectionString">
      <summary>Возвращает или задает строку, используемую для открытия подключения.</summary>
      <returns>Строка подключения использована для установления первоначального подключения. Точное содержимое строки подключения зависит от конкретного источника данных для этого подключения. Значение по умолчанию - пустая строка.</returns>
    </member>
    <member name="P:System.Data.Common.DbConnection.ConnectionTimeout">
      <summary>Получает время ожидания при установлении подключения, по истечении которого попытка подключения завершается и генерируется ошибка.</summary>
      <returns>Время (в секундах), в течение которого должно производиться ожидание открытия соединения. Значение по умолчанию определяется конкретным типом используемого подключения.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.CreateComm*******">
      <summary>Создает и возвращает объект <see cref="T:System.Data.Common.DbComm*******" />, связанный с текущим подключением.</summary>
      <returns>Объект <see cref="T:System.Data.Common.DbComm*******" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.CreateDbComm*******">
      <summary>Создает и возвращает объект <see cref="T:System.Data.Common.DbComm*******" />, связанный с текущим подключением.</summary>
      <returns>Объект <see cref="T:System.Data.Common.DbComm*******" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbConnection.Database">
      <summary>Получает имя текущей базы данных после открытия подключения или имя базы данных, указанное в строке подключения, перед открытием подключения.</summary>
      <returns>Имя текущей базы данных или базы данных, которая будет использоваться после открытия подключения. Значение по умолчанию - пустая строка.</returns>
    </member>
    <member name="P:System.Data.Common.DbConnection.DataSource">
      <summary>Получает имя сервера базы данных, к которому осуществляется подключение.</summary>
      <returns>Имя сервера базы данных, к которому осуществляется подключение. Значение по умолчанию - пустая строка.</returns>
    </member>
    <member name="P:System.Data.Common.DbConnection.DbProviderFactory">
      <summary>Возвращает объект <see cref="T:System.Data.Common.DbProviderFactory" /> для данного объекта <see cref="T:System.Data.Common.DbConnection" />.</summary>
      <returns>Набор методов для создания экземпляров классов поставщиков, реализующих источник данных.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.EnlistTransaction(System.Transactions.Transaction)">
      <summary>Выполняет прикрепление в указанной транзакции.</summary>
      <param name="transaction">Ссылка на существующий объект <see cref="T:System.Transactions.Transaction" />, к которому выполняется присоединение.</param>
    </member>
    <member name="M:System.Data.Common.DbConnection.GetSchema">
      <summary>Возвращает сведения о схеме для источника данных этого объекта <see cref="T:System.Data.Common.DbConnection" />.</summary>
      <returns>Объект <see cref="T:System.Data.DataTable" />, содержащий сведения о схеме.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.GetSchema(System.String)">
      <summary>Возвращает сведения о схеме для источника данных этого объекта <see cref="T:System.Data.Common.DbConnection" />, используя указанную строку в качестве имени схемы.</summary>
      <param name="collectionName">Определяет имя схемы, которая должна быть возвращена.</param>
      <returns>Объект <see cref="T:System.Data.DataTable" />, содержащий сведения о схеме.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="collectionName" /> задается как значение NULL.</exception>
    </member>
    <member name="M:System.Data.Common.DbConnection.GetSchema(System.String,System.String[])">
      <summary>Возвращает сведения о схеме для источника данных этого объекта <see cref="T:System.Data.Common.DbConnection" />, используя указанную строку в качестве имени схемы и указанный массив строк для значений ограничений.</summary>
      <param name="collectionName">Определяет имя схемы, которая должна быть возвращена.</param>
      <param name="restrictionValues">Задает набор значений ограничений для запрошенной схемы.</param>
      <returns>Объект <see cref="T:System.Data.DataTable" />, содержащий сведения о схеме.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="collectionName" /> задается как значение NULL.</exception>
    </member>
    <member name="M:System.Data.Common.DbConnection.OnStateChange(System.Data.StateChangeEventArgs)">
      <summary>Вызывает событие <see cref="E:System.Data.Common.DbConnection.StateChange" />.</summary>
      <param name="stateChange">Объект <see cref="T:System.Data.StateChangeEventArgs" />, содержащий данные события.</param>
    </member>
    <member name="M:System.Data.Common.DbConnection.Open">
      <summary>Открывает подключение к базе данных с параметрами, определяемыми свойством <see cref="P:System.Data.Common.DbConnection.ConnectionString" />.</summary>
    </member>
    <member name="M:System.Data.Common.DbConnection.OpenAsync">
      <summary>Асинхронная версия <see cref="M:System.Data.Common.DbConnection.Open" />, которая открывает соединение с базой данных с параметрами, указанными <see cref="P:System.Data.Common.DbConnection.ConnectionString" />. Этот метод вызывает виртуальный метод <see cref="M:System.Data.Common.DbConnection.OpenAsync(System.Threading.CancellationToken)" /> с CancellationToken.None.</summary>
      <returns>Задача, представляющая асинхронную операцию.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.OpenAsync(System.Threading.CancellationToken)">
      <summary>Это асинхронная версия метода <see cref="M:System.Data.Common.DbConnection.Open" />. Поставщики должны выполнить переопределение с помощью соответствующей реализации. При необходимости можно учитывать токен отмены.  
Реализация по умолчанию вызывает синхронный метод <see cref="M:System.Data.Common.DbConnection.Open" /> и возвращает выполненную задачу. Реализация по умолчанию возвращает отмененную задачу, если ей передается уже отмененный cancellationToken. Исключения, создаваемые Open, будут связаны через возвращаемое свойство исключения задачи.  
Не вызывайте другие методы и свойства объекта <see langword="DbConnection" /> до тех пор, пока возвращаемая задача не будет завершена.</summary>
      <param name="cancellationToken">Инструкция отмены.</param>
      <returns>Задача, представляющая асинхронную операцию.</returns>
    </member>
    <member name="P:System.Data.Common.DbConnection.ServerVersion">
      <summary>Получает строку, представляющую версию сервера, к которому подключен объект.</summary>
      <returns>Версия базы данных. Формат возвращенной строки зависит от конкретного типа используемого подключения.</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Data.Common.DbConnection.ServerVersion" /> был вызван, когда возвращаемая задача не была завершена, и не было открыто соединение после вызова <see cref="Overload:System.Data.Common.DbConnection.OpenAsync" />.</exception>
    </member>
    <member name="P:System.Data.Common.DbConnection.State">
      <summary>Получает строку, описывающую состояние подключения.</summary>
      <returns>Состояние подключения. Формат возвращенной строки зависит от конкретного типа используемого подключения.</returns>
    </member>
    <member name="E:System.Data.Common.DbConnection.StateChange">
      <summary>Происходит при изменении состояния события.</summary>
    </member>
    <member name="M:System.Data.Common.DbConnection.System#Data#IDbConnection#BeginTransaction">
      <summary>Начинает транзакцию базы данных.</summary>
      <returns>Объект, представляющий новую транзакцию.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.System#Data#IDbConnection#BeginTransaction(System.Data.IsolationLevel)">
      <summary>Начинает транзакцию базы данных с указанным значением <see cref="T:System.Data.IsolationLevel" />.</summary>
      <param name="isolationLevel">Одно из значений <see cref="T:System.Data.IsolationLevel" />.</param>
      <returns>Объект, представляющий новую транзакцию.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.System#Data#IDbConnection#CreateComm*******">
      <summary>Создает и возвращает объект <see cref="T:System.Data.Common.DbComm*******" />, связанный с текущим подключением.</summary>
      <returns>Объект <see cref="T:System.Data.Common.DbComm*******" />, связанный с подключением.</returns>
    </member>
    <member name="T:System.Data.Common.DbConnectionStringBuilder">
      <summary>Предоставляет базовый класс для строго типизированных построителей строк подключения.</summary>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</summary>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.#ctor(System.Boolean)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> (необязательно) с использованием правил ODBC для значений в кавычках.</summary>
      <param name="useOdbcRules">Значение <see langword="true" /> определяет использование {} для разделения полей. Значение <see langword="false" /> — использование кавычек.</param>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.Add(System.String,System.Object)">
      <summary>Добавляет запись с указанными ключом и значением в <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</summary>
      <param name="keyword">Ключ, добавляемый в <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</param>
      <param name="value">Значение заданного ключа.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="keyword" /> является неопределенной ссылкой (<see langword="Nothing" /> в Visual Basic).</exception>
      <exception cref="T:System.NotSupportedException">Объект <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> доступен только для чтения.  
-или- 
<see cref="T:System.Data.Common.DbConnectionStringBuilder" /> имеет фиксированный размер.</exception>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.AppendKeyValuePair(System.Text.StringBuilder,System.String,System.String)">
      <summary>Обеспечивает эффективный и безопасный способ добавления ключа и значения в существующий объект <see cref="T:System.Text.StringBuilder" />.</summary>
      <param name="builder">Объект <see cref="T:System.Text.StringBuilder" />, к которому требуется добавить пару "ключ — значение".</param>
      <param name="keyword">Добавляемый ключ.</param>
      <param name="value">Значение указанного ключа.</param>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.AppendKeyValuePair(System.Text.StringBuilder,System.String,System.String,System.Boolean)">
      <summary>Обеспечивает эффективный и безопасный способ добавления ключа и значения в существующий объект <see cref="T:System.Text.StringBuilder" />.</summary>
      <param name="builder">Объект <see cref="T:System.Text.StringBuilder" />, к которому требуется добавить пару "ключ — значение".</param>
      <param name="keyword">Добавляемый ключ.</param>
      <param name="value">Значение указанного ключа.</param>
      <param name="useOdbcRules">Значение <see langword="true" /> определяет использование {} для разделения полей. Значение <see langword="false" /> — использование кавычек.</param>
    </member>
    <member name="P:System.Data.Common.DbConnectionStringBuilder.BrowsableConnectionString">
      <summary>Возвращает или задает значение, указывающее, отображается ли свойство <see cref="P:System.Data.Common.DbConnectionStringBuilder.ConnectionString" /> в конструкторах Visual Studio.</summary>
      <returns>Значение <see langword="true" />, если строка подключения отображается в конструкторах; в противном случае — значение <see langword="false" />. Значение по умолчанию — <see langword="true" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.Clear">
      <summary>Удаляет содержимое экземпляра <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</summary>
      <exception cref="T:System.NotSupportedException">Объект <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> доступен только для чтения.</exception>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.ClearPropertyDescriptors">
      <summary>Очищает коллекцию объектов <see cref="T:System.ComponentModel.PropertyDescriptor" /> в связанном <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</summary>
    </member>
    <member name="P:System.Data.Common.DbConnectionStringBuilder.ConnectionString">
      <summary>Возвращает или задает строку подключения, связанную с этим <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</summary>
      <returns>Текущая строка подключения, созданная из пар "ключ-значение", которые содержатся в <see cref="T:System.Data.Common.DbConnectionStringBuilder" />. Значение по умолчанию - пустая строка.</returns>
      <exception cref="T:System.ArgumentException">Предоставлен недопустимый аргумент строки соединения.</exception>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.ContainsKey(System.String)">
      <summary>Определяет, содержит ли объект <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> указанный ключ.</summary>
      <param name="keyword">Ключ, который требуется найти в <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</param>
      <returns>Значение <see langword="true" />, если <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> содержит запись с указанным ключом. В противном случае — значение <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="keyword" /> является неопределенной ссылкой (<see langword="Nothing" /> в Visual Basic).</exception>
    </member>
    <member name="P:System.Data.Common.DbConnectionStringBuilder.Count">
      <summary>Возвращает текущее количество ключей, содержащихся в свойстве <see cref="P:System.Data.Common.DbConnectionStringBuilder.ConnectionString" />.</summary>
      <returns>Количество ключей, содержащихся в строке соединения, которую обеспечивает экземпляр <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.EquivalentTo(System.Data.Common.DbConnectionStringBuilder)">
      <summary>Сравнивает сведения о подключении в этом объекте <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> со сведениями о подключении в предоставленном объекте.</summary>
      <param name="connectionStringBuilder">Объект <see cref="T:System.Data.Common.DbConnectionStringBuilder" />, который необходимо сравнить с объектом <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</param>
      <returns>
        <see langword="true" />, если сведения о подключении в обоих объектах <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> приводят к появлению эквивалентной строки подключения; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.GetProperties(System.Collections.Hashtable)">
      <summary>Заполняет указанный <see cref="T:System.Collections.Hashtable" /> сведениями обо всех свойствах данного <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</summary>
      <param name="propertyDescriptors">
        <see cref="T:System.Collections.Hashtable" />, заполняемый сведениями о данном <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</param>
    </member>
    <member name="P:System.Data.Common.DbConnectionStringBuilder.IsFixedSize">
      <summary>Возвращает значение, показывающее, имеет ли объект <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> фиксированный размер.</summary>
      <returns>Значение <see langword="true" />, если список <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> имеет фиксированный размер. В противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbConnectionStringBuilder.IsReadOnly">
      <summary>Возвращает значение, которое определяет, является ли коллекция <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> доступной только для чтения.</summary>
      <returns>Значение <see langword="true" />, если объект <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> доступен только для чтения, в противном случае — значение <see langword="false" />. Значение по умолчанию — <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbConnectionStringBuilder.Item(System.String)">
      <summary>Возвращает или задает значение, связанное с указанным ключом.</summary>
      <param name="keyword">Ключ возвращаемого или задаваемого элемента.</param>
      <returns>Значение, связанное с указанным ключом. Если указанный ключ не найден, при попытке его получения возвращается пустая ссылка (<see langword="Nothing" /> в Visual Basic), а при попытке задания создается новый элемент с использованием указанного ключа.  
Передача пустого ключа (<see langword="Nothing" /> в Visual Basic) порождает <see cref="T:System.ArgumentNullException" />. При присвоении значения NULL удаляется пара "ключ-значение".</returns>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="keyword" /> является неопределенной ссылкой (<see langword="Nothing" /> в Visual Basic).</exception>
      <exception cref="T:System.NotSupportedException">Свойство задано, а значение <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> доступно только для чтения.  
-или- 
Свойство задано, <paramref name="keyword" /> не существует в коллекции, а <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> имеет фиксированный размер.</exception>
    </member>
    <member name="P:System.Data.Common.DbConnectionStringBuilder.Keys">
      <summary>Возвращает коллекцию <see cref="T:System.Collections.ICollection" />, которая содержит ключи из <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</summary>
      <returns>Коллекция <see cref="T:System.Collections.ICollection" />, которая содержит ключи из <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.Remove(System.String)">
      <summary>Удаляет из экземпляра <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> запись с указанным ключом.</summary>
      <param name="keyword">Ключ пары «ключ-значение», удаляемой из строки подключения в этом объекте <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</param>
      <returns>Значение <see langword="true" />, если ключ был указан в строке подключения и был удален. Значение <see langword="false" />, если такого ключа не было.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="keyword" /> имеет значение NULL (<see langword="Nothing" /> в Visual Basic).</exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> доступен только для чтения, или <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> имеет фиксированный размер.</exception>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.ShouldSerialize(System.String)">
      <summary>Указывает, существует ли заданный ключ в этом экземпляре <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</summary>
      <param name="keyword">Ключ, который требуется найти в <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</param>
      <returns>Значение <see langword="true" />, если <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> содержит запись с указанным ключом. В противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>Копирует элементы коллекции <see cref="T:System.Collections.ICollection" /> в массив <see cref="T:System.Array" />, начиная с указанного индекса массива <see cref="T:System.Array" />.</summary>
      <param name="array">Одномерный массив <see cref="T:System.Array" />, в который копируются элементы из интерфейса <see cref="T:System.Collections.ICollection" />. Массив <see cref="T:System.Array" /> должен иметь индексацию, начинающуюся с нуля.</param>
      <param name="index">Отсчитываемый от нуля индекс в массиве <paramref name="array" />, указывающий начало копирования.</param>
    </member>
    <member name="P:System.Data.Common.DbConnectionStringBuilder.System#Collections#ICollection#IsSynchronized">
      <summary>Возвращает значение, показывающее, является ли доступ к коллекции <see cref="T:System.Collections.ICollection" /> синхронизированным (потокобезопасным).</summary>
      <returns>
        <see langword="true" />, если доступ к классу <see cref="T:System.Collections.ICollection" /> является синхронизированным (потокобезопасным); в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbConnectionStringBuilder.System#Collections#ICollection#SyncRoot">
      <summary>Получает объект, с помощью которого можно синхронизировать доступ к коллекции <see cref="T:System.Collections.ICollection" />.</summary>
      <returns>Объект, который может использоваться для синхронизации доступа к <see cref="T:System.Collections.ICollection" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#Collections#IDictionary#Add(System.Object,System.Object)">
      <summary>Добавляет элемент с указанными ключом и значением в объект <see cref="T:System.Collections.IDictionary" />.</summary>
      <param name="keyword">Объект <see cref="T:System.Object" /> используется в качестве ключа добавляемого элемента.</param>
      <param name="value">Объект <see cref="T:System.Object" /> используется в качестве значения добавляемого элемента.</param>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#Collections#IDictionary#Contains(System.Object)">
      <summary>Определяет, содержится ли элемент с указанным ключом в объекте <see cref="T:System.Collections.IDictionary" />.</summary>
      <param name="keyword">Ключ для размещения в объекте <see cref="T:System.Collections.IDictionary" />.</param>
      <returns>Значение <see langword="true" />, если в <see cref="T:System.Collections.IDictionary" /> содержится элемент с данным ключом; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#Collections#IDictionary#GetEnumerator">
      <summary>Возвращает объект <see cref="T:System.Collections.IDictionaryEnumerator" /> для объекта <see cref="T:System.Collections.IDictionary" />.</summary>
      <returns>Объект <see cref="T:System.Collections.IDictionaryEnumerator" /> для объекта <see cref="T:System.Collections.IDictionary" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbConnectionStringBuilder.System#Collections#IDictionary#Item(System.Object)">
      <summary>Возвращает или задает элемент с указанным ключом.</summary>
      <param name="keyword">Ключ элемента, который требуется получить или задать.</param>
      <returns>Элемент с указанным ключом.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#Collections#IDictionary#Remove(System.Object)">
      <summary>Удаляет элемент с указанным ключом из объекта <see cref="T:System.Collections.IDictionary" />.</summary>
      <param name="keyword">Ключ элемента, который требуется удалить.</param>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#Collections#IEnumerable#GetEnumerator">
      <summary>Возвращает перечислитель, который осуществляет итерацию по коллекции.</summary>
      <returns>Объект <see cref="T:System.Collections.IEnumerator" />, который используется для прохода по коллекции.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetAttributes">
      <summary>Возвращает коллекцию настраиваемых атрибутов для этого экземпляра компонента.</summary>
      <returns>
        <see cref="T:System.ComponentModel.AttributeCollection" />, содержащий атрибуты для этого объекта.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetClassName">
      <summary>Возвращает имя класса для этого экземпляра компонента.</summary>
      <returns>Имя класса объекта или <see langword="null" />, если класс не имеет имени.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetComponentName">
      <summary>Возвращает имя этого экземпляра компонента.</summary>
      <returns>Имя объекта или <see langword="null" />, если объект не имеет имени.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetConverter">
      <summary>Возвращает преобразователь типов для этого экземпляра компонента.</summary>
      <returns>Объект <see cref="T:System.ComponentModel.TypeConverter" />, который является преобразователем для данного объекта, или значение <see langword="null" /> в случае отсутствия <see cref="T:System.ComponentModel.TypeConverter" /> для данного объекта.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetDefaultEvent">
      <summary>Возвращает событие по умолчанию для этого экземпляра компонента.</summary>
      <returns>Значение <see cref="T:System.ComponentModel.EventDescriptor" />, представляющее событие по умолчанию для этого объекта, или <see langword="null" />, если этот объект не имеет событий.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetDefaultProperty">
      <summary>Возвращает свойство по умолчанию для этого экземпляра компонента.</summary>
      <returns>Значение <see cref="T:System.ComponentModel.PropertyDescriptor" />, представляющее свойство по умолчанию для данного объекта, или <see langword="null" />, если этот объект не имеет свойств.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetEditor(System.Type)">
      <summary>Возвращает редактор указанного типа для этого экземпляра компонента.</summary>
      <param name="editorBaseType">Объект <see cref="T:System.Type" />, который представляет редактор для этого объекта.</param>
      <returns>Объект <see cref="T:System.Object" /> заданного типа, являющийся редактором для этого объекта, или <see langword="null" />, если редактор не найден.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetEvents">
      <summary>Возвращает события для этого экземпляра компонента.</summary>
      <returns>Объект <see cref="T:System.ComponentModel.EventDescriptorCollection" />, представляющий события для этого экземпляра компонента.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetEvents(System.Attribute[])">
      <summary>Возвращает события для этого экземпляра компонента с помощью заданного массива атрибутов в качестве фильтра.</summary>
      <param name="attributes">Массив типа <see cref="T:System.Attribute" />, используемый в качестве фильтра.</param>
      <returns>Объект <see cref="T:System.ComponentModel.EventDescriptorCollection" />, представляющий отфильтрованные события для этого экземпляра компонента.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetProperties">
      <summary>Возвращает свойства для этого экземпляра компонента.</summary>
      <returns>Объект <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />, представляющий свойства для этого экземпляра компонента.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetProperties(System.Attribute[])">
      <summary>Возвращает свойства для этого экземпляра компонента с помощью массива атрибутов в качестве фильтра.</summary>
      <param name="attributes">Массив типа <see cref="T:System.Attribute" />, используемый в качестве фильтра.</param>
      <returns>Коллекция <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />, представляющая отфильтрованные свойства для этого экземпляра компонента.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetPropertyOwner(System.ComponentModel.PropertyDescriptor)">
      <summary>Возвращает объект, содержащий свойство, описанное указанным дескриптором свойства.</summary>
      <param name="pd">Дескриптор <see cref="T:System.ComponentModel.PropertyDescriptor" />, представляющий свойство, владельца которого требуется найти.</param>
      <returns>Объект <see cref="T:System.Object" />, представляющий владельца заданного свойства.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.ToString">
      <summary>Возвращает строку подключения, связанную с этим <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</summary>
      <returns>Текущее свойство <see cref="P:System.Data.Common.DbConnectionStringBuilder.ConnectionString" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.TryGetValue(System.String,System.Object@)">
      <summary>Получает значение, соответствующее заданному ключу, из данного объекта <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</summary>
      <param name="keyword">Ключ искомого элемента.</param>
      <param name="value">Значение, соответствующее <paramref name="keyword" />.</param>
      <returns>Значение <see langword="true" />, если значение <paramref name="keyword" /> найдено в строке подключения. В противном случае — значение <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="keyword" /> содержит значение NULL (<see langword="Nothing" /> в Visual Basic).</exception>
    </member>
    <member name="P:System.Data.Common.DbConnectionStringBuilder.Values">
      <summary>Возвращает коллекцию <see cref="T:System.Collections.ICollection" />, которая содержит значения в <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</summary>
      <returns>Коллекция <see cref="T:System.Collections.ICollection" />, которая содержит значения из <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</returns>
    </member>
    <member name="T:System.Data.Common.DbDataAdapter">
      <summary>Помогает в реализации интерфейса <see cref="T:System.Data.IDbDataAdapter" />. Разработчики производных классов <see cref="T:System.Data.Common.DbDataAdapter" /> реализуют набор функций, обеспечивающий строгую типизацию, но наследуют большинство функций, необходимых для полной реализации DataAdapter.</summary>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.#ctor">
      <summary>Инициализирует новый экземпляр класса DataAdapter.</summary>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.#ctor(System.Data.Common.DbDataAdapter)">
      <summary>Инициализирует новый экземпляр класса <see langword="DataAdapter" /> из существующего объекта того же типа.</summary>
      <param name="adapter">Объект <see langword="DataAdapter" /> используется для создания нового <see langword="DataAdapter" />.</param>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.AddToBatch(System.Data.IDbComm*******)">
      <summary>Добавляет интерфейс <see cref="T:System.Data.IDbComm*******" /> к текущему пакету.</summary>
      <param name="comm*******">Интерфейс <see cref="T:System.Data.IDbComm*******" />, добавляемый к пакету.</param>
      <returns>Число команд в пакете, имевшееся до добавления интерфейса <see cref="T:System.Data.IDbComm*******" />.</returns>
      <exception cref="T:System.NotSupportedException">Адаптер не поддерживает пакеты.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.ClearBatch">
      <summary>Удаляет все объекты <see cref="T:System.Data.IDbComm*******" /> из пакета.</summary>
      <exception cref="T:System.NotSupportedException">Адаптер не поддерживает пакеты.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbComm*******,System.Data.StatementType,System.Data.Common.DataTableMapping)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.Common.RowUpdatedEventArgs" />.</summary>
      <param name="dataRow">Объект <see cref="T:System.Data.DataRow" />, использованный для обновления источника данных.</param>
      <param name="comm*******">Интерфейс <see cref="T:System.Data.IDbComm*******" /> выполняется во время использования метода <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" />.</param>
      <param name="statementType">Является ли команда оператором UPDATE, INSERT, DELETE или SELECT.</param>
      <param name="tableMapping">Объект <see cref="T:System.Data.Common.DataTableMapping" />.</param>
      <returns>Новый экземпляр класса <see cref="T:System.Data.Common.RowUpdatedEventArgs" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbComm*******,System.Data.StatementType,System.Data.Common.DataTableMapping)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.Common.RowUpdatingEventArgs" />.</summary>
      <param name="dataRow">Объект <see cref="T:System.Data.DataRow" />, который обновляет источник данных.</param>
      <param name="comm*******">Интерфейс <see cref="T:System.Data.IDbComm*******" /> для выполнения при применении метода <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" />.</param>
      <param name="statementType">Является ли команда оператором UPDATE, INSERT, DELETE или SELECT.</param>
      <param name="tableMapping">Объект <see cref="T:System.Data.Common.DataTableMapping" />.</param>
      <returns>Новый экземпляр класса <see cref="T:System.Data.Common.RowUpdatingEventArgs" />.</returns>
    </member>
    <member name="F:System.Data.Common.DbDataAdapter.DefaultSourceTableName">
      <summary>Имя по умолчанию, используемое объектом <see cref="T:System.Data.Common.DataAdapter" /> для сопоставлений таблиц.</summary>
    </member>
    <member name="P:System.Data.Common.DbDataAdapter.DeleteComm*******">
      <summary>Возвращает или задает команду для удаления записей из набора данных.</summary>
      <returns>Интерфейс <see cref="T:System.Data.IDbComm*******" />, используемый во время применения метода <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" /> для удаления записей в источнике данных, соответствующих удаленным строкам в наборе данных.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Dispose(System.Boolean)">
      <summary>Освобождает неуправляемые ресурсы, используемые объектом <see cref="T:System.Data.Common.DbDataAdapter" />, а при необходимости освобождает также управляемые ресурсы.</summary>
      <param name="disposing">Значение <see langword="true" /> позволяет освободить как управляемые, так и неуправляемые ресурсы; значение <see langword="false" /> освобождает только неуправляемые ресурсы.</param>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.ExecuteBatch">
      <summary>Выполняет текущий пакет.</summary>
      <returns>Возвращает значение из последней команды в пакете.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)">
      <summary>Добавляет или обновляет строки в объекте <see cref="T:System.Data.DataSet" />.</summary>
      <param name="dataSet">Объект <see cref="T:System.Data.DataSet" /> для заполнения записями и, если необходимо, — схемой.</param>
      <returns>Количество строк, успешно добавленных или обновленных в объекте <see cref="T:System.Data.DataSet" />. Не включает строки, на которые воздействуют операторы, не возвращающие строк.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String)">
      <summary>Добавляет или обновляет строки в указанном диапазоне в объект <see cref="T:System.Data.DataSet" /> для получения соответствия строкам в источнике данных с использованием имен <see cref="T:System.Data.DataSet" /> и <see cref="T:System.Data.DataTable" />.</summary>
      <param name="dataSet">Объект <see cref="T:System.Data.DataSet" /> для заполнения записями и, если необходимо, — схемой.</param>
      <param name="startRecord">Номер записи (с нуля), с которой необходимо начать.</param>
      <param name="maxRecords">Максимальное число извлекаемых записей.</param>
      <param name="srcTable">Имя исходной таблицы, используемое для сопоставления таблиц.</param>
      <returns>Количество строк, успешно добавленных или обновленных в объекте <see cref="T:System.Data.DataSet" />. Не включает строки, на которые воздействуют операторы, не возвращающие строк.</returns>
      <exception cref="T:System.SystemException">
        <see cref="T:System.Data.DataSet" /> не является допустимым.</exception>
      <exception cref="T:System.InvalidOperationException">Исходная таблица является недопустимой.  
-или- 
Подключение является недопустимым.</exception>
      <exception cref="T:System.InvalidCastException">Не удалось найти подключение.</exception>
      <exception cref="T:System.ArgumentException">Значение параметра <paramref name="startRecord" /> меньше 0.  
-или- 
Значение параметра <paramref name="maxRecords" /> меньше 0.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String,System.Data.IDbComm*******,System.Data.Comm*******Behavior)">
      <summary>Добавляет или обновляет строки в указанном диапазоне в объект <see cref="T:System.Data.DataSet" /> для получения соответствия строкам в источнике данных с помощью имен <see cref="T:System.Data.DataSet" /> и исходной таблицы, командной строки и поведения команды.</summary>
      <param name="dataSet">Объект <see cref="T:System.Data.DataSet" /> для заполнения записями и, если необходимо, — схемой.</param>
      <param name="startRecord">Номер записи (с нуля), с которой необходимо начать.</param>
      <param name="maxRecords">Максимальное число извлекаемых записей.</param>
      <param name="srcTable">Имя исходной таблицы, используемое для сопоставления таблиц.</param>
      <param name="comm*******">Оператор SQL SELECT используется для извлечения строки из источника данных.</param>
      <param name="behavior">Одно из значений <see cref="T:System.Data.Comm*******Behavior" />.</param>
      <returns>Количество строк, успешно добавленных или обновленных в объекте <see cref="T:System.Data.DataSet" />. Не включает строки, на которые воздействуют операторы, не возвращающие строк.</returns>
      <exception cref="T:System.InvalidOperationException">Исходная таблица является недопустимой.</exception>
      <exception cref="T:System.ArgumentException">Значение параметра <paramref name="startRecord" /> меньше 0.  
-или- 
Значение параметра <paramref name="maxRecords" /> меньше 0.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.String)">
      <summary>Добавляет или обновляет строки в объекте <see cref="T:System.Data.DataSet" /> для получения соответствия строкам в источнике данных с помощью имен <see cref="T:System.Data.DataSet" /> и <see cref="T:System.Data.DataTable" />.</summary>
      <param name="dataSet">Объект <see cref="T:System.Data.DataSet" /> для заполнения записями и, если необходимо, — схемой.</param>
      <param name="srcTable">Имя исходной таблицы, используемое для сопоставления таблиц.</param>
      <returns>Количество строк, успешно добавленных или обновленных в объекте <see cref="T:System.Data.DataSet" />. Не включает строки, на которые воздействуют операторы, не возвращающие строк.</returns>
      <exception cref="T:System.SystemException">Исходная таблица является недопустимой.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable)">
      <summary>Добавляет или обновляет строки в указанном диапазоне в объект <see cref="T:System.Data.DataSet" /> для получения соответствия строкам в источнике данных с использованием имени <see cref="T:System.Data.DataTable" />.</summary>
      <param name="dataTable">Имя объекта <see cref="T:System.Data.DataTable" />, используемое для сопоставления таблицы.</param>
      <returns>Количество строк, успешно добавленных или обновленных в объекте <see cref="T:System.Data.DataSet" />. Не включает строки, на которые воздействуют операторы, не возвращающие строк.</returns>
      <exception cref="T:System.InvalidOperationException">Исходная таблица является недопустимой.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable,System.Data.IDbComm*******,System.Data.Comm*******Behavior)">
      <summary>Добавляет или обновляет строки в объекте <see cref="T:System.Data.DataTable" /> для получения соответствия строкам в источнике данных с помощью указанного объекта <see cref="T:System.Data.DataTable" />, интерфейса <see cref="T:System.Data.IDbComm*******" /> и значения типа <see cref="T:System.Data.Comm*******Behavior" />.</summary>
      <param name="dataTable">Объект <see cref="T:System.Data.DataTable" /> для заполнения записями и, если необходимо, — схемой.</param>
      <param name="comm*******">Оператор SQL SELECT используется для извлечения строки из источника данных.</param>
      <param name="behavior">Одно из значений <see cref="T:System.Data.Comm*******Behavior" />.</param>
      <returns>Количество строк, успешно добавленных или обновленных в объекте <see cref="T:System.Data.DataTable" />. Не включает строки, на которые воздействуют операторы, не возвращающие строк.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable[],System.Int32,System.Int32,System.Data.IDbComm*******,System.Data.Comm*******Behavior)">
      <summary>Добавляет или обновляет строки в указанном диапазоне в объект <see cref="T:System.Data.DataSet" /> для получения соответствия строкам в источнике данных с использованием имен <see cref="T:System.Data.DataSet" /> и <see cref="T:System.Data.DataTable" />.</summary>
      <param name="dataTables">Объект <see cref="T:System.Data.DataTable" /> для заполнения из источника данных.</param>
      <param name="startRecord">Номер записи (с нуля), с которой необходимо начать.</param>
      <param name="maxRecords">Максимальное число извлекаемых записей.</param>
      <param name="comm*******">Интерфейс <see cref="T:System.Data.IDbComm*******" />, исполняемый для заполнения объектов <see cref="T:System.Data.DataTable" />.</param>
      <param name="behavior">Одно из значений <see cref="T:System.Data.Comm*******Behavior" />.</param>
      <returns>Количество строк, успешно добавленных или обновленных в таблицах данных.</returns>
      <exception cref="T:System.SystemException">
        <see cref="T:System.Data.DataSet" /> не является допустимым.</exception>
      <exception cref="T:System.InvalidOperationException">Исходная таблица является недопустимой.  
-или- 
Подключение является недопустимым.</exception>
      <exception cref="T:System.InvalidCastException">Не удалось найти подключение.</exception>
      <exception cref="T:System.ArgumentException">Значение параметра <paramref name="startRecord" /> меньше 0.  
-или- 
Значение параметра <paramref name="maxRecords" /> меньше 0.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Fill(System.Int32,System.Int32,System.Data.DataTable[])">
      <summary>Добавляет или обновляет строки в объекте <see cref="T:System.Data.DataTable" /> для получения соответствия строкам в источнике данных, начиная с указанной записи и вплоть до заданного максимального количества получаемых записей.</summary>
      <param name="startRecord">Номер записи (с нуля), с которой необходимо начать.</param>
      <param name="maxRecords">Максимальное число извлекаемых записей.</param>
      <param name="dataTables">Объект <see cref="T:System.Data.DataTable" /> для заполнения из источника данных.</param>
      <returns>Количество строк, успешно добавленных или обновленных в объекте <see cref="T:System.Data.DataTable" />. Это значение не включает строки, на которые воздействуют операторы, не возвращающие строк.</returns>
    </member>
    <member name="P:System.Data.Common.DbDataAdapter.FillComm*******Behavior">
      <summary>Возвращает или задает реакцию команды, использованной для заполнения адаптера данных.</summary>
      <returns>Значение типа <see cref="T:System.Data.Comm*******Behavior" /> команды, использованной для заполнения адаптера данных.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
      <summary>Добавляет объект <see cref="T:System.Data.DataTable" /> с именем Table в указанный объект <see cref="T:System.Data.DataSet" /> и настраивает схему для соответствия этому объекту в источнике данных на основе указанного значения типа <see cref="T:System.Data.SchemaType" />.</summary>
      <param name="dataSet">Объект <see cref="T:System.Data.DataSet" />, куда вставляется схема.</param>
      <param name="schemaType">Одно из значений <see cref="T:System.Data.SchemaType" />, указывающее, как следует вставлять схему.</param>
      <returns>Ссылка на коллекцию объектов <see cref="T:System.Data.DataTable" />, которые были добавлены в <see cref="T:System.Data.DataSet" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.Data.IDbComm*******,System.String,System.Data.Comm*******Behavior)">
      <summary>Добавляет объект <see cref="T:System.Data.DataTable" /> к указанному объекту <see cref="T:System.Data.DataSet" /> и настраивает схему в соответствии с источником данных, основанном на указанном значении типа <see cref="T:System.Data.SchemaType" />.</summary>
      <param name="dataSet">Объект <see cref="T:System.Data.DataSet" /> для заполнения схемой из источника данных.</param>
      <param name="schemaType">Одно из значений <see cref="T:System.Data.SchemaType" />.</param>
      <param name="comm*******">Оператор SQL SELECT используется для извлечения строки из источника данных.</param>
      <param name="srcTable">Имя исходной таблицы, используемое для сопоставления таблиц.</param>
      <param name="behavior">Одно из значений <see cref="T:System.Data.Comm*******Behavior" />.</param>
      <returns>Массив объектов <see cref="T:System.Data.DataTable" />, который содержит сведения схемы, возвращенные из источника данных.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String)">
      <summary>Добавляет объект <see cref="T:System.Data.DataTable" /> в указанный объект <see cref="T:System.Data.DataSet" /> и настраивает схему для соответствия этому объекту в источнике данных на основе указанных <see cref="T:System.Data.SchemaType" /> и <see cref="T:System.Data.DataTable" />.</summary>
      <param name="dataSet">Объект <see cref="T:System.Data.DataSet" />, куда вставляется схема.</param>
      <param name="schemaType">Одно из значений <see cref="T:System.Data.SchemaType" />, указывающее, как следует вставлять схему.</param>
      <param name="srcTable">Имя исходной таблицы, используемое для сопоставления таблиц.</param>
      <returns>Ссылка на коллекцию объектов <see cref="T:System.Data.DataTable" />, которые были добавлены в <see cref="T:System.Data.DataSet" />.</returns>
      <exception cref="T:System.ArgumentException">Не удалось найти исходную таблицу для получения схемы.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType)">
      <summary>Настраивает схему указанного объекта <see cref="T:System.Data.DataTable" /> на основе указанного <see cref="T:System.Data.SchemaType" />.</summary>
      <param name="dataTable">Объект <see cref="T:System.Data.DataTable" /> для заполнения схемой из источника данных.</param>
      <param name="schemaType">Одно из значений <see cref="T:System.Data.SchemaType" />.</param>
      <returns>Объект <see cref="T:System.Data.DataTable" />, содержащий сведения о схеме, возвращенные из источника данных.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType,System.Data.IDbComm*******,System.Data.Comm*******Behavior)">
      <summary>Настраивает схему для указанного объекта <see cref="T:System.Data.DataTable" />, основываясь на указанном значении типа <see cref="T:System.Data.SchemaType" />, командной строке и значениях типа <see cref="T:System.Data.Comm*******Behavior" />.</summary>
      <param name="dataTable">Объект <see cref="T:System.Data.DataTable" /> для заполнения схемой из источника данных.</param>
      <param name="schemaType">Одно из значений <see cref="T:System.Data.SchemaType" />.</param>
      <param name="comm*******">Оператор SQL SELECT используется для извлечения строки из источника данных.</param>
      <param name="behavior">Одно из значений <see cref="T:System.Data.Comm*******Behavior" />.</param>
      <returns>Объект <see cref="T:System.Data.DataTable" /> содержит сведения схемы, возвращенные из источника данных.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.GetBatchedParameter(System.Int32,System.Int32)">
      <summary>Возвращает интерфейс <see cref="T:System.Data.IDataParameter" /> из одной из команд в текущем пакете.</summary>
      <param name="comm*******Identifier">Индекс команды, из которой извлекается параметр.</param>
      <param name="parameterIndex">Индекс параметра внутри команды.</param>
      <returns>Указанный <see cref="T:System.Data.IDataParameter" />.</returns>
      <exception cref="T:System.NotSupportedException">Адаптер не поддерживает пакеты.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.GetBatchedRecordsAffected(System.Int32,System.Int32@,System.Exception@)">
      <summary>Возвращает сведения об отдельной попытке обновления в рамках большего по своему объему пакета обновления.</summary>
      <param name="comm*******Identifier">Порядковый номер (с нуля) столбца отдельной команды в пакете.</param>
      <param name="recordsAffected">Количество строк в хранилище данных, на которые было оказано воздействие указанной командой в пакете.</param>
      <param name="error">Исключение <see cref="T:System.Exception" />, выданное при выполнении указанной команды. Возвращает значение <see langword="null" /> (<see langword="Nothing" /> в Visual Basic), если исключение не было выдано.</param>
      <returns>Сведения об отдельной попытке обновления в рамках большего по своему объему пакета обновления.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.GetFillParameters">
      <summary>Получает параметры, заданные пользователем при выполнении оператора SQL SELECT.</summary>
      <returns>Массив объектов <see cref="T:System.Data.IDataParameter" /> содержит параметры, заданные пользователем.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.InitializeBatching">
      <summary>Инициализирует пакетную обработку для объекта <see cref="T:System.Data.Common.DbDataAdapter" />.</summary>
      <exception cref="T:System.NotSupportedException">Адаптер не поддерживает пакеты.</exception>
    </member>
    <member name="P:System.Data.Common.DbDataAdapter.InsertComm*******">
      <summary>Возвращает или задает команду SQL для вставки новых записей в источник данных.</summary>
      <returns>Интерфейс <see cref="T:System.Data.IDbComm*******" />, используемый во время применения метода <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" /> для вставки записей в источник данных, соответствующих новым строкам в наборе данных.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)">
      <summary>Вызывает событие <see langword="RowUpdated" /> поставщика данных .NET Framework.</summary>
      <param name="value">Объект <see cref="T:System.Data.Common.RowUpdatedEventArgs" />, содержащий данные события.</param>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)">
      <summary>Вызывает событие <see langword="RowUpdating" /> поставщика данных .NET Framework.</summary>
      <param name="value">Объект класса <see cref="T:System.Data.Common.RowUpdatingEventArgs" />, содержащий данные события.</param>
    </member>
    <member name="P:System.Data.Common.DbDataAdapter.SelectComm*******">
      <summary>Возвращает или задает команду, используемую для выбора записей в источнике данных.</summary>
      <returns>Интерфейс <see cref="T:System.Data.IDbComm*******" />, используемый во время применения метода <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" /> для выбора записей из источника данных для размещения в наборе данных.</returns>
    </member>
    <member name="P:System.Data.Common.DbDataAdapter.System#Data#IDbDataAdapter#DeleteComm*******">
      <summary>Возвращает или задает оператор SQL для удаления записей из набора данных.</summary>
      <returns>Интерфейс <see cref="T:System.Data.IDbComm*******" />, используемый во время применения метода <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> для удаления записей в источнике данных, соответствующих удаленным строкам в наборе данных.</returns>
    </member>
    <member name="P:System.Data.Common.DbDataAdapter.System#Data#IDbDataAdapter#InsertComm*******">
      <summary>Возвращает или задает оператор SQL для вставки новых записей в источник данных.</summary>
      <returns>Интерфейс <see cref="T:System.Data.IDbComm*******" />, используемый во время применения метода <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> для вставки записей в источник данных, соответствующих новым строкам в наборе данных.</returns>
    </member>
    <member name="P:System.Data.Common.DbDataAdapter.System#Data#IDbDataAdapter#SelectComm*******">
      <summary>Возвращает или задает оператор SQL для выбора записей в источнике данных.</summary>
      <returns>Интерфейс <see cref="T:System.Data.IDbComm*******" />, используемый во время применения метода <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> для выбора записей из источника данных для размещения в наборе данных.</returns>
    </member>
    <member name="P:System.Data.Common.DbDataAdapter.System#Data#IDbDataAdapter#UpdateComm*******">
      <summary>Возвращает или задает оператор SQL для обновления записей в источнике данных.</summary>
      <returns>Интерфейс <see cref="T:System.Data.IDbComm*******" />, используемый во время применения метода <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> для обновления записей в источнике данных, соответствующих измененным строкам в наборе данных.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.System#ICloneable#Clone">
      <summary>Создает новый объект, являющийся копией текущего экземпляра.</summary>
      <returns>Новый объект, являющийся копией этого экземпляра.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.TerminateBatching">
      <summary>Завершает пакетную обработку для объекта <see cref="T:System.Data.Common.DbDataAdapter" />.</summary>
      <exception cref="T:System.NotSupportedException">Адаптер не поддерживает пакеты.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[])">
      <summary>Обновляет значения в базе данных, выполняя соответствующие операторы INSERT, UPDATE или DELETE для каждой вставленной, обновленной или удаленной строки в указанном массиве объектов <see cref="T:System.Data.DataSet" />.</summary>
      <param name="dataRows">Массив объектов <see cref="T:System.Data.DataRow" />, использованный для обновления источника данных.</param>
      <returns>Количество строк, успешно обновленных из объекта <see cref="T:System.Data.DataSet" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <see cref="T:System.Data.DataSet" /> не является допустимым.</exception>
      <exception cref="T:System.InvalidOperationException">Исходная таблица является недопустимой.</exception>
      <exception cref="T:System.SystemException">Не существует объект <see cref="T:System.Data.DataRow" /> для обновления.  
-или- 
Не существует объект <see cref="T:System.Data.DataTable" /> для обновления.  
-или- 
Не существует объект <see cref="T:System.Data.DataSet" /> для использования в качестве источника.</exception>
      <exception cref="T:System.Data.DBConcurrencyException">Попытка выполнить оператор INSERT, UPDATE или DELETE привела к нулевому количеству обработанных записей.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[],System.Data.Common.DataTableMapping)">
      <summary>Обновляет значения в базе данных, выполняя соответствующие операторы INSERT, UPDATE или DELETE для каждой вставленной, обновленной или удаленной строки в указанном массиве объектов <see cref="T:System.Data.DataSet" />.</summary>
      <param name="dataRows">Массив объектов <see cref="T:System.Data.DataRow" />, использованный для обновления источника данных.</param>
      <param name="tableMapping">Используемая коллекция <see cref="P:System.Data.IDataAdapter.TableMappings" />.</param>
      <returns>Количество строк, успешно обновленных из объекта <see cref="T:System.Data.DataSet" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <see cref="T:System.Data.DataSet" /> не является допустимым.</exception>
      <exception cref="T:System.InvalidOperationException">Исходная таблица является недопустимой.</exception>
      <exception cref="T:System.SystemException">Не существует объект <see cref="T:System.Data.DataRow" /> для обновления.  
-или- 
Не существует объект <see cref="T:System.Data.DataTable" /> для обновления.  
-или- 
Не существует объект <see cref="T:System.Data.DataSet" /> для использования в качестве источника.</exception>
      <exception cref="T:System.Data.DBConcurrencyException">Попытка выполнить оператор INSERT, UPDATE или DELETE привела к нулевому количеству обработанных записей.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)">
      <summary>Обновляет значения в базе данных, выполняя соответствующие операторы INSERT, UPDATE или DELETE для каждой вставленной, обновленной или удаленной строки в указанном <see cref="T:System.Data.DataSet" />.</summary>
      <param name="dataSet">Объект <see cref="T:System.Data.DataSet" />, использованный для обновления источника данных.</param>
      <returns>Количество строк, успешно обновленных из объекта <see cref="T:System.Data.DataSet" />.</returns>
      <exception cref="T:System.InvalidOperationException">Исходная таблица является недопустимой.</exception>
      <exception cref="T:System.Data.DBConcurrencyException">Попытка выполнить оператор INSERT, UPDATE или DELETE привела к нулевому количеству обработанных записей.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet,System.String)">
      <summary>Обновляет значения в базе данных, выполняя соответствующие операторы INSERT, UPDATE или DELETE для каждой вставленной, обновленной или удаленной строки в <see cref="T:System.Data.DataSet" /> с заданным именем <see cref="T:System.Data.DataTable" />.</summary>
      <param name="dataSet">Объект <see cref="T:System.Data.DataSet" />, используемый для обновления источника данных.</param>
      <param name="srcTable">Имя исходной таблицы, используемое для сопоставления таблиц.</param>
      <returns>Количество строк, успешно обновленных из объекта <see cref="T:System.Data.DataSet" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <see cref="T:System.Data.DataSet" /> не является допустимым.</exception>
      <exception cref="T:System.InvalidOperationException">Исходная таблица является недопустимой.</exception>
      <exception cref="T:System.Data.DBConcurrencyException">Попытка выполнить оператор INSERT, UPDATE или DELETE привела к нулевому количеству обработанных записей.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataTable)">
      <summary>Обновляет значения в базе данных, выполняя соответствующие операторы INSERT, UPDATE или DELETE для каждой вставленной, обновленной или удаленной строки в указанном <see cref="T:System.Data.DataTable" />.</summary>
      <param name="dataTable">Объект <see cref="T:System.Data.DataTable" />, использованный для обновления источника данных.</param>
      <returns>Количество строк, успешно обновленных из объекта <see cref="T:System.Data.DataTable" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <see cref="T:System.Data.DataSet" /> не является допустимым.</exception>
      <exception cref="T:System.InvalidOperationException">Исходная таблица является недопустимой.</exception>
      <exception cref="T:System.SystemException">Не существует объект <see cref="T:System.Data.DataRow" /> для обновления.  
-или- 
Не существует объект <see cref="T:System.Data.DataTable" /> для обновления.  
-или- 
Не существует объект <see cref="T:System.Data.DataSet" /> для использования в качестве источника.</exception>
      <exception cref="T:System.Data.DBConcurrencyException">Попытка выполнить оператор INSERT, UPDATE или DELETE привела к нулевому количеству обработанных записей.</exception>
    </member>
    <member name="P:System.Data.Common.DbDataAdapter.UpdateBatchSize">
      <summary>Возвращает или задает значение, которое включает или отключает поддержку пакетной обработки и задает количество команд, которые могут выполняться в рамках одного пакета.</summary>
      <returns>Количество строк, которые необходимо обработать с помощью одного пакета.  
  Значение 
  Действие 
  0 
  Размер пакета не ограничен.  

  1 
  Отключает пакетное обновление.  

  &gt; 1 
  Изменения отправляются с помощью пакетов, единовременное количество операций в которых определяется свойством <see cref="P:System.Data.Common.DbDataAdapter.UpdateBatchSize" />.  

   

 Если для этого параметра значение, отличное от 1, все команды, связанные с <see cref="T:System.Data.Common.DbDataAdapter" /> должен иметь их <see cref="P:System.Data.IDbComm*******.UpdatedRowSource" /> свойство значение None или OutputParameters. В противном случае будет выдаваться исключение.</returns>
    </member>
    <member name="P:System.Data.Common.DbDataAdapter.UpdateComm*******">
      <summary>Возвращает или задает команду, используемую для обновления записей в источнике данных.</summary>
      <returns>Интерфейс <see cref="T:System.Data.IDbComm*******" />, используемый во время применения метода <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" /> для обновления записей в источнике данных, соответствующих измененным строкам в наборе данных.</returns>
    </member>
    <member name="T:System.Data.Common.DBDataPermission">
      <summary>Позволяет поставщику данных .NET Framework гарантировать, что уровень безопасности пользователя достаточен для доступа к данным.</summary>
    </member>
    <member name="M:System.Data.Common.DBDataPermission.#ctor">
      <summary>Инициализирует новый экземпляр класса <see langword="DBDataPermission" />.</summary>
    </member>
    <member name="M:System.Data.Common.DBDataPermission.#ctor(System.Data.Common.DBDataPermission)">
      <summary>Инициализирует новый экземпляр класса <see langword="DBDataPermission" />, используя существующие объекты <see langword="DBDataPermission" />.</summary>
      <param name="permission">Существующий объект <see langword="DBDataPermission" />, использованный для создания нового объекта <see langword="DBDataPermission" />.</param>
    </member>
    <member name="M:System.Data.Common.DBDataPermission.#ctor(System.Data.Common.DBDataPermissionAttribute)">
      <summary>Инициализирует новый экземпляр класса <see langword="DBDataPermission" /> с указанным значением <see langword="DBDataPermissionAttribute" />.</summary>
      <param name="permissionAttribute">Действие по обеспечению безопасности, связанное с пользовательским атрибутом безопасности.</param>
    </member>
    <member name="M:System.Data.Common.DBDataPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>Инициализирует новый экземпляр класса <see langword="DBDataPermission" /> с указанным значением <see cref="T:System.Security.Permissions.PermissionState" />.</summary>
      <param name="state">Одно из значений <see cref="T:System.Security.Permissions.PermissionState" />.</param>
    </member>
    <member name="M:System.Data.Common.DBDataPermission.#ctor(System.Security.Permissions.PermissionState,System.Boolean)">
      <summary>Инициализирует новый экземпляр класса <see langword="DBDataPermission" /> с указанным значением <see cref="T:System.Security.Permissions.PermissionState" /> и значением, указывающим, разрешается ли использовать пустой пароль.</summary>
      <param name="state">Одно из значений <see cref="T:System.Security.Permissions.PermissionState" />.</param>
      <param name="allowBlankPassword">Значение <see langword="true" />, если пустой пароль допустим; в противном случае — значение <see langword="false" />.</param>
    </member>
    <member name="M:System.Data.Common.DBDataPermission.Add(System.String,System.String,System.Data.KeyRestrictionBehavior)">
      <summary>Добавляет доступ для заданной строки подключения к существующему состоянию объекта <see langword="DBDataPermission" />.</summary>
      <param name="connectionString">Разрешенная строка подключения.</param>
      <param name="restrictions">Строка, определяющая разрешенные или запрещенные параметры строки подключения.</param>
      <param name="behavior">Одно из свойств <see cref="T:System.Data.KeyRestrictionBehavior" />.</param>
    </member>
    <member name="P:System.Data.Common.DBDataPermission.AllowBlankPassword">
      <summary>Получает значение, определяющее, разрешен ли пустой пароль.</summary>
      <returns>Значение <see langword="true" />, если пустой пароль разрешен; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DBDataPermission.Clear">
      <summary>Удаляет все разрешения, которые были до этого добавлены с помощью метода <see cref="M:System.Data.Common.DBDataPermission.Add(System.String,System.String,System.Data.KeyRestrictionBehavior)" />.</summary>
    </member>
    <member name="M:System.Data.Common.DBDataPermission.Copy">
      <summary>Создает и возвращает идентичную копию текущего объекта разрешения.</summary>
      <returns>Копия текущего объекта разрешения.</returns>
    </member>
    <member name="M:System.Data.Common.DBDataPermission.CreateInstance">
      <summary>Создает новый экземпляр класса <see langword="DBDataPermission" />.</summary>
      <returns>Новый объект <see langword="DBDataPermission" />.</returns>
    </member>
    <member name="M:System.Data.Common.DBDataPermission.FromXml(System.Security.SecurityElement)">
      <summary>Восстанавливает объект безопасности с указанным состоянием из кодировки XML.</summary>
      <param name="securityElement">Кодировка XML, используемая для восстановления объекта безопасности.</param>
    </member>
    <member name="M:System.Data.Common.DBDataPermission.Intersect(System.Security.IPermission)">
      <summary>Возвращает новый объект разрешений, предоставляющий пересечение текущего и заданного объектов разрешений.</summary>
      <param name="target">Объект разрешений, пересекающийся с текущим объектом разрешений. Должен относиться к тому же типу, что и текущий объект разрешений.</param>
      <returns>Новый объект разрешений, представляющий собой пересечение текущего и заданного объектов разрешений. Этот новый объект разрешений представляет собой ссылку со значением NULL (<see langword="Nothing" /> в Visual Basic), если пересечение пусто.</returns>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="target" /> не является ссылкой со значением NULL (<see langword="Nothing" /> в Visual Basic), а также не является экземпляром того же класса, что и текущий объект разрешений.</exception>
    </member>
    <member name="M:System.Data.Common.DBDataPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>Возвращает значение, указывающее, является ли текущий объект разрешений подмножеством заданного объекта разрешений.</summary>
      <param name="target">Объект разрешения, для которого требуется проверить соотношение подмножеств. Этот объект должен относиться к тому же типу, что и текущий объект разрешения.</param>
      <returns>Значение <see langword="true" />, если текущий объект разрешений является подмножеством заданного объекта разрешений; в противном случае — значение <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="target" /> — это объект типа, который отличается от типа текущего объекта разрешений.</exception>
    </member>
    <member name="M:System.Data.Common.DBDataPermission.IsUnrestricted">
      <summary>Возвращает значение, указывающее, должно ли разрешение быть представлено как неограниченное без знания его семантики.</summary>
      <returns>
        <see langword="true" />, если разрешение может быть представлено как неограниченное.</returns>
    </member>
    <member name="M:System.Data.Common.DBDataPermission.ToXml">
      <summary>Создает кодировку XML для объекта безопасности и его текущего состояния.</summary>
      <returns>Кодировка XML объекта безопасности, включающая сведения о состоянии.</returns>
    </member>
    <member name="M:System.Data.Common.DBDataPermission.Union(System.Security.IPermission)">
      <summary>Возвращает новый объект разрешений, представляющий собой объединение текущего и заданного объектов разрешений.</summary>
      <param name="target">Объект разрешений для комбинирования с текущим объектом разрешений. Должен относиться к тому же типу, что и текущий объект разрешений.</param>
      <returns>Новый объект разрешения, представляющий собой объединение текущего и заданного объектов разрешений.</returns>
      <exception cref="T:System.ArgumentException">Объект <paramref name="target" /> имеет тип, отличный от типа текущего объекта разрешений.</exception>
    </member>
    <member name="T:System.Data.Common.DBDataPermissionAttribute">
      <summary>Связывает операцию безопасности с пользовательским атрибутом безопасности.</summary>
    </member>
    <member name="M:System.Data.Common.DBDataPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.Common.DBDataPermissionAttribute" />.</summary>
      <param name="action">Одно из значений операции безопасности, представляющее операцию, которая может быть выполнена с помощью декларативной безопасности.</param>
    </member>
    <member name="P:System.Data.Common.DBDataPermissionAttribute.AllowBlankPassword">
      <summary>Возвращает или задает значение, показывающее, допускается ли пустой пароль.</summary>
      <returns>Значение <see langword="true" />, если пустой пароль допустим; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Common.DBDataPermissionAttribute.ConnectionString">
      <summary>Возвращает или задает разрешенную строку подключения.</summary>
      <returns>Разрешенная строка подключения.</returns>
    </member>
    <member name="P:System.Data.Common.DBDataPermissionAttribute.KeyRestrictionBehavior">
      <summary>Определяет, являются ли параметры в списке параметров строк подключения, указанных в свойстве <see cref="P:System.Data.Common.DBDataPermissionAttribute.KeyRestrictions" />, единственными допустимыми параметрами строк подключения.</summary>
      <returns>Одно из значений <see cref="T:System.Data.KeyRestrictionBehavior" />.</returns>
    </member>
    <member name="P:System.Data.Common.DBDataPermissionAttribute.KeyRestrictions">
      <summary>Возвращает или задает параметры строки подключения, которые разрешены или запрещены.</summary>
      <returns>Один или несколько параметров строки подключения, которые разрешены или запрещены.</returns>
    </member>
    <member name="M:System.Data.Common.DBDataPermissionAttribute.ShouldSerializeConnectionString">
      <summary>Определяет, должен ли атрибут выполнять сериализацию строки подключения.</summary>
      <returns>Значение <see langword="true" />, если атрибут должен выполнять сериализацию строки подключения; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DBDataPermissionAttribute.ShouldSerializeKeyRestrictions">
      <summary>Определяет, должен ли атрибут выполнять сериализацию набора ключевых ограничений.</summary>
      <returns>Значение <see langword="true" />, если атрибут должен выполнять сериализацию набора ключевых ограничений; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="T:System.Data.Common.DbDataReader">
      <summary>Считывает однопроходные потоки строк из источника данных.</summary>
    </member>
    <member name="M:System.Data.Common.DbDataReader.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.Common.DbDataReader" />.</summary>
    </member>
    <member name="M:System.Data.Common.DbDataReader.Close">
      <summary>Закрывает объект <see cref="T:System.Data.Common.DbDataReader" />.</summary>
    </member>
    <member name="P:System.Data.Common.DbDataReader.Depth">
      <summary>Возвращает значение, показывающее глубину вложенности для текущей строки.</summary>
      <returns>Глубина вложенности для текущей строки.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.Dispose">
      <summary>Освобождает все ресурсы, используемые текущим экземпляром класса <see cref="T:System.Data.Common.DbDataReader" />.</summary>
    </member>
    <member name="M:System.Data.Common.DbDataReader.Dispose(System.Boolean)">
      <summary>Освобождает управляемые ресурсы, используемые объектом <see cref="T:System.Data.Common.DbDataReader" /> (при необходимости освобождает и неуправляемые ресурсы).</summary>
      <param name="disposing">Значение <see langword="true" />, чтобы освободить все ресурсы (управляемые и неуправляемые); значение <see langword="false" />, чтобы освободить только неуправляемые ресурсы.</param>
    </member>
    <member name="P:System.Data.Common.DbDataReader.FieldCount">
      <summary>Возвращает число столбцов в текущей строке.</summary>
      <returns>Число столбцов в текущей строке.</returns>
      <exception cref="T:System.NotSupportedException">Текущее подключение к экземпляру SQL Server отсутствует.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetBoolean(System.Int32)">
      <summary>Возвращает значение указанного столбца в виде логического значения.</summary>
      <param name="ordinal">Порядковый номер столбца (от нуля).</param>
      <returns>Значение указанного столбца.</returns>
      <exception cref="T:System.InvalidCastException">Указанное приведение недопустимо.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetByte(System.Int32)">
      <summary>Возвращает значение указанного столбца в виде байта.</summary>
      <param name="ordinal">Порядковый номер столбца (от нуля).</param>
      <returns>Значение указанного столбца.</returns>
      <exception cref="T:System.InvalidCastException">Указанное приведение недопустимо.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
      <summary>Считывает поток байтов из указанного столбца, начиная с местоположения, указанного параметром <paramref name="dataOffset" />, в буфер, начиная с местоположения, указанного параметром <paramref name="bufferOffset" />.</summary>
      <param name="ordinal">Порядковый номер столбца (от нуля).</param>
      <param name="dataOffset">Индекс в строке, с которого необходимо начать считывание.</param>
      <param name="buffer">Буфер, в который копируются данные.</param>
      <param name="bufferOffset">Индекс в буфере, куда будут копироваться данные.</param>
      <param name="length">Максимальное число считываемых символов.</param>
      <returns>Число фактически считанных байтов.</returns>
      <exception cref="T:System.InvalidCastException">Указанное приведение недопустимо.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetChar(System.Int32)">
      <summary>Возвращает значение указанного столбца в виде одного символа.</summary>
      <param name="ordinal">Порядковый номер столбца (от нуля).</param>
      <returns>Значение указанного столбца.</returns>
      <exception cref="T:System.InvalidCastException">Указанное приведение недопустимо.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
      <summary>Считывает поток символов из указанного столбца, начиная с местоположения, указанного параметром <paramref name="dataOffset" />, в буфер, начиная с местоположения, указанного параметром <paramref name="bufferOffset" />.</summary>
      <param name="ordinal">Порядковый номер столбца (от нуля).</param>
      <param name="dataOffset">Индекс в строке, с которого необходимо начать считывание.</param>
      <param name="buffer">Буфер, в который копируются данные.</param>
      <param name="bufferOffset">Индекс в буфере, куда будут копироваться данные.</param>
      <param name="length">Максимальное число считываемых символов.</param>
      <returns>Число фактически считанных символов.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetData(System.Int32)">
      <summary>Возвращает объект <see cref="T:System.Data.Common.DbDataReader" /> для запрошенного порядкового номера столбца.</summary>
      <param name="ordinal">Порядковый номер столбца (от нуля).</param>
      <returns>Объект <see cref="T:System.Data.Common.DbDataReader" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetDataTypeName(System.Int32)">
      <summary>Возвращает имя типа данных заданного столбца.</summary>
      <param name="ordinal">Порядковый номер столбца (от нуля).</param>
      <returns>Строка, представляющая имя типа данных.</returns>
      <exception cref="T:System.InvalidCastException">Указанное приведение недопустимо.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetDateTime(System.Int32)">
      <summary>Возвращает значение указанного столбца в виде объекта <see cref="T:System.DateTime" />.</summary>
      <param name="ordinal">Порядковый номер столбца (от нуля).</param>
      <returns>Значение указанного столбца.</returns>
      <exception cref="T:System.InvalidCastException">Указанное приведение недопустимо.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetDbDataReader(System.Int32)">
      <summary>Возвращает объект <see cref="T:System.Data.Common.DbDataReader" /> для запрошенного порядкового номера столбца, который можно переопределить реализацией, зависящей от поставщика.</summary>
      <param name="ordinal">Порядковый номер столбца (от нуля).</param>
      <returns>Объект <see cref="T:System.Data.Common.DbDataReader" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetDecimal(System.Int32)">
      <summary>Возвращает значение указанного столбца в виде объекта <see cref="T:System.Decimal" />.</summary>
      <param name="ordinal">Порядковый номер столбца (от нуля).</param>
      <returns>Значение указанного столбца.</returns>
      <exception cref="T:System.InvalidCastException">Указанное приведение недопустимо.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetDouble(System.Int32)">
      <summary>Возвращает значение заданного столбца в виде числа с плавающей запятой двойной точности.</summary>
      <param name="ordinal">Порядковый номер столбца (от нуля).</param>
      <returns>Значение указанного столбца.</returns>
      <exception cref="T:System.InvalidCastException">Указанное приведение недопустимо.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetEnumerator">
      <summary>Возвращает перечислитель <see cref="T:System.Collections.IEnumerator" />, который может использоваться для просмотра строк в модуле чтения данных.</summary>
      <returns>Перечислитель <see cref="T:System.Collections.IEnumerator" />, который может использоваться для просмотра строк в модуле чтения данных.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetFieldType(System.Int32)">
      <summary>Возвращает тип данных заданного столбца.</summary>
      <param name="ordinal">Порядковый номер столбца (от нуля).</param>
      <returns>Тип данных заданного столбца.</returns>
      <exception cref="T:System.InvalidCastException">Указанное приведение недопустимо.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetFieldValue``1(System.Int32)">
      <summary>Синхронно получает значение заданного столбца в виде типа.</summary>
      <param name="ordinal">Получаемый столбец.</param>
      <typeparam name="T">Синхронно получает значение заданного столбца в виде типа.</typeparam>
      <returns>Получаемый столбец.</returns>
      <exception cref="T:System.InvalidOperationException">Соединение разъединяется или закрывается во время извлечения данных.  
-или- 
Объект <see cref="T:System.Data.SqlClient.SqlDataReader" /> закрыт во время извлечения данных.  
-или-
Не существует данных, готовых для чтения (например, первый объект <see cref="M:System.Data.SqlClient.SqlDataReader.Read" /> не был вызван или вернул значение false).  
-или-
Сделана попытка чтения ранее считанного столбца в последовательном режиме.  
-или-
Выполнялась асинхронная операция. Относится ко всем методам Get* при работе в последовательном режиме, так как они могут вызываться при чтении потока.</exception>
      <exception cref="T:System.IndexOutOfRangeException">Попытка чтения столбца, который не существует.</exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="T" /> не соответствует типу, возвращаемому SQL Server, или не может быть приведено.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetFieldValueAsync``1(System.Int32)">
      <summary>Асинхронно получает значение заданного столбца в виде типа.</summary>
      <param name="ordinal">Тип возвращаемого значения.</param>
      <typeparam name="T">Тип возвращаемого значения.</typeparam>
      <returns>Тип возвращаемого значения.</returns>
      <exception cref="T:System.InvalidOperationException">Соединение разъединяется или закрывается во время извлечения данных.  
-или-
Объект <see cref="T:System.Data.Common.DbDataReader" /> закрыт во время извлечения данных.  
-или-
Не существует данных, готовых для чтения (например, первый объект <see cref="M:System.Data.Common.DbDataReader.Read" /> не был вызван или вернул значение false).  
-или-
Сделана попытка чтения ранее считанного столбца в последовательном режиме.  
-или-
Выполнялась асинхронная операция. Относится ко всем методам Get* при работе в последовательном режиме, так как они могут вызываться при чтении потока.</exception>
      <exception cref="T:System.IndexOutOfRangeException">Попытка чтения столбца, который не существует.</exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="T" /> не соответствует типу, возвращаемому источником данных, или не может быть приведено.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetFieldValueAsync``1(System.Int32,System.Threading.CancellationToken)">
      <summary>Асинхронно получает значение заданного столбца в виде типа.</summary>
      <param name="ordinal">Тип возвращаемого значения.</param>
      <param name="cancellationToken">Инструкция отмены, распространяющая уведомление о том, что операции должны быть отменены. Не гарантирует отмену. Параметр <see langword="CancellationToken.None" /> делает этот метод равным методу <see cref="M:System.Data.Common.DbDataReader.GetFieldValueAsync``1(System.Int32)" />. Возвращаемая задача должна быть помечена как отмененная.</param>
      <typeparam name="T">Тип возвращаемого значения.</typeparam>
      <returns>Тип возвращаемого значения.</returns>
      <exception cref="T:System.InvalidOperationException">Соединение разъединяется или закрывается во время извлечения данных.  
-или-
Объект <see cref="T:System.Data.Common.DbDataReader" /> закрыт во время извлечения данных.  
-или-
Не существует данных, готовых для чтения (например, первый объект <see cref="M:System.Data.Common.DbDataReader.Read" /> не был вызван или вернул значение false).  
-или-
Сделана попытка чтения ранее считанного столбца в последовательном режиме.  
-или-
Выполнялась асинхронная операция. Относится ко всем методам Get* при работе в последовательном режиме, так как они могут вызываться при чтении потока.</exception>
      <exception cref="T:System.IndexOutOfRangeException">Попытка чтения столбца, который не существует.</exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="T" /> не соответствует типу, возвращаемому источником данных, или не может быть приведено.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetFloat(System.Int32)">
      <summary>Возвращает значение заданного столбца в виде числа с плавающей запятой одинарной точности.</summary>
      <param name="ordinal">Порядковый номер столбца (от нуля).</param>
      <returns>Значение указанного столбца.</returns>
      <exception cref="T:System.InvalidCastException">Указанное приведение недопустимо.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetGuid(System.Int32)">
      <summary>Возвращает значение заданного столбца в виде глобально-уникального идентификатора GUID.</summary>
      <param name="ordinal">Порядковый номер столбца (от нуля).</param>
      <returns>Значение указанного столбца.</returns>
      <exception cref="T:System.InvalidCastException">Указанное приведение недопустимо.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetInt16(System.Int32)">
      <summary>Получает значение заданного столбца в виде 16-битового целого числа со знаком.</summary>
      <param name="ordinal">Порядковый номер столбца (от нуля).</param>
      <returns>Значение указанного столбца.</returns>
      <exception cref="T:System.InvalidCastException">Указанное приведение недопустимо.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetInt32(System.Int32)">
      <summary>Возвращает значение указанного столбца в виде 32-разрядного целого числа со знаком.</summary>
      <param name="ordinal">Порядковый номер столбца (от нуля).</param>
      <returns>Значение указанного столбца.</returns>
      <exception cref="T:System.InvalidCastException">Указанное приведение недопустимо.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetInt64(System.Int32)">
      <summary>Возвращает значение указанного столбца в виде 64-разрядного целого числа со знаком.</summary>
      <param name="ordinal">Порядковый номер столбца (от нуля).</param>
      <returns>Значение указанного столбца.</returns>
      <exception cref="T:System.InvalidCastException">Указанное приведение недопустимо.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetName(System.Int32)">
      <summary>Возвращает имя столбца, если известен его порядковый номер (от нуля).</summary>
      <param name="ordinal">Порядковый номер столбца (от нуля).</param>
      <returns>Имя заданного столбца.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetOrdinal(System.String)">
      <summary>Возвращает порядковый номер столбца, если известно его имя.</summary>
      <param name="name">Имя столбца.</param>
      <returns>Порядковый номер столбца (от нуля).</returns>
      <exception cref="T:System.IndexOutOfRangeException">Заданное имя недопустимо для имени столбца.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetProviderSpecificFieldType(System.Int32)">
      <summary>Возвращает тип поля заданного столбца, зависящий от поставщика.</summary>
      <param name="ordinal">Порядковый номер столбца (от нуля).</param>
      <returns>Объект <see cref="T:System.Type" />, описывающий тип данных указанного столбца.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetProviderSpecificValue(System.Int32)">
      <summary>Возвращает значение указанного столбца как экземпляр <see cref="T:System.Object" />.</summary>
      <param name="ordinal">Порядковый номер столбца (от нуля).</param>
      <returns>Значение указанного столбца.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetProviderSpecificValues(System.Object[])">
      <summary>Возвращает из коллекции все столбцы атрибутов, зависящие от поставщика, для текущей строки.</summary>
      <param name="values">Массив объектов <see cref="T:System.Object" />, в который необходимо скопировать столбцы атрибутов.</param>
      <returns>Число экземпляров <see cref="T:System.Object" /> в массиве.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetSchemaTable">
      <summary>Возвращает объект <see cref="T:System.Data.DataTable" />, описывающий метаданные столбцов модуля чтения данных <see cref="T:System.Data.Common.DbDataReader" />.</summary>
      <returns>Объект <see cref="T:System.Data.DataTable" />, описывающий метаданные столбцов.</returns>
      <exception cref="T:System.InvalidOperationException">Объект <see cref="T:System.Data.SqlClient.SqlDataReader" /> закрыт.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetStream(System.Int32)">
      <summary>Извлекает данные в виде <see cref="T:System.IO.Stream" />.</summary>
      <param name="ordinal">Извлекает данные в виде <see cref="T:System.IO.Stream" />.</param>
      <returns>Возвращаемый объект.</returns>
      <exception cref="T:System.InvalidOperationException">Соединение разъединяется или закрывается во время извлечения данных.  
-или-
Объект <see cref="T:System.Data.Common.DbDataReader" /> закрыт во время извлечения данных.  
-или-
Не существует данных, готовых для чтения (например, первый объект <see cref="M:System.Data.Common.DbDataReader.Read" /> не был вызван или вернул значение false).  
-или-
Сделана попытка чтения ранее считанного столбца в последовательном режиме.  
-или-
Выполнялась асинхронная операция. Относится ко всем методам Get* при работе в последовательном режиме, так как они могут вызываться при чтении потока.</exception>
      <exception cref="T:System.IndexOutOfRangeException">Попытка чтения столбца, который не существует.</exception>
      <exception cref="T:System.InvalidCastException">Возвращаемый тип не был одним из указанных типов: binary, image, varbinary или udt.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetString(System.Int32)">
      <summary>Возвращает значение указанного столбца как экземпляр <see cref="T:System.String" />.</summary>
      <param name="ordinal">Порядковый номер столбца (от нуля).</param>
      <returns>Значение указанного столбца.</returns>
      <exception cref="T:System.InvalidCastException">Указанное приведение недопустимо.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetTextReader(System.Int32)">
      <summary>Извлекает данные в виде <see cref="T:System.IO.TextReader" />.</summary>
      <param name="ordinal">Извлекает данные в виде <see cref="T:System.IO.TextReader" />.</param>
      <returns>Возвращаемый объект.</returns>
      <exception cref="T:System.InvalidOperationException">Соединение разъединяется или закрывается во время извлечения данных.  
-или-
Объект <see cref="T:System.Data.Common.DbDataReader" /> закрыт во время извлечения данных.  
-или-
Не существует данных, готовых для чтения (например, первый объект <see cref="M:System.Data.Common.DbDataReader.Read" /> не был вызван или вернул значение false).  
-или-
Сделана попытка чтения ранее считанного столбца в последовательном режиме.  
-или-
Выполнялась асинхронная операция. Относится ко всем методам Get* при работе в последовательном режиме, так как они могут вызываться при чтении потока.</exception>
      <exception cref="T:System.IndexOutOfRangeException">Попытка чтения столбца, который не существует.</exception>
      <exception cref="T:System.InvalidCastException">Возвращаемый тип не был одним из указанных типов: char, nchar, ntext, nvarchar, text или varchar.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetValue(System.Int32)">
      <summary>Возвращает значение указанного столбца как экземпляр <see cref="T:System.Object" />.</summary>
      <param name="ordinal">Порядковый номер столбца (от нуля).</param>
      <returns>Значение указанного столбца.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetValues(System.Object[])">
      <summary>Заполняет массив объектов значениями столбцов текущей строки.</summary>
      <param name="values">Массив объектов <see cref="T:System.Object" />, в который необходимо скопировать столбцы атрибутов.</param>
      <returns>Число экземпляров <see cref="T:System.Object" /> в массиве.</returns>
    </member>
    <member name="P:System.Data.Common.DbDataReader.HasRows">
      <summary>Возвращает значение, указывающее на то, что в модуле чтения данных <see cref="T:System.Data.Common.DbDataReader" /> содержится одна или несколько строк.</summary>
      <returns>Значение <see langword="true" />, если объект <see cref="T:System.Data.Common.DbDataReader" /> содержит одну или несколько строк; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbDataReader.IsClosed">
      <summary>Возвращает значение, указывающее, закрыт ли модуль чтения <see cref="T:System.Data.Common.DbDataReader" />.</summary>
      <returns>Значение <see langword="true" />, если объект <see cref="T:System.Data.Common.DbDataReader" /> закрыт; в противном случае — значение <see langword="false" />.</returns>
      <exception cref="T:System.InvalidOperationException">Объект <see cref="T:System.Data.SqlClient.SqlDataReader" /> закрыт.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.IsDBNull(System.Int32)">
      <summary>Возвращает значение, указывающее, содержатся ли в столбце несуществующие или отсутствующие значения.</summary>
      <param name="ordinal">Порядковый номер столбца (от нуля).</param>
      <returns>
        <see langword="true" />, если указанный столбец эквивалентен <see cref="T:System.DBNull" />. В противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.IsDBNullAsync(System.Int32)">
      <summary>Асинхронная версия метода <see cref="M:System.Data.Common.DbDataReader.IsDBNull(System.Int32)" />, который получает значение, указывающее, содержит ли столбец несуществующие или отсутствующие значения.</summary>
      <param name="ordinal">Извлекаемый столбец (отсчитываемый с нуля).</param>
      <returns>Значение <see langword="true" />, если значение указанного столбца эквивалентно <see langword="DBNull" />; в обратном случае — значение <see langword="false" />.</returns>
      <exception cref="T:System.InvalidOperationException">Соединение разъединяется или закрывается во время извлечения данных.  
-или-
Объект <see cref="T:System.Data.Common.DbDataReader" /> закрыт во время извлечения данных.  
-или-
Не существует данных, готовых для чтения (например, первый объект <see cref="M:System.Data.Common.DbDataReader.Read" /> не был вызван или вернул значение false).  
-или-
Попытка чтения ранее считанного столбца в последовательном режиме.  
-или-
Выполнялась асинхронная операция. Относится ко всем методам Get* при работе в последовательном режиме, так как они могут вызываться при чтении потока.</exception>
      <exception cref="T:System.IndexOutOfRangeException">Попытка чтения столбца, который не существует.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.IsDBNullAsync(System.Int32,System.Threading.CancellationToken)">
      <summary>Асинхронная версия метода <see cref="M:System.Data.Common.DbDataReader.IsDBNull(System.Int32)" />, который получает значение, указывающее, содержит ли столбец несуществующие или отсутствующие значения. При необходимости отправляет уведомление о том, что операции следует отменить.</summary>
      <param name="ordinal">Извлекаемый столбец (отсчитываемый с нуля).</param>
      <param name="cancellationToken">Инструкция отмены, распространяющая уведомление о том, что операции должны быть отменены. Не гарантирует отмену. Параметр <see langword="CancellationToken.None" /> делает этот метод равным методу <see cref="M:System.Data.Common.DbDataReader.IsDBNullAsync(System.Int32)" />. Возвращаемая задача должна быть помечена как отмененная.</param>
      <returns>Значение <see langword="true" />, если значение указанного столбца эквивалентно <see langword="DBNull" />; в обратном случае — значение <see langword="false" />.</returns>
      <exception cref="T:System.InvalidOperationException">Соединение разъединяется или закрывается во время извлечения данных.  
-или-
Объект <see cref="T:System.Data.Common.DbDataReader" /> закрыт во время извлечения данных.  
-или-
Не существует данных, готовых для чтения (например, первый объект <see cref="M:System.Data.Common.DbDataReader.Read" /> не был вызван или вернул значение false).  
-или-
Попытка чтения ранее считанного столбца в последовательном режиме.  
-или- 
Выполнялась асинхронная операция. Относится ко всем методам Get* при работе в последовательном режиме, так как они могут вызываться при чтении потока.</exception>
      <exception cref="T:System.IndexOutOfRangeException">Попытка чтения столбца, который не существует.</exception>
    </member>
    <member name="P:System.Data.Common.DbDataReader.Item(System.Int32)">
      <summary>Возвращает значение указанного столбца как экземпляр <see cref="T:System.Object" />.</summary>
      <param name="ordinal">Порядковый номер столбца (от нуля).</param>
      <returns>Значение указанного столбца.</returns>
      <exception cref="T:System.IndexOutOfRangeException">Переданный индекс находился вне диапазона от 0 до значения <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
    </member>
    <member name="P:System.Data.Common.DbDataReader.Item(System.String)">
      <summary>Возвращает значение указанного столбца как экземпляр <see cref="T:System.Object" />.</summary>
      <param name="name">Имя столбца.</param>
      <returns>Значение указанного столбца.</returns>
      <exception cref="T:System.IndexOutOfRangeException">Столбец с указанным именем не найден.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.NextResult">
      <summary>Перемещает модуль чтения данных к следующему результату при чтении результатов из пакета инструкций.</summary>
      <returns>Значение <see langword="true" />, если имеются и другие наборы результатов; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.NextResultAsync">
      <summary>Асинхронная версия метода <see cref="M:System.Data.Common.DbDataReader.NextResult" />, который перемещает средство чтения к следующему результату при чтении результатов из пакета инструкций.  
Вызывает <see cref="M:System.Data.Common.DbDataReader.NextResultAsync(System.Threading.CancellationToken)" /> с CancellationToken.None.</summary>
      <returns>Задача, представляющая асинхронную операцию.</returns>
      <exception cref="T:System.Data.Common.DbException">Ошибка, произошедшая при попытке выполнения текста команды.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.NextResultAsync(System.Threading.CancellationToken)">
      <summary>Это асинхронная версия метода <see cref="M:System.Data.Common.DbDataReader.NextResult" />. Поставщики должны выполнить переопределение с помощью соответствующей реализации. При необходимости можно игнорировать <paramref name="cancellationToken" />.  
Реализация по умолчанию вызывает синхронный метод <see cref="M:System.Data.Common.DbDataReader.NextResult" /> и возвращает завершенную задачу, блокируя вызывающий поток. Реализация по умолчанию возвращает отмененную задачу, если ей передается уже отмененный <paramref name="cancellationToken" />. Исключения, создаваемые <see cref="M:System.Data.Common.DbDataReader.NextResult" />, будут связаны через возвращаемое свойство исключения задачи.  
Другие методы и свойства объекта DbDataReader не должны вызываться, когда возвращаемая задача еще не завершена.</summary>
      <param name="cancellationToken">Инструкция отмены.</param>
      <returns>Задача, представляющая асинхронную операцию.</returns>
      <exception cref="T:System.Data.Common.DbException">Ошибка, произошедшая при попытке выполнения текста команды.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.Read">
      <summary>Перемещает модуль чтения к следующей записи в результирующем наборе.</summary>
      <returns>Значение <see langword="true" />, если имеются другие строки; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.ReadAsync">
      <summary>Асинхронная версия <see cref="M:System.Data.Common.DbDataReader.Read" />, которая перемещает модуль чтения к следующей записи в наборе результатов. Этот метод вызывает метод <see cref="M:System.Data.Common.DbDataReader.ReadAsync(System.Threading.CancellationToken)" /> с CancellationToken.None.</summary>
      <returns>Задача, представляющая асинхронную операцию.</returns>
      <exception cref="T:System.Data.Common.DbException">Ошибка, произошедшая при попытке выполнения текста команды.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.ReadAsync(System.Threading.CancellationToken)">
      <summary>Это асинхронная версия метода <see cref="M:System.Data.Common.DbDataReader.Read" />.  Поставщики должны выполнить переопределение с помощью соответствующей реализации. При необходимости можно игнорировать cancellationToken.  
Реализация по умолчанию вызывает синхронный метод <see cref="M:System.Data.Common.DbDataReader.Read" /> и возвращает завершенную задачу, блокируя вызывающий поток. Реализация по умолчанию возвращает отмененную задачу, если ей передается уже отмененный cancellationToken.  Исключения, создаваемые Read, будут связаны через возвращаемое свойство исключения задачи.  
Не вызывайте другие методы и свойства объекта <see langword="DbDataReader" /> до тех пор, пока возвращаемая задача не будет завершена.</summary>
      <param name="cancellationToken">Инструкция отмены.</param>
      <returns>Задача, представляющая асинхронную операцию.</returns>
      <exception cref="T:System.Data.Common.DbException">Ошибка, произошедшая при попытке выполнения текста команды.</exception>
    </member>
    <member name="P:System.Data.Common.DbDataReader.RecordsAffected">
      <summary>Возвращает число строк, которые были изменены, вставлены или удалены инструкцией SQL.</summary>
      <returns>Число измененных, вставленных или удаленных строк. Значение -1 для операторов SELECT; значение 0, если строки не изменены или при сбое инструкции.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.System#Data#IDataRecord#GetData(System.Int32)">
      <summary>Описание этого члена см. в разделе <see cref="M:System.Data.IDataRecord.GetData(System.Int32)" />.</summary>
      <param name="ordinal">Порядковый номер столбца (от нуля).</param>
      <returns>Экземпляр <see cref="T:System.Data.IDataReader" />, используемый, когда поле указывает на дополнительные удаленные структурированные данные.</returns>
    </member>
    <member name="P:System.Data.Common.DbDataReader.VisibleFieldCount">
      <summary>Возвращает число не скрытых полей в <see cref="T:System.Data.Common.DbDataReader" />.</summary>
      <returns>Число не скрытых полей.</returns>
    </member>
    <member name="T:System.Data.Common.DbDataReaderExtensions">
      <summary>Этот класс содержит методы расширения схемы столбца для <see cref="T:System.Data.Common.DbDataReader" />.</summary>
    </member>
    <member name="M:System.Data.Common.DbDataReaderExtensions.CanGetColumnSchema(System.Data.Common.DbDataReader)">
      <summary>Получает значение, которое указывает, может ли <see cref="T:System.Data.Common.DbDataReader" /> получить схему столбца.</summary>
      <param name="reader">
        <see cref="T:System.Data.Common.DbDataReader" />, который следует проверить на поддержку схемы столбца.</param>
      <returns>Значение <see langword="true" />, если <see cref="T:System.Data.Common.DbDataReader" /> может получить схему столбца; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReaderExtensions.GetColumnSchema(System.Data.Common.DbDataReader)">
      <summary>Получает схему столбца (коллекцию <see cref="T:System.Data.Common.DbColumn" />) для <see cref="T:System.Data.Common.DbDataReader" />.</summary>
      <param name="reader">
        <see cref="T:System.Data.Common.DbDataReader" /> для возврата схемы столбца.</param>
      <returns>Схема столбца (коллекция <see cref="T:System.Data.Common.DbColumn" />) для <see cref="T:System.Data.Common.DbDataReader" />.</returns>
    </member>
    <member name="T:System.Data.Common.DbDataRecord">
      <summary>Реализует <see cref="T:System.Data.IDataRecord" /> и <see cref="T:System.ComponentModel.ICustomTypeDescriptor" /> и обеспечивает поддержку привязки данных для <see cref="T:System.Data.Common.DbEnumerator" />.</summary>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.Common.DbDataRecord" />.</summary>
    </member>
    <member name="P:System.Data.Common.DbDataRecord.FieldCount">
      <summary>Указывает количество полей в текущей записи. Это свойство доступно только для чтения.</summary>
      <returns>Количество полей в текущей записи.</returns>
      <exception cref="T:System.NotSupportedException">Отсутствует подключение к источнику данных для чтения.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetBoolean(System.Int32)">
      <summary>Возвращает значение указанного столбца в виде логического значения.</summary>
      <param name="i">Порядковый номер столбца.</param>
      <returns>
        <see langword="true" />, если логическое значение представлено <see langword="true" />. В противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetByte(System.Int32)">
      <summary>Возвращает значение указанного столбца в виде байта.</summary>
      <param name="i">Порядковый номер столбца.</param>
      <returns>Значение указанного столбца.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
      <summary>Возвращает значение указанного столбца в виде массива байтов.</summary>
      <param name="i">Порядковый номер столбца (от нуля).</param>
      <param name="dataIndex">Индекс в поле, с которого необходимо начать считывание.</param>
      <param name="buffer">Буфер, в который считывается поток байтов.</param>
      <param name="bufferIndex">Индекс для <paramref name="buffer" /> для запуска операции чтения.</param>
      <param name="length">Количество байтов, чтение которых необходимо выполнить.</param>
      <returns>Значение указанного столбца.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetChar(System.Int32)">
      <summary>Возвращает значение указанного столбца в виде символа.</summary>
      <param name="i">Порядковый номер столбца.</param>
      <returns>Значение указанного столбца.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
      <summary>Возвращает значение указанного столбца в виде массива символов.</summary>
      <param name="i">Порядковый номер столбца.</param>
      <param name="dataIndex">Буфер для копирования данных.</param>
      <param name="buffer">Максимальная длина для копирования в буфер.</param>
      <param name="bufferIndex">Точка для начала из буфера.</param>
      <param name="length">Точка для начала из исходных данных.</param>
      <returns>Значение указанного столбца.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetData(System.Int32)">
      <summary>В настоящее время не поддерживается.</summary>
      <param name="i">В настоящее время не поддерживается.</param>
      <returns>В настоящее время не поддерживается.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetDataTypeName(System.Int32)">
      <summary>Возвращает имя типа внутренних данных.</summary>
      <param name="i">Порядковый номер столбца.</param>
      <returns>Имя типа внутренних данных.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetDateTime(System.Int32)">
      <summary>Возвращает значение указанного столбца в виде объекта <see cref="T:System.DateTime" />.</summary>
      <param name="i">Порядковый номер столбца.</param>
      <returns>Значение указанного столбца.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetDbDataReader(System.Int32)">
      <summary>Возвращает объект <see cref="T:System.Data.Common.DbDataReader" /> для запрошенного порядкового номера столбца, который можно переопределить реализацией, зависящей от поставщика.</summary>
      <param name="i">Порядковый номер столбца (от нуля).</param>
      <returns>Объект <see cref="T:System.Data.Common.DbDataReader" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetDecimal(System.Int32)">
      <summary>Возвращает значение указанного столбца в виде объекта <see cref="T:System.Decimal" />.</summary>
      <param name="i">Порядковый номер столбца.</param>
      <returns>Значение указанного столбца.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetDouble(System.Int32)">
      <summary>Возвращает значение заданного столбца в виде числа с плавающей запятой двойной точности.</summary>
      <param name="i">Порядковый номер столбца.</param>
      <returns>Значение указанного столбца.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetFieldType(System.Int32)">
      <summary>Возвращает тип данных объекта (<see cref="T:System.Type" />).</summary>
      <param name="i">Порядковый номер столбца.</param>
      <returns>Тип данных объекта (<see cref="T:System.Type" />).</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetFloat(System.Int32)">
      <summary>Возвращает значение заданного столбца в виде числа с плавающей запятой одинарной точности.</summary>
      <param name="i">Порядковый номер столбца.</param>
      <returns>Значение указанного столбца.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetGuid(System.Int32)">
      <summary>Возвращает значение GUID указанного поля.</summary>
      <param name="i">Индекс поля, которое необходимо вернуть.</param>
      <returns>Значение GUID указанного поля.</returns>
      <exception cref="T:System.IndexOutOfRangeException">Переданный индекс находился вне диапазона от 0 до значения <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetInt16(System.Int32)">
      <summary>Возвращает значение указанного столбца в виде 16-разрядного целого числа со знаком.</summary>
      <param name="i">Порядковый номер столбца.</param>
      <returns>Значение указанного столбца.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetInt32(System.Int32)">
      <summary>Возвращает значение указанного столбца в виде 32-разрядного целого числа со знаком.</summary>
      <param name="i">Порядковый номер столбца.</param>
      <returns>Значение указанного столбца.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetInt64(System.Int32)">
      <summary>Возвращает значение указанного столбца в виде 64-разрядного целого числа со знаком.</summary>
      <param name="i">Порядковый номер столбца.</param>
      <returns>Значение указанного столбца.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetName(System.Int32)">
      <summary>Возвращает имя заданного столбца.</summary>
      <param name="i">Порядковый номер столбца.</param>
      <returns>Имя заданного столбца.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetOrdinal(System.String)">
      <summary>Возвращает порядковый номер столбца, если известно его имя.</summary>
      <param name="name">Имя столбца.</param>
      <returns>Порядковый номер столбца.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetString(System.Int32)">
      <summary>Возвращает значение указанного столбца в виде строки.</summary>
      <param name="i">Порядковый номер столбца.</param>
      <returns>Значение указанного столбца.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetValue(System.Int32)">
      <summary>Возвращает значение указанного столбца в собственном формате.</summary>
      <param name="i">Порядковый номер столбца.</param>
      <returns>Возвращаемое значение.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetValues(System.Object[])">
      <summary>Заполняет массив объектов значениями столбцов текущей записи.</summary>
      <param name="values">Массив <see cref="T:System.Object" />, в который нужно копировать поля атрибутов.</param>
      <returns>Число экземпляров <see cref="T:System.Object" /> в массиве.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.IsDBNull(System.Int32)">
      <summary>Используется для обозначения несуществующих значений.</summary>
      <param name="i">Порядковый номер столбца.</param>
      <returns>
        <see langword="true" />, если указанный столбец эквивалентен <see cref="T:System.DBNull" />. В противном случае — <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbDataRecord.Item(System.Int32)">
      <summary>Указывает значение в заданном столбце в собственном формате с учетом порядкового номера столбца. Это свойство доступно только для чтения.</summary>
      <param name="i">Порядковый номер столбца.</param>
      <returns>Значение указанного столбца в собственном формате.</returns>
    </member>
    <member name="P:System.Data.Common.DbDataRecord.Item(System.String)">
      <summary>Указывает значение в заданном столбце в собственном формате с учетом имени столбца. Это свойство доступно только для чтения.</summary>
      <param name="name">Имя столбца.</param>
      <returns>Значение указанного столбца в собственном формате.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetAttributes">
      <summary>Возвращает коллекцию настраиваемых атрибутов для этого экземпляра компонента.</summary>
      <returns>Коллекция <see cref="T:System.ComponentModel.AttributeCollection" />, которая содержит атрибуты для этого объекта.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetClassName">
      <summary>Возвращает имя класса для этого экземпляра компонента.</summary>
      <returns>Имя класса объекта или <see langword="null" />, если класс не имеет имени.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetComponentName">
      <summary>Возвращает имя этого экземпляра компонента.</summary>
      <returns>Имя объекта или <see langword="null" />, если объект не имеет имени.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetConverter">
      <summary>Возвращает преобразователь типов для этого экземпляра компонента.</summary>
      <returns>Объект <see cref="T:System.ComponentModel.TypeConverter" />, который является преобразователем для данного объекта, или значение <see langword="null" /> в случае отсутствия <see cref="T:System.ComponentModel.TypeConverter" /> для данного объекта.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetDefaultEvent">
      <summary>Возвращает событие по умолчанию для этого экземпляра компонента.</summary>
      <returns>Значение <see cref="T:System.ComponentModel.EventDescriptor" />, представляющее событие по умолчанию для этого объекта, или <see langword="null" />, если этот объект не имеет событий.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetDefaultProperty">
      <summary>Возвращает свойство по умолчанию для этого экземпляра компонента.</summary>
      <returns>Значение <see cref="T:System.ComponentModel.PropertyDescriptor" />, представляющее свойство по умолчанию для данного объекта, или <see langword="null" />, если этот объект не имеет свойств.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetEditor(System.Type)">
      <summary>Возвращает редактор указанного типа для этого экземпляра компонента.</summary>
      <param name="editorBaseType">Объект <see cref="T:System.Type" />, который представляет редактор для этого объекта.</param>
      <returns>Объект <see cref="T:System.Object" /> заданного типа, являющийся редактором для этого объекта, или <see langword="null" />, если редактор не найден.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetEvents">
      <summary>Возвращает события для этого экземпляра компонента.</summary>
      <returns>Объект <see cref="T:System.ComponentModel.EventDescriptorCollection" />, представляющий события для этого экземпляра компонента.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetEvents(System.Attribute[])">
      <summary>Возвращает события для этого экземпляра компонента с помощью заданного массива атрибутов в качестве фильтра.</summary>
      <param name="attributes">Массив типа <see cref="T:System.Attribute" />, используемый в качестве фильтра.</param>
      <returns>Объект <see cref="T:System.ComponentModel.EventDescriptorCollection" />, представляющий отфильтрованные события для этого экземпляра компонента.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetProperties">
      <summary>Возвращает свойства для этого экземпляра компонента.</summary>
      <returns>Объект <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />, представляющий свойства для этого экземпляра компонента.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetProperties(System.Attribute[])">
      <summary>Возвращает свойства для этого экземпляра компонента с помощью массива атрибутов в качестве фильтра.</summary>
      <param name="attributes">Массив типа <see cref="T:System.Attribute" />, используемый в качестве фильтра.</param>
      <returns>Коллекция <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />, представляющая отфильтрованные свойства для этого экземпляра компонента.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetPropertyOwner(System.ComponentModel.PropertyDescriptor)">
      <summary>Возвращает объект, содержащий свойство, описанное указанным дескриптором свойства.</summary>
      <param name="pd">Дескриптор <see cref="T:System.ComponentModel.PropertyDescriptor" />, представляющий свойство, владельца которого требуется найти.</param>
      <returns>Объект <see cref="T:System.Object" />, представляющий владельца заданного свойства.</returns>
    </member>
    <member name="T:System.Data.Common.DbDataSourceEnumerator">
      <summary>Предоставляет механизм для перечисления всех доступных экземпляров серверов баз данных в локальной сети.</summary>
    </member>
    <member name="M:System.Data.Common.DbDataSourceEnumerator.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Data.Common.DbDataSourceEnumerator" />.</summary>
    </member>
    <member name="M:System.Data.Common.DbDataSourceEnumerator.GetDataSources">
      <summary>Получает объект <see cref="T:System.Data.DataTable" />, содержащий сведения обо всех видимых экземплярах сервера, представленных строго типизированным экземпляром этого класса.</summary>
      <returns>Объект <see cref="T:System.Data.DataTable" />, содержащий сведения обо всех видимых экземплярах связанного источника данных.</returns>
    </member>
    <member name="T:System.Data.Common.DbEnumerator">
      <summary>Предоставляет метод <see cref="M:System.Collections.IEnumerable.GetEnumerator" />, который поддерживает простую итерацию по коллекции с помощью поставщика данных .NET Framework.</summary>
    </member>
    <member name="M:System.Data.Common.DbEnumerator.#ctor(System.Data.Common.DbDataReader)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.Common.DbEnumerator" /> указанным модулем чтения данных.</summary>
      <param name="reader">DataReader, по которому выполняется итерация.</param>
    </member>
    <member name="M:System.Data.Common.DbEnumerator.#ctor(System.Data.Common.DbDataReader,System.Boolean)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.Common.DbEnumerator" /> класса, используя указанный модуль чтения, и указывает, следует ли автоматически закрывать модуль чтения после итераций по данным.</summary>
      <param name="reader">DataReader, по которому выполняется итерация.</param>
      <param name="closeReader">Значение <see langword="true" />, чтобы автоматически закрывать объект DataReader после выполнения итераций по данным; в противном случае — значение <see langword="false" />.</param>
    </member>
    <member name="M:System.Data.Common.DbEnumerator.#ctor(System.Data.IDataReader)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.Common.DbEnumerator" /> с использованием указанного объекта <see langword="DataReader" />.</summary>
      <param name="reader">
        <see langword="DataReader" />, по которому выполняется итерация.</param>
    </member>
    <member name="M:System.Data.Common.DbEnumerator.#ctor(System.Data.IDataReader,System.Boolean)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.Common.DbEnumerator" />, используя указанный модуль <see langword="DataReader" />, и указывает, следует ли автоматически закрывать <see langword="DataReader" /> после итераций по данным.</summary>
      <param name="reader">
        <see langword="DataReader" />, по которому выполняется итерация.</param>
      <param name="closeReader">Значение <see langword="true" />, чтобы автоматически закрывать объект <see langword="false" /> после выполнения итераций по данным; в противном случае — значение <see langword="DataReader" />.</param>
    </member>
    <member name="P:System.Data.Common.DbEnumerator.Current">
      <summary>Получает текущий элемент в коллекции.</summary>
      <returns>Текущий элемент в коллекции.</returns>
      <exception cref="T:System.InvalidOperationException">Перечислитель размещается перед первым элементом семейства или после его последнего элемента.</exception>
    </member>
    <member name="M:System.Data.Common.DbEnumerator.MoveNext">
      <summary>Перемещает перечислитель к следующему элементу коллекции.</summary>
      <returns>Значение <see langword="true" />, если перечислитель был успешно перемещен к следующему элементу; значение <see langword="false" />, если перечислитель достиг конца коллекции.</returns>
      <exception cref="T:System.InvalidOperationException">После создания перечислителя семейство было изменено.</exception>
    </member>
    <member name="M:System.Data.Common.DbEnumerator.Reset">
      <summary>Устанавливает перечислитель в его начальное положение, т. е. перед первым элементом коллекции.</summary>
      <exception cref="T:System.InvalidOperationException">После создания перечислителя семейство было изменено.</exception>
    </member>
    <member name="T:System.Data.Common.DbException">
      <summary>Базовый класс для всех исключений, вызываемых источником данных.</summary>
    </member>
    <member name="M:System.Data.Common.DbException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.Common.DbException" />.</summary>
    </member>
    <member name="M:System.Data.Common.DbException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.Common.DbException" /> с указанными сведениями о сериализации и контекстом.</summary>
      <param name="info">Объект <see cref="T:System.Runtime.Serialization.SerializationInfo" />, хранящий сериализованные данные объекта, относящиеся к выдаваемому исключению.</param>
      <param name="context">Объект <see cref="T:System.Runtime.Serialization.StreamingContext" />, содержащий контекстные сведения об источнике или назначении.</param>
    </member>
    <member name="M:System.Data.Common.DbException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.Common.DbException" /> указанным сообщением об ошибке.</summary>
      <param name="message">Сообщение, отображаемое для этого исключения.</param>
    </member>
    <member name="M:System.Data.Common.DbException.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.Common.DbException" /> с указанным сообщением об ошибке и ссылкой на внутреннее исключение, которое стало причиной данного исключения.</summary>
      <param name="message">Строка сообщения об ошибке.</param>
      <param name="innerException">Ссылка на внутреннее исключение.</param>
    </member>
    <member name="M:System.Data.Common.DbException.#ctor(System.String,System.Int32)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.Common.DbException" /> с указанным сообщением об ошибке и кодом ошибки.</summary>
      <param name="message">Сообщение об ошибке, указывающее причину создания исключения.</param>
      <param name="errorCode">Код ошибки для исключения.</param>
    </member>
    <member name="T:System.Data.Common.DbMetaDataCollectionNames">
      <summary>Предоставляет список констант для хорошо известных коллекций MetaDataCollections: DataSourceInformation, DataTypes, MetaDataCollections, ReservedWords и Restrictions.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation">
      <summary>Константа для использования с методом <see cref="M:System.Data.Common.DbConnection.GetSchema" />, представляющим коллекцию DataSourceInformation.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataCollectionNames.DataTypes">
      <summary>Константа для использования с методом <see cref="M:System.Data.Common.DbConnection.GetSchema" />, представляющим коллекцию DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataCollectionNames.MetaDataCollections">
      <summary>Константа для использования с методом <see cref="M:System.Data.Common.DbConnection.GetSchema" />, представляющим коллекцию MetaDataCollections.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataCollectionNames.ReservedWords">
      <summary>Константа для использования с методом <see cref="M:System.Data.Common.DbConnection.GetSchema" />, представляющим коллекцию ReservedWords.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataCollectionNames.Restrictions">
      <summary>Константа для использования с методом <see cref="M:System.Data.Common.DbConnection.GetSchema" />, представляющим коллекцию Restrictions.</summary>
    </member>
    <member name="T:System.Data.Common.DbMetaDataColumnNames">
      <summary>Предоставляет статические значения, которые используются для имен столбцов в объектах MetaDataCollection, содержащихся в <see cref="T:System.Data.DataTable" />. Объект <see cref="T:System.Data.DataTable" /> создан с помощью метода GetSchema.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.CollectionName">
      <summary>Используется методом GetSchema для создания столбца CollectionName в коллекции DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.ColumnSize">
      <summary>Используется методом GetSchema для создания столбца ColumnSize в коллекции DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.CompositeIdentifierSeparatorPattern">
      <summary>Используется методом GetSchema для создания столбца CompositeIdentifierSeparatorPattern в коллекции DataSourceInformation.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.CreateFormat">
      <summary>Используется методом GetSchema для создания столбца CreateFormat в коллекции DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.CreateParameters">
      <summary>Используется методом GetSchema для создания столбца CreateParameters в коллекции DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.DataSourceProductName">
      <summary>Используется методом GetSchema для создания столбца DataSourceProductName в коллекции DataSourceInformation.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.DataSourceProductVersion">
      <summary>Используется методом GetSchema для создания столбца DataSourceProductVersion в коллекции DataSourceInformation.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.DataSourceProductVersionNormalized">
      <summary>Используется методом GetSchema для создания столбца DataSourceProductVersionNormalized в коллекции DataSourceInformation.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.DataType">
      <summary>Используется методом GetSchema для создания столбца DataType в коллекции DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.GroupByBehavior">
      <summary>Используется методом GetSchema для создания столбца GroupByBehavior в коллекции DataSourceInformation.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IdentifierCase">
      <summary>Используется методом GetSchema для создания столбца IdentifierCase в коллекции DataSourceInformation.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IdentifierPattern">
      <summary>Используется методом GetSchema для создания столбца IdentifierPattern в коллекции DataSourceInformation.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IsAutoIncrementable">
      <summary>Используется методом GetSchema для создания столбца IsAutoIncrementable в коллекции DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IsBestMatch">
      <summary>Используется методом GetSchema для создания столбца IsBestMatch в коллекции DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IsCaseSensitive">
      <summary>Используется методом GetSchema для создания столбца IsCaseSensitive в коллекции DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IsConcurrencyType">
      <summary>Используется методом GetSchema для создания столбца IsConcurrencyType в коллекции DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IsFixedLength">
      <summary>Используется методом GetSchema для создания столбца IsFixedLengthв коллекции DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IsFixedPrecisionScale">
      <summary>Используется методом GetSchema для создания столбца IsFixedPrecisionScale в коллекции DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IsLiteralSupported">
      <summary>Используется методом GetSchema для создания столбца IsLiteralSupported в коллекции DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IsLong">
      <summary>Используется методом GetSchema для создания столбца IsLong в коллекции DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IsNullable">
      <summary>Используется методом GetSchema для создания столбца IsNullable в коллекции DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IsSearchable">
      <summary>Используется методом GetSchema для создания столбца IsSearchable в коллекции DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IsSearchableWithLike">
      <summary>Используется методом GetSchema для создания столбца IsSearchableWithLike в коллекции DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IsUnsigned">
      <summary>Используется методом GetSchema для создания столбца IsUnsigned в коллекции DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.LiteralPrefix">
      <summary>Используется методом GetSchema для создания столбца LiteralPrefix в коллекции DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.LiteralSuffix">
      <summary>Используется методом GetSchema для создания столбца LiteralSuffix в коллекции DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.MaximumScale">
      <summary>Используется методом GetSchema для создания столбца MaximumScale в коллекции DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.MinimumScale">
      <summary>Используется методом GetSchema для создания столбца MinimumScale в коллекции DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.NumberOfIdentifierParts">
      <summary>Используется методом GetSchema для создания столбца NumberOfIdentifierParts в коллекции MetaDataCollections.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.NumberOfRestrictions">
      <summary>Используется методом GetSchema для создания столбца NumberOfRestrictions в коллекции MetaDataCollections.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.OrderByColumnsInSelect">
      <summary>Используется методом GetSchema для создания столбца OrderByColumnsInSelect в коллекции DataSourceInformation.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat">
      <summary>Используется методом GetSchema для создания столбца ParameterMarkerFormat в коллекции DataSourceInformation.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerPattern">
      <summary>Используется методом GetSchema для создания столбца ParameterMarkerPattern в коллекции DataSourceInformation.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength">
      <summary>Используется методом GetSchema для создания столбца ParameterNameMaxLength в коллекции DataSourceInformation.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern">
      <summary>Используется методом GetSchema для создания столбца ParameterNamePattern в коллекции DataSourceInformation.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.ProviderDbType">
      <summary>Используется методом GetSchema для создания столбца ProviderDbType в коллекции DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.QuotedIdentifierCase">
      <summary>Используется методом GetSchema для создания столбца QuotedIdentifierCase в коллекции DataSourceInformation.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.QuotedIdentifierPattern">
      <summary>Используется методом GetSchema для создания столбца QuotedIdentifierPattern в коллекции DataSourceInformation.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.ReservedWord">
      <summary>Используется методом GetSchema для создания столбца ReservedWord в коллекции ReservedWords.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.StatementSeparatorPattern">
      <summary>Используется методом GetSchema для создания столбца StatementSeparatorPattern в коллекции DataSourceInformation.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.StringLiteralPattern">
      <summary>Используется методом GetSchema для создания столбца StringLiteralPattern в коллекции DataSourceInformation.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.SupportedJoinOperators">
      <summary>Используется методом GetSchema для создания столбца SupportedJoinOperators в коллекции DataSourceInformation.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.TypeName">
      <summary>Используется методом GetSchema для создания столбца TypeName в коллекции DataTypes.</summary>
    </member>
    <member name="T:System.Data.Common.DbParameter">
      <summary>Представляет параметр для объекта <see cref="T:System.Data.Common.DbComm*******" /> и (необязательно) его сопоставление со столбцом <see cref="T:System.Data.DataSet" />. Дополнительные сведения о параметрах см. в разделе Настройка параметров и типов данных параметров.</summary>
    </member>
    <member name="M:System.Data.Common.DbParameter.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.Common.DbParameter" />.</summary>
    </member>
    <member name="P:System.Data.Common.DbParameter.DbType">
      <summary>Возвращает или устанавливает тип <see cref="T:System.Data.DbType" /> параметра.</summary>
      <returns>Одно из значений <see cref="T:System.Data.DbType" />. Значение по умолчанию — <see cref="F:System.Data.DbType.String" />.</returns>
      <exception cref="T:System.ArgumentException">Для свойства не задано допустимое значение <see cref="T:System.Data.DbType" />.</exception>
    </member>
    <member name="P:System.Data.Common.DbParameter.Direction">
      <summary>Возвращает или задает значение, указывающее, является ли параметр только входным, только выходным, двунаправленным или параметром, возвращаемым хранимой процедурой.</summary>
      <returns>Одно из значений <see cref="T:System.Data.ParameterDirection" />. Значение по умолчанию — <see langword="Input" />.</returns>
      <exception cref="T:System.ArgumentException">Для свойства не задано допустимое значение <see cref="T:System.Data.ParameterDirection" />.</exception>
    </member>
    <member name="P:System.Data.Common.DbParameter.IsNullable">
      <summary>Возвращает или задает значение, указывающее, принимает ли этот параметр значения NULL.</summary>
      <returns>Значение <see langword="true" />, если допускаются значения NULL. В противном случае — значение <see langword="false" />. Значение по умолчанию — <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbParameter.ParameterName">
      <summary>Возвращает или задает имя таблицы для объекта <see cref="T:System.Data.Common.DbParameter" />.</summary>
      <returns>Имя <see cref="T:System.Data.Common.DbParameter" />. Значение по умолчанию — пустая строка ("").</returns>
    </member>
    <member name="P:System.Data.Common.DbParameter.Precision">
      <summary>Возвращает или задает максимальное число разрядов, используемых для представления свойства <see cref="P:System.Data.Common.DbParameter.Value" />.</summary>
      <returns>Максимальное число разрядов, используемых для представления свойства <see cref="P:System.Data.Common.DbParameter.Value" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbParameter.ResetDbType">
      <summary>Сбрасывает свойство DbType к его исходным параметрам.</summary>
    </member>
    <member name="P:System.Data.Common.DbParameter.Scale">
      <summary>Возвращает или задает число десятичных разрядов, до которых вычисляется значение <see cref="P:System.Data.Common.DbParameter.Value" />.</summary>
      <returns>Число десятичных разрядов, до которых вычисляется значение <see cref="P:System.Data.Common.DbParameter.Value" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbParameter.Size">
      <summary>Возвращает или задает максимальную длину данных (в байтах) в столбце.</summary>
      <returns>Максимальная длина данных (в байтах) в столбце. Значение по умолчанию определяется исходя из значения параметра.</returns>
    </member>
    <member name="P:System.Data.Common.DbParameter.SourceColumn">
      <summary>Возвращает или задает имя исходного столбца, сопоставленного <see cref="T:System.Data.DataSet" /> и используемого для загрузки или возвращения значения <see cref="P:System.Data.Common.DbParameter.Value" />.</summary>
      <returns>Имя исходного столбца, сопоставленного <see cref="T:System.Data.DataSet" />. Значение по умолчанию - пустая строка.</returns>
    </member>
    <member name="P:System.Data.Common.DbParameter.SourceColumnNullMapping">
      <summary>Возвращает или задает значение, показывающее, допускает ли исходный столбец значение NULL. Это позволяет <see cref="T:System.Data.Common.DbComm*******Builder" /> правильно создавать инструкции Update для столбцов со значением NULL.</summary>
      <returns>Значение <see langword="true" />, если исходный столбец допускает значение NULL; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbParameter.SourceVersion">
      <summary>Возвращает или задает значение <see cref="T:System.Data.DataRowVersion" />, используемое при загрузке <see cref="P:System.Data.Common.DbParameter.Value" />.</summary>
      <returns>Одно из значений <see cref="T:System.Data.DataRowVersion" />. Значение по умолчанию — <see langword="Current" />.</returns>
      <exception cref="T:System.ArgumentException">Свойству не задано одно из значений <see cref="T:System.Data.DataRowVersion" />.</exception>
    </member>
    <member name="P:System.Data.Common.DbParameter.System#Data#IDbDataParameter#Precision">
      <summary>Указывает точность числовых параметров.</summary>
      <returns>Максимальное число разрядов, используемых для представления свойства <see langword="Value" /> объекта <see langword="Parameter" /> поставщика данных. Значение по умолчанию — 0. Оно указывает, что точность значения <see langword="Value" /> задает поставщик данных.</returns>
    </member>
    <member name="P:System.Data.Common.DbParameter.System#Data#IDbDataParameter#Scale">
      <summary>Описание этого члена см. в разделе <see cref="P:System.Data.IDbDataParameter.Scale" />.</summary>
      <returns>Число десятичных разрядов, до которых вычисляется значение <see cref="P:System.Data.OleDb.OleDbParameter.Value" />. Значение по умолчанию — 0.</returns>
    </member>
    <member name="P:System.Data.Common.DbParameter.Value">
      <summary>Возвращает или задает значение параметра.</summary>
      <returns>Объект <see cref="T:System.Object" />, который является значением параметра. Значение по умолчанию — null.</returns>
    </member>
    <member name="T:System.Data.Common.DbParameterCollection">
      <summary>Базовый класс для коллекции параметров, относящихся к <see cref="T:System.Data.Common.DbComm*******" />.</summary>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.Common.DbParameterCollection" />.</summary>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.Add(System.Object)">
      <summary>Добавляет указанный объект <see cref="T:System.Data.Common.DbParameter" /> в коллекцию <see cref="T:System.Data.Common.DbParameterCollection" />.</summary>
      <param name="value">
        <see cref="P:System.Data.Common.DbParameter.Value" /> из <see cref="T:System.Data.Common.DbParameter" /> для добавления в коллекцию.</param>
      <returns>Индекс объекта <see cref="T:System.Data.Common.DbParameter" /> в коллекции.</returns>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.AddRange(System.Array)">
      <summary>Добавляет массив элементов с заданными значениями в <see cref="T:System.Data.Common.DbParameterCollection" />.</summary>
      <param name="values">Массив значений типа <see cref="T:System.Data.Common.DbParameter" />, добавляемый в коллекцию.</param>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.Clear">
      <summary>Удаляет все значения <see cref="T:System.Data.Common.DbParameter" /> из <see cref="T:System.Data.Common.DbParameterCollection" />.</summary>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.Contains(System.Object)">
      <summary>Указывает, содержится ли в коллекции объект <see cref="T:System.Data.Common.DbParameter" /> с указанным <see cref="P:System.Data.Common.DbParameter.Value" />.</summary>
      <param name="value">Значение <see cref="P:System.Data.Common.DbParameter.Value" /> параметра <see cref="T:System.Data.Common.DbParameter" />, которое нужно найти в коллекции.</param>
      <returns>Значение <see langword="true" />, если элемент <see cref="T:System.Data.Common.DbParameter" /> присутствует в коллекции, в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.Contains(System.String)">
      <summary>Указывает, содержится ли в коллекции объект <see cref="T:System.Data.Common.DbParameter" /> с указанным именем.</summary>
      <param name="value">Имя параметра <see cref="T:System.Data.Common.DbParameter" />, которое следует искать в коллекции.</param>
      <returns>Значение <see langword="true" />, если элемент <see cref="T:System.Data.Common.DbParameter" /> присутствует в коллекции, в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.CopyTo(System.Array,System.Int32)">
      <summary>Копирует массив экземпляров в коллекцию, начиная с указанного индекса.</summary>
      <param name="array">Массив элементов для копирования в коллекцию.</param>
      <param name="index">Индекс в коллекции для копирования элементов.</param>
    </member>
    <member name="P:System.Data.Common.DbParameterCollection.Count">
      <summary>Указывает количество элементов в коллекции.</summary>
      <returns>Количество элементов в коллекции.</returns>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.GetEnumerator">
      <summary>Предоставляет метод <see cref="M:System.Collections.IEnumerable.GetEnumerator" />, который поддерживает простую итерацию по коллекции с помощью поставщика данных .NET Framework.</summary>
      <returns>Объект <see cref="T:System.Collections.IEnumerator" />, который может использоваться для итерации элементов коллекции.</returns>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.GetParameter(System.Int32)">
      <summary>Возвращает объект <see cref="T:System.Data.Common.DbParameter" /> по указанному индексу в коллекции.</summary>
      <param name="index">Индекс объекта <see cref="T:System.Data.Common.DbParameter" /> в коллекции.</param>
      <returns>Объект <see cref="T:System.Data.Common.DbParameter" /> по указанному индексу в коллекции.</returns>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.GetParameter(System.String)">
      <summary>Возвращает объект <see cref="T:System.Data.Common.DbParameter" /> с заданным именем.</summary>
      <param name="parameterName">Имя <see cref="T:System.Data.Common.DbParameter" /> в коллекции.</param>
      <returns>Объект <see cref="T:System.Data.Common.DbParameter" /> с заданным именем.</returns>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.IndexOf(System.Object)">
      <summary>Возвращает индекс указанного объекта <see cref="T:System.Data.Common.DbParameter" />.</summary>
      <param name="value">Объект <see cref="T:System.Data.Common.DbParameter" /> в коллекции.</param>
      <returns>Индекс указанного объекта <see cref="T:System.Data.Common.DbParameter" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.IndexOf(System.String)">
      <summary>Возвращает индекс объекта <see cref="T:System.Data.Common.DbParameter" /> с заданным именем.</summary>
      <param name="parameterName">Имя объекта <see cref="T:System.Data.Common.DbParameter" /> в коллекции.</param>
      <returns>Индекс объекта <see cref="T:System.Data.Common.DbParameter" /> с заданным именем.</returns>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.Insert(System.Int32,System.Object)">
      <summary>Вставляет указанный индекс объекта <see cref="T:System.Data.Common.DbParameter" /> с указанным именем в коллекцию по указанному индексу.</summary>
      <param name="index">Индекс, по которому нужно вставить объект <see cref="T:System.Data.Common.DbParameter" />.</param>
      <param name="value">Объект <see cref="T:System.Data.Common.DbParameter" />, который нужно вставить в коллекцию.</param>
    </member>
    <member name="P:System.Data.Common.DbParameterCollection.IsFixedSize">
      <summary>Указывает, имеет ли коллекция фиксированный размер.</summary>
      <returns>Значение <see langword="true" />, если коллекция имеет фиксированный размер; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbParameterCollection.IsReadOnly">
      <summary>Указывает, является ли коллекция доступной только для чтения.</summary>
      <returns>Значение <see langword="true" />, если коллекция доступна только для чтения; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbParameterCollection.IsSynchronized">
      <summary>Указывает, является ли коллекция синхронизированной.</summary>
      <returns>Значение <see langword="true" />, если коллекция синхронизирована; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbParameterCollection.Item(System.Int32)">
      <summary>Возвращает или задает объект <see cref="T:System.Data.Common.DbParameter" /> с заданным индексом.</summary>
      <param name="index">Отсчитываемый с нуля индекс параметра.</param>
      <returns>Параметр <see cref="T:System.Data.Common.DbParameter" /> по указанному индексу.</returns>
      <exception cref="T:System.IndexOutOfRangeException">Указанный индекс не существует.</exception>
    </member>
    <member name="P:System.Data.Common.DbParameterCollection.Item(System.String)">
      <summary>Возвращает или задает объект <see cref="T:System.Data.Common.DbParameter" /> с заданным именем.</summary>
      <param name="parameterName">Имя параметра.</param>
      <returns>Параметр <see cref="T:System.Data.Common.DbParameter" /> с указанным именем.</returns>
      <exception cref="T:System.IndexOutOfRangeException">Указанный индекс не существует.</exception>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.Remove(System.Object)">
      <summary>Удаляет указанный объект <see cref="T:System.Data.Common.DbParameter" /> из коллекции.</summary>
      <param name="value">Удаляемый объект <see cref="T:System.Data.Common.DbParameter" />.</param>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.RemoveAt(System.Int32)">
      <summary>Удаляет объект <see cref="T:System.Data.Common.DbParameter" /> в указанной позиции из коллекции.</summary>
      <param name="index">Индекс, где находится объект <see cref="T:System.Data.Common.DbParameter" />.</param>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.RemoveAt(System.String)">
      <summary>Удаляет объект <see cref="T:System.Data.Common.DbParameter" /> с указанным именем из коллекции.</summary>
      <param name="parameterName">Имя удаляемого объекта <see cref="T:System.Data.Common.DbParameter" />.</param>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.SetParameter(System.Int32,System.Data.Common.DbParameter)">
      <summary>Задает новое значение для объекта <see cref="T:System.Data.Common.DbParameter" /> по указанному индексу.</summary>
      <param name="index">Индекс, где находится объект <see cref="T:System.Data.Common.DbParameter" />.</param>
      <param name="value">Новое значение <see cref="T:System.Data.Common.DbParameter" />.</param>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.SetParameter(System.String,System.Data.Common.DbParameter)">
      <summary>Назначает новое значение объекту <see cref="T:System.Data.Common.DbParameter" /> с указанным именем.</summary>
      <param name="parameterName">Имя объекта <see cref="T:System.Data.Common.DbParameter" /> в коллекции.</param>
      <param name="value">Новое значение <see cref="T:System.Data.Common.DbParameter" />.</param>
    </member>
    <member name="P:System.Data.Common.DbParameterCollection.SyncRoot">
      <summary>Указывает объект <see cref="T:System.Object" />, который следует использовать для синхронизации доступа к коллекции.</summary>
      <returns>Объект <see cref="T:System.Object" />, который следует использовать для синхронизации доступа к коллекции <see cref="T:System.Data.Common.DbParameterCollection" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbParameterCollection.System#Collections#IList#Item(System.Int32)">
      <summary>Возвращает или задает элемент по указанному индексу.</summary>
      <param name="index">Отсчитываемый от нуля индекс элемента, который требуется возвратить или задать.</param>
      <returns>Элемент, расположенный по указанному индексу.</returns>
    </member>
    <member name="P:System.Data.Common.DbParameterCollection.System#Data#IDataParameterCollection#Item(System.String)">
      <summary>Возвращает или задает параметр по указанному индексу.</summary>
      <param name="parameterName">Имя получаемого параметра.</param>
      <returns>Элемент <see cref="T:System.Object" />, расположенный по указанному индексу.</returns>
    </member>
    <member name="T:System.Data.Common.DbProviderConfigurationH*******ler">
      <summary>Этот класс может использоваться любым поставщиком для поддержки раздела конфигурации для конкретного поставщика.</summary>
    </member>
    <member name="M:System.Data.Common.DbProviderConfigurationH*******ler.#ctor">
      <summary>Этот класс может использоваться любым поставщиком для поддержки раздела конфигурации для конкретного поставщика.</summary>
    </member>
    <member name="M:System.Data.Common.DbProviderConfigurationH*******ler.Create(System.Object,System.Object,System.Xml.XmlNode)">
      <summary>Создает новое выражение <see cref="T:System.Collections.Specialized.NameValueCollection" />.</summary>
      <param name="parent">Данный тип поддерживает платформу .NET Framework и не должен вызываться непосредственно из вашего кода.</param>
      <param name="configContext">Данный тип поддерживает платформу .NET Framework и не должен вызываться непосредственно из вашего кода.</param>
      <param name="section">Данный тип поддерживает платформу .NET Framework и не должен вызываться непосредственно из вашего кода.</param>
      <returns>Новое выражение.</returns>
    </member>
    <member name="T:System.Data.Common.DbProviderFactories">
      <summary>Представляет набор статических методов для создания одного или нескольких экземпляров классов <see cref="T:System.Data.Common.DbProviderFactory" />.</summary>
    </member>
    <member name="M:System.Data.Common.DbProviderFactories.GetFactory(System.Data.Common.DbConnection)">
      <summary>Возвращает экземпляр класса <see cref="T:System.Data.Common.DbProviderFactory" />.</summary>
      <param name="connection">Используемое подключение.</param>
      <returns>Экземпляр класса <see cref="T:System.Data.Common.DbProviderFactory" /> для указанного подключения.</returns>
    </member>
    <member name="M:System.Data.Common.DbProviderFactories.GetFactory(System.Data.DataRow)">
      <summary>Возвращает экземпляр класса <see cref="T:System.Data.Common.DbProviderFactory" />.</summary>
      <param name="providerRow">Объект <see cref="T:System.Data.DataRow" />, содержащий сведения о конфигурации поставщика.</param>
      <returns>Экземпляр класса <see cref="T:System.Data.Common.DbProviderFactory" /> для указанного объекта <see cref="T:System.Data.DataRow" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbProviderFactories.GetFactory(System.String)">
      <summary>Возвращает экземпляр класса <see cref="T:System.Data.Common.DbProviderFactory" />.</summary>
      <param name="providerInvariantName">Инвариантное имя поставщика.</param>
      <returns>Экземпляр класса <see cref="T:System.Data.Common.DbProviderFactory" /> для указанного имени поставщика.</returns>
    </member>
    <member name="M:System.Data.Common.DbProviderFactories.GetFactoryClasses">
      <summary>Возвращает объект <see cref="T:System.Data.DataTable" />, содержащий сведения обо всех установленных поставщиках, реализующих класс <see cref="T:System.Data.Common.DbProviderFactory" />.</summary>
      <returns>Объект <see cref="T:System.Data.DataTable" />, содержащий объекты <see cref="T:System.Data.DataRow" />, которые содержат следующие данные: 
  Порядковый номер столбца 
  Имя столбца 
  Описание 
  0 
  Name  
  Понятное имя поставщика данных.  
  1 
  Описание  
  Понятное описание поставщика данных.  
  2 
  InvariantName  
  Имя, которое может быть использовано программным образом для ссылки на поставщика данных.  
  3 
  AssemblyQualifiedName  
  Полное имя класса фабрики, содержащее достаточно сведений для создания экземпляра объекта.</returns>
    </member>
    <member name="T:System.Data.Common.DbProviderFactoriesConfigurationH*******ler">
      <summary>Данный тип поддерживает платформу .NET Framework и не должен вызываться непосредственно из вашего кода.</summary>
    </member>
    <member name="M:System.Data.Common.DbProviderFactoriesConfigurationH*******ler.#ctor">
      <summary>Данный тип поддерживает платформу .NET Framework и не должен вызываться непосредственно из вашего кода.</summary>
    </member>
    <member name="M:System.Data.Common.DbProviderFactoriesConfigurationH*******ler.Create(System.Object,System.Object,System.Xml.XmlNode)">
      <summary>Данный тип поддерживает платформу .NET Framework и не должен вызываться непосредственно из вашего кода.</summary>
      <param name="parent">Данный тип поддерживает платформу .NET Framework и не должен вызываться непосредственно из вашего кода.</param>
      <param name="configContext">Данный тип поддерживает платформу .NET Framework и не должен вызываться непосредственно из вашего кода.</param>
      <param name="section">Данный тип поддерживает платформу .NET Framework и не должен вызываться непосредственно из вашего кода.</param>
      <returns>Данный тип поддерживает платформу .NET Framework и не должен вызываться непосредственно из вашего кода.</returns>
    </member>
    <member name="T:System.Data.Common.DbProviderFactory">
      <summary>Представляет набор методов для создания экземпляров реализации поставщика для классов источника данных.</summary>
    </member>
    <member name="M:System.Data.Common.DbProviderFactory.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.Common.DbProviderFactory" />.</summary>
    </member>
    <member name="P:System.Data.Common.DbProviderFactory.CanCreateDataSourceEnumerator">
      <summary>Указывает, поддерживает ли объект <see cref="T:System.Data.Common.DbProviderFactory" /> класс <see cref="T:System.Data.Common.DbDataSourceEnumerator" />.</summary>
      <returns>Значение <see langword="true" />, если экземпляр класса <see cref="T:System.Data.Common.DbProviderFactory" /> поддерживает класс <see cref="T:System.Data.Common.DbDataSourceEnumerator" />; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbProviderFactory.CreateComm*******">
      <summary>Возвращает новый экземпляр класса поставщика, который реализует класс <see cref="T:System.Data.Common.DbComm*******" />.</summary>
      <returns>Новый экземпляр класса <see cref="T:System.Data.Common.DbComm*******" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbProviderFactory.CreateComm*******Builder">
      <summary>Возвращает новый экземпляр класса поставщика, который реализует класс <see cref="T:System.Data.Common.DbComm*******Builder" />.</summary>
      <returns>Новый экземпляр класса <see cref="T:System.Data.Common.DbComm*******Builder" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbProviderFactory.CreateConnection">
      <summary>Возвращает новый экземпляр класса поставщика, который реализует класс <see cref="T:System.Data.Common.DbConnection" />.</summary>
      <returns>Новый экземпляр класса <see cref="T:System.Data.Common.DbConnection" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbProviderFactory.CreateConnectionStringBuilder">
      <summary>Возвращает новый экземпляр класса поставщика, который реализует класс <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</summary>
      <returns>Новый экземпляр класса <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbProviderFactory.CreateDataAdapter">
      <summary>Возвращает новый экземпляр класса поставщика, который реализует класс <see cref="T:System.Data.Common.DbDataAdapter" />.</summary>
      <returns>Новый экземпляр класса <see cref="T:System.Data.Common.DbDataAdapter" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbProviderFactory.CreateDataSourceEnumerator">
      <summary>Возвращает новый экземпляр класса поставщика, который реализует класс <see cref="T:System.Data.Common.DbDataSourceEnumerator" />.</summary>
      <returns>Новый экземпляр класса <see cref="T:System.Data.Common.DbDataSourceEnumerator" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbProviderFactory.CreateParameter">
      <summary>Возвращает новый экземпляр класса поставщика, который реализует класс <see cref="T:System.Data.Common.DbParameter" />.</summary>
      <returns>Новый экземпляр класса <see cref="T:System.Data.Common.DbParameter" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbProviderFactory.CreatePermission(System.Security.Permissions.PermissionState)">
      <summary>Возвращает новый экземпляр класса поставщика, который реализует версию класса <see cref="T:System.Security.CodeAccessPermission" /> данного поставщика.</summary>
      <param name="state">Одно из значений перечисления <see cref="T:System.Security.Permissions.PermissionState" />.</param>
      <returns>Объект <see cref="T:System.Security.CodeAccessPermission" /> для указанного значения <see cref="T:System.Security.Permissions.PermissionState" />.</returns>
    </member>
    <member name="T:System.Data.Common.DbProviderSpecificTypePropertyAttribute">
      <summary>Указывает, какое зависящее от поставщика свойство в строго типизированных классах параметров должно использоваться при настройке типа, зависящего от поставщика.</summary>
    </member>
    <member name="M:System.Data.Common.DbProviderSpecificTypePropertyAttribute.#ctor(System.Boolean)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.Common.DbProviderSpecificTypePropertyAttribute" />.</summary>
      <param name="isProviderSpecificTypeProperty">Указывает, является ли это свойство свойством, зависящим от поставщика.</param>
    </member>
    <member name="P:System.Data.Common.DbProviderSpecificTypePropertyAttribute.IsProviderSpecificTypeProperty">
      <summary>Указывает, имеет ли это атрибутивное свойство тип, зависящий от поставщика.</summary>
      <returns>Значение <see langword="true" />, если свойство, к которому применяется этот атрибут, является свойством типа, зависящего от поставщика; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="T:System.Data.Common.DbTransaction">
      <summary>Базовый класс для транзакции.</summary>
    </member>
    <member name="M:System.Data.Common.DbTransaction.#ctor">
      <summary>Инициализирует новый объект <see cref="T:System.Data.Common.DbTransaction" />.</summary>
    </member>
    <member name="M:System.Data.Common.DbTransaction.Commit">
      <summary>Фиксирует транзакцию базы данных.</summary>
    </member>
    <member name="P:System.Data.Common.DbTransaction.Connection">
      <summary>Задает объект <see cref="T:System.Data.Common.DbConnection" />, связанный с транзакцией.</summary>
      <returns>Объект <see cref="T:System.Data.Common.DbConnection" />, связанный с транзакцией.</returns>
    </member>
    <member name="P:System.Data.Common.DbTransaction.DbConnection">
      <summary>Задает объект <see cref="T:System.Data.Common.DbConnection" />, связанный с транзакцией.</summary>
      <returns>Объект <see cref="T:System.Data.Common.DbConnection" />, связанный с транзакцией.</returns>
    </member>
    <member name="M:System.Data.Common.DbTransaction.Dispose">
      <summary>Освобождает неуправляемые ресурсы, используемые <see cref="T:System.Data.Common.DbTransaction" />.</summary>
    </member>
    <member name="M:System.Data.Common.DbTransaction.Dispose(System.Boolean)">
      <summary>Освобождает неуправляемые ресурсы, используемые объектом <see cref="T:System.Data.Common.DbTransaction" />, а при необходимости освобождает также управляемые ресурсы.</summary>
      <param name="disposing">При значении <see langword="true" /> этот метод освобождает все ресурсы, используемые любыми управляемыми объектами, на которые ссылается этот объект <see cref="T:System.Data.Common.DbTransaction" />.</param>
    </member>
    <member name="P:System.Data.Common.DbTransaction.IsolationLevel">
      <summary>Указывает <see cref="T:System.Data.IsolationLevel" /> для этой транзакции.</summary>
      <returns>
        <see cref="T:System.Data.IsolationLevel" /> для этой транзакции.</returns>
    </member>
    <member name="M:System.Data.Common.DbTransaction.Rollback">
      <summary>Откатывает транзакцию из состояния ожидания.</summary>
    </member>
    <member name="P:System.Data.Common.DbTransaction.System#Data#IDbTransaction#Connection">
      <summary>Возвращает объект <see cref="T:System.Data.Common.DbConnection" />, связанный с транзакцией, или пустую ссылку, если транзакция больше не является допустимой.</summary>
      <returns>Объект <see cref="T:System.Data.Common.DbConnection" />, связанный с транзакцией.</returns>
    </member>
    <member name="T:System.Data.Common.GroupByBehavior">
      <summary>Задает связь между столбцами в предложении GROUP BY и неагрегированными столбцами в списке выбора оператора SELECT.</summary>
    </member>
    <member name="F:System.Data.Common.GroupByBehavior.ExactMatch">
      <summary>Предложение GROUP BY должно содержать все неагрегированные столбцы в списке выбора и не должно содержать другие столбцы не в списке выбора.</summary>
    </member>
    <member name="F:System.Data.Common.GroupByBehavior.MustContainAll">
      <summary>Предложение GROUP BY должно содержать все неагрегированные столбцы в списке выбора и может содержать другие столбцы не в списке выбора.</summary>
    </member>
    <member name="F:System.Data.Common.GroupByBehavior.NotSupported">
      <summary>Предложение GROUP BY не поддерживается.</summary>
    </member>
    <member name="F:System.Data.Common.GroupByBehavior.Unknown">
      <summary>Неизвестно, поддерживается ли предложение GROUP BY.</summary>
    </member>
    <member name="F:System.Data.Common.GroupByBehavior.Unrelated">
      <summary>Отсутствует связь между столбцами в предложении GROUP BY и неагрегированными столбцами в списке SELECT. Может выполняться группировка по любому столбцу.</summary>
    </member>
    <member name="T:System.Data.Common.IDbColumnSchemaGenerator">
      <summary>Создает схему столбца.</summary>
    </member>
    <member name="M:System.Data.Common.IDbColumnSchemaGenerator.GetColumnSchema">
      <summary>Получает схему столбца (коллекцию <see cref="T:System.Data.Common.DbColumn" />).</summary>
      <returns>Схема столбца (коллекция <see cref="T:System.Data.Common.DbColumn" />).</returns>
    </member>
    <member name="T:System.Data.Common.IdentifierCase">
      <summary>Указывает, каким образом идентификаторы воспринимаются источником данных при выполнении поиска в системном каталоге.</summary>
    </member>
    <member name="F:System.Data.Common.IdentifierCase.Insensitive">
      <summary>Источник данных не учитывает регистр идентификатора при выполнении поиска в системном каталоге. Идентификаторы "ab" и "AB" будут совпадать.</summary>
    </member>
    <member name="F:System.Data.Common.IdentifierCase.Sensitive">
      <summary>Источник данных учитывает регистр идентификатора при выполнении поиска в системном каталоге. Идентификаторы "ab" и "AB" не будут совпадать.</summary>
    </member>
    <member name="F:System.Data.Common.IdentifierCase.Unknown">
      <summary>Источником данных используются неоднозначные правила, касающиеся учета регистра идентификатора, и поэтому эти сведения распознать не удается.</summary>
    </member>
    <member name="T:System.Data.Common.RowUpdatedEventArgs">
      <summary>Предоставляет данные для события <see langword="RowUpdated" /> поставщика данных .NET Framework.</summary>
    </member>
    <member name="M:System.Data.Common.RowUpdatedEventArgs.#ctor(System.Data.DataRow,System.Data.IDbComm*******,System.Data.StatementType,System.Data.Common.DataTableMapping)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.Common.RowUpdatedEventArgs" />.</summary>
      <param name="dataRow">Объект <see cref="T:System.Data.DataRow" /> отправлен с помощью метода <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</param>
      <param name="comm*******">Команда <see cref="T:System.Data.IDbComm*******" />, выполняемая при вызове метода <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</param>
      <param name="statementType">Тип исполняемого оператора SQL.</param>
      <param name="tableMapping">Объект <see cref="T:System.Data.Common.DataTableMapping" /> отправлен с помощью метода <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</param>
    </member>
    <member name="P:System.Data.Common.RowUpdatedEventArgs.Comm*******">
      <summary>Получает объект <see cref="T:System.Data.IDbComm*******" />, выполняемый при вызове метода <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</summary>
      <returns>Команда <see cref="T:System.Data.IDbComm*******" />, выполняемая при вызове метода <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</returns>
    </member>
    <member name="M:System.Data.Common.RowUpdatedEventArgs.CopyToRows(System.Data.DataRow[])">
      <summary>Копирует ссылки на измененные строки в предоставленный массив.</summary>
      <param name="array">Массив объектов <see cref="T:System.Data.DataRow" />, в который выполняется копирование.</param>
    </member>
    <member name="M:System.Data.Common.RowUpdatedEventArgs.CopyToRows(System.Data.DataRow[],System.Int32)">
      <summary>Копирует ссылки на измененные строки в предоставленный массив.</summary>
      <param name="array">Массив объектов <see cref="T:System.Data.DataRow" />, в который выполняется копирование.</param>
      <param name="arrayIndex">Индекс в массиве, с которого начинается копирование.</param>
    </member>
    <member name="P:System.Data.Common.RowUpdatedEventArgs.Errors">
      <summary>Получает ошибки, создаваемые поставщиком данных .NET Framework при выполнении свойства <see cref="P:System.Data.Common.RowUpdatedEventArgs.Comm*******" />.</summary>
      <returns>Ошибки, создаваемые поставщиком данных .NET Framework при выполнении свойства <see cref="P:System.Data.Common.RowUpdatedEventArgs.Comm*******" />.</returns>
    </member>
    <member name="P:System.Data.Common.RowUpdatedEventArgs.RecordsAffected">
      <summary>Возвращает число строк, которые были изменены, вставлены или удалены инструкцией SQL.</summary>
      <returns>Число измененных, вставленных или удаленных строк. Значение 0, если строки не были затронуты или инструкция завершилась ошибкой. Значение -1 для инструкций SELECT.</returns>
    </member>
    <member name="P:System.Data.Common.RowUpdatedEventArgs.Row">
      <summary>Получает объект <see cref="T:System.Data.DataRow" />, отправленный с помощью метода <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</summary>
      <returns>Объект <see cref="T:System.Data.DataRow" /> отправлен с помощью метода <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</returns>
    </member>
    <member name="P:System.Data.Common.RowUpdatedEventArgs.RowCount">
      <summary>Получает количество строк, обработанных в пакете обновленных записей.</summary>
      <returns>Объект <see langword="int" />, указывающий количество обработанных строк.</returns>
    </member>
    <member name="P:System.Data.Common.RowUpdatedEventArgs.StatementType">
      <summary>Получает тип исполняемого оператора SQL.</summary>
      <returns>Тип исполняемого оператора SQL.</returns>
    </member>
    <member name="P:System.Data.Common.RowUpdatedEventArgs.Status">
      <summary>Получает <see cref="T:System.Data.UpdateStatus" /> свойства <see cref="P:System.Data.Common.RowUpdatedEventArgs.Comm*******" />.</summary>
      <returns>Одно из значений перечисления <see cref="T:System.Data.UpdateStatus" />. Значение по умолчанию — <see langword="Continue" />.</returns>
    </member>
    <member name="P:System.Data.Common.RowUpdatedEventArgs.TableMapping">
      <summary>Получает объект <see cref="T:System.Data.Common.DataTableMapping" />, отправленный с помощью метода <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</summary>
      <returns>Объект <see cref="T:System.Data.Common.DataTableMapping" /> отправлен с помощью метода <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</returns>
    </member>
    <member name="T:System.Data.Common.RowUpdatingEventArgs">
      <summary>Предоставляет данные для события RowUpdating поставщика данных .NET Framework.</summary>
    </member>
    <member name="M:System.Data.Common.RowUpdatingEventArgs.#ctor(System.Data.DataRow,System.Data.IDbComm*******,System.Data.StatementType,System.Data.Common.DataTableMapping)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.Common.RowUpdatingEventArgs" />.</summary>
      <param name="dataRow">Объект <see cref="T:System.Data.DataRow" /> для метода <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</param>
      <param name="comm*******">Команда <see cref="T:System.Data.IDbComm*******" />, выполняемая при вызове метода <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</param>
      <param name="statementType">Тип инструкции SQL для выполнения.</param>
      <param name="tableMapping">Объект <see cref="T:System.Data.Common.DataTableMapping" />, отправляемый с помощью метода <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</param>
    </member>
    <member name="P:System.Data.Common.RowUpdatingEventArgs.BaseComm*******">
      <summary>Возвращает или задает объект <see cref="T:System.Data.IDbComm*******" /> для экземпляра этого класса.</summary>
      <returns>Интерфейс <see cref="T:System.Data.IDbComm*******" /> для выполнения при применении метода <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</returns>
    </member>
    <member name="P:System.Data.Common.RowUpdatingEventArgs.Comm*******">
      <summary>Возвращает интерфейс <see cref="T:System.Data.IDbComm*******" /> для выполнения во время операции <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</summary>
      <returns>Интерфейс <see cref="T:System.Data.IDbComm*******" /> для выполнения при применении метода <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</returns>
    </member>
    <member name="P:System.Data.Common.RowUpdatingEventArgs.Errors">
      <summary>Возвращает ошибки, создаваемые поставщиком данных .NET Framework при выполнении <see cref="P:System.Data.Common.RowUpdatedEventArgs.Comm*******" />.</summary>
      <returns>Ошибки, создаваемые поставщиком данных .NET Framework при выполнении свойства <see cref="P:System.Data.Common.RowUpdatedEventArgs.Comm*******" />.</returns>
    </member>
    <member name="P:System.Data.Common.RowUpdatingEventArgs.Row">
      <summary>Возвращает объект <see cref="T:System.Data.DataRow" />, который будет отправлен на сервер в качестве части операции вставки, обновления или удаления.</summary>
      <returns>Объект <see cref="T:System.Data.DataRow" />, отправляемый с помощью метода <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</returns>
    </member>
    <member name="P:System.Data.Common.RowUpdatingEventArgs.StatementType">
      <summary>Получает тип инструкции SQL для выполнения.</summary>
      <returns>Тип инструкции SQL для выполнения.</returns>
    </member>
    <member name="P:System.Data.Common.RowUpdatingEventArgs.Status">
      <summary>Возвращает или задает значение <see cref="T:System.Data.UpdateStatus" /> свойства <see cref="P:System.Data.Common.RowUpdatedEventArgs.Comm*******" />.</summary>
      <returns>Одно из значений <see cref="T:System.Data.UpdateStatus" />. Значение по умолчанию: <see langword="Continue" />.</returns>
    </member>
    <member name="P:System.Data.Common.RowUpdatingEventArgs.TableMapping">
      <summary>Возвращает объект <see cref="T:System.Data.Common.DataTableMapping" /> для отправки с помощью метода <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</summary>
      <returns>Объект <see cref="T:System.Data.Common.DataTableMapping" />, отправляемый с помощью метода <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</returns>
    </member>
    <member name="T:System.Data.Common.SchemaTableColumn">
      <summary>Описывает метаданные столбца схемы для таблицы базы данных.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.AllowDBNull">
      <summary>Указывает, является ли допустимым значение <see langword="DBNull" />.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.BaseColumnName">
      <summary>Указывает имя столбца в таблице схемы.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.BaseSchemaName">
      <summary>Указывает имя схемы в таблице схемы.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.BaseTableName">
      <summary>Указывает имя таблицы в таблице схемы.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.ColumnName">
      <summary>Указывает имя столбца в таблице схемы.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.ColumnOrdinal">
      <summary>Указывает порядковый номер столбца.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.ColumnSize">
      <summary>Указывает размер столбца.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.DataType">
      <summary>Указывает тип данных в столбце.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.IsAliased">
      <summary>Указывает, является ли этот столбец псевдонимом.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.IsExpression">
      <summary>Указывает, является ли этот столбец выражением.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.IsKey">
      <summary>Указывает, является ли этот столбец ключом для таблицы.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.IsLong">
      <summary>Указывает, содержит ли этот столбец большие объемы данных.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.IsUnique">
      <summary>Указывает, применяется ли уникальное ограничение к этому столбцу.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.NonVersionedProviderType">
      <summary>Указывает зависящий от поставщика тип данных в столбце, которому не была присвоена версия.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.NumericPrecision">
      <summary>Указывает точность данных в столбце, если данные являются числовыми.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.NumericScale">
      <summary>Указывает масштаб данных в столбце, если данные являются числовыми.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.ProviderType">
      <summary>Указывает зависящий от поставщика тип данных в столбце.</summary>
    </member>
    <member name="T:System.Data.Common.SchemaTableOptionalColumn">
      <summary>Описывает дополнительные метаданные столбца схемы для таблицы базы данных.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.AutoIncrementSeed">
      <summary>Указывает значение, при котором назначается ряд для новых столбцов идентификаторов.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.AutoIncrementStep">
      <summary>Указывает увеличение между значениями в столбце идентификаторов.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.BaseCatalogName">
      <summary>Имя каталога, связанного с результатами последнего запроса.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.BaseColumnNamespace">
      <summary>Пространство имен столбца.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.BaseServerName">
      <summary>Имя сервера столбца.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.BaseTableNamespace">
      <summary>Пространство имен для таблицы, содержащей данный столбец.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.ColumnMapping">
      <summary>Указывает сопоставление для столбца.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.DefaultValue">
      <summary>Значение по умолчанию для столбца.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.Expression">
      <summary>Выражение, используемое для вычисления столбца.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.IsAutoIncrement">
      <summary>Указывает, увеличиваются ли автоматически значения столбца в столбце.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.IsHidden">
      <summary>Указывает, является ли этот столбец скрытым.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.IsReadOnly">
      <summary>Указывает, является ли этот столбец доступным только для чтения.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.IsRowVersion">
      <summary>Указывает, содержит ли данный столбец сведения о версии строки.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.ProviderSpecificDataType">
      <summary>Указывает зависящий от поставщика тип данных в столбце.</summary>
    </member>
    <member name="T:System.Data.Common.SupportedJoinOperators">
      <summary>Указывает, какие типы операторов соединения Transact-SQL поддерживаются источником данных.</summary>
    </member>
    <member name="F:System.Data.Common.SupportedJoinOperators.FullOuter">
      <summary>Источник данных поддерживает полные внешние соединения.</summary>
    </member>
    <member name="F:System.Data.Common.SupportedJoinOperators.Inner">
      <summary>Источник данных поддерживает внутренние соединения.</summary>
    </member>
    <member name="F:System.Data.Common.SupportedJoinOperators.LeftOuter">
      <summary>Источник данных поддерживает левые внешние соединения.</summary>
    </member>
    <member name="F:System.Data.Common.SupportedJoinOperators.None">
      <summary>Источник данных не поддерживает запросы соединений.</summary>
    </member>
    <member name="F:System.Data.Common.SupportedJoinOperators.RightOuter">
      <summary>Источник данных поддерживает правые внешние соединения.</summary>
    </member>
    <member name="T:System.Data.ConflictOption">
      <summary>Указывает, каким образом конфликтующие изменения в источнике данных будут выявляться и разрешаться.</summary>
    </member>
    <member name="F:System.Data.ConflictOption.CompareAllSearchableValues">
      <summary>Операторы обновления и удаления будут включать все столбцы, по которым может осуществляться поиск, из таблицы в предложении WHERE. Это эквивалентно заданию <see langword="CompareAllValuesUpdate" /> | <see langword="CompareAllValuesDelete" />.</summary>
    </member>
    <member name="F:System.Data.ConflictOption.CompareRowVersion">
      <summary>Если в таблице имеются столбцы Timestamp, они используются в предложении WHERE для всех созданных операторов обновления. Это эквивалентно заданию <see langword="CompareRowVersionUpdate" /> | <see langword="CompareRowVersionDelete" />.</summary>
    </member>
    <member name="F:System.Data.ConflictOption.OverwriteChanges">
      <summary>Все операторы обновления и удаления включают только столбцы свойства <see cref="P:System.Data.DataTable.PrimaryKey" /> в предложении WHERE. Если не определено ни одно значение свойства <see cref="P:System.Data.DataTable.PrimaryKey" />, все столбцы, по которым может осуществляться поиск, включаются в предложение WHERE. Это эквивалентно <see langword="OverwriteChangesUpdate" /> | <see langword="OverwriteChangesDelete" />.</summary>
    </member>
    <member name="T:System.Data.ConnectionState">
      <summary>Описывает текущее состояние подключения к источнику данных.</summary>
    </member>
    <member name="F:System.Data.ConnectionState.Broken">
      <summary>Подключение к источнику данных разорвано. Это может произойти только после открытия подключения. Подключение в этом режиме может быть закрыто, а затем повторно открыто. (Это значение зарезервировано для будущих версий продукта.)</summary>
    </member>
    <member name="F:System.Data.ConnectionState.Closed">
      <summary>Соединение закрыто.</summary>
    </member>
    <member name="F:System.Data.ConnectionState.Connecting">
      <summary>Объект подключения подключается к источнику данных.</summary>
    </member>
    <member name="F:System.Data.ConnectionState.Executing">
      <summary>Объект подключения выполняет команду. (Это значение зарезервировано для будущих версий продукта.)</summary>
    </member>
    <member name="F:System.Data.ConnectionState.Fetching">
      <summary>Объект подключения получает данные. (Это значение зарезервировано для будущих версий продукта.)</summary>
    </member>
    <member name="F:System.Data.ConnectionState.Open">
      <summary>Подключение открыто.</summary>
    </member>
    <member name="T:System.Data.Constraint">
      <summary>Представляет ограничение, которое может быть применено к одному или более объектам <see cref="T:System.Data.DataColumn" />.</summary>
    </member>
    <member name="M:System.Data.Constraint.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.Constraint" />.</summary>
    </member>
    <member name="P:System.Data.Constraint._DataSet">
      <summary>Возвращает объект <see cref="T:System.Data.DataSet" />, которому принадлежит данное ограничение.</summary>
      <returns>Объект <see cref="T:System.Data.DataSet" />, которому принадлежит данное ограничение.</returns>
    </member>
    <member name="M:System.Data.Constraint.CheckStateForProperty">
      <summary>Возвращает объект <see cref="T:System.Data.DataSet" />, которому принадлежит данное ограничение.</summary>
    </member>
    <member name="P:System.Data.Constraint.ConstraintName">
      <summary>Имя ограничения в <see cref="T:System.Data.ConstraintCollection" />.</summary>
      <returns>Имя <see cref="T:System.Data.Constraint" />.</returns>
      <exception cref="T:System.ArgumentException">Именем <see cref="T:System.Data.Constraint" /> является значение NULL или пустая строка.</exception>
      <exception cref="T:System.Data.DuplicateNameException">Коллекция <see cref="T:System.Data.ConstraintCollection" /> уже содержит <see cref="T:System.Data.Constraint" /> с тем же именем (сравнение выполняется без учета регистра.).</exception>
    </member>
    <member name="P:System.Data.Constraint.ExtendedProperties">
      <summary>Возвращает коллекцию определенных пользователем свойств ограничений.</summary>
      <returns>Коллекция <see cref="T:System.Data.PropertyCollection" /> пользовательских сведений.</returns>
    </member>
    <member name="M:System.Data.Constraint.SetDataSet(System.Data.DataSet)">
      <summary>Задает объект <see cref="T:System.Data.DataSet" /> ограничения.</summary>
      <param name="dataSet">Объект <see cref="T:System.Data.DataSet" />, которому принадлежит данное ограничение.</param>
    </member>
    <member name="P:System.Data.Constraint.Table">
      <summary>Возвращает объект <see cref="T:System.Data.DataTable" />, к которому применяется ограничение.</summary>
      <returns>Объект <see cref="T:System.Data.DataTable" />, к которому применяется ограничение.</returns>
    </member>
    <member name="M:System.Data.Constraint.ToString">
      <summary>Возвращает свойство <see cref="P:System.Data.Constraint.ConstraintName" />, если оно существует, в виде строки.</summary>
      <returns>Строковое значение свойства <see cref="P:System.Data.Constraint.ConstraintName" />.</returns>
    </member>
    <member name="T:System.Data.ConstraintCollection">
      <summary>Представляет коллекцию ограничений для <see cref="T:System.Data.DataTable" />.</summary>
    </member>
    <member name="M:System.Data.ConstraintCollection.Add(System.Data.Constraint)">
      <summary>Добавляет указанный объект <see cref="T:System.Data.Constraint" /> в коллекцию.</summary>
      <param name="constraint">Добавляемый объект <see langword="Constraint" />.</param>
      <exception cref="T:System.ArgumentNullException">Аргумент <paramref name="constraint" /> имеет значение NULL.</exception>
      <exception cref="T:System.ArgumentException">Ограничение уже относится к этой или другой коллекции.</exception>
      <exception cref="T:System.Data.DuplicateNameException">Коллекция уже содержит ограничение с таким именем. (Сравнение выполняется без учета регистра.)</exception>
    </member>
    <member name="M:System.Data.ConstraintCollection.Add(System.String,System.Data.DataColumn,System.Boolean)">
      <summary>Создает новое ограничение <see cref="T:System.Data.UniqueConstraint" /> с указанным именем, объект <see cref="T:System.Data.DataColumn" />, и значение, показывающее, является ли столбец первичным ключом, и добавляет его в коллекцию.</summary>
      <param name="name">Имя <see langword="UniqueConstraint" />.</param>
      <param name="column">Объект <see cref="T:System.Data.DataColumn" />, к которому применяется ограничение.</param>
      <param name="primaryKey">Указывает, должен ли столбец являться первичным ключом. Если значение <see langword="true" />, столбец будет являться столбцом первичного ключа.</param>
      <returns>Новый объект <see langword="UniqueConstraint" />.</returns>
      <exception cref="T:System.ArgumentException">Ограничение уже принадлежит к этой коллекции.  
-или- 
Ограничение уже принадлежит к другой коллекции.</exception>
      <exception cref="T:System.Data.DuplicateNameException">Коллекция уже содержит ограничение с указанным именем. (Сравнение выполняется без учета регистра.)</exception>
    </member>
    <member name="M:System.Data.ConstraintCollection.Add(System.String,System.Data.DataColumn,System.Data.DataColumn)">
      <summary>Создает новое ограничение <see cref="T:System.Data.ForeignKeyConstraint" /> с указанным именем, родительский и дочерний столбцы и добавляет ограничение к коллекции.</summary>
      <param name="name">Имя <see cref="T:System.Data.ForeignKeyConstraint" />.</param>
      <param name="primaryKeyColumn">Первичный ключ или родительский объект <see cref="T:System.Data.DataColumn" />.</param>
      <param name="foreignKeyColumn">Внешний ключ или дочерний объект <see cref="T:System.Data.DataColumn" />.</param>
      <returns>Новый объект <see langword="ForeignKeyConstraint" />.</returns>
    </member>
    <member name="M:System.Data.ConstraintCollection.Add(System.String,System.Data.DataColumn[],System.Boolean)">
      <summary>Создает новое ограничение <see cref="T:System.Data.UniqueConstraint" /> с указанным именем, массивом объектов <see cref="T:System.Data.DataColumn" /> и значением, показывающим, является ли столбец первичным ключом, и добавляет его в коллекцию.</summary>
      <param name="name">Имя <see cref="T:System.Data.UniqueConstraint" />.</param>
      <param name="columns">Массив объектов <see cref="T:System.Data.DataColumn" />, для которого применяются ограничения.</param>
      <param name="primaryKey">Указывает, должен ли столбец являться первичным ключом. Если значение <see langword="true" />, столбец будет являться столбцом первичного ключа.</param>
      <returns>Новый объект <see langword="UniqueConstraint" />.</returns>
      <exception cref="T:System.ArgumentException">Ограничение уже принадлежит к этой коллекции.  
-или- 
Ограничение уже принадлежит к другой коллекции.</exception>
      <exception cref="T:System.Data.DuplicateNameException">Коллекция уже содержит ограничение с указанным именем. (Сравнение выполняется без учета регистра.)</exception>
    </member>
    <member name="M:System.Data.ConstraintCollection.Add(System.String,System.Data.DataColumn[],System.Data.DataColumn[])">
      <summary>Создает новое ограничение <see cref="T:System.Data.ForeignKeyConstraint" /> с указанным массивом родительских и дочерних столбцов и добавляет это ограничение к коллекции.</summary>
      <param name="name">Имя <see cref="T:System.Data.ForeignKeyConstraint" />.</param>
      <param name="primaryKeyColumns">Массив объектов <see cref="T:System.Data.DataColumn" />, являющихся столбцом первичного ключа или родительским столбцом.</param>
      <param name="foreignKeyColumns">Массив объектов <see cref="T:System.Data.DataColumn" />, являющихся столбцом внешнего ключа или дочерним столбцом.</param>
      <returns>Новый объект <see langword="ForeignKeyConstraint" />.</returns>
    </member>
    <member name="M:System.Data.ConstraintCollection.AddRange(System.Data.Constraint[])">
      <summary>Копирует элементы указанного массива <see cref="T:System.Data.ConstraintCollection" /> в конец коллекции.</summary>
      <param name="constraints">Массив объектов <see cref="T:System.Data.ConstraintCollection" />, добавляемый в коллекцию.</param>
    </member>
    <member name="M:System.Data.ConstraintCollection.CanRemove(System.Data.Constraint)">
      <summary>Указывает, может ли быть удалено ограничение <see cref="T:System.Data.Constraint" />.</summary>
      <param name="constraint">Ограничение <see cref="T:System.Data.Constraint" />, которое требуется проверить на возможность удаления из коллекции.</param>
      <returns>Значение <see langword="true" />, если ограничение <see cref="T:System.Data.Constraint" /> может быть удалено из коллекции; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.ConstraintCollection.Clear">
      <summary>Очищает коллекцию от объектов <see cref="T:System.Data.Constraint" />.</summary>
    </member>
    <member name="E:System.Data.ConstraintCollection.CollectionChanged">
      <summary>Происходит всякий раз после изменения коллекции <see cref="T:System.Data.ConstraintCollection" /> в результате добавления или удаления объектов <see cref="T:System.Data.Constraint" />.</summary>
    </member>
    <member name="M:System.Data.ConstraintCollection.Contains(System.String)">
      <summary>Указывает, существует ли в коллекции объект <see cref="T:System.Data.Constraint" />, указанный по имени.</summary>
      <param name="name">Свойство <see cref="P:System.Data.Constraint.ConstraintName" /> ограничения.</param>
      <returns>Значение <see langword="true" />, если коллекция содержит указанное ограничение; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.ConstraintCollection.CopyTo(System.Data.Constraint[],System.Int32)">
      <summary>Копирует объекты коллекции в одномерный экземпляр класса <see cref="T:System.Array" />, начиная с указанного индекса.</summary>
      <param name="array">Одномерный объект <see cref="T:System.Array" />, являющийся целевым для значений, скопированных из коллекции.</param>
      <param name="index">Индекс в массиве, с которого требуется начать вставку.</param>
    </member>
    <member name="M:System.Data.ConstraintCollection.IndexOf(System.Data.Constraint)">
      <summary>Получает индекс заданного ограничения <see cref="T:System.Data.Constraint" />.</summary>
      <param name="constraint">Объект <see cref="T:System.Data.Constraint" />, который требуется найти.</param>
      <returns>Индекс (с нуля) ограничения <see cref="T:System.Data.Constraint" />, если оно существует в коллекции; в противном случае -1.</returns>
    </member>
    <member name="M:System.Data.ConstraintCollection.IndexOf(System.String)">
      <summary>Получает индекс ограничения <see cref="T:System.Data.Constraint" />, заданного по имени.</summary>
      <param name="constraintName">Имя <see cref="T:System.Data.Constraint" />.</param>
      <returns>Индекс ограничения <see cref="T:System.Data.Constraint" />, если оно существует в коллекции; в противном случае -1.</returns>
    </member>
    <member name="P:System.Data.ConstraintCollection.Item(System.Int32)">
      <summary>Получает объект <see cref="T:System.Data.Constraint" /> из коллекции по указанному индексу.</summary>
      <param name="index">Индекс ограничения, которое требуется вернуть.</param>
      <returns>Параметр <see cref="T:System.Data.Constraint" /> по указанному индексу.</returns>
      <exception cref="T:System.IndexOutOfRangeException">Значение индекса больше числа элементов в коллекции.</exception>
    </member>
    <member name="P:System.Data.ConstraintCollection.Item(System.String)">
      <summary>Получает объект <see cref="T:System.Data.Constraint" /> из коллекции с указанным именем.</summary>
      <param name="name">Свойство <see cref="P:System.Data.Constraint.ConstraintName" /> ограничения, которое требуется возвратить.</param>
      <returns>Ограничение <see cref="T:System.Data.Constraint" /> с указанным именем; в противном случае — значение null, если ограничение <see cref="T:System.Data.Constraint" /> не существует.</returns>
    </member>
    <member name="M:System.Data.ConstraintCollection.Remove(System.Data.Constraint)">
      <summary>Удаляет указанный объект <see cref="T:System.Data.Constraint" /> из коллекции.</summary>
      <param name="constraint">Объект <see cref="T:System.Data.Constraint" /> для удаления.</param>
      <exception cref="T:System.ArgumentNullException">Аргумент <paramref name="constraint" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Ограничение не принадлежит коллекции.</exception>
    </member>
    <member name="M:System.Data.ConstraintCollection.Remove(System.String)">
      <summary>Удаляет из коллекции ограничение <see cref="T:System.Data.Constraint" />, указанное по имени.</summary>
      <param name="name">Имя удаляемого объекта <see cref="T:System.Data.Constraint" />.</param>
    </member>
    <member name="M:System.Data.ConstraintCollection.RemoveAt(System.Int32)">
      <summary>Удаляет объект <see cref="T:System.Data.Constraint" /> по указанному индексу из коллекции.</summary>
      <param name="index">Индекс удаляемого объекта <see cref="T:System.Data.Constraint" />.</param>
      <exception cref="T:System.IndexOutOfRangeException">Коллекция не имеет ограничения по этому индексу.</exception>
    </member>
    <member name="T:System.Data.ConstraintException">
      <summary>Представляет исключение, возникающее при попытке выполнения действия, нарушающего ограничение.</summary>
    </member>
    <member name="M:System.Data.ConstraintException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.ConstraintException" />. Это конструктор по умолчанию.</summary>
    </member>
    <member name="M:System.Data.ConstraintException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.ConstraintException" /> с использованием указанного контекста потока и сериализации.</summary>
      <param name="info">Данные, необходимые для сериализации или десериализации объекта.</param>
      <param name="context">Описание источника и назначения заданного сериализованного потока.</param>
    </member>
    <member name="M:System.Data.ConstraintException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.ConstraintException" /> с заданной строкой.</summary>
      <param name="s">Строка, отображаемая при возникновении исключения.</param>
    </member>
    <member name="M:System.Data.ConstraintException.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.ConstraintException" /> с использованием заданной строки и внутреннего исключения.</summary>
      <param name="message">Строка, отображаемая при возникновении исключения.</param>
      <param name="innerException">Возвращает экземпляр класса <see langword="Exception" />, который вызвал текущее исключение.</param>
    </member>
    <member name="T:System.Data.DataColumn">
      <summary>Представляет схему столбца в <see cref="T:System.Data.DataTable" />.</summary>
    </member>
    <member name="M:System.Data.DataColumn.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.DataColumn" /> в качестве строкового типа.</summary>
    </member>
    <member name="M:System.Data.DataColumn.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.DataColumn" /> как строку типа с использованием указанного имени столбца.</summary>
      <param name="columnName">Строка, представляющая имя создаваемого столбца. Если установлено значение <see langword="null" /> или пустая строка (""), то при добавлении объекта в коллекцию столбцов будет задано имя по умолчанию.</param>
    </member>
    <member name="M:System.Data.DataColumn.#ctor(System.String,System.Type)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.DataColumn" /> с использованием указанного имени столбца и типа данных.</summary>
      <param name="columnName">Строка, представляющая имя создаваемого столбца. Если установлено значение <see langword="null" /> или пустая строка (""), то при добавлении объекта в коллекцию столбцов будет задано имя по умолчанию.</param>
      <param name="dataType">Поддерживаемый <see cref="P:System.Data.DataColumn.DataType" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dataType" /> не был указан.</exception>
    </member>
    <member name="M:System.Data.DataColumn.#ctor(System.String,System.Type,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.DataColumn" /> с использованием указанного имени, типа данных и выражения.</summary>
      <param name="columnName">Строка, представляющая имя создаваемого столбца. Если установлено значение <see langword="null" /> или пустая строка (""), то при добавлении объекта в коллекцию столбцов будет задано имя по умолчанию.</param>
      <param name="dataType">Поддерживаемый <see cref="P:System.Data.DataColumn.DataType" />.</param>
      <param name="expr">Выражение, используемое для создания этого столбца. Дополнительные сведения см. в описании свойства <see cref="P:System.Data.DataColumn.Expression" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dataType" /> не был указан.</exception>
    </member>
    <member name="M:System.Data.DataColumn.#ctor(System.String,System.Type,System.String,System.Data.MappingType)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.DataColumn" /> с использованием указанного имени, типа данных, выражения и значения, определяющего, является ли столбец атрибутом.</summary>
      <param name="columnName">Строка, представляющая имя создаваемого столбца. Если установлено значение <see langword="null" /> или пустая строка (""), то при добавлении объекта в коллекцию столбцов будет задано имя по умолчанию.</param>
      <param name="dataType">Поддерживаемый <see cref="P:System.Data.DataColumn.DataType" />.</param>
      <param name="expr">Выражение, используемое для создания этого столбца. Дополнительные сведения см. в описании свойства <see cref="P:System.Data.DataColumn.Expression" />.</param>
      <param name="type">Одно из значений <see cref="T:System.Data.MappingType" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dataType" /> не был указан.</exception>
    </member>
    <member name="P:System.Data.DataColumn.AllowDBNull">
      <summary>Возвращает или задает значение, указывающее на допустимость нулевых значений в этом столбце для строк, принадлежащих таблице.</summary>
      <returns>
        <see langword="true" />, если нулевые значения допускаются, в противном случае — <see langword="false" />. Значение по умолчанию — <see langword="true" />.</returns>
    </member>
    <member name="P:System.Data.DataColumn.AutoIncrement">
      <summary>Возвращает или задает значение, показывающее, увеличивать ли автоматически значение столбца для новых строк, добавляемых в таблицу.</summary>
      <returns>
        <see langword="true" />, если значение столбца увеличивается автоматически; в противном случае — <see langword="false" />. Значение по умолчанию — <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentException">Столбец является вычисляемым.</exception>
    </member>
    <member name="P:System.Data.DataColumn.AutoIncrementSeed">
      <summary>Возвращает или задает начальное значение для столбца, свойству которого <see cref="P:System.Data.DataColumn.AutoIncrement" /> задано значение <see langword="true" />. Значение по умолчанию — 0.</summary>
      <returns>Начальное значение для функции <see cref="P:System.Data.DataColumn.AutoIncrement" />.</returns>
    </member>
    <member name="P:System.Data.DataColumn.AutoIncrementStep">
      <summary>Возвращает или задает шаг приращения для столбца, свойству <see cref="P:System.Data.DataColumn.AutoIncrement" /> которого задано значение <see langword="true" />.</summary>
      <returns>Число, на которое автоматически увеличивается значение столбца. Значение по умолчанию — 1.</returns>
      <exception cref="T:System.ArgumentException">Заданное значение равно нулю.</exception>
    </member>
    <member name="P:System.Data.DataColumn.Caption">
      <summary>Возвращает или задает заголовок для столбца.</summary>
      <returns>Заголовок столбца. Если не установлено, возвращает значение <see cref="P:System.Data.DataColumn.ColumnName" />.</returns>
    </member>
    <member name="M:System.Data.DataColumn.CheckNotAllowNull">
      <summary>Данный член предназначен для поддержки платформы .NET Framework и не должен вызываться напрямую из кода приложения.</summary>
    </member>
    <member name="M:System.Data.DataColumn.CheckUnique">
      <summary>Данный член предназначен для поддержки платформы .NET Framework и не должен вызываться напрямую из кода приложения.</summary>
    </member>
    <member name="P:System.Data.DataColumn.ColumnMapping">
      <summary>Возвращает или задает <see cref="T:System.Data.MappingType" /> столбца.</summary>
      <returns>Одно из значений <see cref="T:System.Data.MappingType" />.</returns>
    </member>
    <member name="P:System.Data.DataColumn.ColumnName">
      <summary>Возвращает или задает имя столбца в <see cref="T:System.Data.DataColumnCollection" />.</summary>
      <returns>Имя столбца.</returns>
      <exception cref="T:System.ArgumentException">Значение свойства равно <see langword="null" /> или пустой строке, и столбец принадлежит коллекции.</exception>
      <exception cref="T:System.Data.DuplicateNameException">Столбец с таким именем уже существует в коллекции. Сравнение имени выполняется без учета регистра.</exception>
    </member>
    <member name="P:System.Data.DataColumn.DataType">
      <summary>Возвращает или задает тип данных, хранимых в столбце.</summary>
      <returns>Объект <see cref="T:System.Type" />, представляющий тип данных столбца.</returns>
      <exception cref="T:System.ArgumentException">В столбце уже содержатся данные.</exception>
    </member>
    <member name="P:System.Data.DataColumn.DateTimeMode">
      <summary>Возвращает или задает <see langword="DateTimeMode" /> для столбца.</summary>
      <returns>
        <see cref="T:System.Data.DataSetDateTime" /> для указанного столбца.</returns>
    </member>
    <member name="P:System.Data.DataColumn.DefaultValue">
      <summary>Возвращает или задает значение по умолчанию для столбца при создании новых строк.</summary>
      <returns>Значение, соответствующее <see cref="P:System.Data.DataColumn.DataType" /> столбца.</returns>
      <exception cref="T:System.InvalidCastException">При добавлении строки значение по умолчанию не является экземпляром типа данных столбца.</exception>
    </member>
    <member name="P:System.Data.DataColumn.Expression">
      <summary>Возвращает или задает выражение, используемое для фильтрации строк, расчета значений в столбце либо для создания составного столбца.</summary>
      <returns>Выражение, используемое для расчета значений столбца либо создания составного столбца. Возвращаемый тип выражения определяется с помощью <see cref="P:System.Data.DataColumn.DataType" /> столбца.</returns>
      <exception cref="T:System.ArgumentException">Свойству <see cref="P:System.Data.DataColumn.AutoIncrement" /> или <see cref="P:System.Data.DataColumn.Unique" /> задано значение <see langword="true" />.</exception>
      <exception cref="T:System.FormatException">При использовании функции CONVERT выражение оценивает строку, но строка не содержит представление, которое может быть преобразовано в параметр типа.</exception>
      <exception cref="T:System.InvalidCastException">При использовании функции CONVERT запрошенное приведение типов невозможно. Подробные сведения о возможном приведении см. в описании функции преобразования, приведенном в следующем разделе.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">При использовании функции SUBSTRING аргумент начала находится вне диапазона.  
-или- 
При использовании функции SUBSTRING аргумент длины находится вне диапазона.</exception>
      <exception cref="T:System.Exception">При использовании функции LEN или TRIM выражение не выполняет вычисление строки. Это включает выражения, которое выполняет вычисление <see cref="T:System.Char" />.</exception>
    </member>
    <member name="P:System.Data.DataColumn.ExtendedProperties">
      <summary>Возвращает коллекцию пользовательских сведений, связанных с <see cref="T:System.Data.DataColumn" />.</summary>
      <returns>Коллекция <see cref="T:System.Data.PropertyCollection" /> пользовательских сведений.</returns>
    </member>
    <member name="P:System.Data.DataColumn.MaxLength">
      <summary>Возвращает или задает максимальную длину текстового столбца.</summary>
      <returns>Максимальная длина столбца в символах. Если столбец не имеет максимальной длины, значение-1 (по умолчанию).</returns>
    </member>
    <member name="P:System.Data.DataColumn.Namespace">
      <summary>Возвращает или задает пространство имен <see cref="T:System.Data.DataColumn" />.</summary>
      <returns>Пространство имен <see cref="T:System.Data.DataColumn" />.</returns>
      <exception cref="T:System.ArgumentException">Пространство имен уже содержит данные.</exception>
    </member>
    <member name="M:System.Data.DataColumn.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)">
      <summary>Данный член предназначен для поддержки платформы .NET Framework и не должен вызываться напрямую из кода приложения.</summary>
      <param name="pcevent">Ссылка на параметр.</param>
    </member>
    <member name="P:System.Data.DataColumn.Ordinal">
      <summary>Возвращает отсчитываемую от нуля позицию столбца в коллекции <see cref="T:System.Data.DataColumnCollection" />.</summary>
      <returns>Положение столбца. Получает значение -1, если столбец не является членом коллекции.</returns>
    </member>
    <member name="P:System.Data.DataColumn.Prefix">
      <summary>Возвращает или задает префикс XML, который является псевдонимом пространства имен класса <see cref="T:System.Data.DataTable" />.</summary>
      <returns>Префикс XML для пространства имен <see cref="T:System.Data.DataTable" />.</returns>
    </member>
    <member name="M:System.Data.DataColumn.RaisePropertyChanging(System.String)">
      <summary>Данный член предназначен для поддержки платформы .NET Framework и не должен вызываться напрямую из кода приложения.</summary>
      <param name="name">Ссылка на параметр.</param>
    </member>
    <member name="P:System.Data.DataColumn.ReadOnly">
      <summary>Возвращает или задает значение, указывающее на допустимость изменения столбца после добавления строки в таблицу.</summary>
      <returns>
        <see langword="true" />, если столбец предназначен только для чтения; в противном случае — <see langword="false" />. Значение по умолчанию — <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentException">Свойству задано значение <see langword="false" /> в вычисляемом столбце.</exception>
    </member>
    <member name="M:System.Data.DataColumn.SetOrdinal(System.Int32)">
      <summary>Изменяет порядковый номер или положение <see cref="T:System.Data.DataColumn" /> на указанный порядковый номер или положение.</summary>
      <param name="ordinal">Заданный порядковый номер.</param>
    </member>
    <member name="P:System.Data.DataColumn.Table">
      <summary>Возвращает <see cref="T:System.Data.DataTable" />, которому принадлежит столбец.</summary>
      <returns>
        <see cref="T:System.Data.DataTable" />, к которой принадлежит <see cref="T:System.Data.DataColumn" />.</returns>
    </member>
    <member name="M:System.Data.DataColumn.ToString">
      <summary>Возвращает свойство <see cref="P:System.Data.DataColumn.Expression" /> столбца, если оно существует.</summary>
      <returns>Значение <see cref="P:System.Data.DataColumn.Expression" />, если свойство задано; в противном случае — свойство <see cref="P:System.Data.DataColumn.ColumnName" />.</returns>
    </member>
    <member name="P:System.Data.DataColumn.Unique">
      <summary>Возвращает или задает значение, указывающее, должны ли значения в каждой строке столбца быть уникальными.</summary>
      <returns>
        <see langword="true" />, если значение должно быть уникальным; в противном случае — <see langword="false" />. Значение по умолчанию — <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentException">Столбец является вычисляемым.</exception>
    </member>
    <member name="T:System.Data.DataColumnChangeEventArgs">
      <summary>Предоставляет данные для события <see cref="E:System.Data.DataTable.ColumnChanging" />.</summary>
    </member>
    <member name="M:System.Data.DataColumnChangeEventArgs.#ctor(System.Data.DataRow,System.Data.DataColumn,System.Object)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.DataColumnChangeEventArgs" />.</summary>
      <param name="row">Объект <see cref="T:System.Data.DataRow" /> столбца с изменяющимся значением.</param>
      <param name="column">Объект <see cref="T:System.Data.DataColumn" /> с изменяющимся значением.</param>
      <param name="value">Новое значение.</param>
    </member>
    <member name="P:System.Data.DataColumnChangeEventArgs.Column">
      <summary>Получает объект <see cref="T:System.Data.DataColumn" /> с изменяющимся значением.</summary>
      <returns>Объект <see cref="T:System.Data.DataColumn" /> с изменяющимся значением.</returns>
    </member>
    <member name="P:System.Data.DataColumnChangeEventArgs.ProposedValue">
      <summary>Возвращает или задает предложенное новое значение для столбца.</summary>
      <returns>Предложенное значение типа <see cref="T:System.Object" />.</returns>
    </member>
    <member name="P:System.Data.DataColumnChangeEventArgs.Row">
      <summary>Получает объект <see cref="T:System.Data.DataRow" /> столбца с изменяющимся значением.</summary>
      <returns>Объект <see cref="T:System.Data.DataRow" /> столбца с изменяющимся значением.</returns>
    </member>
    <member name="T:System.Data.DataColumnChangeEventH*******ler">
      <summary>Представляет метод, обрабатывающий событие <see cref="E:System.Data.DataTable.ColumnChanging" />.</summary>
      <param name="sender">Источник события.</param>
      <param name="e">Объект <see cref="T:System.Data.DataColumnChangeEventArgs" />, содержащий данные события.</param>
    </member>
    <member name="T:System.Data.DataColumnCollection">
      <summary>Представляет коллекцию объектов <see cref="T:System.Data.DataColumn" /> для <see cref="T:System.Data.DataTable" />.</summary>
    </member>
    <member name="M:System.Data.DataColumnCollection.Add">
      <summary>Создает и добавляет объект <see cref="T:System.Data.DataColumn" /> в <see cref="T:System.Data.DataColumnCollection" />.</summary>
      <returns>Вновь созданный <see cref="T:System.Data.DataColumn" />.</returns>
    </member>
    <member name="M:System.Data.DataColumnCollection.Add(System.Data.DataColumn)">
      <summary>Создает и добавляет указанный объект <see cref="T:System.Data.DataColumn" /> в <see cref="T:System.Data.DataColumnCollection" />.</summary>
      <param name="column">Добавляемый объект <see cref="T:System.Data.DataColumn" />.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="column" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Столбец уже принадлежит данной или другой коллекции.</exception>
      <exception cref="T:System.Data.DuplicateNameException">Коллекция уже содержит столбец с указанным именем. (Сравнение выполняется без учета регистра.)</exception>
      <exception cref="T:System.Data.InvalidExpressionException">Недопустимое выражение. Дополнительные сведения о создании выражений см. в описании свойства <see cref="P:System.Data.DataColumn.Expression" />.</exception>
    </member>
    <member name="M:System.Data.DataColumnCollection.Add(System.String)">
      <summary>Создает и добавляет объект <see cref="T:System.Data.DataColumn" /> с указанным именем к <see cref="T:System.Data.DataColumnCollection" />.</summary>
      <param name="columnName">Имя столбца.</param>
      <returns>Вновь созданный <see cref="T:System.Data.DataColumn" />.</returns>
      <exception cref="T:System.Data.DuplicateNameException">Коллекция уже содержит столбец с указанным именем. (Сравнение выполняется без учета регистра.)</exception>
    </member>
    <member name="M:System.Data.DataColumnCollection.Add(System.String,System.Type)">
      <summary>Создает и добавляет объект <see cref="T:System.Data.DataColumn" /> с указанным именем и типом в <see cref="T:System.Data.DataColumnCollection" />.</summary>
      <param name="columnName">Свойство <see cref="P:System.Data.DataColumn.ColumnName" />, используемое при создании столбца.</param>
      <param name="type">Свойство <see cref="P:System.Data.DataColumn.DataType" /> нового столбца.</param>
      <returns>Вновь созданный <see cref="T:System.Data.DataColumn" />.</returns>
      <exception cref="T:System.Data.DuplicateNameException">Коллекция уже содержит столбец с указанным именем. (Сравнение выполняется без учета регистра.)</exception>
      <exception cref="T:System.Data.InvalidExpressionException">Недопустимое выражение. Дополнительные сведения о создании выражений см. в описании свойства <see cref="P:System.Data.DataColumn.Expression" />.</exception>
    </member>
    <member name="M:System.Data.DataColumnCollection.Add(System.String,System.Type,System.String)">
      <summary>Создает и добавляет объект <see cref="T:System.Data.DataColumn" /> с указанным именем, типом и выражением в <see cref="T:System.Data.DataColumnCollection" />.</summary>
      <param name="columnName">Имя, используемое при создании столбца.</param>
      <param name="type">Свойство <see cref="P:System.Data.DataColumn.DataType" /> нового столбца.</param>
      <param name="expression">Выражение, назначаемое свойству <see cref="P:System.Data.DataColumn.Expression" />.</param>
      <returns>Вновь созданный <see cref="T:System.Data.DataColumn" />.</returns>
      <exception cref="T:System.Data.DuplicateNameException">Коллекция уже содержит столбец с указанным именем. (Сравнение выполняется без учета регистра.)</exception>
      <exception cref="T:System.Data.InvalidExpressionException">Недопустимое выражение. Дополнительные сведения о создании выражений см. в описании свойства <see cref="P:System.Data.DataColumn.Expression" />.</exception>
    </member>
    <member name="M:System.Data.DataColumnCollection.AddRange(System.Data.DataColumn[])">
      <summary>Копирует элементы указанного массива <see cref="T:System.Data.DataColumn" /> в конец коллекции.</summary>
      <param name="columns">Массив объектов <see cref="T:System.Data.DataColumn" />, добавляемый в коллекцию.</param>
    </member>
    <member name="M:System.Data.DataColumnCollection.CanRemove(System.Data.DataColumn)">
      <summary>Проверяет, может ли быть удален из коллекции указанный столбец.</summary>
      <param name="column">Объект <see cref="T:System.Data.DataColumn" /> в коллекции.</param>
      <returns>
        <see langword="true" /> если столбец можно удалить <see langword="false" /> если, 
– Параметр <paramref name="column" /> имеет значение <see langword="null" />.  
– Столбец не принадлежит этой коллекции.  
– Столбец является частью отношения.  
– Выражение другого столбца зависит от этого столбца.</returns>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="column" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentException">Столбец не принадлежит этой коллекции.
-или-
Столбец является частью отношения.
-или-
Выражение другого столбца зависит от этого столбца.</exception>
    </member>
    <member name="M:System.Data.DataColumnCollection.Clear">
      <summary>Удаляет любой столбец из коллекции.</summary>
    </member>
    <member name="E:System.Data.DataColumnCollection.CollectionChanged">
      <summary>Происходит, когда изменяется коллекция столбцов с помощью добавления или удаления столбца.</summary>
    </member>
    <member name="M:System.Data.DataColumnCollection.Contains(System.String)">
      <summary>Определяет, содержит ли коллекция столбец с указанным именем.</summary>
      <param name="name">Свойство <see cref="P:System.Data.DataColumn.ColumnName" /> столбца, поиск которого требуется выполнить.</param>
      <returns>Значение <see langword="true" />, если столбец с таким именем существует; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataColumnCollection.CopyTo(System.Data.DataColumn[],System.Int32)">
      <summary>Копирует коллекцию целиком в существующий массив, начиная с указанного индекса в этом массиве.</summary>
      <param name="array">Массив объектов <see cref="T:System.Data.DataColumn" />, копируемых в коллекцию.</param>
      <param name="index">Начальный индекс.</param>
    </member>
    <member name="M:System.Data.DataColumnCollection.IndexOf(System.Data.DataColumn)">
      <summary>Получает индекс столбца, указанного по имени.</summary>
      <param name="column">Имя возвращаемого столбца.</param>
      <returns>Индекс столбца, указанного <paramref name="column" />, если он обнаружен; в противном случае — значение -1.</returns>
    </member>
    <member name="M:System.Data.DataColumnCollection.IndexOf(System.String)">
      <summary>Получает индекс столбца с указанным именем (имя без учета регистра).</summary>
      <param name="columnName">Имя столбца, который нужно найти.</param>
      <returns>Индекс (с нуля) столбца с заданным именем столбца, или значение -1, если столбец отсутствует в коллекции.</returns>
    </member>
    <member name="P:System.Data.DataColumnCollection.Item(System.Int32)">
      <summary>Получает объект <see cref="T:System.Data.DataColumn" /> из коллекции по указанному индексу.</summary>
      <param name="index">Индекс (с нуля) возвращаемого столбца.</param>
      <returns>Параметр <see cref="T:System.Data.DataColumn" /> по указанному индексу.</returns>
      <exception cref="T:System.IndexOutOfRangeException">Значение индекса больше числа элементов в коллекции.</exception>
    </member>
    <member name="P:System.Data.DataColumnCollection.Item(System.String)">
      <summary>Получает объект <see cref="T:System.Data.DataColumn" /> из коллекции с указанным именем.</summary>
      <param name="name">Свойство <see cref="P:System.Data.DataColumn.ColumnName" /> возвращаемого столбца.</param>
      <returns>Объект <see cref="T:System.Data.DataColumn" /> в коллекции с указанным значением свойства <see cref="P:System.Data.DataColumn.ColumnName" />; в противном случае — значение null, если <see cref="T:System.Data.DataColumn" /> не существует.</returns>
    </member>
    <member name="M:System.Data.DataColumnCollection.Remove(System.Data.DataColumn)">
      <summary>Удаляет указанный объект <see cref="T:System.Data.DataColumn" /> из коллекции.</summary>
      <param name="column">Объект <see cref="T:System.Data.DataColumn" /> для удаления.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="column" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Столбец не принадлежит этой коллекции.  
-или- 
Столбец является частью отношения.  
-или- 
Выражение другого столбца зависит от этого столбца.</exception>
    </member>
    <member name="M:System.Data.DataColumnCollection.Remove(System.String)">
      <summary>Удаляет объект <see cref="T:System.Data.DataColumn" /> с указанным именем из коллекции.</summary>
      <param name="name">Имя удаляемого столбца.</param>
      <exception cref="T:System.ArgumentException">Коллекция не содержит столбец с указанным именем.</exception>
    </member>
    <member name="M:System.Data.DataColumnCollection.RemoveAt(System.Int32)">
      <summary>Удаляет столбец по указанному индексу из коллекции.</summary>
      <param name="index">Индекс удаляемого столбца.</param>
      <exception cref="T:System.ArgumentException">Коллекция не содержит столбец по указанному индексу.</exception>
    </member>
    <member name="T:System.Data.DataException">
      <summary>Представляет исключение, которое выдается при создании ошибок с помощью компонента ADO.NET.</summary>
    </member>
    <member name="M:System.Data.DataException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.DataException" />. Это конструктор по умолчанию.</summary>
    </member>
    <member name="M:System.Data.DataException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.DataException" /> с указанными сведениями о сериализации и контекстом.</summary>
      <param name="info">Данные, необходимые для сериализации или десериализации объекта.</param>
      <param name="context">Описание источника и назначения заданного сериализованного потока.</param>
    </member>
    <member name="M:System.Data.DataException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.DataException" /> с заданной строкой.</summary>
      <param name="s">Строка, отображаемая при возникновении исключения.</param>
    </member>
    <member name="M:System.Data.DataException.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.DataException" />, используя заданную строку и внутреннее исключение.</summary>
      <param name="s">Строка, отображаемая при возникновении исключения.</param>
      <param name="innerException">Ссылка на внутреннее исключение.</param>
    </member>
    <member name="T:System.Data.DataRelation">
      <summary>Представляет отношение "родительский-дочерний объект" между двумя объектами <see cref="T:System.Data.DataTable" />.</summary>
    </member>
    <member name="M:System.Data.DataRelation.#ctor(System.String,System.Data.DataColumn,System.Data.DataColumn)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.DataRelation" /> с использованием указанного имени <see cref="T:System.Data.DataRelation" /> и родительского и дочернего объектов <see cref="T:System.Data.DataColumn" />.</summary>
      <param name="relationName">Имя <see cref="T:System.Data.DataRelation" />. Если значение <see langword="null" /> или пустая строка (""), то при добавлении объекта в коллекцию <see cref="T:System.Data.DataRelationCollection" /> будет задано имя по умолчанию.</param>
      <param name="parentColumn">Родительский объект <see cref="T:System.Data.DataColumn" /> в отношении.</param>
      <param name="childColumn">Дочерний объект <see cref="T:System.Data.DataColumn" /> в отношении.</param>
      <exception cref="T:System.ArgumentNullException">Один или оба объекта <see cref="T:System.Data.DataColumn" /> содержат <see langword="null" />.</exception>
      <exception cref="T:System.Data.InvalidConstraintException">Столбцы имеют разные типы данных 
-или- 
Таблицы не принадлежат тому же <see cref="T:System.Data.DataSet" />.</exception>
    </member>
    <member name="M:System.Data.DataRelation.#ctor(System.String,System.Data.DataColumn,System.Data.DataColumn,System.Boolean)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.DataRelation" /> с использованием указанного имени, родительского и дочернего объектов <see cref="T:System.Data.DataColumn" /> и значения, указывающего, нужно ли создавать ограничения.</summary>
      <param name="relationName">Имя отношения. Если значение <see langword="null" /> или пустая строка (""), то при добавлении объекта в коллекцию <see cref="T:System.Data.DataRelationCollection" /> будет задано имя по умолчанию.</param>
      <param name="parentColumn">Родительский объект <see cref="T:System.Data.DataColumn" /> в отношении.</param>
      <param name="childColumn">Дочерний объект <see cref="T:System.Data.DataColumn" /> в отношении.</param>
      <param name="createConstraints">Значение, указывающее, создаются ли ограничения. Значение <see langword="true" />, если создаются ограничения. В противном случае — значение <see langword="false" />.</param>
      <exception cref="T:System.ArgumentNullException">Один или оба объекта <see cref="T:System.Data.DataColumn" /> содержат <see langword="null" />.</exception>
      <exception cref="T:System.Data.InvalidConstraintException">Столбцы имеют разные типы данных 
-или- 
Таблицы не принадлежат тому же <see cref="T:System.Data.DataSet" />.</exception>
    </member>
    <member name="M:System.Data.DataRelation.#ctor(System.String,System.Data.DataColumn[],System.Data.DataColumn[])">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.DataRelation" /> с использованием указанного имени <see cref="T:System.Data.DataRelation" /> и соответствующих массивов родительских и дочерних объектов <see cref="T:System.Data.DataColumn" />.</summary>
      <param name="relationName">Имя отношения. Если значение <see langword="null" /> или пустая строка (""), то при добавлении объекта в коллекцию <see cref="T:System.Data.DataRelationCollection" /> будет задано имя по умолчанию.</param>
      <param name="parentColumns">Массив родительских объектов <see cref="T:System.Data.DataColumn" />.</param>
      <param name="childColumns">Массив дочерних объектов <see cref="T:System.Data.DataColumn" />.</param>
      <exception cref="T:System.ArgumentNullException">Один или оба объекта <see cref="T:System.Data.DataColumn" /> содержат <see langword="null" />.</exception>
      <exception cref="T:System.Data.InvalidConstraintException">Объекты <see cref="T:System.Data.DataColumn" /> имеют разные типы данных. 
-или- 
Один или оба массива не состоят из различных столбцов из той же таблицы.  
-или- 
Таблицы не принадлежат тому же <see cref="T:System.Data.DataSet" />.</exception>
    </member>
    <member name="M:System.Data.DataRelation.#ctor(System.String,System.Data.DataColumn[],System.Data.DataColumn[],System.Boolean)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.DataRelation" /> с использованием указанного имени, родительского и дочернего объектов <see cref="T:System.Data.DataColumn" /> и значения, указывающего, нужно ли создавать ограничения.</summary>
      <param name="relationName">Имя отношения. Если значение <see langword="null" /> или пустая строка (""), то при добавлении объекта в коллекцию <see cref="T:System.Data.DataRelationCollection" /> будет задано имя по умолчанию.</param>
      <param name="parentColumns">Массив родительских объектов <see cref="T:System.Data.DataColumn" />.</param>
      <param name="childColumns">Массив дочерних объектов <see cref="T:System.Data.DataColumn" />.</param>
      <param name="createConstraints">Значение, указывающее, нужно ли создавать ограничения. Значение <see langword="true" />, если создаются ограничения. В противном случае — значение <see langword="false" />.</param>
      <exception cref="T:System.ArgumentNullException">Один или оба объекта <see cref="T:System.Data.DataColumn" /> содержат <see langword="null" />.</exception>
      <exception cref="T:System.Data.InvalidConstraintException">Столбцы имеют разные типы данных 
-или- 
Таблицы не принадлежат тому же <see cref="T:System.Data.DataSet" />.</exception>
    </member>
    <member name="M:System.Data.DataRelation.#ctor(System.String,System.String,System.String,System.String,System.String,System.String[],System.String[],System.Boolean)">
      <summary>Этот конструктор предназначен для поддержки режима разработки в среде Visual Studio.</summary>
      <param name="relationName">Имя <see cref="T:System.Data.DataRelation" />. Если значение <see langword="null" /> или пустая строка (""), то при добавлении объекта в коллекцию <see cref="T:System.Data.DataRelationCollection" /> будет задано имя по умолчанию.</param>
      <param name="parentTableName">Имя объекта <see cref="T:System.Data.DataTable" />, который является родительской таблицей в отношении.</param>
      <param name="parentTableNamespace">Имя пространства имен родительской таблицы.</param>
      <param name="childTableName">Имя объекта <see cref="T:System.Data.DataTable" />, который является дочерней таблицей в отношении.</param>
      <param name="childTableNamespace">Имя пространства имен дочерней таблицы.</param>
      <param name="parentColumnNames">Массив имен объектов <see cref="T:System.Data.DataColumn" /> в родительском объекте <see cref="T:System.Data.DataTable" /> отношения.</param>
      <param name="childColumnNames">Массив имен объектов <see cref="T:System.Data.DataColumn" /> в дочернем объекте <see cref="T:System.Data.DataTable" /> отношения.</param>
      <param name="nested">Значение, указывающее, являются ли отношения вложенными.</param>
    </member>
    <member name="M:System.Data.DataRelation.#ctor(System.String,System.String,System.String,System.String[],System.String[],System.Boolean)">
      <summary>Этот конструктор предназначен для поддержки режима разработки в среде Visual Studio.</summary>
      <param name="relationName">Имя отношения. Если значение <see langword="null" /> или пустая строка (""), то при добавлении объекта в коллекцию <see cref="T:System.Data.DataRelationCollection" /> будет задано имя по умолчанию.</param>
      <param name="parentTableName">Имя объекта <see cref="T:System.Data.DataTable" />, который является родительской таблицей в отношении.</param>
      <param name="childTableName">Имя объекта <see cref="T:System.Data.DataTable" />, который является дочерней таблицей в отношении.</param>
      <param name="parentColumnNames">Массив имен объектов <see cref="T:System.Data.DataColumn" /> в родительском объекте <see cref="T:System.Data.DataTable" /> отношения.</param>
      <param name="childColumnNames">Массив имен объектов <see cref="T:System.Data.DataColumn" /> в дочернем объекте <see cref="T:System.Data.DataTable" /> отношения.</param>
      <param name="nested">Значение, указывающее, являются ли отношения вложенными.</param>
    </member>
    <member name="M:System.Data.DataRelation.CheckStateForProperty">
      <summary>Этот метод поддерживает инфраструктуру .NET Framework и не предназначен для использования непосредственно из программного кода.</summary>
      <exception cref="T:System.Data.DataException">Родительская и дочерняя таблицы принадлежат различным объектам <see cref="T:System.Data.DataSet" />.  
-или- 
Одна или несколько пар родительских и дочерних объектов <see cref="T:System.Data.DataColumn" /> имеют несовпадающие типы данных.  
-или- 
Родительский и дочерний объекты <see cref="T:System.Data.DataColumn" /> идентичны.</exception>
    </member>
    <member name="P:System.Data.DataRelation.ChildColumns">
      <summary>Возвращает дочерние объекты <see cref="T:System.Data.DataColumn" /> этого отношения.</summary>
      <returns>Массив объектов <see cref="T:System.Data.DataColumn" />.</returns>
    </member>
    <member name="P:System.Data.DataRelation.ChildKeyConstraint">
      <summary>Возвращает <see cref="T:System.Data.ForeignKeyConstraint" /> для отношения.</summary>
      <returns>Объект <see langword="ForeignKeyConstraint" />.</returns>
    </member>
    <member name="P:System.Data.DataRelation.ChildTable">
      <summary>Возвращает дочернюю таблицу этого отношения.</summary>
      <returns>Объект <see cref="T:System.Data.DataTable" />, который является дочерней таблицей этого отношения.</returns>
    </member>
    <member name="P:System.Data.DataRelation.DataSet">
      <summary>Возвращает объект <see cref="T:System.Data.DataSet" />, которому принадлежит объект <see cref="T:System.Data.DataRelation" />.</summary>
      <returns>Объект <see cref="T:System.Data.DataSet" />, к которому принадлежит объект <see cref="T:System.Data.DataRelation" />.</returns>
    </member>
    <member name="P:System.Data.DataRelation.ExtendedProperties">
      <summary>Возвращает коллекцию, в которой хранятся настраиваемые свойства.</summary>
      <returns>Класс <see cref="T:System.Data.PropertyCollection" />, содержащий настраиваемые свойства.</returns>
    </member>
    <member name="P:System.Data.DataRelation.Nested">
      <summary>Возвращает или задает значение, которое указывает, являются ли объекты <see cref="T:System.Data.DataRelation" /> вложенными.</summary>
      <returns>Значение <see langword="true" />, если объекты <see cref="T:System.Data.DataRelation" /> являются вложенными, в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataRelation.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)">
      <summary>Данный член предназначен для поддержки платформы .NET Framework и не должен вызываться напрямую из кода приложения.</summary>
      <param name="pcevent">Ссылка на параметр.</param>
    </member>
    <member name="P:System.Data.DataRelation.ParentColumns">
      <summary>Возвращает массив объектов <see cref="T:System.Data.DataColumn" />, являющихся родительскими столбцами объекта <see cref="T:System.Data.DataRelation" />.</summary>
      <returns>Массив объектов <see cref="T:System.Data.DataColumn" />, являющихся родительскими столбцами объекта <see cref="T:System.Data.DataRelation" />.</returns>
    </member>
    <member name="P:System.Data.DataRelation.ParentKeyConstraint">
      <summary>Возвращает <see cref="T:System.Data.UniqueConstraint" />, которое обеспечивает уникальность значений в родительском столбце объекта <see cref="T:System.Data.DataRelation" />.</summary>
      <returns>
        <see cref="T:System.Data.UniqueConstraint" />, которое обеспечивает уникальность значений, содержащихся в родительском столбце.</returns>
    </member>
    <member name="P:System.Data.DataRelation.ParentTable">
      <summary>Возвращает родительский объект <see cref="T:System.Data.DataTable" /> этого объекта <see cref="T:System.Data.DataRelation" />.</summary>
      <returns>Объект <see cref="T:System.Data.DataTable" />, который является родительской таблицей этого отношения.</returns>
    </member>
    <member name="M:System.Data.DataRelation.RaisePropertyChanging(System.String)">
      <summary>Данный член предназначен для поддержки платформы .NET Framework и не должен вызываться напрямую из кода приложения.</summary>
      <param name="name">Ссылка на параметр.</param>
    </member>
    <member name="P:System.Data.DataRelation.RelationName">
      <summary>Возвращает или задает имя, используемое для извлечения <see cref="T:System.Data.DataRelation" /> из <see cref="T:System.Data.DataRelationCollection" />.</summary>
      <returns>Имя <see cref="T:System.Data.DataRelation" />.</returns>
      <exception cref="T:System.ArgumentException">Значение <see langword="null" /> или пустая строка ("") были переданы в объект <see cref="T:System.Data.DataColumn" />, который является отношением <see cref="T:System.Data.DataRelation" />.</exception>
      <exception cref="T:System.Data.DuplicateNameException">Объект <see cref="T:System.Data.DataRelation" /> принадлежит коллекции, которая уже содержит объект <see cref="T:System.Data.DataRelation" /> с тем же именем.</exception>
    </member>
    <member name="M:System.Data.DataRelation.ToString">
      <summary>Возвращает <see cref="P:System.Data.DataRelation.RelationName" />, если он существует.</summary>
      <returns>Значение свойства <see cref="P:System.Data.DataRelation.RelationName" />.</returns>
    </member>
    <member name="T:System.Data.DataRelationCollection">
      <summary>Представляет коллекцию объектов <see cref="T:System.Data.DataRelation" /> для <see cref="T:System.Data.DataSet" />.</summary>
    </member>
    <member name="M:System.Data.DataRelationCollection.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.DataRelationCollection" />.</summary>
    </member>
    <member name="M:System.Data.DataRelationCollection.Add(System.Data.DataColumn,System.Data.DataColumn)">
      <summary>Создает <see cref="T:System.Data.DataRelation" /> с указанными родительским и дочерним столбцами и добавляет их к коллекции.</summary>
      <param name="parentColumn">Родительский столбец отношения.</param>
      <param name="childColumn">Дочерний столбец отношения.</param>
      <returns>Созданное соотношение.</returns>
    </member>
    <member name="M:System.Data.DataRelationCollection.Add(System.Data.DataColumn[],System.Data.DataColumn[])">
      <summary>Создает <see cref="T:System.Data.DataRelation" /> с указанными родительским и дочерним столбцами и добавляет их к коллекции.</summary>
      <param name="parentColumns">Родительские столбцы отношения.</param>
      <param name="childColumns">Дочерние столбцы отношения.</param>
      <returns>Созданное соотношение.</returns>
      <exception cref="T:System.ArgumentNullException">Аргумент <paramref name="relation" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentException">Соотношение уже принадлежит данной коллекции, или оно принадлежит другой коллекции.</exception>
      <exception cref="T:System.Data.DuplicateNameException">Коллекция уже содержит отношение с тем же именем. (Сравнение выполняется без учета регистра).</exception>
      <exception cref="T:System.Data.InvalidConstraintException">Отношение перешло в недопустимое состояние со времени создания.</exception>
    </member>
    <member name="M:System.Data.DataRelationCollection.Add(System.Data.DataRelation)">
      <summary>Добавляет объект <see cref="T:System.Data.DataRelation" /> в коллекцию <see cref="T:System.Data.DataRelationCollection" />.</summary>
      <param name="relation">Параметр <see langword="DataRelation" /> для добавления в коллекцию.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="relation" /> имеет нулевое значение.</exception>
      <exception cref="T:System.ArgumentException">Соотношение уже принадлежит данной коллекции, или оно принадлежит другой коллекции.</exception>
      <exception cref="T:System.Data.DuplicateNameException">Коллекция уже содержит отношение с указанным именем. (Сравнение выполняется без учета регистра).</exception>
      <exception cref="T:System.Data.InvalidConstraintException">Отношение перешло в недопустимое состояние со времени создания.</exception>
    </member>
    <member name="M:System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn,System.Data.DataColumn)">
      <summary>Создает отношение <see cref="T:System.Data.DataRelation" /> с указанным именем и родительским и дочерним столбцами и добавляет их к коллекции.</summary>
      <param name="name">Имя отношения.</param>
      <param name="parentColumn">Родительский столбец отношения.</param>
      <param name="childColumn">Дочерний столбец отношения.</param>
      <returns>Созданное соотношение.</returns>
    </member>
    <member name="M:System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn,System.Data.DataColumn,System.Boolean)">
      <summary>Создает отношение <see cref="T:System.Data.DataRelation" /> с указанным именем, родительскими и дочерними столбцами, с необязательными ограничениями в соответствии со значением параметра <paramref name="createConstraints" />, затем добавляет это отношение в коллекцию.</summary>
      <param name="name">Имя отношения.</param>
      <param name="parentColumn">Родительский столбец отношения.</param>
      <param name="childColumn">Дочерний столбец отношения.</param>
      <param name="createConstraints">
        <see langword="true" /> для создания ограничений; в противном случае — <see langword="false" />. (Значением по умолчанию является <see langword="true" />).</param>
      <returns>Созданное соотношение.</returns>
    </member>
    <member name="M:System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn[],System.Data.DataColumn[])">
      <summary>Создает <see cref="T:System.Data.DataRelation" /> с указанным именем и массивами родительских и дочерних столбцов и добавляет их к коллекции.</summary>
      <param name="name">Имя создаваемого элемента <see langword="DataRelation" />.</param>
      <param name="parentColumns">Массив родительских объектов <see cref="T:System.Data.DataColumn" />.</param>
      <param name="childColumns">Массив дочерних объектов <see langword="DataColumn" />.</param>
      <returns>Созданный <see langword="DataRelation" />.</returns>
      <exception cref="T:System.ArgumentNullException">Имя отношения имеет нулевое значение.</exception>
      <exception cref="T:System.ArgumentException">Соотношение уже принадлежит данной коллекции, или оно принадлежит другой коллекции.</exception>
      <exception cref="T:System.Data.DuplicateNameException">Коллекция уже содержит отношение с тем же именем. (Сравнение выполняется без учета регистра).</exception>
      <exception cref="T:System.Data.InvalidConstraintException">Отношение перешло в недопустимое состояние со времени создания.</exception>
    </member>
    <member name="M:System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn[],System.Data.DataColumn[],System.Boolean)">
      <summary>Создает <see cref="T:System.Data.DataRelation" /> с указанным именем, массивами родительских и дочерних столбцов и значение, указывающее, создавать ли ограничения, и добавляет их к коллекции.</summary>
      <param name="name">Имя создаваемого элемента <see langword="DataRelation" />.</param>
      <param name="parentColumns">Массив родительских объектов <see cref="T:System.Data.DataColumn" />.</param>
      <param name="childColumns">Массив дочерних объектов <see langword="DataColumn" />.</param>
      <param name="createConstraints">
        <see langword="true" /> для создания ограничения; в противном случае — <see langword="false" />.</param>
      <returns>Созданное соотношение.</returns>
      <exception cref="T:System.ArgumentNullException">Имя отношения имеет нулевое значение.</exception>
      <exception cref="T:System.ArgumentException">Соотношение уже принадлежит данной коллекции, или оно принадлежит другой коллекции.</exception>
      <exception cref="T:System.Data.DuplicateNameException">Коллекция уже содержит отношение с тем же именем. (Сравнение выполняется без учета регистра).</exception>
      <exception cref="T:System.Data.InvalidConstraintException">Отношение перешло в недопустимое состояние со времени создания.</exception>
    </member>
    <member name="M:System.Data.DataRelationCollection.AddCore(System.Data.DataRelation)">
      <summary>Выполняет проверку таблицы.</summary>
      <param name="relation">Отношение для проверки.</param>
      <exception cref="T:System.ArgumentNullException">Значением отношения является null.</exception>
      <exception cref="T:System.ArgumentException">Соотношение уже принадлежит данной коллекции, или оно принадлежит другой коллекции.</exception>
      <exception cref="T:System.Data.DuplicateNameException">Коллекция уже содержит отношение с тем же именем. (Сравнение выполняется без учета регистра).</exception>
    </member>
    <member name="M:System.Data.DataRelationCollection.AddRange(System.Data.DataRelation[])">
      <summary>Копирует элементы указанного массива <see cref="T:System.Data.DataRelation" /> в конец коллекции.</summary>
      <param name="relations">Массив объектов <see cref="T:System.Data.DataRelation" />, добавляемый в коллекцию.</param>
    </member>
    <member name="M:System.Data.DataRelationCollection.CanRemove(System.Data.DataRelation)">
      <summary>Проверяет, может ли быть удалено из коллекции указанное <see cref="T:System.Data.DataRelation" />.</summary>
      <param name="relation">Отношение для выполнения проверки.</param>
      <returns>
        <see langword="true" />, если <see cref="T:System.Data.DataRelation" /> может быть удалено; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataRelationCollection.Clear">
      <summary>Удаляет отношения из коллекции.</summary>
    </member>
    <member name="E:System.Data.DataRelationCollection.CollectionChanged">
      <summary>Происходит при изменении коллекции.</summary>
    </member>
    <member name="M:System.Data.DataRelationCollection.Contains(System.String)">
      <summary>Проверяет, существует ли в коллекции <see cref="T:System.Data.DataRelation" /> с указанным именем (без учета регистра).</summary>
      <param name="name">Имя отношения для поиска.</param>
      <returns>
        <see langword="true" />, если отношение с указанным именем существует; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataRelationCollection.CopyTo(System.Data.DataRelation[],System.Int32)">
      <summary>Копирует коллекцию объектов <see cref="T:System.Data.DataRelation" />, начиная с указанного индекса.</summary>
      <param name="array">Массив объектов <see cref="T:System.Data.DataRelation" />, в который следует скопировать коллекцию.</param>
      <param name="index">Начальный индекс.</param>
    </member>
    <member name="M:System.Data.DataRelationCollection.GetDataSet">
      <summary>Этот метод поддерживает инфраструктуру .NET Framework и не предназначен для использования непосредственно из программного кода.</summary>
      <returns>Набор данных DataSet, на который указывает ссылка.</returns>
    </member>
    <member name="M:System.Data.DataRelationCollection.IndexOf(System.Data.DataRelation)">
      <summary>Возвращает индекс указанного объекта <see cref="T:System.Data.DataRelation" />.</summary>
      <param name="relation">Отношение, которое нужно найти.</param>
      <returns>Начинающийся с нуля индекс отношения или значение -1, если отношение не найдено в коллекции.</returns>
    </member>
    <member name="M:System.Data.DataRelationCollection.IndexOf(System.String)">
      <summary>Получает индекс ограничения <see cref="T:System.Data.DataRelation" />, заданного по имени.</summary>
      <param name="relationName">Имя отношения для поиска.</param>
      <returns>Индекс (индексация ведется от нуля) отношения с заданным именем или -1, если отношение не существует в коллекции.</returns>
    </member>
    <member name="P:System.Data.DataRelationCollection.Item(System.Int32)">
      <summary>Возвращает объект <see cref="T:System.Data.DataRelation" /> по указанному индексу.</summary>
      <param name="index">Индекс для поиска (индексация ведется от нуля).</param>
      <returns>Отношение <see cref="T:System.Data.DataRelation" /> или значение null, если указанное отношение <see cref="T:System.Data.DataRelation" /> не существует.</returns>
      <exception cref="T:System.IndexOutOfRangeException">Значение индекса больше числа элементов в коллекции.</exception>
    </member>
    <member name="P:System.Data.DataRelationCollection.Item(System.String)">
      <summary>Получает объект <see cref="T:System.Data.DataRelation" />, указанный именем.</summary>
      <param name="name">Имя отношения для поиска.</param>
      <returns>Именованное отношение <see cref="T:System.Data.DataRelation" /> или значение null, если указанное отношение <see cref="T:System.Data.DataRelation" /> не существует.</returns>
    </member>
    <member name="M:System.Data.DataRelationCollection.OnCollectionChanged(System.ComponentModel.CollectionChangeEventArgs)">
      <summary>Вызывает событие <see cref="E:System.Data.DataRelationCollection.CollectionChanged" />.</summary>
      <param name="ccevent">Объект <see cref="T:System.ComponentModel.CollectionChangeEventArgs" />, содержащий данные события.</param>
    </member>
    <member name="M:System.Data.DataRelationCollection.OnCollectionChanging(System.ComponentModel.CollectionChangeEventArgs)">
      <summary>Вызывает событие <see cref="E:System.Data.DataRelationCollection.CollectionChanged" />.</summary>
      <param name="ccevent">Объект <see cref="T:System.ComponentModel.CollectionChangeEventArgs" />, содержащий данные события.</param>
    </member>
    <member name="M:System.Data.DataRelationCollection.Remove(System.Data.DataRelation)">
      <summary>Удаляет указанное отношение из коллекции.</summary>
      <param name="relation">Отношение для удаления.</param>
      <exception cref="T:System.ArgumentNullException">Имя отношения имеет нулевое значение.</exception>
      <exception cref="T:System.ArgumentException">Отношение не принадлежит коллекции.</exception>
    </member>
    <member name="M:System.Data.DataRelationCollection.Remove(System.String)">
      <summary>Отношение с указанным именем удаляется из коллекции.</summary>
      <param name="name">Имя столбца для удаления.</param>
      <exception cref="T:System.IndexOutOfRangeException">В коллекции нет отношения с указанным именем.</exception>
    </member>
    <member name="M:System.Data.DataRelationCollection.RemoveAt(System.Int32)">
      <summary>Удаляет отношение с указанным индексом из коллекции.</summary>
      <param name="index">Индекс столбца для удаления.</param>
      <exception cref="T:System.ArgumentException">Коллекция не содержит отношение с указанным индексом.</exception>
    </member>
    <member name="M:System.Data.DataRelationCollection.RemoveCore(System.Data.DataRelation)">
      <summary>Выполняет проверку указанного объекта <see cref="T:System.Data.DataRelation" />.</summary>
      <param name="relation">Объект <see langword="DataRelation" /> для проверки.</param>
      <exception cref="T:System.ArgumentNullException">Коллекция не содержит отношение с указанным индексом.</exception>
      <exception cref="T:System.ArgumentException">Указанное отношение не принадлежит данной коллекции, или оно принадлежит другой коллекции.</exception>
    </member>
    <member name="T:System.Data.DataRow">
      <summary>Представляет строку данных в <see cref="T:System.Data.DataTable" />.</summary>
    </member>
    <member name="M:System.Data.DataRow.#ctor(System.Data.DataRowBuilder)">
      <summary>Инициализирует новый экземпляр DataRow. Создает строку из построителя. Только для внутреннего использования.</summary>
      <param name="builder">построитель</param>
    </member>
    <member name="M:System.Data.DataRow.AcceptChanges">
      <summary>Фиксирует все изменения, внесенные в эту строку со времени последнего вызова метода <see cref="M:System.Data.DataRow.AcceptChanges" />.</summary>
      <exception cref="T:System.Data.RowNotInTableException">Строка не принадлежит таблице.</exception>
    </member>
    <member name="M:System.Data.DataRow.BeginEdit">
      <summary>Начинает операцию изменения объекта <see cref="T:System.Data.DataRow" />.</summary>
      <exception cref="T:System.Data.InRowChangingEventException">Метод был вызван внутри события <see cref="E:System.Data.DataTable.RowChanging" />.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">Метод был вызван в удаленную строку.</exception>
    </member>
    <member name="M:System.Data.DataRow.CancelEdit">
      <summary>Отменяет текущее изменение строки.</summary>
      <exception cref="T:System.Data.InRowChangingEventException">Метод был вызван внутри события <see cref="E:System.Data.DataTable.RowChanging" />.</exception>
    </member>
    <member name="M:System.Data.DataRow.ClearErrors">
      <summary>Очищает ошибки для строки. Это относится к свойству <see cref="P:System.Data.DataRow.RowError" /> и ошибкам, установленным с помощью метода <see cref="M:System.Data.DataRow.SetColumnError(System.Int32,System.String)" />.</summary>
    </member>
    <member name="M:System.Data.DataRow.Delete">
      <summary>Удаляет объект <see cref="T:System.Data.DataRow" />.</summary>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">Объект <see cref="T:System.Data.DataRow" /> уже был удален.</exception>
    </member>
    <member name="M:System.Data.DataRow.EndEdit">
      <summary>Прекращает изменение строки.</summary>
      <exception cref="T:System.Data.InRowChangingEventException">Метод был вызван внутри события <see cref="E:System.Data.DataTable.RowChanging" />.</exception>
      <exception cref="T:System.Data.ConstraintException">Изменение привело к нарушению ограничения.</exception>
      <exception cref="T:System.Data.ReadOnlyException">Строка принадлежит таблице, а при изменении была предпринята попытка изменить значение столбца, доступного только для чтения.</exception>
      <exception cref="T:System.Data.NoNullAllowedException">При изменении была предпринята попытка поместить значение null в столбец, в котором свойство <see cref="P:System.Data.DataColumn.AllowDBNull" /> имеет значение false.</exception>
    </member>
    <member name="M:System.Data.DataRow.GetChildRows(System.Data.DataRelation)">
      <summary>Получает дочерние строки этого объекта <see cref="T:System.Data.DataRow" /> с помощью указанного объекта <see cref="T:System.Data.DataRelation" />.</summary>
      <param name="relation">Используемый <see cref="T:System.Data.DataRelation" />.</param>
      <returns>Массив объектов <see cref="T:System.Data.DataRow" /> или массив нулевой длины.</returns>
      <exception cref="T:System.ArgumentException">Отношение и строка не принадлежат одной и той же таблице.</exception>
      <exception cref="T:System.ArgumentNullException">Значением отношения является <see langword="null" />.</exception>
      <exception cref="T:System.Data.RowNotInTableException">Строка не принадлежит таблице.</exception>
      <exception cref="T:System.Data.VersionNotFoundException">Строка не содержит эту версию данных.</exception>
    </member>
    <member name="M:System.Data.DataRow.GetChildRows(System.Data.DataRelation,System.Data.DataRowVersion)">
      <summary>Получает дочерние строки объекта <see cref="T:System.Data.DataRow" /> с помощью указанных объектов <see cref="T:System.Data.DataRelation" /> и <see cref="T:System.Data.DataRowVersion" />.</summary>
      <param name="relation">Используемый <see cref="T:System.Data.DataRelation" />.</param>
      <param name="version">Одно из значений <see cref="T:System.Data.DataRowVersion" />, указывающих версию получаемых данных. Допустимые значения: <see langword="Default" />, <see langword="Original" />, <see langword="Current" /> и <see langword="Proposed" />.</param>
      <returns>Массив объектов <see cref="T:System.Data.DataRow" />.</returns>
      <exception cref="T:System.ArgumentException">Отношение и строка не принадлежат одной и той же таблице.</exception>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="relation" /> — <see langword="null" />.</exception>
      <exception cref="T:System.Data.RowNotInTableException">Строка не принадлежит таблице.</exception>
      <exception cref="T:System.Data.VersionNotFoundException">Строка не имеет запрошенного объекта <see cref="T:System.Data.DataRowVersion" />.</exception>
    </member>
    <member name="M:System.Data.DataRow.GetChildRows(System.String)">
      <summary>Получает дочерние строки объекта <see cref="T:System.Data.DataRow" /> с помощью указанного свойства <see cref="P:System.Data.DataRelation.RelationName" /> объекта <see cref="T:System.Data.DataRelation" />.</summary>
      <param name="relationName">Используемое свойство <see cref="P:System.Data.DataRelation.RelationName" /> объекта <see cref="T:System.Data.DataRelation" />.</param>
      <returns>Массив объектов <see cref="T:System.Data.DataRow" /> или массив нулевой длины.</returns>
      <exception cref="T:System.ArgumentException">Отношение и строка не принадлежат одной и той же таблице.</exception>
      <exception cref="T:System.Data.RowNotInTableException">Строка не принадлежит таблице.</exception>
    </member>
    <member name="M:System.Data.DataRow.GetChildRows(System.String,System.Data.DataRowVersion)">
      <summary>Получает дочерние строки объекта <see cref="T:System.Data.DataRow" /> с помощью указанного свойства <see cref="P:System.Data.DataRelation.RelationName" /> объектов <see cref="T:System.Data.DataRelation" /> и <see cref="T:System.Data.DataRowVersion" />.</summary>
      <param name="relationName">Используемое свойство <see cref="P:System.Data.DataRelation.RelationName" /> объекта <see cref="T:System.Data.DataRelation" />.</param>
      <param name="version">Одно из значений <see cref="T:System.Data.DataRowVersion" />, указывающих версию получаемых данных. Допустимые значения: <see langword="Default" />, <see langword="Original" />, <see langword="Current" /> и <see langword="Proposed" />.</param>
      <returns>Массив объектов <see cref="T:System.Data.DataRow" /> или массив нулевой длины.</returns>
      <exception cref="T:System.ArgumentException">Отношение и строка не принадлежат одной и той же таблице.</exception>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="relation" /> — <see langword="null" />.</exception>
      <exception cref="T:System.Data.RowNotInTableException">Строка не принадлежит таблице.</exception>
      <exception cref="T:System.Data.VersionNotFoundException">Строка не имеет запрошенного объекта <see cref="T:System.Data.DataRowVersion" />.</exception>
    </member>
    <member name="M:System.Data.DataRow.GetColumnError(System.Data.DataColumn)">
      <summary>Получает описание ошибки указанного объекта <see cref="T:System.Data.DataColumn" />.</summary>
      <param name="column">Объект <see cref="T:System.Data.DataColumn" />.</param>
      <returns>Текст описания ошибки.</returns>
    </member>
    <member name="M:System.Data.DataRow.GetColumnError(System.Int32)">
      <summary>Получает описание ошибки для столбца, указанного по индексу.</summary>
      <param name="columnIndex">Индекс столбца (с нуля).</param>
      <returns>Текст описания ошибки.</returns>
      <exception cref="T:System.IndexOutOfRangeException">Аргумент <paramref name="columnIndex" /> вне диапазона.</exception>
    </member>
    <member name="M:System.Data.DataRow.GetColumnError(System.String)">
      <summary>Получает описание ошибки для столбца, указанного по имени.</summary>
      <param name="columnName">Имя столбца.</param>
      <returns>Текст описания ошибки.</returns>
    </member>
    <member name="M:System.Data.DataRow.GetColumnsInError">
      <summary>Получает массив столбцов с ошибками.</summary>
      <returns>Массив объектов <see cref="T:System.Data.DataColumn" />, содержащих ошибки.</returns>
    </member>
    <member name="M:System.Data.DataRow.GetParentRow(System.Data.DataRelation)">
      <summary>Получает родительскую строку объекта <see cref="T:System.Data.DataRow" /> с помощью указанного объекта <see cref="T:System.Data.DataRelation" />.</summary>
      <param name="relation">Используемый <see cref="T:System.Data.DataRelation" />.</param>
      <returns>Родительский объект <see cref="T:System.Data.DataRow" /> текущей строки.</returns>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="relation" /> не принадлежит объекту <see cref="T:System.Data.DataTable" />.  
-или-
Строка имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.Data.DataException">Дочерняя строка имеет несколько родительских элементов.</exception>
      <exception cref="T:System.Data.InvalidConstraintException">Эта строка не принадлежит дочерней таблице объекта <see cref="T:System.Data.DataRelation" />.</exception>
      <exception cref="T:System.Data.RowNotInTableException">Строка не принадлежит таблице.</exception>
    </member>
    <member name="M:System.Data.DataRow.GetParentRow(System.Data.DataRelation,System.Data.DataRowVersion)">
      <summary>Получает родительскую строку объекта <see cref="T:System.Data.DataRow" /> с помощью указанных объектов <see cref="T:System.Data.DataRelation" /> и <see cref="T:System.Data.DataRowVersion" />.</summary>
      <param name="relation">Используемый <see cref="T:System.Data.DataRelation" />.</param>
      <param name="version">Одно из значений <see cref="T:System.Data.DataRowVersion" />, указывающих версию получаемых данных.</param>
      <returns>Родительский объект <see cref="T:System.Data.DataRow" /> текущей строки.</returns>
      <exception cref="T:System.ArgumentNullException">Строка имеет значение <see langword="null" />.  
-или-
Параметр <paramref name="relation" /> не принадлежит к родительским отношениям этой таблицы.</exception>
      <exception cref="T:System.Data.DataException">Дочерняя строка имеет несколько родительских элементов.</exception>
      <exception cref="T:System.Data.InvalidConstraintException">Дочерняя таблица отношения не является таблицей, которой принадлежит строка.</exception>
      <exception cref="T:System.Data.RowNotInTableException">Строка не принадлежит таблице.</exception>
      <exception cref="T:System.Data.VersionNotFoundException">Строка не содержит эту версию данных.</exception>
    </member>
    <member name="M:System.Data.DataRow.GetParentRow(System.String)">
      <summary>Получает родительскую строку объекта <see cref="T:System.Data.DataRow" /> с помощью указанного свойства <see cref="P:System.Data.DataRelation.RelationName" /> объекта <see cref="T:System.Data.DataRelation" />.</summary>
      <param name="relationName">Свойство <see cref="P:System.Data.DataRelation.RelationName" /> объекта <see cref="T:System.Data.DataRelation" />.</param>
      <returns>Родительский объект <see cref="T:System.Data.DataRow" /> текущей строки.</returns>
      <exception cref="T:System.ArgumentException">Отношение и строка не принадлежат одной и той же таблице.</exception>
      <exception cref="T:System.Data.DataException">Дочерняя строка имеет несколько родительских элементов.</exception>
      <exception cref="T:System.Data.RowNotInTableException">Строка не принадлежит таблице.</exception>
    </member>
    <member name="M:System.Data.DataRow.GetParentRow(System.String,System.Data.DataRowVersion)">
      <summary>Получает родительскую строку объекта <see cref="T:System.Data.DataRow" /> с помощью указанного свойства <see cref="P:System.Data.DataRelation.RelationName" /> объектов <see cref="T:System.Data.DataRelation" /> и <see cref="T:System.Data.DataRowVersion" />.</summary>
      <param name="relationName">Свойство <see cref="P:System.Data.DataRelation.RelationName" /> объекта <see cref="T:System.Data.DataRelation" />.</param>
      <param name="version">Одно из значений <see cref="T:System.Data.DataRowVersion" />.</param>
      <returns>Родительский объект <see cref="T:System.Data.DataRow" /> текущей строки.</returns>
      <exception cref="T:System.ArgumentException">Отношение и строка не принадлежат одной и той же таблице.</exception>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="relation" /> — <see langword="null" />.</exception>
      <exception cref="T:System.Data.DataException">Дочерняя строка имеет несколько родительских элементов.</exception>
      <exception cref="T:System.Data.RowNotInTableException">Строка не принадлежит таблице.</exception>
      <exception cref="T:System.Data.VersionNotFoundException">Строка не имеет запрошенного объекта <see cref="T:System.Data.DataRowVersion" />.</exception>
    </member>
    <member name="M:System.Data.DataRow.GetParentRows(System.Data.DataRelation)">
      <summary>Получает родительские строки объекта <see cref="T:System.Data.DataRow" /> с помощью указанного объекта <see cref="T:System.Data.DataRelation" />.</summary>
      <param name="relation">Используемый <see cref="T:System.Data.DataRelation" />.</param>
      <returns>Массив объектов <see cref="T:System.Data.DataRow" /> или массив нулевой длины.</returns>
      <exception cref="T:System.ArgumentException">Объект <see cref="T:System.Data.DataRelation" /> не принадлежит <see cref="T:System.Data.DataSet" /> этой строки.</exception>
      <exception cref="T:System.ArgumentNullException">Строка имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.Data.InvalidConstraintException">Дочерняя таблица отношения не является таблицей, которой принадлежит строка.</exception>
      <exception cref="T:System.Data.RowNotInTableException">Строка не принадлежит <see cref="T:System.Data.DataTable" />.</exception>
    </member>
    <member name="M:System.Data.DataRow.GetParentRows(System.Data.DataRelation,System.Data.DataRowVersion)">
      <summary>Получает родительские строки объекта <see cref="T:System.Data.DataRow" /> с помощью указанных объектов <see cref="T:System.Data.DataRelation" /> и <see cref="T:System.Data.DataRowVersion" />.</summary>
      <param name="relation">Используемый <see cref="T:System.Data.DataRelation" />.</param>
      <param name="version">Одно из значений <see cref="T:System.Data.DataRowVersion" />, указывающих версию получаемых данных.</param>
      <returns>Массив объектов <see cref="T:System.Data.DataRow" /> или массив нулевой длины.</returns>
      <exception cref="T:System.ArgumentException">Объект <see cref="T:System.Data.DataRelation" /> не принадлежит <see cref="T:System.Data.DataSet" /> этой строки.</exception>
      <exception cref="T:System.ArgumentNullException">Строка имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.Data.InvalidConstraintException">Дочерняя таблица отношения не является таблицей, которой принадлежит строка.</exception>
      <exception cref="T:System.Data.RowNotInTableException">Строка не принадлежит <see cref="T:System.Data.DataTable" />.</exception>
      <exception cref="T:System.Data.VersionNotFoundException">Строка не имеет запрошенного объекта <see cref="T:System.Data.DataRowVersion" />.</exception>
    </member>
    <member name="M:System.Data.DataRow.GetParentRows(System.String)">
      <summary>Получает родительские строки объекта <see cref="T:System.Data.DataRow" /> с помощью указанного свойства <see cref="P:System.Data.DataRelation.RelationName" /> объекта <see cref="T:System.Data.DataRelation" />.</summary>
      <param name="relationName">Свойство <see cref="P:System.Data.DataRelation.RelationName" /> объекта <see cref="T:System.Data.DataRelation" />.</param>
      <returns>Массив объектов <see cref="T:System.Data.DataRow" /> или массив нулевой длины.</returns>
      <exception cref="T:System.ArgumentException">Отношение и строка не принадлежат одной и той же таблице.</exception>
      <exception cref="T:System.Data.RowNotInTableException">Строка не принадлежит таблице.</exception>
    </member>
    <member name="M:System.Data.DataRow.GetParentRows(System.String,System.Data.DataRowVersion)">
      <summary>Получает родительские строки объекта <see cref="T:System.Data.DataRow" /> с помощью указанного свойства <see cref="P:System.Data.DataRelation.RelationName" /> объектов <see cref="T:System.Data.DataRelation" /> и <see cref="T:System.Data.DataRowVersion" />.</summary>
      <param name="relationName">Свойство <see cref="P:System.Data.DataRelation.RelationName" /> объекта <see cref="T:System.Data.DataRelation" />.</param>
      <param name="version">Одно из значений <see cref="T:System.Data.DataRowVersion" />, указывающих версию получаемых данных. Допустимые значения: <see langword="Default" />, <see langword="Original" />, <see langword="Current" /> и <see langword="Proposed" />.</param>
      <returns>Массив объектов <see cref="T:System.Data.DataRow" /> или массив нулевой длины.</returns>
      <exception cref="T:System.ArgumentException">Отношение и строка не принадлежат одной и той же таблице.</exception>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="relation" /> — <see langword="null" />.</exception>
      <exception cref="T:System.Data.RowNotInTableException">Строка не принадлежит таблице.</exception>
      <exception cref="T:System.Data.VersionNotFoundException">Строка не имеет запрошенного объекта <see cref="T:System.Data.DataRowVersion" />.</exception>
    </member>
    <member name="P:System.Data.DataRow.HasErrors">
      <summary>Получает значение, показывающее, есть ли ошибки в строке.</summary>
      <returns>Значение <see langword="true" />, если строка содержит ошибку; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataRow.HasVersion(System.Data.DataRowVersion)">
      <summary>Получает значение, показывающее, существует ли указанная версия.</summary>
      <param name="version">Одно из значений <see cref="T:System.Data.DataRowVersion" />, указывающее версию строки.</param>
      <returns>Значение <see langword="true" />, если версия существует; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataRow.IsNull(System.Data.DataColumn)">
      <summary>Получает значение, показывающее, содержит ли указанный объект <see cref="T:System.Data.DataColumn" /> значение null.</summary>
      <param name="column">Объект <see cref="T:System.Data.DataColumn" />.</param>
      <returns>Значение <see langword="true" />, если столбец содержит значение null; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataRow.IsNull(System.Data.DataColumn,System.Data.DataRowVersion)">
      <summary>Получает значение, показывающее, содержит ли указанные объекты <see cref="T:System.Data.DataColumn" /> и <see cref="T:System.Data.DataRowVersion" /> значение null.</summary>
      <param name="column">Объект <see cref="T:System.Data.DataColumn" />.</param>
      <param name="version">Одно из значений <see cref="T:System.Data.DataRowVersion" />, указывающее версию строки. Допустимые значения: <see langword="Default" />, <see langword="Original" />, <see langword="Current" /> и <see langword="Proposed" />.</param>
      <returns>Значение <see langword="true" />, если столбец содержит значение null; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataRow.IsNull(System.Int32)">
      <summary>Получает значение, показывающее, содержит ли столбец по указанному индексу значение null.</summary>
      <param name="columnIndex">Индекс столбца (с нуля).</param>
      <returns>Значение <see langword="true" />, если столбец содержит значение null; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataRow.IsNull(System.String)">
      <summary>Получает значение, показывающее, содержит ли названный столбец значение null.</summary>
      <param name="columnName">Имя столбца.</param>
      <returns>Значение <see langword="true" />, если столбец содержит значение null; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.DataRow.Item(System.Data.DataColumn)">
      <summary>Возвращает или задает данные, сохраненные в указанном объекте <see cref="T:System.Data.DataColumn" />.</summary>
      <param name="column">Значение типа <see cref="T:System.Data.DataColumn" />, содержащее данные.</param>
      <returns>Объект <see cref="T:System.Object" />, содержащий данные.</returns>
      <exception cref="T:System.ArgumentException">Столбец не принадлежит этой таблице.</exception>
      <exception cref="T:System.ArgumentNullException">Значением параметра <paramref name="column" /> является null.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">Была предпринята попытка задать значение в удаленной строке.</exception>
      <exception cref="T:System.InvalidCastException">Типы данных значения и столбца не совпадают.</exception>
    </member>
    <member name="P:System.Data.DataRow.Item(System.Data.DataColumn,System.Data.DataRowVersion)">
      <summary>Получает указанную версию данных, сохраненных в указанном объекте <see cref="T:System.Data.DataColumn" />.</summary>
      <param name="column">Объект <see cref="T:System.Data.DataColumn" />, содержащий сведения о столбце.</param>
      <param name="version">Одно из значений <see cref="T:System.Data.DataRowVersion" />, указывающее требуемую версию строки. Допустимые значения: <see langword="Default" />, <see langword="Original" />, <see langword="Current" /> и <see langword="Proposed" />.</param>
      <returns>Объект <see cref="T:System.Object" />, содержащий данные.</returns>
      <exception cref="T:System.ArgumentException">Столбец не принадлежит этой таблице.</exception>
      <exception cref="T:System.ArgumentNullException">Аргумент параметра <paramref name="column" /> содержит ноль.</exception>
      <exception cref="T:System.Data.VersionNotFoundException">Строка не содержит эту версию данных.</exception>
    </member>
    <member name="P:System.Data.DataRow.Item(System.Int32)">
      <summary>Возвращает или задает данные, сохраненные в столбце, указанном по индексу.</summary>
      <param name="columnIndex">Индекс столбца (с нуля).</param>
      <returns>Объект <see cref="T:System.Object" />, содержащий данные.</returns>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">Происходит при попытке задать значение в удаленной строке.</exception>
      <exception cref="T:System.IndexOutOfRangeException">Аргумент <paramref name="columnIndex" /> вне диапазона.</exception>
      <exception cref="T:System.InvalidCastException">Происходит при задании значения, когда <see cref="T:System.Type" /> нового значения не совпадает со свойством <see cref="P:System.Data.DataColumn.DataType" />.</exception>
    </member>
    <member name="P:System.Data.DataRow.Item(System.Int32,System.Data.DataRowVersion)">
      <summary>Получает данные, сохраненные в столбце, указанном по индексу и версии извлекаемых данных.</summary>
      <param name="columnIndex">Индекс столбца (с нуля).</param>
      <param name="version">Одно из значений <see cref="T:System.Data.DataRowVersion" />, указывающее требуемую версию строки. Допустимые значения: <see langword="Default" />, <see langword="Original" />, <see langword="Current" /> и <see langword="Proposed" />.</param>
      <returns>Объект <see cref="T:System.Object" />, содержащий данные.</returns>
      <exception cref="T:System.IndexOutOfRangeException">Аргумент <paramref name="columnIndex" /> вне диапазона.</exception>
      <exception cref="T:System.InvalidCastException">Типы данных значения и столбца не совпадают.</exception>
      <exception cref="T:System.Data.VersionNotFoundException">Строка не содержит эту версию данных.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">Была предпринята попытка задать значение в удаленной строке.</exception>
    </member>
    <member name="P:System.Data.DataRow.Item(System.String)">
      <summary>Возвращает или задает данные, сохраненные в столбце, указанном по имени.</summary>
      <param name="columnName">Имя столбца.</param>
      <returns>Объект <see cref="T:System.Object" />, содержащий данные.</returns>
      <exception cref="T:System.ArgumentException">Не удается найти столбец, указанный по значению <paramref name="columnName" />.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">Происходит при попытке задать значение в удаленной строке.</exception>
      <exception cref="T:System.InvalidCastException">Происходит при задании значения, когда <see cref="T:System.Type" /> нового значения не совпадает со свойством <see cref="P:System.Data.DataColumn.DataType" />.</exception>
      <exception cref="T:System.Data.NoNullAllowedException">Возникает попытке вставки значения null в столбец, где для свойства <see cref="P:System.Data.DataColumn.AllowDBNull" /> задано значение <see langword="false" />.</exception>
    </member>
    <member name="P:System.Data.DataRow.Item(System.String,System.Data.DataRowVersion)">
      <summary>Получает указанную версию данных, сохраненных в именованном столбце.</summary>
      <param name="columnName">Имя столбца.</param>
      <param name="version">Одно из значений <see cref="T:System.Data.DataRowVersion" />, указывающее требуемую версию строки. Допустимые значения: <see langword="Default" />, <see langword="Original" />, <see langword="Current" /> и <see langword="Proposed" />.</param>
      <returns>Объект <see cref="T:System.Object" />, содержащий данные.</returns>
      <exception cref="T:System.ArgumentException">Не удается найти столбец, указанный по значению <paramref name="columnName" />.</exception>
      <exception cref="T:System.InvalidCastException">Типы данных значения и столбца не совпадают.</exception>
      <exception cref="T:System.Data.VersionNotFoundException">Строка не содержит эту версию данных.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">Строка была удалена.</exception>
    </member>
    <member name="P:System.Data.DataRow.ItemArray">
      <summary>Возвращает или задает все значения для этой строки с помощью массива.</summary>
      <returns>Массив типа <see cref="T:System.Object" />.</returns>
      <exception cref="T:System.ArgumentException">Размер массива превышает число столбцов в таблице.</exception>
      <exception cref="T:System.InvalidCastException">Значение в массиве не соответствует его свойству <see cref="P:System.Data.DataColumn.DataType" /> в его соответствующем объекте <see cref="T:System.Data.DataColumn" />.</exception>
      <exception cref="T:System.Data.ConstraintException">Изменение привело к нарушению ограничения.</exception>
      <exception cref="T:System.Data.ReadOnlyException">При изменении была предпринята попытка изменить значение столбца, доступное только для чтения.</exception>
      <exception cref="T:System.Data.NoNullAllowedException">При изменении была предпринята попытка значение null в столбец, у которого свойство <see cref="P:System.Data.DataColumn.AllowDBNull" /> объекта <see cref="T:System.Data.DataColumn" /> имеет значение <see langword="false" />.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">Строка была удалена.</exception>
    </member>
    <member name="M:System.Data.DataRow.RejectChanges">
      <summary>Отменяет все изменения, внесенные в строку после последнего вызова метода <see cref="M:System.Data.DataRow.AcceptChanges" />.</summary>
      <exception cref="T:System.Data.RowNotInTableException">Строка не принадлежит таблице.</exception>
    </member>
    <member name="P:System.Data.DataRow.RowError">
      <summary>Возвращает или задает настраиваемое описание ошибки для строки.</summary>
      <returns>Текст описания ошибки.</returns>
    </member>
    <member name="P:System.Data.DataRow.RowState">
      <summary>Получает текущее состояние строки, относящееся к ее отношению к коллекции <see cref="T:System.Data.DataRowCollection" />.</summary>
      <returns>Одно из значений <see cref="T:System.Data.DataRowState" />.</returns>
    </member>
    <member name="M:System.Data.DataRow.SetAdded">
      <summary>Изменяет значение свойства <see cref="P:System.Data.DataRow.RowState" /> объекта <see cref="T:System.Data.DataRow" /> на <see langword="Added" />.</summary>
    </member>
    <member name="M:System.Data.DataRow.SetColumnError(System.Data.DataColumn,System.String)">
      <summary>Задает описание ошибки для столбца, указанного как <see cref="T:System.Data.DataColumn" />.</summary>
      <param name="column">Объект <see cref="T:System.Data.DataColumn" />, для которого задается описание ошибки.</param>
      <param name="error">Описание ошибки.</param>
    </member>
    <member name="M:System.Data.DataRow.SetColumnError(System.Int32,System.String)">
      <summary>Задает описание ошибки для столбца, указанного по индексу.</summary>
      <param name="columnIndex">Индекс столбца (с нуля).</param>
      <param name="error">Описание ошибки.</param>
      <exception cref="T:System.IndexOutOfRangeException">Аргумент <paramref name="columnIndex" /> вне диапазона</exception>
    </member>
    <member name="M:System.Data.DataRow.SetColumnError(System.String,System.String)">
      <summary>Задает описание ошибки для столбца, указанного по имени.</summary>
      <param name="columnName">Имя столбца.</param>
      <param name="error">Описание ошибки.</param>
    </member>
    <member name="M:System.Data.DataRow.SetModified">
      <summary>Изменяет значение свойства <see cref="P:System.Data.DataRow.RowState" /> объекта <see cref="T:System.Data.DataRow" /> на <see langword="Modified" />.</summary>
    </member>
    <member name="M:System.Data.DataRow.SetNull(System.Data.DataColumn)">
      <summary>Задает значение null указанному параметру <see cref="T:System.Data.DataColumn" />.</summary>
      <param name="column">Объект <see cref="T:System.Data.DataColumn" />.</param>
    </member>
    <member name="M:System.Data.DataRow.SetParentRow(System.Data.DataRow)">
      <summary>Задает родительскую строку <see cref="T:System.Data.DataRow" /> с указанным новым родительским объектом <see cref="T:System.Data.DataRow" />.</summary>
      <param name="parentRow">Новый родительский объект <see cref="T:System.Data.DataRow" />.</param>
    </member>
    <member name="M:System.Data.DataRow.SetParentRow(System.Data.DataRow,System.Data.DataRelation)">
      <summary>Задает родительскую строку <see cref="T:System.Data.DataRow" /> с указанными новыми родительскими объектами <see cref="T:System.Data.DataRow" /> и <see cref="T:System.Data.DataRelation" />.</summary>
      <param name="parentRow">Новый родительский объект <see cref="T:System.Data.DataRow" />.</param>
      <param name="relation">Отношение <see cref="T:System.Data.DataRelation" /> для использования.</param>
      <exception cref="T:System.Data.RowNotInTableException">Одна из строк не принадлежит таблице.</exception>
      <exception cref="T:System.ArgumentNullException">Одна из строк имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Отношение не принадлежит коллекции <see cref="T:System.Data.DataRelationCollection" /> объекта <see cref="T:System.Data.DataSet" />.</exception>
      <exception cref="T:System.Data.InvalidConstraintException">Дочернее отношение <see cref="T:System.Data.DataTable" /> не является таблицей, которой принадлежит эта строка.</exception>
    </member>
    <member name="P:System.Data.DataRow.Table">
      <summary>Получает объект <see cref="T:System.Data.DataTable" />, для которого эта строка имеет схему.</summary>
      <returns>Объект <see cref="T:System.Data.DataTable" />, которому принадлежит эта строка.</returns>
    </member>
    <member name="T:System.Data.DataRowAction">
      <summary>Описывает действие, выполняемое с объектом <see cref="T:System.Data.DataRow" />.</summary>
    </member>
    <member name="F:System.Data.DataRowAction.Add">
      <summary>Строка была добавлена в таблицу.</summary>
    </member>
    <member name="F:System.Data.DataRowAction.Change">
      <summary>Строка была изменена.</summary>
    </member>
    <member name="F:System.Data.DataRowAction.ChangeCurrentAndOriginal">
      <summary>Текущая и исходная версии строки были изменены.</summary>
    </member>
    <member name="F:System.Data.DataRowAction.ChangeOriginal">
      <summary>Исходная версия строки изменена.</summary>
    </member>
    <member name="F:System.Data.DataRowAction.Commit">
      <summary>Изменения, внесенные в строку, были зафиксированы.</summary>
    </member>
    <member name="F:System.Data.DataRowAction.Delete">
      <summary>Строка была удалена из таблицы.</summary>
    </member>
    <member name="F:System.Data.DataRowAction.Nothing">
      <summary>Строка не была изменена.</summary>
    </member>
    <member name="F:System.Data.DataRowAction.Rollback">
      <summary>Выполнен откат последнего изменения строки.</summary>
    </member>
    <member name="T:System.Data.DataRowBuilder">
      <summary>Тип <see langword="DataRowBuilder" /> поддерживает инфраструктуру.NET Framework и не предназначен для использования непосредственно из кода.</summary>
    </member>
    <member name="T:System.Data.DataRowChangeEventArgs">
      <summary>Предоставляет данные для событий <see cref="E:System.Data.DataTable.RowChanged" />, <see cref="E:System.Data.DataTable.RowChanging" />, <see cref="M:System.Data.DataTable.OnRowDeleting(System.Data.DataRowChangeEventArgs)" /> и <see cref="M:System.Data.DataTable.OnRowDeleted(System.Data.DataRowChangeEventArgs)" />.</summary>
    </member>
    <member name="M:System.Data.DataRowChangeEventArgs.#ctor(System.Data.DataRow,System.Data.DataRowAction)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.DataRowChangeEventArgs" />.</summary>
      <param name="row">Объект <see cref="T:System.Data.DataRow" />, в отношении которого происходит действие.</param>
      <param name="action">Одно из значений перечисления <see cref="T:System.Data.DataRowAction" />.</param>
    </member>
    <member name="P:System.Data.DataRowChangeEventArgs.Action">
      <summary>Возвращает действие, выполненное в отношении объекта <see cref="T:System.Data.DataRow" />.</summary>
      <returns>Одно из значений перечисления <see cref="T:System.Data.DataRowAction" />.</returns>
    </member>
    <member name="P:System.Data.DataRowChangeEventArgs.Row">
      <summary>Возвращает строку, в отношении которой произошло действие.</summary>
      <returns>Объект <see cref="T:System.Data.DataRow" />, в отношении которого происходит действие.</returns>
    </member>
    <member name="T:System.Data.DataRowChangeEventH*******ler">
      <summary>Представляет метод, обрабатывающий события <see cref="E:System.Data.DataTable.RowChanging" />, <see cref="E:System.Data.DataTable.RowChanged" />, <see cref="E:System.Data.DataTable.RowDeleting" /> и <see cref="E:System.Data.DataTable.RowDeleted" /> объекта <see cref="T:System.Data.DataTable" />.</summary>
      <param name="sender">Источник события.</param>
      <param name="e">Объект <see cref="T:System.Data.DataRowChangeEventArgs" />, содержащий данные события.</param>
    </member>
    <member name="T:System.Data.DataRowCollection">
      <summary>Представляет коллекцию строк для объекта <see cref="T:System.Data.DataTable" />.</summary>
    </member>
    <member name="M:System.Data.DataRowCollection.Add(System.Data.DataRow)">
      <summary>Добавляет заданный объект <see cref="T:System.Data.DataRow" /> в объект <see cref="T:System.Data.DataRowCollection" />.</summary>
      <param name="row">Добавляемый объект <see cref="T:System.Data.DataRow" />.</param>
      <exception cref="T:System.ArgumentNullException">Строка имеет значение NULL.</exception>
      <exception cref="T:System.ArgumentException">Строка либо принадлежит другой таблице, либо уже принадлежит этой таблице.</exception>
      <exception cref="T:System.Data.ConstraintException">Добавление нарушает ограничение.</exception>
      <exception cref="T:System.Data.NoNullAllowedException">Добавление пытается поместить пустое значение в объект <see cref="T:System.Data.DataColumn" />, свойство <see cref="P:System.Data.DataColumn.AllowDBNull" /> которого имеет значение "false".</exception>
    </member>
    <member name="M:System.Data.DataRowCollection.Add(System.Object[])">
      <summary>Создает строку с использованием заданных параметров и добавляет его в <see cref="T:System.Data.DataRowCollection" />.</summary>
      <param name="values">Массив значений, который используются для создания новой строки.</param>
      <returns>Отсутствует.</returns>
      <exception cref="T:System.ArgumentException">Размер массива превышает число столбцов в таблице.</exception>
      <exception cref="T:System.InvalidCastException">Значение не соответствует соответствующему типу столбца.</exception>
      <exception cref="T:System.Data.ConstraintException">Добавление строки нарушает ограничение.</exception>
      <exception cref="T:System.Data.NoNullAllowedException">Попытка поместить значение NULL в столбец, где <see cref="P:System.Data.DataColumn.AllowDBNull" /> имеет значение "false".</exception>
    </member>
    <member name="M:System.Data.DataRowCollection.Clear">
      <summary>Удаляет все строки из коллекции.</summary>
      <exception cref="T:System.Data.InvalidConstraintException">Свойство <see cref="T:System.Data.ForeignKeyConstraint" /> применяется для объекта <see cref="T:System.Data.DataRowCollection" />.</exception>
    </member>
    <member name="M:System.Data.DataRowCollection.Contains(System.Object)">
      <summary>Возвращает значение, которое указывает, содержит ли первичный ключ любой из строк в коллекции указанное значение.</summary>
      <param name="key">Значение первичного ключа для проверки.</param>
      <returns>Значение <see langword="true" />, если коллекция содержит <see cref="T:System.Data.DataRow" /> с указанным значением первичного ключа; в противном случае — значение<see langword="false" />.</returns>
      <exception cref="T:System.Data.MissingPrimaryKeyException">Таблица не имеет первичного ключа.</exception>
    </member>
    <member name="M:System.Data.DataRowCollection.Contains(System.Object[])">
      <summary>Возвращает значение, которое указывает, содержат ли столбцы первичного ключа любой из строк в коллекции значение, указанное в массиве объектов.</summary>
      <param name="keys">Массив значений первичного ключа для проверки.</param>
      <returns>Значение <see langword="true" />, если <see cref="T:System.Data.DataRowCollection" /> содержит <see cref="T:System.Data.DataRow" /> с указанным значением ключа; в противном случае — значение <see langword="false" />.</returns>
      <exception cref="T:System.Data.MissingPrimaryKeyException">Таблица не имеет первичного ключа.</exception>
    </member>
    <member name="M:System.Data.DataRowCollection.CopyTo(System.Array,System.Int32)">
      <summary>Копирует все объекты <see cref="T:System.Data.DataRow" /> из этой коллекции в заданный целевой массив, начиная с указанного индекса.</summary>
      <param name="ar">Одномерный массив, в который копируются элементы из коллекции <see langword="DataRowCollection" />. Индекс в массиве должен начинаться с нуля.</param>
      <param name="index">Индекс (отсчет с нуля) в массиве, с которого начинается копирование.</param>
    </member>
    <member name="M:System.Data.DataRowCollection.CopyTo(System.Data.DataRow[],System.Int32)">
      <summary>Копирует все объекты <see cref="T:System.Data.DataRow" /> из этой коллекции в заданный целевой массив, начиная с указанного индекса.</summary>
      <param name="array">Одномерный массив, в который копируются элементы из коллекции <see langword="DataRowCollection" />. Индекс в массиве должен начинаться с нуля.</param>
      <param name="index">Индекс (отсчет с нуля) в массиве, с которого начинается копирование.</param>
    </member>
    <member name="P:System.Data.DataRowCollection.Count">
      <summary>Возвращает общее число объектов <see cref="T:System.Data.DataRow" /> в коллекции.</summary>
      <returns>Общее число объектов <see cref="T:System.Data.DataRow" /> в коллекции.</returns>
    </member>
    <member name="M:System.Data.DataRowCollection.Find(System.Object)">
      <summary>Возвращает строку, указанную значением первичного ключа.</summary>
      <param name="key">Значение первичного ключа <see cref="T:System.Data.DataRow" /> для поиска.</param>
      <returns>Объект <see cref="T:System.Data.DataRow" />, содержащий указанное значение первичного ключа; в противном случае — значение NULL, если значение первичного ключа не существует в <see cref="T:System.Data.DataRowCollection" />.</returns>
      <exception cref="T:System.Data.MissingPrimaryKeyException">Таблица не имеет первичного ключа.</exception>
    </member>
    <member name="M:System.Data.DataRowCollection.Find(System.Object[])">
      <summary>Возвращает строку, которая содержит указанные значения первичного ключа.</summary>
      <param name="keys">Массив значений первичного ключа для поиска. Тип массива — <see langword="Object" />.</param>
      <returns>Объект <see cref="T:System.Data.DataRow" />, содержащий указанные значения первичного ключа; в противном случае — значение NULL, если значение первичного ключа отсутствует в <see cref="T:System.Data.DataRowCollection" />.</returns>
      <exception cref="T:System.IndexOutOfRangeException">Этому значению индекса не соответствуют никакие строки.</exception>
      <exception cref="T:System.Data.MissingPrimaryKeyException">Таблица не имеет первичного ключа.</exception>
    </member>
    <member name="M:System.Data.DataRowCollection.GetEnumerator">
      <summary>Возвращает <see cref="T:System.Collections.IEnumerator" /> для этой коллекции.</summary>
      <returns>Объект <see cref="T:System.Collections.IEnumerator" /> для коллекции.</returns>
    </member>
    <member name="M:System.Data.DataRowCollection.IndexOf(System.Data.DataRow)">
      <summary>Возвращает индекс указанного объекта <see cref="T:System.Data.DataRow" />.</summary>
      <param name="row">Объект <see langword="DataRow" />, который требуется найти.</param>
      <returns>Отсчитываемый от нуля индекс строки или значение -1, если строка не найдена в коллекции.</returns>
    </member>
    <member name="M:System.Data.DataRowCollection.InsertAt(System.Data.DataRow,System.Int32)">
      <summary>Вставляет новую строку в коллекцию в указанное положение.</summary>
      <param name="row">Добавляемый объект <see cref="T:System.Data.DataRow" />.</param>
      <param name="pos">Отсчитываемое от нуля расположение в коллекции, куда необходимо добавить строку <see langword="DataRow" />.</param>
      <exception cref="T:System.IndexOutOfRangeException">Значение параметра <paramref name="pos" /> меньше 0.</exception>
    </member>
    <member name="P:System.Data.DataRowCollection.Item(System.Int32)">
      <summary>Возвращает строку по указанному индексу.</summary>
      <param name="index">Отсчитываемый от нуля индекс строки для возвращения.</param>
      <returns>Указанный <see cref="T:System.Data.DataRow" />.</returns>
      <exception cref="T:System.IndexOutOfRangeException">Значение индекса больше числа элементов в коллекции.</exception>
    </member>
    <member name="M:System.Data.DataRowCollection.Remove(System.Data.DataRow)">
      <summary>Удаляет указанный объект <see cref="T:System.Data.DataRow" /> из коллекции.</summary>
      <param name="row">Объект <see cref="T:System.Data.DataRow" /> для удаления.</param>
    </member>
    <member name="M:System.Data.DataRowCollection.RemoveAt(System.Int32)">
      <summary>Удаляет строку по указанному индексу из коллекции.</summary>
      <param name="index">Индекс строки для удаления.</param>
    </member>
    <member name="T:System.Data.DataRowState">
      <summary>Получает состояние объекта <see cref="T:System.Data.DataRow" />.</summary>
    </member>
    <member name="F:System.Data.DataRowState.Added">
      <summary>Строка была добавлена в коллекцию <see cref="T:System.Data.DataRowCollection" /> и метод <see cref="M:System.Data.DataRow.AcceptChanges" /> не был вызван.</summary>
    </member>
    <member name="F:System.Data.DataRowState.Deleted">
      <summary>Строка была удалена с помощью метода <see cref="M:System.Data.DataRow.Delete" /> объекта <see cref="T:System.Data.DataRow" />.</summary>
    </member>
    <member name="F:System.Data.DataRowState.Detached">
      <summary>Строка была создана, но не является частью какой-либо <see cref="T:System.Data.DataRowCollection" />. Объект <see cref="T:System.Data.DataRow" /> имеет это состояние сразу после своего создания и перед добавлением в коллекцию, а также если он был удален из коллекции.</summary>
    </member>
    <member name="F:System.Data.DataRowState.Modified">
      <summary>Строка была изменена и объект <see cref="M:System.Data.DataRow.AcceptChanges" /> не был вызван.</summary>
    </member>
    <member name="F:System.Data.DataRowState.Unchanged">
      <summary>Строка не была изменена с момента последнего вызова <see cref="M:System.Data.DataRow.AcceptChanges" />.</summary>
    </member>
    <member name="T:System.Data.DataRowVersion">
      <summary>Описание версии <see cref="T:System.Data.DataRow" />.</summary>
    </member>
    <member name="F:System.Data.DataRowVersion.Current">
      <summary>Строка содержит текущие значения.</summary>
    </member>
    <member name="F:System.Data.DataRowVersion.Default">
      <summary>Версия <see cref="T:System.Data.DataRowState" /> по умолчанию. Для значения <see langword="DataRowState" /><see langword="Added" />, <see langword="Modified" /> или <see langword="Deleted" /> по умолчанию используется версия <see langword="Current" />. Для значения <see cref="T:System.Data.DataRowState" /><see langword="Detached" /> используется версия <see langword="Proposed" />.</summary>
    </member>
    <member name="F:System.Data.DataRowVersion.Original">
      <summary>Строка содержит исходные значения.</summary>
    </member>
    <member name="F:System.Data.DataRowVersion.Proposed">
      <summary>Строка содержит предложенное значение.</summary>
    </member>
    <member name="T:System.Data.DataRowView">
      <summary>Представляет настроенное представление <see cref="T:System.Data.DataRow" />.</summary>
    </member>
    <member name="M:System.Data.DataRowView.BeginEdit">
      <summary>Начинает процедуру изменения.</summary>
    </member>
    <member name="M:System.Data.DataRowView.CancelEdit">
      <summary>Отменяет процедуру изменения.</summary>
    </member>
    <member name="M:System.Data.DataRowView.CreateChildView(System.Data.DataRelation)">
      <summary>Возвращает <see cref="T:System.Data.DataView" /> для дочернего объекта <see cref="T:System.Data.DataTable" /> с указанным дочерним объектом <see cref="T:System.Data.DataRelation" />.</summary>
      <param name="relation">Объект <see cref="T:System.Data.DataRelation" />.</param>
      <returns>Объект <see cref="T:System.Data.DataView" /> для дочернего объекта <see cref="T:System.Data.DataTable" />.</returns>
    </member>
    <member name="M:System.Data.DataRowView.CreateChildView(System.Data.DataRelation,System.Boolean)">
      <summary>Возвращает <see cref="T:System.Data.DataView" /> для дочернего объекта <see cref="T:System.Data.DataTable" /> с указанным <see cref="T:System.Data.DataRelation" /> и родительским объектом.</summary>
      <param name="relation">Объект <see cref="T:System.Data.DataRelation" />.</param>
      <param name="followParent">Родительский объект.</param>
      <returns>Объект <see cref="T:System.Data.DataView" /> для дочернего объекта <see cref="T:System.Data.DataTable" />.</returns>
    </member>
    <member name="M:System.Data.DataRowView.CreateChildView(System.String)">
      <summary>Возвращает <see cref="T:System.Data.DataView" /> для дочернего объекта <see cref="T:System.Data.DataTable" /> с указанным именем дочернего объекта <see cref="T:System.Data.DataRelation" />.</summary>
      <param name="relationName">Строка, содержащая имя <see cref="T:System.Data.DataRelation" />.</param>
      <returns>Объект <see cref="T:System.Data.DataView" /> для дочернего объекта <see cref="T:System.Data.DataTable" />.</returns>
    </member>
    <member name="M:System.Data.DataRowView.CreateChildView(System.String,System.Boolean)">
      <summary>Возвращает <see cref="T:System.Data.DataView" /> для дочернего объекта <see cref="T:System.Data.DataTable" /> с указанным именем <see cref="T:System.Data.DataRelation" /> и родительским объектом.</summary>
      <param name="relationName">Строка, содержащая имя <see cref="T:System.Data.DataRelation" />.</param>
      <param name="followParent">Родительский объект</param>
      <returns>Объект <see cref="T:System.Data.DataView" /> для дочернего объекта <see cref="T:System.Data.DataTable" />.</returns>
    </member>
    <member name="P:System.Data.DataRowView.DataView">
      <summary>Получает объект <see cref="T:System.Data.DataView" />, которому принадлежит эта строка.</summary>
      <returns>Объект <see langword="DataView" />, которому принадлежит эта строка.</returns>
    </member>
    <member name="M:System.Data.DataRowView.Delete">
      <summary>Удаляет строку.</summary>
    </member>
    <member name="M:System.Data.DataRowView.EndEdit">
      <summary>Фиксирует изменения в базовом <see cref="T:System.Data.DataRow" /> и заканчивает сеанс редактирования, который был начат с <see cref="M:System.Data.DataRowView.BeginEdit" />.  Используйте метод <see cref="M:System.Data.DataRowView.CancelEdit" /> для отмены изменений, внесенных в объект <see cref="T:System.Data.DataRow" />.</summary>
    </member>
    <member name="M:System.Data.DataRowView.Equals(System.Object)">
      <summary>Возвращает значение,указывающее, идентичен ли текущий объект <see cref="T:System.Data.DataRowView" /> указанному объекту.</summary>
      <param name="other">Объект <see cref="T:System.Object" /> для сравнения.</param>
      <returns>Значение <see langword="true" />, если <paramref name="object" /> является объектом <see cref="T:System.Data.DataRowView" /> и возвращает ту же строку, что и текущий объект <see cref="T:System.Data.DataRowView" />; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataRowView.GetHashCode">
      <summary>Возвращает хэш-код объекта <see cref="T:System.Data.DataRow" />.</summary>
      <returns>Хэш-код (32-битное целое число со знаком) имеет значение 1, которое представляет логическое значение <see langword="true" />, если значение этого экземпляра является ненулевым; в противном случае целое число имеет значение 0, которое представляет логическое значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.DataRowView.IsEdit">
      <summary>Определяет, находится ли строка в режиме изменения.</summary>
      <returns>Значение <see langword="true" />, если строка находится в режиме изменения; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.DataRowView.IsNew">
      <summary>Указывает, является ли новым объект <see cref="T:System.Data.DataRowView" />.</summary>
      <returns>Значение <see langword="true" />, если строка является новой; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.DataRowView.Item(System.Int32)">
      <summary>Возвращает или задает значение в указанном столбце.</summary>
      <param name="ndx">Указанный столбец.</param>
      <returns>Значение столбца.</returns>
    </member>
    <member name="P:System.Data.DataRowView.Item(System.String)">
      <summary>Возвращает или задает значение в указанном столбце.</summary>
      <param name="property">Строка, содержащая указанный столбец.</param>
      <returns>Значение столбца.</returns>
    </member>
    <member name="E:System.Data.DataRowView.PropertyChanged">
      <summary>Событие, которое возникло, когда свойство <see cref="T:System.Data.DataRowView" /> было изменено.</summary>
    </member>
    <member name="P:System.Data.DataRowView.Row">
      <summary>Получает просматриваемый объект <see cref="T:System.Data.DataRow" />.</summary>
      <returns>Объект <see cref="T:System.Data.DataRow" />, просматриваемый в <see cref="T:System.Data.DataRowView" />.</returns>
    </member>
    <member name="P:System.Data.DataRowView.RowVersion">
      <summary>Получает описание текущей версии объекта <see cref="T:System.Data.DataRow" />.</summary>
      <returns>Одно из значений <see cref="T:System.Data.DataRowVersion" />. Возможными значения для свойства <see cref="P:System.Data.DataRowView.RowVersion" /> являются <see langword="Default" />, <see langword="Original" />, <see langword="Current" /> и <see langword="Proposed" />.</returns>
    </member>
    <member name="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetAttributes">
      <summary>Возвращает коллекцию настраиваемых атрибутов для этого экземпляра компонента.</summary>
      <returns>AttributeCollection, содержащая атрибуты для данного объекта.</returns>
    </member>
    <member name="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetClassName">
      <summary>Возвращает имя класса для этого экземпляра компонента.</summary>
      <returns>Имя класса для этого экземпляра компонента.</returns>
    </member>
    <member name="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetComponentName">
      <summary>Возвращает имя этого экземпляра компонента.</summary>
      <returns>Имя этого экземпляра компонента.</returns>
    </member>
    <member name="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetConverter">
      <summary>Возвращает преобразователь типов для этого экземпляра компонента.</summary>
      <returns>Преобразователь типов для этого экземпляра компонента.</returns>
    </member>
    <member name="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetDefaultEvent">
      <summary>Возвращает событие по умолчанию для этого экземпляра компонента.</summary>
      <returns>Событие по умолчанию для этого экземпляра компонента.</returns>
    </member>
    <member name="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetDefaultProperty">
      <summary>Возвращает свойство по умолчанию для этого экземпляра компонента.</summary>
      <returns>Свойство по умолчанию для этого экземпляра компонента.</returns>
    </member>
    <member name="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetEditor(System.Type)">
      <summary>Возвращает редактор указанного типа для этого экземпляра компонента.</summary>
      <param name="editorBaseType">Объект <see cref="T:System.Type" />, который представляет редактор для этого объекта.</param>
      <returns>Объект <see cref="T:System.Object" /> заданного типа, являющийся редактором для этого объекта, или <see langword="null" />, если редактор не найден.</returns>
    </member>
    <member name="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetEvents">
      <summary>Возвращает события для этого экземпляра компонента.</summary>
      <returns>События для этого экземпляра компонента.</returns>
    </member>
    <member name="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetEvents(System.Attribute[])">
      <summary>Возвращает события для этого экземпляра компонента с заданными атрибутами.</summary>
      <param name="attributes">Атрибуты</param>
      <returns>События для этого экземпляра компонента.</returns>
    </member>
    <member name="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetProperties">
      <summary>Возвращает свойства для этого экземпляра компонента.</summary>
      <returns>Свойства для этого экземпляра компонента.</returns>
    </member>
    <member name="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetProperties(System.Attribute[])">
      <summary>Возвращает свойства для этого экземпляра компонента с заданными атрибутами.</summary>
      <param name="attributes">Атрибуты.</param>
      <returns>Свойства для этого экземпляра компонента.</returns>
    </member>
    <member name="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetPropertyOwner(System.ComponentModel.PropertyDescriptor)">
      <summary>Возвращает объект, содержащий свойство, описанное указанным дескриптором свойства.</summary>
      <param name="pd">Дескриптор <see cref="T:System.ComponentModel.PropertyDescriptor" />, представляющий свойство, владельца которого требуется найти.</param>
      <returns>Объект <see cref="T:System.Object" />, представляющий владельца заданного свойства.</returns>
    </member>
    <member name="P:System.Data.DataRowView.System#ComponentModel#IDataErrorInfo#Error">
      <summary>Получает сообщение, описывающее все ошибки проверки объекта.</summary>
      <returns>Ошибка проверки в объекте.</returns>
    </member>
    <member name="P:System.Data.DataRowView.System#ComponentModel#IDataErrorInfo#Item(System.String)">
      <summary>Возвращает сообщение об ошибке для свойства с заданным именем.</summary>
      <param name="colName">Имя свойства, для которого возвращается сообщение об ошибке.</param>
      <returns>Сообщение об ошибке для свойства. Значение по умолчанию — пустая строка ("").</returns>
    </member>
    <member name="T:System.Data.DataSet">
      <summary>Представляет кэш данных в памяти.</summary>
    </member>
    <member name="M:System.Data.DataSet.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.DataSet" />.</summary>
    </member>
    <member name="M:System.Data.DataSet.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.DataSet" />, содержащего заданные сведения о сериализации и контекст.</summary>
      <param name="info">Данные, необходимые для сериализации или десериализации объекта.</param>
      <param name="context">Источник и назначение данного сериализованного потока.</param>
    </member>
    <member name="M:System.Data.DataSet.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext,System.Boolean)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.DataSet" />.</summary>
      <param name="info">Объект <see cref="T:System.Runtime.Serialization.SerializationInfo" />.</param>
      <param name="context">Объект <see cref="T:System.Runtime.Serialization.StreamingContext" />.</param>
      <param name="ConstructSchema">Логическое значение.</param>
    </member>
    <member name="M:System.Data.DataSet.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.DataSet" /> с заданным именем.</summary>
      <param name="dataSetName">Имя <see cref="T:System.Data.DataSet" />.</param>
    </member>
    <member name="M:System.Data.DataSet.AcceptChanges">
      <summary>Сохраняет все изменения, внесенные в класс <see cref="T:System.Data.DataSet" /> после его загрузки или после последнего вызова метода <see cref="M:System.Data.DataSet.AcceptChanges" />.</summary>
    </member>
    <member name="M:System.Data.DataSet.BeginInit">
      <summary>Начинает инициализацию <see cref="T:System.Data.DataSet" />, используемого в форме или другим компонентом. Инициализация происходит во время выполнения.</summary>
    </member>
    <member name="P:System.Data.DataSet.CaseSensitive">
      <summary>Возвращает или задает значение, определяющее, учитывается ли регистр при сравнении строк в объектах <see cref="T:System.Data.DataTable" />.</summary>
      <returns>
        <see langword="true" /> Если при сравнении строк учитывается регистр; в противном случае <see langword="false" />. Значение по умолчанию — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataSet.Clear">
      <summary>Удаляет из класса <see cref="T:System.Data.DataSet" /> любые данные путем удаления всех строк во всех таблицах.</summary>
    </member>
    <member name="M:System.Data.DataSet.Clone">
      <summary>Копирует структуру класса <see cref="T:System.Data.DataSet" />, включая все схемы, соотношения и ограничения объекта <see cref="T:System.Data.DataTable" />. Данные не копируются.</summary>
      <returns>Новый класс <see cref="T:System.Data.DataSet" />, имеющий ту же схему, что и текущий класс <see cref="T:System.Data.DataSet" />, но не содержащий данных.</returns>
    </member>
    <member name="M:System.Data.DataSet.Copy">
      <summary>Копирует структуру и данные для <see cref="T:System.Data.DataSet" />.</summary>
      <returns>Новый класс <see cref="T:System.Data.DataSet" />, имеющий ту же структуру (схемы таблиц, отношения и ограничения) и данные, что и класс <see cref="T:System.Data.DataSet" />.  
   
 Если эти классы являются подклассами, то и копия любого из них будет принадлежать соответствующему подклассу.</returns>
    </member>
    <member name="M:System.Data.DataSet.CreateDataReader">
      <summary>Возвращает объект <see cref="T:System.Data.DataTableReader" /> с одним результирующим набором для каждой последовательности <see cref="T:System.Data.DataTable" /> в той же последовательности, в которой таблицы отображаются в коллекции <see cref="P:System.Data.DataSet.Tables" />.</summary>
      <returns>Объект <see cref="T:System.Data.DataTableReader" />, содержащий один или несколько результирующих наборов, соответствующих экземплярам <see cref="T:System.Data.DataTable" />, содержащимся в исходном наборе данных <see cref="T:System.Data.DataSet" />.</returns>
    </member>
    <member name="M:System.Data.DataSet.CreateDataReader(System.Data.DataTable[])">
      <summary>Возвращает объект <see cref="T:System.Data.DataTableReader" /> с одним результирующим набором для каждой таблицы <see cref="T:System.Data.DataTable" />.</summary>
      <param name="dataTables">Массив таблиц DataTables, обеспечивающий последовательность результирующих наборов, которые будут возвращены в средстве чтения <see cref="T:System.Data.DataTableReader" />.</param>
      <returns>Объект <see cref="T:System.Data.DataTableReader" />, содержащий один или несколько результирующих наборов, соответствующих экземплярам <see cref="T:System.Data.DataTable" />, содержащимся в исходном наборе данных <see cref="T:System.Data.DataSet" />. Возвращенные результирующие наборы находятся в последовательности, определенной в параметре <paramref name="dataTables" />.</returns>
    </member>
    <member name="P:System.Data.DataSet.DataSetName">
      <summary>Возвращает или задает имя текущего <see cref="T:System.Data.DataSet" />.</summary>
      <returns>Имя <see cref="T:System.Data.DataSet" />.</returns>
    </member>
    <member name="P:System.Data.DataSet.DefaultViewManager">
      <summary>Получает новое представление данных класса <see cref="T:System.Data.DataSet" /> для осуществления фильтрации, поиска или перехода с помощью настраиваемого класса <see cref="T:System.Data.DataViewManager" />.</summary>
      <returns>Объект <see cref="T:System.Data.DataViewManager" />.</returns>
    </member>
    <member name="M:System.Data.DataSet.DetermineSchemaSerializationMode(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Определяет <see cref="P:System.Data.DataSet.SchemaSerializationMode" /> для <see cref="T:System.Data.DataSet" />.</summary>
      <param name="info">Объект <see cref="T:System.Runtime.Serialization.SerializationInfo" />, вместе с которым вызывается защищенный конструктор <see cref="M:System.Data.DataSet.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" /> набора данных <see langword="DataSet" /> во время десериализации в удаленных сценариях.</param>
      <param name="context">Объект <see cref="T:System.Runtime.Serialization.StreamingContext" />, вместе с которым вызывается защищенный конструктор <see cref="M:System.Data.DataSet.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" /> набора данных <see langword="DataSet" /> во время десериализации в удаленных сценариях.</param>
      <returns>Перечисление <see cref="T:System.Data.SchemaSerializationMode" />, которое указывает, следует ли исключать из передаваемых данных сведения о схеме.</returns>
    </member>
    <member name="M:System.Data.DataSet.DetermineSchemaSerializationMode(System.Xml.XmlReader)">
      <summary>Определяет <see cref="P:System.Data.DataSet.SchemaSerializationMode" /> для <see cref="T:System.Data.DataSet" />.</summary>
      <param name="reader">Экземпляр <see cref="T:System.Xml.XmlReader" />, который передается во время десериализации набора данных <see cref="T:System.Data.DataSet" />.</param>
      <returns>Перечисление <see cref="T:System.Data.SchemaSerializationMode" />, которое указывает, следует ли исключать из передаваемых данных сведения о схеме.</returns>
    </member>
    <member name="M:System.Data.DataSet.EndInit">
      <summary>Завершает инициализацию <see cref="T:System.Data.DataSet" />, используемого в форме или другим компонентом. Инициализация происходит во время выполнения.</summary>
    </member>
    <member name="P:System.Data.DataSet.EnforceConstraints">
      <summary>Возвращает или задает значение, определяющее соблюдение правил ограничения при попытке совершения операции обновления.</summary>
      <returns>
        <see langword="true" /> Если правила соблюдаются; в противном случае <see langword="false" />. Значение по умолчанию — <see langword="true" />.</returns>
      <exception cref="T:System.Data.ConstraintException">Невозможно наложить одно или несколько ограничений.</exception>
    </member>
    <member name="P:System.Data.DataSet.ExtendedProperties">
      <summary>Возвращает коллекцию настраиваемых данных пользователя, связанных с <see langword="DataSet" />.</summary>
      <returns>Класс <see cref="T:System.Data.PropertyCollection" />, содержащий все настраиваемые данные пользователя.</returns>
    </member>
    <member name="M:System.Data.DataSet.GetChanges">
      <summary>Получает копию класса <see cref="T:System.Data.DataSet" />, содержащую все изменения, внесенные после его загрузки или после последнего вызова метода <see cref="M:System.Data.DataSet.AcceptChanges" />.</summary>
      <returns>Копия изменений из данного <see cref="T:System.Data.DataSet" />, с которой можно выполнять различные операции и позднее объединить с данными таблицы, используя метод <see cref="M:System.Data.DataSet.Merge(System.Data.DataSet)" />. Если никакие строки не менялись, метод возвращает <see langword="null" />.</returns>
    </member>
    <member name="M:System.Data.DataSet.GetChanges(System.Data.DataRowState)">
      <summary>Получает копию таблицы <see cref="T:System.Data.DataSet" />, содержащую все изменения, внесенные после ее последней загрузки или после вызова метода <see cref="M:System.Data.DataSet.AcceptChanges" /> и отфильтрованные по параметру <see cref="T:System.Data.DataRowState" />.</summary>
      <param name="rowStates">Одно из значений <see cref="T:System.Data.DataRowState" />.</param>
      <returns>Отфильтрованная копия класса <see cref="T:System.Data.DataSet" />, с которой можно работать, а затем вернуть в исходный класс с помощью метода <see cref="M:System.Data.DataSet.Merge(System.Data.DataSet)" />. Если строки с требуемым типом <see cref="T:System.Data.DataRowState" /> отсутствуют, метод вернет значение <see langword="null" />.</returns>
    </member>
    <member name="M:System.Data.DataSet.GetDataSetSchema(System.Xml.Schema.XmlSchemaSet)">
      <summary>Получает копию <see cref="T:System.Xml.Schema.XmlSchemaSet" /> для DataSet.</summary>
      <param name="schemaSet">Указанный набор схем.</param>
      <returns>Копия <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</returns>
    </member>
    <member name="M:System.Data.DataSet.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Заполняет объект сведений о сериализации данными, необходимыми для сериализации <see cref="T:System.Data.DataSet" />.</summary>
      <param name="info">Объект <see cref="T:System.Runtime.Serialization.SerializationInfo" />, содержащий сериализуемые данные, связанные с исключением <see cref="T:System.Data.DataSet" />.</param>
      <param name="context">Объект <see cref="T:System.Runtime.Serialization.StreamingContext" />, содержащий источник и назначение сериализуемого потока, связанного с объектом <see cref="T:System.Data.DataSet" />.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="info" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Data.DataSet.GetSchemaSerializable">
      <summary>Возвращает сериализуемый экземпляр <see cref="T:System.Xml.Schema.XmlSchema" />.</summary>
      <returns>Экземпляр класса <see cref="T:System.Xml.Schema.XmlSchema" />.</returns>
    </member>
    <member name="M:System.Data.DataSet.GetSerializationData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Десериализует данные таблицы из двоичного потока или XML-потока.</summary>
      <param name="info">Экземпляр класса <see cref="T:System.Runtime.Serialization.SerializationInfo" />.</param>
      <param name="context">Контекст потоковой передачи.</param>
    </member>
    <member name="M:System.Data.DataSet.GetXml">
      <summary>Возвращает XML-представление данных, хранящихся в классе <see cref="T:System.Data.DataSet" />.</summary>
      <returns>Строка, являющаяся представлением данных, хранящихся в классе <see cref="T:System.Data.DataSet" />.</returns>
    </member>
    <member name="M:System.Data.DataSet.GetXmlSchema">
      <summary>Возвращает XML-схему для XML-представления данных, хранящихся в классе <see cref="T:System.Data.DataSet" />.</summary>
      <returns>Строка, которая является XML-схемой для XML-представления данных, хранящихся в классе <see cref="T:System.Data.DataSet" />.</returns>
    </member>
    <member name="M:System.Data.DataSet.HasChanges">
      <summary>Получает значение, определяющее наличие изменений в классе <see cref="T:System.Data.DataSet" />, включая добавление, удаление или изменение строк.</summary>
      <returns>Значение <see langword="true" />, если класс <see cref="T:System.Data.DataSet" /> был изменен, в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataSet.HasChanges(System.Data.DataRowState)">
      <summary>Получает значение, определяющее наличие изменений в классе <see cref="T:System.Data.DataSet" />, включая добавление, удаление или изменение строк, отфильтрованных по типу <see cref="T:System.Data.DataRowState" />.</summary>
      <param name="rowStates">Одно из значений <see cref="T:System.Data.DataRowState" />.</param>
      <returns>Значение <see langword="true" />, если класс <see cref="T:System.Data.DataSet" /> был изменен, в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.DataSet.HasErrors">
      <summary>Получает значение, определяющее наличие ошибок в любом из объектов <see cref="T:System.Data.DataTable" /> в классе <see cref="T:System.Data.DataSet" />.</summary>
      <returns>
        <see langword="true" /> Если таблица содержит ошибку; в противном случае <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataSet.InferXmlSchema(System.IO.Stream,System.String[])">
      <summary>Применяет XML-схему из указанного объекта <see cref="T:System.IO.Stream" /> к объекту <see cref="T:System.Data.DataSet" />.</summary>
      <param name="stream">Объект <see langword="Stream" />, из которого считывается схема.</param>
      <param name="nsArray">Массив строк URI пространства имен, исключаемый из интерфейса схемы.</param>
    </member>
    <member name="M:System.Data.DataSet.InferXmlSchema(System.IO.TextReader,System.String[])">
      <summary>Применяет XML-схему из указанного объекта <see cref="T:System.IO.TextReader" /> к объекту <see cref="T:System.Data.DataSet" />.</summary>
      <param name="reader">Объект <see langword="TextReader" />, из которого считывается схема.</param>
      <param name="nsArray">Массив строк URI пространства имен, исключаемый из интерфейса схемы.</param>
    </member>
    <member name="M:System.Data.DataSet.InferXmlSchema(System.String,System.String[])">
      <summary>Применяет XML-схему из указанного файла к классу <see cref="T:System.Data.DataSet" />.</summary>
      <param name="fileName">Имя файла (включая путь), из которого считывается схема.</param>
      <param name="nsArray">Массив строк URI пространства имен, исключаемый из интерфейса схемы.</param>
      <exception cref="T:System.Security.SecurityException">Для поля <see cref="T:System.Security.Permissions.FileIOPermission" /> не задан класс <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />.</exception>
    </member>
    <member name="M:System.Data.DataSet.InferXmlSchema(System.Xml.XmlReader,System.String[])">
      <summary>Применяет XML-схему из указанного объекта <see cref="T:System.Xml.XmlReader" /> к объекту <see cref="T:System.Data.DataSet" />.</summary>
      <param name="reader">Объект <see langword="XMLReader" />, из которого считывается схема.</param>
      <param name="nsArray">Массив строк URI пространства имен, исключаемый из интерфейса схемы.</param>
    </member>
    <member name="E:System.Data.DataSet.Initialized">
      <summary>Происходит после инициализации таблицы <see cref="T:System.Data.DataSet" />.</summary>
    </member>
    <member name="M:System.Data.DataSet.InitializeDerivedDataSet">
      <summary>Десериализует все данные таблицы DataSet из двоичного потока или XML-потока.</summary>
    </member>
    <member name="M:System.Data.DataSet.IsBinarySerialized(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Анализирует формат сериализованного представления набора данных <see langword="DataSet" />.</summary>
      <param name="info">Объект <see cref="T:System.Runtime.Serialization.SerializationInfo" />.</param>
      <param name="context">Объект <see cref="T:System.Runtime.Serialization.StreamingContext" />.</param>
      <returns>Значение <see langword="true" />, если указанный объект <see cref="T:System.Runtime.Serialization.SerializationInfo" /> представляет набор данных <see langword="DataSet" />, сериализованному в двоичном формате; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.DataSet.IsInitialized">
      <summary>Получает значение, указывающее, инициализирована ли таблица <see cref="T:System.Data.DataSet" />.</summary>
      <returns>Значение <see langword="true" /> указывает, что компонент завершил инициализацию; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.DataTable[])">
      <summary>Заполняет набор данных <see cref="T:System.Data.DataSet" /> значениями из источника данных с помощью предоставляемого объекта <see cref="T:System.Data.IDataReader" />, использующего массив экземпляров <see cref="T:System.Data.DataTable" /> для предоставления сведений о схеме и пространстве имен.</summary>
      <param name="reader">Объект <see cref="T:System.Data.IDataReader" />, предоставляющий один или несколько наборов результатов.</param>
      <param name="loadOption">Значение из перечисления <see cref="T:System.Data.LoadOption" />, которое указывает, как строки, уже находящиеся в экземплярах <see cref="T:System.Data.DataTable" /> набора данных <see cref="T:System.Data.DataSet" />, должны объединяться со входящими строками, имеющими общий первичный ключ.</param>
      <param name="tables">Массив экземпляров <see cref="T:System.Data.DataTable" />, из которых метод <see cref="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.DataTable[])" /> получает сведения об имени и пространстве имен. Каждая из этих таблиц должна являться членом коллекции <see cref="T:System.Data.DataTableCollection" />, находящейся в этом наборе данных <see cref="T:System.Data.DataSet" />.</param>
    </member>
    <member name="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventH*******ler,System.Data.DataTable[])">
      <summary>Заполняет набор данных <see cref="T:System.Data.DataSet" /> значениями из источника данных с помощью предоставляемого объекта <see cref="T:System.Data.IDataReader" />, использующего массив экземпляров <see cref="T:System.Data.DataTable" /> для предоставления сведений о схеме и пространстве имен.</summary>
      <param name="reader">Объект <see cref="T:System.Data.IDataReader" />, предоставляющий один или несколько наборов результатов.</param>
      <param name="loadOption">Значение из перечисления <see cref="T:System.Data.LoadOption" />, которое указывает, как строки, уже находящиеся в экземплярах <see cref="T:System.Data.DataTable" /> набора данных <see cref="T:System.Data.DataSet" />, должны объединяться со входящими строками, имеющими общий первичный ключ.</param>
      <param name="errorH*******ler">Делегат <see cref="T:System.Data.FillErrorEventH*******ler" />, вызываемый при возникновении ошибки во время загрузки данных.</param>
      <param name="tables">Массив экземпляров <see cref="T:System.Data.DataTable" />, из которых метод <see cref="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventH*******ler,System.Data.DataTable[])" /> получает сведения об имени и пространстве имен.</param>
    </member>
    <member name="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.String[])">
      <summary>Заполняет набор данных <see cref="T:System.Data.DataSet" /> значениями из источника данных с помощью предоставляемого объекта <see cref="T:System.Data.IDataReader" />, используя массив строк для предоставления имен таблиц в наборе данных <see langword="DataSet" />.</summary>
      <param name="reader">Объект <see cref="T:System.Data.IDataReader" />, предоставляющий один или несколько наборов результатов.</param>
      <param name="loadOption">Значение из перечисления <see cref="T:System.Data.LoadOption" />, которое указывает, как строки, уже находящиеся в экземплярах <see cref="T:System.Data.DataTable" /> набора данных <see langword="DataSet" />, должны объединяться со входящими строками, имеющими общий первичный ключ.</param>
      <param name="tables">Массив строк, из которого метод <see langword="Load" /> получает сведения об именах таблиц.</param>
    </member>
    <member name="P:System.Data.DataSet.Locale">
      <summary>Возвращает или задает сведения о языке, используемые для сравнения строк таблицы.</summary>
      <returns>Класс <see cref="T:System.Globalization.CultureInfo" />, содержащий данные о языковом стандарте, используемом пользователем на компьютере. Значение по умолчанию — <see langword="null" />.</returns>
    </member>
    <member name="M:System.Data.DataSet.Merge(System.Data.DataRow[])">
      <summary>Осуществляет слияние массива объектов <see cref="T:System.Data.DataRow" /> и текущего класса <see cref="T:System.Data.DataSet" />.</summary>
      <param name="rows">Массив объектов <see langword="DataRow" />, добавляемый в <see langword="DataSet" />.</param>
    </member>
    <member name="M:System.Data.DataSet.Merge(System.Data.DataRow[],System.Boolean,System.Data.MissingSchemaAction)">
      <summary>Осуществляет слияние массива объектов <see cref="T:System.Data.DataRow" /> и текущего объекта <see cref="T:System.Data.DataSet" />, сохраняя или удаляя любые изменения в этом объекте <see langword="DataSet" /> и обрабатывая несовместимую схему в соответствии с заданными аргументами.</summary>
      <param name="rows">Массив объектов <see cref="T:System.Data.DataRow" />, добавляемый в <see langword="DataSet" />.</param>
      <param name="preserveChanges">Значение <see langword="true" />, если необходимо сохранить изменения в объекте <see langword="DataSet" />; в противном случае — значение <see langword="false" />.</param>
      <param name="missingSchemaAction">Одно из значений <see cref="T:System.Data.MissingSchemaAction" />.</param>
    </member>
    <member name="M:System.Data.DataSet.Merge(System.Data.DataSet)">
      <summary>Осуществляет слияние указанного объекта <see cref="T:System.Data.DataSet" /> и его схемы с текущим объектом <see langword="DataSet" />.</summary>
      <param name="dataSet">Объект <see langword="DataSet" />, данные и схема которого подлежат слиянию.</param>
      <exception cref="T:System.Data.ConstraintException">Невозможно включить одно или более ограничений.</exception>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="dataSet" /> — <see langword="null" />.</exception>
    </member>
    <member name="M:System.Data.DataSet.Merge(System.Data.DataSet,System.Boolean)">
      <summary>Осуществляет слияние указанного класса <see cref="T:System.Data.DataSet" /> и его схемы с текущим объектом <see langword="DataSet" />, сохраняя или удаляя любые изменения в этом объекте <see langword="DataSet" /> в соответствии с заданным аргументом.</summary>
      <param name="dataSet">Объект <see langword="DataSet" />, данные и схема которого подлежат слиянию.</param>
      <param name="preserveChanges">Значение <see langword="true" />, если необходимо сохранить изменения в текущем объекте <see langword="DataSet" />; в противном случае — значение <see langword="false" />.</param>
    </member>
    <member name="M:System.Data.DataSet.Merge(System.Data.DataSet,System.Boolean,System.Data.MissingSchemaAction)">
      <summary>Осуществляет слияние указанного класса <see cref="T:System.Data.DataSet" /> и его схемы с текущим набором данных <see langword="DataSet" />, сохраняя или удаляя любые изменения в текущем наборе данных <see langword="DataSet" /> и обрабатывая несовместимую схему в соответствии с заданными аргументами.</summary>
      <param name="dataSet">Объект <see langword="DataSet" />, данные и схема которого подлежат слиянию.</param>
      <param name="preserveChanges">Значение <see langword="true" />, если необходимо сохранить изменения в текущем объекте <see langword="DataSet" />; в противном случае — значение <see langword="false" />.</param>
      <param name="missingSchemaAction">Одно из значений <see cref="T:System.Data.MissingSchemaAction" />.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="dataSet" /> — <see langword="null" />.</exception>
    </member>
    <member name="M:System.Data.DataSet.Merge(System.Data.DataTable)">
      <summary>Осуществляет слияние указанного объекта <see cref="T:System.Data.DataTable" /> и его схемы с текущим объектом <see cref="T:System.Data.DataSet" />.</summary>
      <param name="table">Объект <see cref="T:System.Data.DataTable" />, данные и схема которого подлежат слиянию.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="table" /> — <see langword="null" />.</exception>
    </member>
    <member name="M:System.Data.DataSet.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
      <summary>Осуществляет слияние указанного класса <see cref="T:System.Data.DataTable" /> и его схемы с текущим объектом <see langword="DataSet" />, сохраняя или удаляя любые изменения в этом объекте <see langword="DataSet" /> и обрабатывая несовместимую схему в соответствии с заданными аргументами.</summary>
      <param name="table">Объект <see langword="DataTable" />, данные и схема которого подлежат слиянию.</param>
      <param name="preserveChanges">Одно из значений <see cref="T:System.Data.MissingSchemaAction" />.</param>
      <param name="missingSchemaAction">Значение <see langword="true" />, если необходимо сохранить изменения в объекте <see langword="DataSet" />; в противном случае — значение <see langword="false" />.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="dataSet" /> — <see langword="null" />.</exception>
    </member>
    <member name="E:System.Data.DataSet.MergeFailed">
      <summary>Происходит, если значения первичного ключа конечного и основного объектов <see cref="T:System.Data.DataRow" /> совпадают, а свойство <see cref="P:System.Data.DataSet.EnforceConstraints" /> имеет значение true.</summary>
    </member>
    <member name="P:System.Data.DataSet.Namespace">
      <summary>Возвращает или задает пространство имен <see cref="T:System.Data.DataSet" />.</summary>
      <returns>Пространство имен <see cref="T:System.Data.DataSet" />.</returns>
      <exception cref="T:System.ArgumentException">Пространство имен уже содержит данные.</exception>
    </member>
    <member name="M:System.Data.DataSet.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)">
      <summary>Вызывает событие <see cref="M:System.Data.DataSet.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)" />.</summary>
      <param name="pcevent">Объект <see cref="T:System.ComponentModel.PropertyChangedEventArgs" />, содержащий данные события.</param>
    </member>
    <member name="M:System.Data.DataSet.OnRemoveRelation(System.Data.DataRelation)">
      <summary>Происходит при удалении объекта <see cref="T:System.Data.DataRelation" /> из <see cref="T:System.Data.DataTable" />.</summary>
      <param name="relation">Удаляемый объект <see cref="T:System.Data.DataRelation" />.</param>
    </member>
    <member name="M:System.Data.DataSet.OnRemoveTable(System.Data.DataTable)">
      <summary>Происходит при удалении объекта <see cref="T:System.Data.DataTable" /> из <see cref="T:System.Data.DataSet" />.</summary>
      <param name="table">Удаляемый объект <see cref="T:System.Data.DataTable" />.</param>
    </member>
    <member name="P:System.Data.DataSet.Prefix">
      <summary>Возвращает или задает префикс XML, который является псевдонимом пространства имен класса <see cref="T:System.Data.DataSet" />.</summary>
      <returns>Префикс XML для пространства имен <see cref="T:System.Data.DataSet" />.</returns>
    </member>
    <member name="M:System.Data.DataSet.RaisePropertyChanging(System.String)">
      <summary>Посылает уведомление об изменении указанного свойства <see cref="T:System.Data.DataSet" />.</summary>
      <param name="name">Имя свойства, которое нужно изменить.</param>
    </member>
    <member name="M:System.Data.DataSet.ReadXml(System.IO.Stream)">
      <summary>Считывает XML-схему и данные в <see cref="T:System.Data.DataSet" />, используя указанный класс <see cref="T:System.IO.Stream" />.</summary>
      <param name="stream">Производный объект от класса <see cref="T:System.IO.Stream" />.</param>
      <returns>
        <see cref="T:System.Data.XmlReadMode" /> служит для чтения данных.</returns>
    </member>
    <member name="M:System.Data.DataSet.ReadXml(System.IO.Stream,System.Data.XmlReadMode)">
      <summary>Считывает XML-схему и данные в <see cref="T:System.Data.DataSet" />, используя указанные объекты <see cref="T:System.IO.Stream" /> и <see cref="T:System.Data.XmlReadMode" />.</summary>
      <param name="stream">Класс <see cref="T:System.IO.Stream" />, из которого выполняется чтение.</param>
      <param name="mode">Одно из значений <see cref="T:System.Data.XmlReadMode" />.</param>
      <returns>
        <see langword="XmlReadMode" /> служит для чтения данных.</returns>
    </member>
    <member name="M:System.Data.DataSet.ReadXml(System.IO.TextReader)">
      <summary>Считывает XML-схему и данные в <see cref="T:System.Data.DataSet" />, используя указанный класс <see cref="T:System.IO.TextReader" />.</summary>
      <param name="reader">Объект <see langword="TextReader" />, из которого считывается схема и данные.</param>
      <returns>
        <see cref="T:System.Data.XmlReadMode" /> служит для чтения данных.</returns>
    </member>
    <member name="M:System.Data.DataSet.ReadXml(System.IO.TextReader,System.Data.XmlReadMode)">
      <summary>Считывает XML-схему и данные в <see cref="T:System.Data.DataSet" />, используя указанные объекты <see cref="T:System.IO.TextReader" /> и <see cref="T:System.Data.XmlReadMode" />.</summary>
      <param name="reader">Класс <see cref="T:System.IO.TextReader" />, из которого выполняется чтение.</param>
      <param name="mode">Одно из значений <see cref="T:System.Data.XmlReadMode" />.</param>
      <returns>
        <see langword="XmlReadMode" /> служит для чтения данных.</returns>
    </member>
    <member name="M:System.Data.DataSet.ReadXml(System.String)">
      <summary>Считывает XML-схему и данные в <see cref="T:System.Data.DataSet" />, используя указанный файл.</summary>
      <param name="fileName">Имя файла (включая путь), из которого производится чтение.</param>
      <returns>
        <see langword="XmlReadMode" /> служит для чтения данных.</returns>
      <exception cref="T:System.Security.SecurityException">Для поля <see cref="T:System.Security.Permissions.FileIOPermission" /> не задан класс <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />.</exception>
    </member>
    <member name="M:System.Data.DataSet.ReadXml(System.String,System.Data.XmlReadMode)">
      <summary>Считывает XML-схему и данные в <see cref="T:System.Data.DataSet" />, используя указанный файл и <see cref="T:System.Data.XmlReadMode" />.</summary>
      <param name="fileName">Имя файла (включая путь), из которого производится чтение.</param>
      <param name="mode">Одно из значений <see cref="T:System.Data.XmlReadMode" />.</param>
      <returns>
        <see langword="XmlReadMode" /> служит для чтения данных.</returns>
      <exception cref="T:System.Security.SecurityException">Для поля <see cref="T:System.Security.Permissions.FileIOPermission" /> не задан класс <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />.</exception>
    </member>
    <member name="M:System.Data.DataSet.ReadXml(System.Xml.XmlReader)">
      <summary>Считывает XML-схему и данные в <see cref="T:System.Data.DataSet" />, используя указанный класс <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="reader">Класс <see cref="T:System.Xml.XmlReader" />, из которого выполняется чтение.</param>
      <returns>
        <see langword="XmlReadMode" /> служит для чтения данных.</returns>
    </member>
    <member name="M:System.Data.DataSet.ReadXml(System.Xml.XmlReader,System.Data.XmlReadMode)">
      <summary>Считывает XML-схему и данные в <see cref="T:System.Data.DataSet" />, используя указанные объекты <see cref="T:System.Xml.XmlReader" /> и <see cref="T:System.Data.XmlReadMode" />.</summary>
      <param name="reader">Класс <see cref="T:System.Xml.XmlReader" />, из которого выполняется чтение.</param>
      <param name="mode">Одно из значений <see cref="T:System.Data.XmlReadMode" />.</param>
      <returns>
        <see langword="XmlReadMode" /> служит для чтения данных.</returns>
    </member>
    <member name="M:System.Data.DataSet.ReadXmlSchema(System.IO.Stream)">
      <summary>Считывает XML-схему из указанного класса <see cref="T:System.IO.Stream" /> в класс <see cref="T:System.Data.DataSet" />.</summary>
      <param name="stream">Класс <see cref="T:System.IO.Stream" />, из которого выполняется чтение.</param>
    </member>
    <member name="M:System.Data.DataSet.ReadXmlSchema(System.IO.TextReader)">
      <summary>Считывает XML-схему из указанного класса <see cref="T:System.IO.TextReader" /> в класс <see cref="T:System.Data.DataSet" />.</summary>
      <param name="reader">Класс <see cref="T:System.IO.TextReader" />, из которого выполняется чтение.</param>
    </member>
    <member name="M:System.Data.DataSet.ReadXmlSchema(System.String)">
      <summary>Считывает XML-схему из указанного файла в класс <see cref="T:System.Data.DataSet" />.</summary>
      <param name="fileName">Имя файла (включая путь), из которого производится чтение.</param>
      <exception cref="T:System.Security.SecurityException">Для поля <see cref="T:System.Security.Permissions.FileIOPermission" /> не задан класс <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />.</exception>
    </member>
    <member name="M:System.Data.DataSet.ReadXmlSchema(System.Xml.XmlReader)">
      <summary>Считывает XML-схему из указанного класса <see cref="T:System.Xml.XmlReader" /> в класс <see cref="T:System.Data.DataSet" />.</summary>
      <param name="reader">Класс <see cref="T:System.Xml.XmlReader" />, из которого выполняется чтение.</param>
    </member>
    <member name="M:System.Data.DataSet.ReadXmlSerializable(System.Xml.XmlReader)">
      <summary>Игнорирует атрибуты и возвращает пустой DataSet.</summary>
      <param name="reader">Указанное средство чтения XML.</param>
    </member>
    <member name="M:System.Data.DataSet.RejectChanges">
      <summary>Отменяет все изменения, внесенные в класс <see cref="T:System.Data.DataSet" /> после его создания или после последнего вызова метода <see cref="M:System.Data.DataSet.AcceptChanges" />.</summary>
    </member>
    <member name="P:System.Data.DataSet.Relations">
      <summary>Получает коллекцию соотношений, связывающих таблицы и позволяющих переходить от родительских таблиц к дочерним.</summary>
      <returns>Объект <see cref="T:System.Data.DataRelationCollection" />, содержащий коллекцию объектов <see cref="T:System.Data.DataRelation" />. Если отсутствуют объекты <see cref="T:System.Data.DataRelation" /> возвращается пустая коллекция.</returns>
    </member>
    <member name="P:System.Data.DataSet.RemotingFormat">
      <summary>Возвращает или задает объект <see cref="T:System.Data.SerializationFormat" /> для набора данных <see cref="T:System.Data.DataSet" />, который используется для удаленного взаимодействия.</summary>
      <returns>Объект <see cref="T:System.Data.SerializationFormat" />.</returns>
    </member>
    <member name="M:System.Data.DataSet.Reset">
      <summary>Очищает все таблицы и удаляет все связи, внешние ограничения и таблицы из <see cref="T:System.Data.DataSet" />. Для восстановления исходного состояния класса <see cref="M:System.Data.DataSet.Reset" /> необходимо переопределить метод <see cref="T:System.Data.DataSet" /> в подклассах.</summary>
    </member>
    <member name="P:System.Data.DataSet.SchemaSerializationMode">
      <summary>Возвращает или задает объект <see cref="T:System.Data.SchemaSerializationMode" /> для <see cref="T:System.Data.DataSet" />.</summary>
      <returns>Объект <see cref="T:System.Data.SchemaSerializationMode" /> для <see cref="T:System.Data.DataSet" />.</returns>
    </member>
    <member name="M:System.Data.DataSet.ShouldSerializeRelations">
      <summary>Получает значение, определяющее необходимость сохранения значения свойства <see cref="P:System.Data.DataSet.Relations" />.</summary>
      <returns>Значение <see langword="true" />, если значение свойства было изменено (относительно своего значения по умолчанию); в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataSet.ShouldSerializeTables">
      <summary>Получает значение, определяющее необходимость сохранения значения свойства <see cref="P:System.Data.DataSet.Tables" />.</summary>
      <returns>Значение <see langword="true" />, если значение свойства было изменено (относительно своего значения по умолчанию); в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.DataSet.Site">
      <summary>Возвращает или задает тип <see cref="T:System.ComponentModel.ISite" /> для объекта <see cref="T:System.Data.DataSet" />.</summary>
      <returns>Интерфейс <see cref="T:System.ComponentModel.ISite" /> для <see cref="T:System.Data.DataSet" />.</returns>
    </member>
    <member name="P:System.Data.DataSet.System#ComponentModel#IListSource#ContainsListCollection">
      <summary>Описание этого члена см. в разделе <see cref="P:System.ComponentModel.IListSource.ContainsListCollection" />.</summary>
      <returns>Описание этого члена см. в разделе <see cref="P:System.ComponentModel.IListSource.ContainsListCollection" />.</returns>
    </member>
    <member name="M:System.Data.DataSet.System#ComponentModel#IListSource#GetList">
      <summary>Описание этого члена см. в разделе <see cref="M:System.ComponentModel.IListSource.GetList" />.</summary>
      <returns>Описание этого члена см. в разделе <see cref="M:System.ComponentModel.IListSource.GetList" />.</returns>
    </member>
    <member name="M:System.Data.DataSet.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary>Описание этого члена см. в разделе <see cref="M:System.Xml.Serialization.IXmlSerializable.GetSchema" />.</summary>
      <returns>Описание этого члена см. в разделе <see cref="M:System.Xml.Serialization.IXmlSerializable.GetSchema" />.</returns>
    </member>
    <member name="M:System.Data.DataSet.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary>Описание этого члена см. в разделе <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" />.</summary>
      <param name="reader">Объект <see cref="T:System.Xml.XmlReader" />.</param>
    </member>
    <member name="M:System.Data.DataSet.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary>Описание этого члена см. в разделе <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" />.</summary>
      <param name="writer">Объект <see cref="T:System.Xml.XmlWriter" />.</param>
    </member>
    <member name="P:System.Data.DataSet.Tables">
      <summary>Возвращает коллекцию таблиц класса <see cref="T:System.Data.DataSet" />.</summary>
      <returns>Коллекция <see cref="T:System.Data.DataTableCollection" />, содержащаяся в этом наборе данных <see cref="T:System.Data.DataSet" />. Если отсутствуют объекты <see cref="T:System.Data.DataTable" /> возвращается пустая коллекция.</returns>
    </member>
    <member name="M:System.Data.DataSet.WriteXml(System.IO.Stream)">
      <summary>Записывает текущие данные для <see cref="T:System.Data.DataSet" /> с помощью указанного объекта <see cref="T:System.IO.Stream" />.</summary>
      <param name="stream">Объект <see cref="T:System.IO.Stream" />, используемый для записи в файл.</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXml(System.IO.Stream,System.Data.XmlWriteMode)">
      <summary>Записывает текущие данные и по возможности схему для <see cref="T:System.Data.DataSet" /> с помощью указанных <see cref="T:System.IO.Stream" /> и  <see cref="T:System.Data.XmlWriteMode" />. Чтобы записать схему, задайте в параметре <paramref name="mode" /> значение <see langword="WriteSchema" />.</summary>
      <param name="stream">Объект <see cref="T:System.IO.Stream" />, используемый для записи в файл.</param>
      <param name="mode">Одно из значений <see cref="T:System.Data.XmlWriteMode" />.</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXml(System.IO.TextWriter)">
      <summary>Записывает текущие данные для <see cref="T:System.Data.DataSet" /> с помощью указанного объекта <see cref="T:System.IO.TextWriter" />.</summary>
      <param name="writer">Объект <see cref="T:System.IO.TextWriter" />, используемый для записи.</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode)">
      <summary>Записывает текущие данные и по возможности схему для <see cref="T:System.Data.DataSet" /> с помощью указанных <see cref="T:System.IO.TextWriter" /> и  <see cref="T:System.Data.XmlWriteMode" />. Чтобы записать схему, задайте в параметре <paramref name="mode" /> значение <see langword="WriteSchema" />.</summary>
      <param name="writer">Объект <see cref="T:System.IO.TextWriter" />, используемый для записи документа.</param>
      <param name="mode">Одно из значений <see cref="T:System.Data.XmlWriteMode" />.</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXml(System.String)">
      <summary>Записывает текущие данные для <see cref="T:System.Data.DataSet" /> в указанный файл.</summary>
      <param name="fileName">Имя файла (включая путь), в который производится запись.</param>
      <exception cref="T:System.Security.SecurityException">Для поля <see cref="T:System.Security.Permissions.FileIOPermission" /> не задан класс <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" />.</exception>
    </member>
    <member name="M:System.Data.DataSet.WriteXml(System.String,System.Data.XmlWriteMode)">
      <summary>Записывает текущие данные и по возможности схему для <see cref="T:System.Data.DataSet" /> в указанный файл с помощью заданного объекта <see cref="T:System.Data.XmlWriteMode" />. Чтобы записать схему, задайте в параметре <paramref name="mode" /> значение <see langword="WriteSchema" />.</summary>
      <param name="fileName">Имя файла (включая путь), в который производится запись.</param>
      <param name="mode">Одно из значений <see cref="T:System.Data.XmlWriteMode" />.</param>
      <exception cref="T:System.Security.SecurityException">Для поля <see cref="T:System.Security.Permissions.FileIOPermission" /> не задан класс <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" />.</exception>
    </member>
    <member name="M:System.Data.DataSet.WriteXml(System.Xml.XmlWriter)">
      <summary>Записывает текущие данные для <see cref="T:System.Data.DataSet" /> в указанный класс <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">Класс <see cref="T:System.Xml.XmlWriter" />, с помощью которого осуществляется запись.</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode)">
      <summary>Записывает текущие данные и по возможности схему для <see cref="T:System.Data.DataSet" /> с помощью указанных <see cref="T:System.Xml.XmlWriter" /> и  <see cref="T:System.Data.XmlWriteMode" />. Чтобы записать схему, задайте в параметре <paramref name="mode" /> значение <see langword="WriteSchema" />.</summary>
      <param name="writer">Класс <see cref="T:System.Xml.XmlWriter" />, с помощью которого осуществляется запись.</param>
      <param name="mode">Одно из значений <see cref="T:System.Data.XmlWriteMode" />.</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXmlSchema(System.IO.Stream)">
      <summary>Записывает структуру <see cref="T:System.Data.DataSet" /> в качестве XML-схемы для указанного объекта <see cref="T:System.IO.Stream" />.</summary>
      <param name="stream">Объект <see cref="T:System.IO.Stream" />, используемый для записи в файл.</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXmlSchema(System.IO.Stream,System.Converter{System.Type,System.String})">
      <summary>Записывает структуру <see cref="T:System.Data.DataSet" /> в качестве XML-схемы для указанного объекта <see cref="T:System.IO.Stream" />.</summary>
      <param name="stream">Объект <see cref="T:System.IO.Stream" />, в который осуществляется запись.</param>
      <param name="multipleTargetConverter">Делегат, используемый для преобразования <see cref="T:System.Type" /> в строковый формат.</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXmlSchema(System.IO.TextWriter)">
      <summary>Записывает структуру <see cref="T:System.Data.DataSet" /> в качестве XML-схемы для указанного объекта <see cref="T:System.IO.TextWriter" />.</summary>
      <param name="writer">Объект <see cref="T:System.IO.TextWriter" />, используемый для записи.</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXmlSchema(System.IO.TextWriter,System.Converter{System.Type,System.String})">
      <summary>Записывает структуру <see cref="T:System.Data.DataSet" /> в виде схемы XML для указанного объекта <see cref="T:System.IO.TextWriter" />.</summary>
      <param name="writer">Объект <see cref="T:System.IO.TextWriter" />, в который осуществляется запись.</param>
      <param name="multipleTargetConverter">Делегат, используемый для преобразования <see cref="T:System.Type" /> в строковый формат.</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXmlSchema(System.String)">
      <summary>Записывает структуру класса <see cref="T:System.Data.DataSet" /> в виде XML-схемы в файл.</summary>
      <param name="fileName">Имя файла (включая путь), в который производится запись.</param>
      <exception cref="T:System.Security.SecurityException">Для поля <see cref="T:System.Security.Permissions.FileIOPermission" /> не задан класс <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" />.</exception>
    </member>
    <member name="M:System.Data.DataSet.WriteXmlSchema(System.String,System.Converter{System.Type,System.String})">
      <summary>Записывает структуру класса <see cref="T:System.Data.DataSet" /> в виде XML-схемы в файл.</summary>
      <param name="fileName">Имя файла для записи.</param>
      <param name="multipleTargetConverter">Делегат, используемый для преобразования <see cref="T:System.Type" /> в строковый формат.</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXmlSchema(System.Xml.XmlWriter)">
      <summary>Записывает структуру класса <see cref="T:System.Data.DataSet" /> в виде XML-схемы в объект <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">Экземпляр <see cref="T:System.Xml.XmlWriter" />, в который выполняется запись.</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXmlSchema(System.Xml.XmlWriter,System.Converter{System.Type,System.String})">
      <summary>Записывает структуру <see cref="T:System.Data.DataSet" /> в виде схемы XML для указанного объекта <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">Объект <see cref="T:System.Xml.XmlWriter" />, в который осуществляется запись.</param>
      <param name="multipleTargetConverter">Делегат, используемый для преобразования <see cref="T:System.Type" /> в строковый формат.</param>
    </member>
    <member name="T:System.Data.DataSetDateTime">
      <summary>Описывает формат сериализации для столбцов <see cref="T:System.DateTime" /> в объекте <see cref="T:System.Data.DataSet" />.</summary>
    </member>
    <member name="F:System.Data.DataSetDateTime.Local">
      <summary>
        <see langword="DateTime" /> всегда хранится в Local. Если значение <see cref="F:System.Data.DataSetDateTime.Utc" /> или <see cref="F:System.Data.DataSetDateTime.Unspecified" /> назначено столбцу в этом режиме, оно сначала преобразуется в Local. Сериализация в этом режиме всегда выполняется в Local. В процессе сериализации имеется смещение.</summary>
    </member>
    <member name="F:System.Data.DataSetDateTime.Unspecified">
      <summary>
        <see langword="DateTime" /> всегда хранится в Unspecified. Если значение <see cref="F:System.Data.DataSetDateTime.Local" /> или <see cref="F:System.Data.DataSetDateTime.Utc" /> назначено столбцу в этом режиме, оно сначала преобразуется в <see cref="F:System.Data.DataSetDateTime.Unspecified" />. Сериализация в этом режиме не вызывает смещения.</summary>
    </member>
    <member name="F:System.Data.DataSetDateTime.UnspecifiedLocal">
      <summary>
        <see langword="DateTime" /> хранится в Unspecified. Если значение <see cref="F:System.Data.DataSetDateTime.Local" /> или <see cref="F:System.Data.DataSetDateTime.Utc" /> назначено столбцу в этом режиме, оно сначала преобразуется в <see cref="F:System.Data.DataSetDateTime.Unspecified" />. Сериализация в этом режиме вызывает смещение. Это поведение по умолчанию, обладающее обратной совместимостью. Этот параметр следует рассматривать как Unspecified в хранилище, однако применение смещения аналогично <see cref="F:System.Data.DataSetDateTime.Local" /> в процессе сериализации.</summary>
    </member>
    <member name="F:System.Data.DataSetDateTime.Utc">
      <summary>Значение <see langword="DateTime" /> хранится в UTC (Universal Coordinated Time). Если значение <see cref="F:System.Data.DataSetDateTime.Local" /> или <see cref="F:System.Data.DataSetDateTime.Unspecified" /> назначено столбцу в этом режиме, оно сначала преобразуется в формат <see langword="Utc" />. Сериализация в этом режиме всегда выполняется в <see langword="Utc" />. В процессе сериализации смещение отсутствует.</summary>
    </member>
    <member name="T:System.Data.DataSetSchemaImporterExtension">
      <summary>Данный член предназначен для поддержки платформы .NET Framework и не должен вызываться напрямую из кода приложения.</summary>
    </member>
    <member name="M:System.Data.DataSetSchemaImporterExtension.#ctor">
      <summary>Данный член предназначен для поддержки платформы .NET Framework и не должен вызываться напрямую из кода приложения.</summary>
    </member>
    <member name="M:System.Data.DataSetSchemaImporterExtension.ImportSchemaType(System.String,System.String,System.Xml.Schema.XmlSchemaObject,System.Xml.Serialization.XmlSchemas,System.Xml.Serialization.XmlSchemaImporter,System.CodeDom.CodeCompileUnit,System.CodeDom.CodeNamespace,System.Xml.Serialization.CodeGenerationOptions,System.CodeDom.Compiler.CodeDomProvider)">
      <summary>Данный член предназначен для поддержки платформы .NET Framework и не должен вызываться напрямую из кода приложения.</summary>
      <param name="name">
        <paramref name="name" />
      </param>
      <param name="schemaNamespace">
        <paramref name="schemaNamespace" />
      </param>
      <param name="context">
        <paramref name="context" />
      </param>
      <param name="schemas">
        <paramref name="schemas" />
      </param>
      <param name="importer">
        <paramref name="importer" />
      </param>
      <param name="compileUnit">
        <paramref name="compileUnit" />
      </param>
      <param name="mainNamespace">
        <paramref name="mainNamespace" />
      </param>
      <param name="options">
        <paramref name="options" />
      </param>
      <param name="codeProvider">
        <paramref name="codeProvider" />
      </param>
      <returns>Данный член предназначен для поддержки платформы .NET Framework и не должен вызываться напрямую из кода приложения.</returns>
    </member>
    <member name="M:System.Data.DataSetSchemaImporterExtension.ImportSchemaType(System.Xml.Schema.XmlSchemaType,System.Xml.Schema.XmlSchemaObject,System.Xml.Serialization.XmlSchemas,System.Xml.Serialization.XmlSchemaImporter,System.CodeDom.CodeCompileUnit,System.CodeDom.CodeNamespace,System.Xml.Serialization.CodeGenerationOptions,System.CodeDom.Compiler.CodeDomProvider)">
      <summary>Данный член предназначен для поддержки платформы .NET Framework и не должен вызываться напрямую из кода приложения.</summary>
      <param name="type">
        <paramref name="type" />
      </param>
      <param name="context">
        <paramref name="context" />
      </param>
      <param name="schemas">
        <paramref name="schemas" />
      </param>
      <param name="importer">
        <paramref name="importer" />
      </param>
      <param name="compileUnit">
        <paramref name="compileUnit" />
      </param>
      <param name="mainNamespace">
        <paramref name="mainNamespace" />
      </param>
      <param name="options">
        <paramref name="options" />
      </param>
      <param name="codeProvider">
        <paramref name="codeProvider" />
      </param>
      <returns>Данный член предназначен для поддержки платформы .NET Framework и не должен вызываться напрямую из кода приложения.</returns>
    </member>
    <member name="T:System.Data.DataSysDescriptionAttribute">
      <summary>Помечает свойство, событие или расширитель с описанием. Это описание может быть отображено визуальным конструктором при обновлении элемента.</summary>
    </member>
    <member name="M:System.Data.DataSysDescriptionAttribute.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.DataSysDescriptionAttribute" /> с помощью указанной строки описания.</summary>
      <param name="description">Строка описания.</param>
    </member>
    <member name="P:System.Data.DataSysDescriptionAttribute.Description">
      <summary>Получает текст описания.</summary>
      <returns>Строка описания.</returns>
    </member>
    <member name="T:System.Data.DataTable">
      <summary>Представляет одну таблицу данных в памяти.</summary>
    </member>
    <member name="M:System.Data.DataTable.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.DataTable" />, не передавая ему никаких аргументов.</summary>
    </member>
    <member name="M:System.Data.DataTable.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.DataTable" /> со свойствами <see cref="T:System.Runtime.Serialization.SerializationInfo" /> и <see cref="T:System.Runtime.Serialization.StreamingContext" />.</summary>
      <param name="info">Данные, необходимые для сериализации или десериализации объекта.</param>
      <param name="context">Источник и назначение данного сериализованного потока.</param>
    </member>
    <member name="M:System.Data.DataTable.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.DataTable" /> с указанным именем таблицы.</summary>
      <param name="tableName">Имя, задаваемое таблице. Если значение параметра <paramref name="tableName" /> — <see langword="null" /> или пустая строка, имя по умолчанию присваивается при добавлении в коллекцию <see cref="T:System.Data.DataTableCollection" />.</param>
    </member>
    <member name="M:System.Data.DataTable.#ctor(System.String,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.DataTable" /> с заданными именем таблицы и пространством имен.</summary>
      <param name="tableName">Имя, задаваемое таблице. Если значение параметра <paramref name="tableName" /> — <see langword="null" /> или пустая строка, имя по умолчанию присваивается при добавлении в коллекцию <see cref="T:System.Data.DataTableCollection" />.</param>
      <param name="tableNamespace">Пространство имен для XML-представления данных, хранящихся в <see langword="DataTable" />.</param>
    </member>
    <member name="M:System.Data.DataTable.AcceptChanges">
      <summary>Фиксирует все изменения, внесенные в таблицу после последнего вызова метода <see cref="M:System.Data.DataTable.AcceptChanges" />.</summary>
    </member>
    <member name="M:System.Data.DataTable.BeginInit">
      <summary>Начинает инициализацию <see cref="T:System.Data.DataTable" />, используемого в форме или другим компонентом. Инициализация происходит во время выполнения.</summary>
    </member>
    <member name="M:System.Data.DataTable.BeginLoadData">
      <summary>Отключает уведомления, ведение индексов и ограничения в процессе загрузки данных.</summary>
    </member>
    <member name="P:System.Data.DataTable.CaseSensitive">
      <summary>Показывает, учитывается ли регистр при сравнении строк в таблице.</summary>
      <returns>Значение <see langword="true" />, если при сравнении регистр учитывается; в противном случае — значение <see langword="false" />. Значение по умолчанию устанавливается равным значению свойства <see cref="T:System.Data.DataSet" /> родительского объекта <see cref="P:System.Data.DataSet.CaseSensitive" />, или значение <see langword="false" />, если объект <see cref="T:System.Data.DataTable" /> создавался независимо от класса <see cref="T:System.Data.DataSet" />.</returns>
    </member>
    <member name="P:System.Data.DataTable.ChildRelations">
      <summary>Получает коллекцию дочерних отношений для объекта <see cref="T:System.Data.DataTable" />.</summary>
      <returns>Коллекция <see cref="T:System.Data.DataRelationCollection" />, содержащая дочерние отношения для таблицы. Если отсутствуют объекты <see cref="T:System.Data.DataRelation" /> возвращается пустая коллекция.</returns>
    </member>
    <member name="M:System.Data.DataTable.Clear">
      <summary>Очищает <see cref="T:System.Data.DataTable" /> от всех данных.</summary>
    </member>
    <member name="M:System.Data.DataTable.Clone">
      <summary>Копирует структуру объекта <see cref="T:System.Data.DataTable" />, включая все схемы и ограничения <see cref="T:System.Data.DataTable" />.</summary>
      <returns>Новый класс <see cref="T:System.Data.DataTable" />, имеющий ту же схему, что и текущий класс <see cref="T:System.Data.DataTable" />.</returns>
    </member>
    <member name="E:System.Data.DataTable.ColumnChanged">
      <summary>Происходит после изменения значения указанного объекта <see cref="T:System.Data.DataColumn" /> в <see cref="T:System.Data.DataRow" />.</summary>
    </member>
    <member name="E:System.Data.DataTable.ColumnChanging">
      <summary>Происходит при изменении значения указанного объекта <see cref="T:System.Data.DataColumn" /> в <see cref="T:System.Data.DataRow" />.</summary>
    </member>
    <member name="P:System.Data.DataTable.Columns">
      <summary>Получает коллекцию столбцов, принадлежащих данной таблице.</summary>
      <returns>Коллекция <see cref="T:System.Data.DataColumnCollection" />, содержащая коллекцию объектов <see cref="T:System.Data.DataColumn" /> для таблицы. Если отсутствуют объекты <see cref="T:System.Data.DataColumn" /> возвращается пустая коллекция.</returns>
    </member>
    <member name="M:System.Data.DataTable.Compute(System.String,System.String)">
      <summary>Вычисляет заданное выражение для текущих строк, отвечающих условию фильтра.</summary>
      <param name="expression">Вычисляемое выражение.</param>
      <param name="filter">Фильтр, ограничивающий число строк, используемых выражением.</param>
      <returns>Класс <see cref="T:System.Object" />, которому задан результат сравнения. Если выражение имеет значение null, возвращаемое значение будет <see cref="F:System.DBNull.Value" />.</returns>
    </member>
    <member name="P:System.Data.DataTable.Constraints">
      <summary>Получает коллекцию ограничений, содержащихся в данной таблице.</summary>
      <returns>Коллекция <see cref="T:System.Data.ConstraintCollection" />, содержащая коллекцию объектов <see cref="T:System.Data.Constraint" /> для таблицы. Если отсутствуют объекты <see cref="T:System.Data.Constraint" /> возвращается пустая коллекция.</returns>
    </member>
    <member name="M:System.Data.DataTable.Copy">
      <summary>Копирует структуру и данные для <see cref="T:System.Data.DataTable" />.</summary>
      <returns>Новый класс <see cref="T:System.Data.DataTable" />, имеющий ту же структуру (схемы таблиц и ограничения) и данные, что и класс <see cref="T:System.Data.DataTable" />.  
Если эти классы являются производными, то и копия также будет таким же производным классом.  
 <see cref="M:System.Data.DataTable.Copy" /> создает новый <see cref="T:System.Data.DataTable" /> с той же структурой и данными, как и оригинальный <see cref="T:System.Data.DataTable" />. Чтобы скопировать структуру в новый <see cref="T:System.Data.DataTable" />, но не данные, используйте <see cref="M:System.Data.DataTable.Clone" />.</returns>
    </member>
    <member name="M:System.Data.DataTable.CreateDataReader">
      <summary>Возвращает объект <see cref="T:System.Data.DataTableReader" />, соответствующий данным в этой таблице <see cref="T:System.Data.DataTable" />.</summary>
      <returns>Объект <see cref="T:System.Data.DataTableReader" />, содержащий один набор результатов, который соответствует исходному экземпляру <see cref="T:System.Data.DataTable" />.</returns>
    </member>
    <member name="M:System.Data.DataTable.CreateInstance">
      <summary>Создает новый экземпляр <see cref="T:System.Data.DataTable" />.</summary>
      <returns>Новое выражение.</returns>
    </member>
    <member name="P:System.Data.DataTable.DataSet">
      <summary>Получает класс <see cref="T:System.Data.DataSet" />, к которому принадлежит данная таблица.</summary>
      <returns>Набор <see cref="T:System.Data.DataSet" />, к которому принадлежит данная таблица.</returns>
    </member>
    <member name="P:System.Data.DataTable.DefaultView">
      <summary>Получает настраиваемое представление таблицы, которая может включать в себя представление с фильтром или положение курсора.</summary>
      <returns>Объект <see cref="T:System.Data.DataView" />, связанный с объектом <see cref="T:System.Data.DataTable" />.</returns>
    </member>
    <member name="P:System.Data.DataTable.DisplayExpression">
      <summary>Возвращает или задает выражение, возвращающее значение, используемое для представления таблицы в пользовательском интерфейсе. Свойство <see langword="DisplayExpression" /> позволяет отображать имя этой таблицы в пользовательском интерфейсе.</summary>
      <returns>Строка отображения данных.</returns>
    </member>
    <member name="M:System.Data.DataTable.EndInit">
      <summary>Завершает инициализацию <see cref="T:System.Data.DataTable" />, используемого в форме или другим компонентом. Инициализация происходит во время выполнения.</summary>
    </member>
    <member name="M:System.Data.DataTable.EndLoadData">
      <summary>Включает уведомления, ведение индексов и ограничения после загрузки данных.</summary>
    </member>
    <member name="P:System.Data.DataTable.ExtendedProperties">
      <summary>Получает коллекцию настраиваемых пользовательских сведений.</summary>
      <returns>Класс <see cref="T:System.Data.PropertyCollection" />, содержащий настраиваемые данные пользователя.</returns>
    </member>
    <member name="F:System.Data.DataTable.fInitInProgress">
      <summary>Проверяет, выполняется ли инициализация. Инициализация происходит во время выполнения.</summary>
    </member>
    <member name="M:System.Data.DataTable.GetChanges">
      <summary>Получает копию таблицы <see cref="T:System.Data.DataTable" />, содержащую все изменения, внесенные после ее загрузки или после последнего вызова метода <see cref="M:System.Data.DataTable.AcceptChanges" />.</summary>
      <returns>Копия изменений из данного объекта <see cref="T:System.Data.DataTable" /> или значение <see langword="null" />, если изменения не найдены.</returns>
    </member>
    <member name="M:System.Data.DataTable.GetChanges(System.Data.DataRowState)">
      <summary>Получает копию таблицы <see cref="T:System.Data.DataTable" />, содержащую все изменения, внесенные после ее последней загрузки или после вызова метода <see cref="M:System.Data.DataTable.AcceptChanges" /> и отфильтрованные по параметру <see cref="T:System.Data.DataRowState" />.</summary>
      <param name="rowStates">Одно из значений <see cref="T:System.Data.DataRowState" />.</param>
      <returns>Отфильтрованная копия таблицы <see cref="T:System.Data.DataTable" />, с которой можно работать и позднее объединить обратно с <see cref="T:System.Data.DataTable" />, используя метод <see cref="M:System.Data.DataSet.Merge(System.Data.DataSet)" />. Если строки с требуемым типом <see cref="T:System.Data.DataRowState" /> отсутствуют, метод вернет значение <see langword="null" />.</returns>
    </member>
    <member name="M:System.Data.DataTable.GetDataTableSchema(System.Xml.Schema.XmlSchemaSet)">
      <summary>Этот метод возвращает экземпляр <see cref="T:System.Xml.Schema.XmlSchemaSet" />, содержащий язык описания веб-служб (WSDL), который описывает объект <see cref="T:System.Data.DataTable" /> для веб-служб.</summary>
      <param name="schemaSet">Экземпляр <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
      <returns>Экземпляр класса <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</returns>
    </member>
    <member name="M:System.Data.DataTable.GetErrors">
      <summary>Получает массив объектов <see cref="T:System.Data.DataRow" />, содержащих ошибки.</summary>
      <returns>Массив объектов <see cref="T:System.Data.DataRow" /> с ошибками.</returns>
    </member>
    <member name="M:System.Data.DataTable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Заполняет объект сведений о сериализации данными, необходимыми для сериализации <see cref="T:System.Data.DataTable" />.</summary>
      <param name="info">Объект <see cref="T:System.Runtime.Serialization.SerializationInfo" />, содержащий сериализованные данные, связанные с объектом <see cref="T:System.Data.DataTable" />.</param>
      <param name="context">Объект <see cref="T:System.Runtime.Serialization.StreamingContext" />, содержащий исходный объект и объект назначения для сериализованного потока, связанного с объектом <see cref="T:System.Data.DataTable" />.</param>
      <exception cref="T:System.ArgumentNullException">Значением параметра <paramref name="info" /> является пустая ссылка (<see langword="Nothing" /> в Visual Basic).</exception>
    </member>
    <member name="M:System.Data.DataTable.GetRowType">
      <summary>Получает тип строки.</summary>
      <returns>Тип <see cref="T:System.Data.DataRow" />.</returns>
    </member>
    <member name="M:System.Data.DataTable.GetSchema">
      <summary>Описание этого члена см. в разделе <see cref="M:System.Xml.Serialization.IXmlSerializable.GetSchema" />.</summary>
      <returns>Схема <see cref="T:System.Xml.Schema.XmlSchema" />, описывающая представление XML объекта, полученного методом <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" /> и используемого методом <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" />.</returns>
    </member>
    <member name="P:System.Data.DataTable.HasErrors">
      <summary>Получает значение, указывающее наличие ошибок в строках таблиц класса <see cref="T:System.Data.DataSet" />, к которому принадлежат таблицы.</summary>
      <returns>Значение <see langword="true" />, если ошибки есть; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataTable.ImportRow(System.Data.DataRow)">
      <summary>Копирует объект <see cref="T:System.Data.DataRow" /> в <see cref="T:System.Data.DataTable" />, сохраняя все параметры свойств, а также текущие и исходные значения.</summary>
      <param name="row">Импортируемый объект <see cref="T:System.Data.DataRow" />.</param>
    </member>
    <member name="E:System.Data.DataTable.Initialized">
      <summary>Происходит после инициализации таблицы <see cref="T:System.Data.DataTable" />.</summary>
    </member>
    <member name="P:System.Data.DataTable.IsInitialized">
      <summary>Получает значение, указывающее, инициализирована ли таблица <see cref="T:System.Data.DataTable" />.</summary>
      <returns>Значение <see langword="true" /> указывает, что компонент завершил инициализацию; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataTable.Load(System.Data.IDataReader)">
      <summary>Заполняет таблицу <see cref="T:System.Data.DataTable" /> значениями из источника данных с помощью предоставляемого объекта <see cref="T:System.Data.IDataReader" />. Если объект <see cref="T:System.Data.DataTable" /> уже содержит строки, входящие данные из источника данных объединяются с существующими строками.</summary>
      <param name="reader">Объект <see cref="T:System.Data.IDataReader" />, предоставляющий набор результатов.</param>
    </member>
    <member name="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
      <summary>Заполняет таблицу <see cref="T:System.Data.DataTable" /> значениями из источника данных с помощью предоставляемого объекта <see cref="T:System.Data.IDataReader" />. Если объект <see langword="DataTable" /> уже содержит строки, поступающие данные из источника данных объединяются с существующими строками согласно значению параметра <paramref name="loadOption" />.</summary>
      <param name="reader">Объект <see cref="T:System.Data.IDataReader" />, предоставляющий один или несколько наборов результатов.</param>
      <param name="loadOption">Значение из перечисления <see cref="T:System.Data.LoadOption" />, которое показывает способ комбинирования строк, уже находящихся в таблице <see cref="T:System.Data.DataTable" />, с поступающими строками, которые совместно используют один и тот же первичный ключ.</param>
    </member>
    <member name="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventH*******ler)">
      <summary>Заполняет таблицу <see cref="T:System.Data.DataTable" /> значениями из источника данных с помощью предоставляемого объекта <see cref="T:System.Data.IDataReader" />, использующего делегат для обработки ошибок.</summary>
      <param name="reader">Объект <see cref="T:System.Data.IDataReader" />, предоставляющий набор результатов.</param>
      <param name="loadOption">Значение из перечисления <see cref="T:System.Data.LoadOption" />, которое показывает способ комбинирования строк, уже находящихся в таблице <see cref="T:System.Data.DataTable" />, с поступающими строками, которые совместно используют один и тот же первичный ключ.</param>
      <param name="errorH*******ler">Делегат <see cref="T:System.Data.FillErrorEventH*******ler" />, вызываемый при возникновении ошибки во время загрузки данных.</param>
    </member>
    <member name="M:System.Data.DataTable.LoadDataRow(System.Object[],System.Boolean)">
      <summary>Находит и обновляет конкретную строку. Если нужная строка не найдена, то с помощью заданных значений создается новая строка.</summary>
      <param name="values">Массив значений, используемых для создания новой строки.</param>
      <param name="fAcceptChanges">Значение <see langword="true" /> — принять изменения; в противном случае — значение <see langword="false" />.</param>
      <returns>Новый объект <see cref="T:System.Data.DataRow" />.</returns>
      <exception cref="T:System.ArgumentException">Размер массива превышает число столбцов в таблице.</exception>
      <exception cref="T:System.InvalidCastException">Значение не отвечает соответствующему типу столбца.</exception>
      <exception cref="T:System.Data.ConstraintException">Добавление строки нарушает ограничение.</exception>
      <exception cref="T:System.Data.NoNullAllowedException">Попытка поместить значение null в столбец, у которого <see cref="P:System.Data.DataColumn.AllowDBNull" /> имеет значение "false".</exception>
    </member>
    <member name="M:System.Data.DataTable.LoadDataRow(System.Object[],System.Data.LoadOption)">
      <summary>Находит и обновляет конкретную строку. Если нужная строка не найдена, то с помощью заданных значений создается новая строка.</summary>
      <param name="values">Массив значений, используемых для создания новой строки.</param>
      <param name="loadOption">Используется для определения способа применения значений массива к соответствующим значениям в существующей строке.</param>
      <returns>Новый объект <see cref="T:System.Data.DataRow" />.</returns>
    </member>
    <member name="P:System.Data.DataTable.Locale">
      <summary>Возвращает или задает сведения о языке, используемые для сравнения строк таблицы.</summary>
      <returns>Класс <see cref="T:System.Globalization.CultureInfo" />, содержащий данные о языковом стандарте, используемом пользователем на компьютере. Значением по умолчанию является языковый стандарт <see cref="T:System.Data.DataSet" /> объекта <see cref="T:System.Globalization.CultureInfo" /> (возвращаемый свойством <see cref="P:System.Data.DataSet.Locale" />), к которому принадлежит таблица <see cref="T:System.Data.DataTable" />; если таблица не принадлежит набору <see cref="T:System.Data.DataSet" />, значением по умолчанию является языковый стандарт <see cref="T:System.Globalization.CultureInfo" /> текущей системы.</returns>
    </member>
    <member name="M:System.Data.DataTable.Merge(System.Data.DataTable)">
      <summary>Объединяет заданный объект <see cref="T:System.Data.DataTable" /> с текущим объектом <see cref="T:System.Data.DataTable" />.</summary>
      <param name="table">Объект <see cref="T:System.Data.DataTable" />, объединяемый с текущим объектом <see cref="T:System.Data.DataTable" />.</param>
    </member>
    <member name="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean)">
      <summary>Объедините заданный объект <see cref="T:System.Data.DataTable" /> с текущим объектом <see langword="DataTable" />, указав, следует ли сохранить изменения в контейнере данных <see langword="DataTable" />.</summary>
      <param name="table">Объект <see langword="DataTable" />, объединяемый с текущим объектом <see langword="DataTable" />.</param>
      <param name="preserveChanges">Значение <see langword="true" />, если необходимо сохранить изменения в текущем объекте <see langword="DataTable" />; в противном случае — значение <see langword="false" />.</param>
    </member>
    <member name="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
      <summary>Объедините заданный объект <see cref="T:System.Data.DataTable" /> с текущим объектом <see langword="DataTable" />, указав, следует ли сохранить изменения и способ обработки отсутствующей схемы в текущем контейнере данных <see langword="DataTable" />.</summary>
      <param name="table">Объект <see cref="T:System.Data.DataTable" />, объединяемый с текущим объектом <see cref="T:System.Data.DataTable" />.</param>
      <param name="preserveChanges">Значение <see langword="true" />, если необходимо сохранить изменения в текущем объекте <see cref="T:System.Data.DataTable" />; в противном случае — значение <see langword="false" />.</param>
      <param name="missingSchemaAction">Одно из значений <see cref="T:System.Data.MissingSchemaAction" />.</param>
    </member>
    <member name="P:System.Data.DataTable.MinimumCapacity">
      <summary>Возвращает или задает начальный размер таблицы.</summary>
      <returns>Начальный размер (в строках) этой таблицы. Значение по умолчанию — 50.</returns>
    </member>
    <member name="P:System.Data.DataTable.Namespace">
      <summary>Возвращает или задает пространство имен для представления данных объекта <see cref="T:System.Data.DataTable" /> в формате XML.</summary>
      <returns>Пространство имен <see cref="T:System.Data.DataTable" />.</returns>
    </member>
    <member name="M:System.Data.DataTable.NewRow">
      <summary>Создает новый класс <see cref="T:System.Data.DataRow" />, имеющий ту же схему, что и таблица.</summary>
      <returns>Класс <see cref="T:System.Data.DataRow" />, имеющий ту же схему, что и класс <see cref="T:System.Data.DataTable" />.</returns>
    </member>
    <member name="M:System.Data.DataTable.NewRowArray(System.Int32)">
      <summary>Возвращает массив <see cref="T:System.Data.DataRow" />.</summary>
      <param name="size">Значение <see cref="T:System.Int32" />, описывающее размер массива.</param>
      <returns>Новый массив.</returns>
    </member>
    <member name="M:System.Data.DataTable.NewRowFromBuilder(System.Data.DataRowBuilder)">
      <summary>Создает новую строку из существующей строки.</summary>
      <param name="builder">Объект <see cref="T:System.Data.DataRowBuilder" />.</param>
      <returns>Производный класс <see cref="T:System.Data.DataRow" />.</returns>
    </member>
    <member name="M:System.Data.DataTable.OnColumnChanged(System.Data.DataColumnChangeEventArgs)">
      <summary>Вызывает событие <see cref="E:System.Data.DataTable.ColumnChanged" />.</summary>
      <param name="e">Объект <see cref="T:System.Data.DataColumnChangeEventArgs" />, содержащий данные события.</param>
    </member>
    <member name="M:System.Data.DataTable.OnColumnChanging(System.Data.DataColumnChangeEventArgs)">
      <summary>Вызывает событие <see cref="E:System.Data.DataTable.ColumnChanging" />.</summary>
      <param name="e">Объект <see cref="T:System.Data.DataColumnChangeEventArgs" />, содержащий данные события.</param>
    </member>
    <member name="M:System.Data.DataTable.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)">
      <summary>Вызывает событие <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" />.</summary>
      <param name="pcevent">Объект <see cref="T:System.ComponentModel.PropertyChangedEventArgs" />, содержащий данные события.</param>
    </member>
    <member name="M:System.Data.DataTable.OnRemoveColumn(System.Data.DataColumn)">
      <summary>Сообщает классу <see cref="T:System.Data.DataTable" /> об удалении объекта <see cref="T:System.Data.DataColumn" />.</summary>
      <param name="column">Удаляемый объект <see cref="T:System.Data.DataColumn" />.</param>
    </member>
    <member name="M:System.Data.DataTable.OnRowChanged(System.Data.DataRowChangeEventArgs)">
      <summary>Вызывает событие <see cref="E:System.Data.DataTable.RowChanged" />.</summary>
      <param name="e">Объект <see cref="T:System.Data.DataRowChangeEventArgs" />, содержащий данные события.</param>
    </member>
    <member name="M:System.Data.DataTable.OnRowChanging(System.Data.DataRowChangeEventArgs)">
      <summary>Вызывает событие <see cref="E:System.Data.DataTable.RowChanging" />.</summary>
      <param name="e">Объект <see cref="T:System.Data.DataRowChangeEventArgs" />, содержащий данные события.</param>
    </member>
    <member name="M:System.Data.DataTable.OnRowDeleted(System.Data.DataRowChangeEventArgs)">
      <summary>Вызывает событие <see cref="E:System.Data.DataTable.RowDeleted" />.</summary>
      <param name="e">Объект <see cref="T:System.Data.DataRowChangeEventArgs" />, содержащий данные события.</param>
    </member>
    <member name="M:System.Data.DataTable.OnRowDeleting(System.Data.DataRowChangeEventArgs)">
      <summary>Вызывает событие <see cref="E:System.Data.DataTable.RowDeleting" />.</summary>
      <param name="e">Объект <see cref="T:System.Data.DataRowChangeEventArgs" />, содержащий данные события.</param>
    </member>
    <member name="M:System.Data.DataTable.OnTableCleared(System.Data.DataTableClearEventArgs)">
      <summary>Вызывает событие <see cref="E:System.Data.DataTable.TableCleared" />.</summary>
      <param name="e">Объект <see cref="T:System.Data.DataTableClearEventArgs" />, содержащий данные события.</param>
    </member>
    <member name="M:System.Data.DataTable.OnTableClearing(System.Data.DataTableClearEventArgs)">
      <summary>Вызывает событие <see cref="E:System.Data.DataTable.TableClearing" />.</summary>
      <param name="e">Объект <see cref="T:System.Data.DataTableClearEventArgs" />, содержащий данные события.</param>
    </member>
    <member name="M:System.Data.DataTable.OnTableNewRow(System.Data.DataTableNewRowEventArgs)">
      <summary>Вызывает событие <see cref="E:System.Data.DataTable.TableNewRow" />.</summary>
      <param name="e">Объект <see cref="T:System.Data.DataTableNewRowEventArgs" />, содержащий данные события.</param>
    </member>
    <member name="P:System.Data.DataTable.ParentRelations">
      <summary>Получает коллекцию родительских отношений для объекта <see cref="T:System.Data.DataTable" />.</summary>
      <returns>Коллекция <see cref="T:System.Data.DataRelationCollection" />, содержащая родительские отношения для таблицы. Если отсутствуют объекты <see cref="T:System.Data.DataRelation" /> возвращается пустая коллекция.</returns>
    </member>
    <member name="P:System.Data.DataTable.Prefix">
      <summary>Возвращает или задает пространство имен для представления данных объекта <see cref="T:System.Data.DataTable" /> в формате XML.</summary>
      <returns>Префикс объекта <see cref="T:System.Data.DataTable" />.</returns>
    </member>
    <member name="P:System.Data.DataTable.PrimaryKey">
      <summary>Возвращает или задает массив столбцов, которые являются столбцами первичного ключа для таблицы данных.</summary>
      <returns>Массив объектов <see cref="T:System.Data.DataColumn" />.</returns>
      <exception cref="T:System.Data.DataException">Ключ является внешним ключом.</exception>
    </member>
    <member name="M:System.Data.DataTable.ReadXml(System.IO.Stream)">
      <summary>Считывает XML-схему и данные в <see cref="T:System.Data.DataTable" />, используя указанный класс <see cref="T:System.IO.Stream" />.</summary>
      <param name="stream">Производный объект от класса <see cref="T:System.IO.Stream" />.</param>
      <returns>
        <see cref="T:System.Data.XmlReadMode" /> служит для чтения данных.</returns>
    </member>
    <member name="M:System.Data.DataTable.ReadXml(System.IO.TextReader)">
      <summary>Считывает XML-схему и данные в <see cref="T:System.Data.DataTable" />, используя указанный класс <see cref="T:System.IO.TextReader" />.</summary>
      <param name="reader">Объект <see cref="T:System.IO.TextReader" />, используемый для чтения данных.</param>
      <returns>
        <see cref="T:System.Data.XmlReadMode" /> служит для чтения данных.</returns>
    </member>
    <member name="M:System.Data.DataTable.ReadXml(System.String)">
      <summary>Читает данные и схему XML в <see cref="T:System.Data.DataTable" /> из указанного файла.</summary>
      <param name="fileName">Имя файла, из которого читаются данные.</param>
      <returns>
        <see cref="T:System.Data.XmlReadMode" /> служит для чтения данных.</returns>
    </member>
    <member name="M:System.Data.DataTable.ReadXml(System.Xml.XmlReader)">
      <summary>Читает данные и схему XML в <see cref="T:System.Data.DataTable" />, используя указанное средство чтения <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="reader">Объект <see cref="T:System.Xml.XmlReader" />, используемый для чтения данных.</param>
      <returns>
        <see cref="T:System.Data.XmlReadMode" /> служит для чтения данных.</returns>
    </member>
    <member name="M:System.Data.DataTable.ReadXmlSchema(System.IO.Stream)">
      <summary>Считывает XML-схему в <see cref="T:System.Data.DataTable" />, используя указанный поток.</summary>
      <param name="stream">Поток, используемый для чтения схемы.</param>
    </member>
    <member name="M:System.Data.DataTable.ReadXmlSchema(System.IO.TextReader)">
      <summary>Считывает XML-схему в <see cref="T:System.Data.DataTable" />, используя указанный объект <see cref="T:System.IO.TextReader" />.</summary>
      <param name="reader">Средство чтения <see cref="T:System.IO.TextReader" />, используемое для чтения сведений схемы.</param>
    </member>
    <member name="M:System.Data.DataTable.ReadXmlSchema(System.String)">
      <summary>Считывает XML-схему из указанного файла в таблицу <see cref="T:System.Data.DataTable" />.</summary>
      <param name="fileName">Имя файла, из которого считываются сведения схемы.</param>
    </member>
    <member name="M:System.Data.DataTable.ReadXmlSchema(System.Xml.XmlReader)">
      <summary>Считывает XML-схему в <see cref="T:System.Data.DataTable" />, используя указанный объект <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="reader">Средство чтения <see cref="T:System.Xml.XmlReader" />, используемое для чтения сведений схемы.</param>
    </member>
    <member name="M:System.Data.DataTable.ReadXmlSerializable(System.Xml.XmlReader)">
      <summary>Считывает из XML-потока.</summary>
      <param name="reader">Объект <see cref="T:System.Xml.XmlReader" />.</param>
    </member>
    <member name="M:System.Data.DataTable.RejectChanges">
      <summary>Выполняется откат всех изменений, внесенных в таблицу с момента ее загрузки или после последнего вызова метода <see cref="M:System.Data.DataTable.AcceptChanges" />.</summary>
    </member>
    <member name="P:System.Data.DataTable.RemotingFormat">
      <summary>Возвращает или задает формат сериализации.</summary>
      <returns>Перечисление <see cref="T:System.Data.SerializationFormat" />, задающее сериализацию типа <see langword="Binary" /> или <see langword="Xml" />.</returns>
    </member>
    <member name="M:System.Data.DataTable.Reset">
      <summary>Возвращает объект <see cref="T:System.Data.DataTable" /> в исходное состояние. Сброс удаляет все данные, индексы, связи и столбцы таблицы. Если набор данных содержит таблицы данных, то таблица по-прежнему будет частью набора данных после того, как таблица будет сброшена.</summary>
    </member>
    <member name="E:System.Data.DataTable.RowChanged">
      <summary>Происходит после успешного изменения <see cref="T:System.Data.DataRow" />.</summary>
    </member>
    <member name="E:System.Data.DataTable.RowChanging">
      <summary>Происходит при изменении объекта <see cref="T:System.Data.DataRow" />.</summary>
    </member>
    <member name="E:System.Data.DataTable.RowDeleted">
      <summary>Происходит после удаления строки таблицы.</summary>
    </member>
    <member name="E:System.Data.DataTable.RowDeleting">
      <summary>Происходит перед удалением строки таблицы.</summary>
    </member>
    <member name="P:System.Data.DataTable.Rows">
      <summary>Получает коллекцию строк, принадлежащих данной таблице.</summary>
      <returns>Коллекция <see cref="T:System.Data.DataRowCollection" />, содержащая объекты <see cref="T:System.Data.DataRow" />; в противном случае — значение null, если нет ни одного объекта <see cref="T:System.Data.DataRow" />.</returns>
    </member>
    <member name="M:System.Data.DataTable.Select">
      <summary>Получает массив всех объектов <see cref="T:System.Data.DataRow" />.</summary>
      <returns>Массив объектов <see cref="T:System.Data.DataRow" />.</returns>
    </member>
    <member name="M:System.Data.DataTable.Select(System.String)">
      <summary>Получает массив всех объектов <see cref="T:System.Data.DataRow" />, отвечающих условиям фильтра.</summary>
      <param name="filterExpression">Условия фильтрации строк. Примеры по фильтрации строк см. в разделе Синтаксис DataView RowFilter [C#].</param>
      <returns>Массив объектов <see cref="T:System.Data.DataRow" />.</returns>
    </member>
    <member name="M:System.Data.DataTable.Select(System.String,System.String)">
      <summary>Получает массив всех объектов <see cref="T:System.Data.DataRow" />, отвечающих условиям фильтра, согласно указанному порядку сортировки.</summary>
      <param name="filterExpression">Условия фильтрации строк. Примеры по фильтрации строк см. в разделе Синтаксис DataView RowFilter [C#].</param>
      <param name="sort">Строка, задающая столбец и порядок его сортировки.</param>
      <returns>Массив объектов <see cref="T:System.Data.DataRow" />, отвечающих выражению для фильтра.</returns>
    </member>
    <member name="M:System.Data.DataTable.Select(System.String,System.String,System.Data.DataViewRowState)">
      <summary>Получает массив всех объектов <see cref="T:System.Data.DataRow" />, отвечающих условиям фильтра, согласно порядку сортировки, соответствующему указанному состоянию.</summary>
      <param name="filterExpression">Условия фильтрации строк. Примеры по фильтрации строк см. в разделе Синтаксис DataView RowFilter [C#].</param>
      <param name="sort">Строка, задающая столбец и порядок его сортировки.</param>
      <param name="recordStates">Одно из значений <see cref="T:System.Data.DataViewRowState" />.</param>
      <returns>Массив объектов <see cref="T:System.Data.DataRow" />.</returns>
    </member>
    <member name="P:System.Data.DataTable.Site">
      <summary>Возвращает или задает тип <see cref="T:System.ComponentModel.ISite" /> для объекта <see cref="T:System.Data.DataTable" />.</summary>
      <returns>Интерфейс <see cref="T:System.ComponentModel.ISite" /> для <see cref="T:System.Data.DataTable" />.</returns>
    </member>
    <member name="P:System.Data.DataTable.System#ComponentModel#IListSource#ContainsListCollection">
      <summary>Описание этого члена см. в разделе <see cref="P:System.ComponentModel.IListSource.ContainsListCollection" />.</summary>
      <returns>Значение <see langword="true" />, если коллекция является коллекцией объектов <see cref="T:System.Collections.IList" />; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataTable.System#ComponentModel#IListSource#GetList">
      <summary>Описание этого члена см. в разделе <see cref="M:System.ComponentModel.IListSource.GetList" />.</summary>
      <returns>Объект <see cref="T:System.Collections.IList" />, который можно привязать к источнику данных из объекта.</returns>
    </member>
    <member name="M:System.Data.DataTable.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary>Описание этого члена см. в разделе <see cref="M:System.Xml.Serialization.IXmlSerializable.GetSchema" />.</summary>
      <returns>Схема <see cref="T:System.Xml.Schema.XmlSchema" />, описывающая представление XML объекта, полученного методом <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" /> и используемого методом <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" />.</returns>
    </member>
    <member name="M:System.Data.DataTable.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary>Описание этого члена см. в разделе <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" />.</summary>
      <param name="reader">XmlReader.</param>
    </member>
    <member name="M:System.Data.DataTable.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary>Описание этого члена см. в разделе <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" />.</summary>
      <param name="writer">XmlWriter.</param>
    </member>
    <member name="E:System.Data.DataTable.TableCleared">
      <summary>Происходит после очистки <see cref="T:System.Data.DataTable" />.</summary>
    </member>
    <member name="E:System.Data.DataTable.TableClearing">
      <summary>Происходит, когда очищается таблица <see cref="T:System.Data.DataTable" />.</summary>
    </member>
    <member name="P:System.Data.DataTable.TableName">
      <summary>Возвращает или задает имя таблицы для объекта <see cref="T:System.Data.DataTable" />.</summary>
      <returns>Имя <see cref="T:System.Data.DataTable" />.</returns>
      <exception cref="T:System.ArgumentException">Передается значение <see langword="null" /> или пустая строка (""), а таблица принадлежит коллекции.</exception>
      <exception cref="T:System.Data.DuplicateNameException">Таблица принадлежит коллекции, которая уже содержит таблицу с таким же именем. (При сравнении учитывается регистр).</exception>
    </member>
    <member name="E:System.Data.DataTable.TableNewRow">
      <summary>Происходит, когда вставляется новая строка <see cref="T:System.Data.DataRow" />.</summary>
    </member>
    <member name="M:System.Data.DataTable.ToString">
      <summary>Получает свойства <see cref="P:System.Data.DataTable.TableName" /> и <see cref="P:System.Data.DataTable.DisplayExpression" />, если существует сцепленная строка.</summary>
      <returns>Строка, состоящая из значений свойств <see cref="P:System.Data.DataTable.TableName" /> и <see cref="P:System.Data.DataTable.DisplayExpression" />.</returns>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.IO.Stream)">
      <summary>Записывает текущее содержимое <see cref="T:System.Data.DataTable" /> как XML с использованием указанного элемента <see cref="T:System.IO.Stream" />.</summary>
      <param name="stream">Поток, в который записываются данные.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Boolean)">
      <summary>Записывает текущее содержимое <see cref="T:System.Data.DataTable" /> как XML с использованием указанного элемента <see cref="T:System.IO.Stream" />. Чтобы сохранить данные для таблицы и всех ее потомков, установите для параметра <paramref name="writeHierarchy" /> значение <see langword="true" />.</summary>
      <param name="stream">Поток, в который записываются данные.</param>
      <param name="writeHierarchy">Если значение равно <see langword="true" />, записывает содержимое текущей таблицы и всех ее потомков. Если значение равно <see langword="false" /> (значение по умолчанию), записывает данные только для текущей таблицы.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Data.XmlWriteMode)">
      <summary>Записывает текущие данные и по возможности схему для <see cref="T:System.Data.DataTable" /> в указанный файл с помощью заданного объекта <see cref="T:System.Data.XmlWriteMode" />. Чтобы записать схему, задайте в параметре <paramref name="mode" /> значение <see langword="WriteSchema" />.</summary>
      <param name="stream">Поток, в который записываются данные.</param>
      <param name="mode">Одно из значений <see cref="T:System.Data.XmlWriteMode" />.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Data.XmlWriteMode,System.Boolean)">
      <summary>Записывает текущие данные и по возможности схему для <see cref="T:System.Data.DataTable" /> в указанный файл с помощью заданного объекта <see cref="T:System.Data.XmlWriteMode" />. Чтобы записать схему, задайте в параметре <paramref name="mode" /> значение <see langword="WriteSchema" />. Чтобы сохранить данные для таблицы и всех ее потомков, установите для параметра <paramref name="writeHierarchy" /> значение <see langword="true" />.</summary>
      <param name="stream">Поток, в который записываются данные.</param>
      <param name="mode">Одно из значений <see cref="T:System.Data.XmlWriteMode" />.</param>
      <param name="writeHierarchy">Если значение равно <see langword="true" />, записывает содержимое текущей таблицы и всех ее потомков. Если значение равно <see langword="false" /> (значение по умолчанию), записывает данные только для текущей таблицы.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.IO.TextWriter)">
      <summary>Записывает текущее содержимое <see cref="T:System.Data.DataTable" /> как XML с использованием указанного элемента <see cref="T:System.IO.TextWriter" />.</summary>
      <param name="writer">
        <see cref="T:System.IO.TextWriter" /> — используется для записи содержимого.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Boolean)">
      <summary>Записывает текущее содержимое <see cref="T:System.Data.DataTable" /> как XML с использованием указанного элемента <see cref="T:System.IO.TextWriter" />. Чтобы сохранить данные для таблицы и всех ее потомков, установите для параметра <paramref name="writeHierarchy" /> значение <see langword="true" />.</summary>
      <param name="writer">
        <see cref="T:System.IO.TextWriter" /> — используется для записи содержимого.</param>
      <param name="writeHierarchy">Если значение равно <see langword="true" />, записывает содержимое текущей таблицы и всех ее потомков. Если значение равно <see langword="false" /> (значение по умолчанию), записывает данные только для текущей таблицы.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode)">
      <summary>Записывает текущие данные и по возможности схему для <see cref="T:System.Data.DataTable" /> с помощью указанных <see cref="T:System.IO.TextWriter" /> и  <see cref="T:System.Data.XmlWriteMode" />. Чтобы записать схему, задайте в параметре <paramref name="mode" /> значение <see langword="WriteSchema" />.</summary>
      <param name="writer">Класс <see cref="T:System.IO.TextWriter" />, используемый для записи документа.</param>
      <param name="mode">Одно из значений <see cref="T:System.Data.XmlWriteMode" />.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode,System.Boolean)">
      <summary>Записывает текущие данные и по возможности схему для <see cref="T:System.Data.DataTable" /> с помощью указанных <see cref="T:System.IO.TextWriter" /> и  <see cref="T:System.Data.XmlWriteMode" />. Чтобы записать схему, задайте в параметре <paramref name="mode" /> значение <see langword="WriteSchema" />. Чтобы сохранить данные для таблицы и всех ее потомков, установите для параметра <paramref name="writeHierarchy" /> значение <see langword="true" />.</summary>
      <param name="writer">Класс <see cref="T:System.IO.TextWriter" />, используемый для записи документа.</param>
      <param name="mode">Одно из значений <see cref="T:System.Data.XmlWriteMode" />.</param>
      <param name="writeHierarchy">Если значение равно <see langword="true" />, записывает содержимое текущей таблицы и всех ее потомков. Если значение равно <see langword="false" /> (значение по умолчанию), записывает данные только для текущей таблицы.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.String)">
      <summary>Записывает текущее содержимое таблицы <see cref="T:System.Data.DataTable" /> в формате XML, используя указанный файл.</summary>
      <param name="fileName">Файл, в который записываются XML-данные.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.String,System.Boolean)">
      <summary>Записывает текущее содержимое таблицы <see cref="T:System.Data.DataTable" /> в формате XML, используя указанный файл. Чтобы сохранить данные для таблицы и всех ее потомков, установите для параметра <paramref name="writeHierarchy" /> значение <see langword="true" />.</summary>
      <param name="fileName">Файл, в который записываются XML-данные.</param>
      <param name="writeHierarchy">Если значение равно <see langword="true" />, записывает содержимое текущей таблицы и всех ее потомков. Если значение равно <see langword="false" /> (значение по умолчанию), записывает данные только для текущей таблицы.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.String,System.Data.XmlWriteMode)">
      <summary>Записывает текущие данные и по возможности схему для <see cref="T:System.Data.DataTable" />, используя указанный файл и заданное перечисление <see cref="T:System.Data.XmlWriteMode" />. Чтобы записать схему, задайте в параметре <paramref name="mode" /> значение <see langword="WriteSchema" />.</summary>
      <param name="fileName">Имя файла, в который записываются данные.</param>
      <param name="mode">Одно из значений <see cref="T:System.Data.XmlWriteMode" />.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.String,System.Data.XmlWriteMode,System.Boolean)">
      <summary>Записывает текущие данные и по возможности схему для <see cref="T:System.Data.DataTable" />, используя указанный файл и заданное перечисление <see cref="T:System.Data.XmlWriteMode" />. Чтобы записать схему, задайте в параметре <paramref name="mode" /> значение <see langword="WriteSchema" />. Чтобы сохранить данные для таблицы и всех ее потомков, установите для параметра <paramref name="writeHierarchy" /> значение <see langword="true" />.</summary>
      <param name="fileName">Имя файла, в который записываются данные.</param>
      <param name="mode">Одно из значений <see cref="T:System.Data.XmlWriteMode" />.</param>
      <param name="writeHierarchy">Если значение равно <see langword="true" />, записывает содержимое текущей таблицы и всех ее потомков. Если значение равно <see langword="false" /> (значение по умолчанию), записывает данные только для текущей таблицы.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter)">
      <summary>Записывает текущее содержимое <see cref="T:System.Data.DataTable" /> как XML с использованием указанного элемента <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">Средство записи <see cref="T:System.Xml.XmlWriter" />, с помощью которого записывается содержимое.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Boolean)">
      <summary>Записывает текущее содержимое <see cref="T:System.Data.DataTable" /> как XML с использованием указанного элемента <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">Средство записи <see cref="T:System.Xml.XmlWriter" />, с помощью которого записывается содержимое.</param>
      <param name="writeHierarchy">Если значение равно <see langword="true" />, записывает содержимое текущей таблицы и всех ее потомков. Если значение равно <see langword="false" /> (значение по умолчанию), записывает данные только для текущей таблицы.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode)">
      <summary>Записывает текущие данные и по возможности схему для <see cref="T:System.Data.DataTable" /> с помощью указанных <see cref="T:System.Xml.XmlWriter" /> и  <see cref="T:System.Data.XmlWriteMode" />. Чтобы записать схему, задайте в параметре <paramref name="mode" /> значение <see langword="WriteSchema" />.</summary>
      <param name="writer">Класс <see cref="T:System.Xml.XmlWriter" />, используемый для записи документа.</param>
      <param name="mode">Одно из значений <see cref="T:System.Data.XmlWriteMode" />.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode,System.Boolean)">
      <summary>Записывает текущие данные и по возможности схему для <see cref="T:System.Data.DataTable" /> с помощью указанных <see cref="T:System.Xml.XmlWriter" /> и  <see cref="T:System.Data.XmlWriteMode" />. Чтобы записать схему, задайте в параметре <paramref name="mode" /> значение <see langword="WriteSchema" />. Чтобы сохранить данные для таблицы и всех ее потомков, установите для параметра <paramref name="writeHierarchy" /> значение <see langword="true" />.</summary>
      <param name="writer">Класс <see cref="T:System.Xml.XmlWriter" />, используемый для записи документа.</param>
      <param name="mode">Одно из значений <see cref="T:System.Data.XmlWriteMode" />.</param>
      <param name="writeHierarchy">Если значение равно <see langword="true" />, записывает содержимое текущей таблицы и всех ее потомков. Если значение равно <see langword="false" /> (значение по умолчанию), записывает данные только для текущей таблицы.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXmlSchema(System.IO.Stream)">
      <summary>Записывает текущую структуру данных таблицы <see cref="T:System.Data.DataTable" /> в виде XML-схемы в указанный поток.</summary>
      <param name="stream">Поток, в который записывается XML-схема.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXmlSchema(System.IO.Stream,System.Boolean)">
      <summary>Записывает текущую структуру данных таблицы <see cref="T:System.Data.DataTable" /> в виде XML-схемы в указанный поток. Чтобы сохранить схему для таблицы и всех ее потомков, установите для параметра <paramref name="writeHierarchy" /> значение <see langword="true" />.</summary>
      <param name="stream">Поток, в который записывается XML-схема.</param>
      <param name="writeHierarchy">Если значение равно <see langword="true" />, записывает схему текущей таблицы и всех ее потомков. Если значение равно <see langword="false" /> (значение по умолчанию), записывает схему только для текущей таблицы.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXmlSchema(System.IO.TextWriter)">
      <summary>Записывает текущую структуру данных таблицы <see cref="T:System.Data.DataTable" /> в виде XML-схемы, используя указанный класс <see cref="T:System.IO.TextWriter" />.</summary>
      <param name="writer">Класс <see cref="T:System.IO.TextWriter" />, с помощью которого осуществляется запись.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXmlSchema(System.IO.TextWriter,System.Boolean)">
      <summary>Записывает текущую структуру данных таблицы <see cref="T:System.Data.DataTable" /> в виде XML-схемы, используя указанный класс <see cref="T:System.IO.TextWriter" />. Чтобы сохранить схему для таблицы и всех ее потомков, установите для параметра <paramref name="writeHierarchy" /> значение <see langword="true" />.</summary>
      <param name="writer">Класс <see cref="T:System.IO.TextWriter" />, с помощью которого осуществляется запись.</param>
      <param name="writeHierarchy">Если значение равно <see langword="true" />, записывает схему текущей таблицы и всех ее потомков. Если значение равно <see langword="false" /> (значение по умолчанию), записывает схему только для текущей таблицы.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXmlSchema(System.String)">
      <summary>Записывает текущую структуру данных таблицы <see cref="T:System.Data.DataTable" /> в виде XML-схемы в указанный файл.</summary>
      <param name="fileName">Имя используемого файла.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXmlSchema(System.String,System.Boolean)">
      <summary>Записывает текущую структуру данных таблицы <see cref="T:System.Data.DataTable" /> в виде XML-схемы в указанный файл. Чтобы сохранить схему для таблицы и всех ее потомков, установите для параметра <paramref name="writeHierarchy" /> значение <see langword="true" />.</summary>
      <param name="fileName">Имя используемого файла.</param>
      <param name="writeHierarchy">Если значение равно <see langword="true" />, записывает схему текущей таблицы и всех ее потомков. Если значение равно <see langword="false" /> (значение по умолчанию), записывает схему только для текущей таблицы.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXmlSchema(System.Xml.XmlWriter)">
      <summary>Записывает текущую структуру данных таблицы <see cref="T:System.Data.DataTable" /> в виде XML-схемы, используя указанный класс <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">Используемый <see cref="T:System.Xml.XmlWriter" />.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXmlSchema(System.Xml.XmlWriter,System.Boolean)">
      <summary>Записывает текущую структуру данных таблицы <see cref="T:System.Data.DataTable" /> в виде XML-схемы, используя указанный класс <see cref="T:System.Xml.XmlWriter" />. Чтобы сохранить схему для таблицы и всех ее потомков, установите для параметра <paramref name="writeHierarchy" /> значение <see langword="true" />.</summary>
      <param name="writer">Класс <see cref="T:System.Xml.XmlWriter" />, используемый для записи документа.</param>
      <param name="writeHierarchy">Если значение равно <see langword="true" />, записывает схему текущей таблицы и всех ее потомков. Если значение равно <see langword="false" /> (значение по умолчанию), записывает схему только для текущей таблицы.</param>
    </member>
    <member name="T:System.Data.DataTableClearEventArgs">
      <summary>Предоставляет данные для метода <see cref="M:System.Data.DataTable.Clear" />.</summary>
    </member>
    <member name="M:System.Data.DataTableClearEventArgs.#ctor(System.Data.DataTable)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.DataTableClearEventArgs" />.</summary>
      <param name="dataTable">Объект <see cref="T:System.Data.DataTable" />, строки которого очищаются.</param>
    </member>
    <member name="P:System.Data.DataTableClearEventArgs.Table">
      <summary>Возвращает таблицу, строки которой очищаются.</summary>
      <returns>Объект <see cref="T:System.Data.DataTable" />, строки которого очищаются.</returns>
    </member>
    <member name="P:System.Data.DataTableClearEventArgs.TableName">
      <summary>Возвращает имя таблицы, строки которой очищаются.</summary>
      <returns>Значение <see cref="T:System.String" />, указывающее имя таблицы.</returns>
    </member>
    <member name="P:System.Data.DataTableClearEventArgs.TableNamespace">
      <summary>Возвращает пространство имен таблицы, строки которой очищаются.</summary>
      <returns>Значение <see cref="T:System.String" />, указывающее имя пространства имен.</returns>
    </member>
    <member name="T:System.Data.DataTableClearEventH*******ler">
      <summary>Представляет метод, обрабатывающий метод <see cref="M:System.Data.DataTable.Clear" />.</summary>
      <param name="sender">Источник события.</param>
      <param name="e">Объект <see cref="T:System.Data.DataTableClearEventArgs" />, содержащий данные события.</param>
    </member>
    <member name="T:System.Data.DataTableCollection">
      <summary>Представляет коллекцию таблиц для <see cref="T:System.Data.DataSet" />.</summary>
    </member>
    <member name="M:System.Data.DataTableCollection.Add">
      <summary>Создает новый объект <see cref="T:System.Data.DataTable" />, используя имя по умолчанию, и добавляет его в коллекцию.</summary>
      <returns>Вновь созданный <see cref="T:System.Data.DataTable" />.</returns>
    </member>
    <member name="M:System.Data.DataTableCollection.Add(System.Data.DataTable)">
      <summary>Добавляет указанный параметр <see langword="DataTable" /> в коллекцию.</summary>
      <param name="table">Добавляемый объект <see langword="DataTable" />.</param>
      <exception cref="T:System.ArgumentNullException">Значением, заданным для таблицы, является <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Таблица уже принадлежит данной или другой коллекции.</exception>
      <exception cref="T:System.Data.DuplicateNameException">Таблица в коллекции имеет такое же имя. Сравнение выполняется без учета регистра.</exception>
    </member>
    <member name="M:System.Data.DataTableCollection.Add(System.String)">
      <summary>Создает объект <see cref="T:System.Data.DataTable" />, используя заданное имя, и добавляет его в коллекцию.</summary>
      <param name="name">Имя, задаваемое созданному объекту <see cref="T:System.Data.DataTable" />.</param>
      <returns>Вновь созданный <see cref="T:System.Data.DataTable" />.</returns>
      <exception cref="T:System.Data.DuplicateNameException">Таблица в коллекции имеет такое же имя. (Сравнение выполняется без учета регистра).</exception>
    </member>
    <member name="M:System.Data.DataTableCollection.Add(System.String,System.String)">
      <summary>Создает объект <see cref="T:System.Data.DataTable" />, используя заданное имя, и добавляет его в коллекцию.</summary>
      <param name="name">Имя, задаваемое созданному объекту <see cref="T:System.Data.DataTable" />.</param>
      <param name="tableNamespace">Пространство имен, задаваемое созданному объекту <see cref="T:System.Data.DataTable" />.</param>
      <returns>Вновь созданный <see cref="T:System.Data.DataTable" />.</returns>
      <exception cref="T:System.Data.DuplicateNameException">Таблица в коллекции имеет такое же имя. (Сравнение выполняется без учета регистра).</exception>
    </member>
    <member name="M:System.Data.DataTableCollection.AddRange(System.Data.DataTable[])">
      <summary>Копирует элементы указанного массива <see cref="T:System.Data.DataTable" /> в конец коллекции.</summary>
      <param name="tables">Массив объектов <see cref="T:System.Data.DataTable" />, добавляемый в коллекцию.</param>
    </member>
    <member name="M:System.Data.DataTableCollection.CanRemove(System.Data.DataTable)">
      <summary>Проверяет возможность удаления указанного объекта <see cref="T:System.Data.DataTable" /> из коллекции.</summary>
      <param name="table">Объект <see langword="DataTable" /> в коллекции, для которого производится проверка.</param>
      <returns>Значение <see langword="true" />, если таблицу можно удалить; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataTableCollection.Clear">
      <summary>Очищает коллекцию от всех объектов <see cref="T:System.Data.DataTable" />.</summary>
    </member>
    <member name="E:System.Data.DataTableCollection.CollectionChanged">
      <summary>Происходит после изменения коллекции <see cref="T:System.Data.DataTableCollection" /> в результате добавления или удаления объектов <see cref="T:System.Data.DataTable" />.</summary>
    </member>
    <member name="E:System.Data.DataTableCollection.CollectionChanging">
      <summary>Происходит при изменении коллекции <see cref="T:System.Data.DataTableCollection" /> в результате добавления или удаления объектов <see cref="T:System.Data.DataTable" />.</summary>
    </member>
    <member name="M:System.Data.DataTableCollection.Contains(System.String)">
      <summary>Получает значение, показывающее, существует ли объект <see cref="T:System.Data.DataTable" /> с указанным именем в коллекции.</summary>
      <param name="name">Имя объекта <see cref="T:System.Data.DataTable" />, который необходимо найти.</param>
      <returns>Значение <see langword="true" />, если указанная таблица существует; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataTableCollection.Contains(System.String,System.String)">
      <summary>Получает значение, показывающее, существует ли объект <see cref="T:System.Data.DataTable" /> с указанным именем и пространство имен для таблицы в коллекции.</summary>
      <param name="name">Имя объекта <see cref="T:System.Data.DataTable" />, который необходимо найти.</param>
      <param name="tableNamespace">Имя пространства имен объекта <see cref="T:System.Data.DataTable" />, в котором осуществляется поиск.</param>
      <returns>Значение <see langword="true" />, если указанная таблица существует; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataTableCollection.CopyTo(System.Data.DataTable[],System.Int32)">
      <summary>Копирует все элементы текущей коллекции <see cref="T:System.Data.DataTableCollection" /> в одномерный массив <see cref="T:System.Array" />, начиная с указанного индекса целевого массива.</summary>
      <param name="array">Одномерный массив <see cref="T:System.Array" />, в который копируются элементы текущего объекта <see cref="T:System.Data.DataTableCollection" />.</param>
      <param name="index">Индекс целевого массива <see cref="T:System.Array" />, с которого начинается копирование.</param>
    </member>
    <member name="M:System.Data.DataTableCollection.IndexOf(System.Data.DataTable)">
      <summary>Возвращает индекс указанного объекта <see cref="T:System.Data.DataTable" />.</summary>
      <param name="table">Объект <see langword="DataTable" />, который требуется найти.</param>
      <returns>Индекс (с нуля) таблицы или значение -1, если таблица не найдена в коллекции.</returns>
    </member>
    <member name="M:System.Data.DataTableCollection.IndexOf(System.String)">
      <summary>Получает индекс объекта <see cref="T:System.Data.DataTable" /> с указанным именем в коллекции.</summary>
      <param name="tableName">Имя искомого объекта <see langword="DataTable" />.</param>
      <returns>Индекс (с нуля) объекта <see langword="DataTable" /> с указанным именем или -1, если таблица не существует в коллекции.  
   
 Возвращает значение -1, когда два или более столбцов имеют одно и то же имя, но различные пространства имен. Вызов не последует, если имеется какая-либо неопределенность при сопоставлении имени таблицы точно одной таблице.</returns>
    </member>
    <member name="M:System.Data.DataTableCollection.IndexOf(System.String,System.String)">
      <summary>Получает индекс указанного объекта <see cref="T:System.Data.DataTable" /> в коллекции.</summary>
      <param name="tableName">Имя искомого объекта <see cref="T:System.Data.DataTable" />.</param>
      <param name="tableNamespace">Имя пространства имен объекта <see cref="T:System.Data.DataTable" />, в котором осуществляется поиск.</param>
      <returns>Индекс (с нуля) объекта <see cref="T:System.Data.DataTable" /> с указанным именем или -1, если таблица не существует в коллекции.</returns>
    </member>
    <member name="P:System.Data.DataTableCollection.Item(System.Int32)">
      <summary>Возвращает объект <see cref="T:System.Data.DataTable" /> по указанному индексу.</summary>
      <param name="index">Отсчитываемый от нуля индекс объекта <see cref="T:System.Data.DataTable" />, который требуется найти.</param>
      <returns>Объект <see cref="T:System.Data.DataTable" /> с указанным индексом; в противном случае <see langword="null" /> Если <see cref="T:System.Data.DataTable" /> не существует.</returns>
      <exception cref="T:System.IndexOutOfRangeException">Значение индекса больше числа элементов в коллекции.</exception>
    </member>
    <member name="P:System.Data.DataTableCollection.Item(System.String)">
      <summary>Получает объект <see cref="T:System.Data.DataTable" /> с указанным именем.</summary>
      <param name="name">Имя объекта <see langword="DataTable" />, который необходимо найти.</param>
      <returns>Объект <see cref="T:System.Data.DataTable" /> с указанным именем; в противном случае — значение <see langword="null" />, если объект <see cref="T:System.Data.DataTable" /> не существует.</returns>
    </member>
    <member name="P:System.Data.DataTableCollection.Item(System.String,System.String)">
      <summary>Получает объект <see cref="T:System.Data.DataTable" /> с указанным именем в указанном пространстве имен.</summary>
      <param name="name">Имя объекта <see langword="DataTable" />, который необходимо найти.</param>
      <param name="tableNamespace">Имя пространства имен объекта <see cref="T:System.Data.DataTable" />, в котором осуществляется поиск.</param>
      <returns>Объект <see cref="T:System.Data.DataTable" /> с указанным именем; в противном случае — значение <see langword="null" />, если объект <see cref="T:System.Data.DataTable" /> не существует.</returns>
    </member>
    <member name="M:System.Data.DataTableCollection.Remove(System.Data.DataTable)">
      <summary>Удаляет указанный объект <see cref="T:System.Data.DataTable" /> из коллекции.</summary>
      <param name="table">Объект <see langword="DataTable" /> для удаления.</param>
      <exception cref="T:System.ArgumentNullException">Значением, заданным для таблицы, является <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Таблица не принадлежит этой коллекции.  
-или- 
Таблица является частью отношения.</exception>
    </member>
    <member name="M:System.Data.DataTableCollection.Remove(System.String)">
      <summary>Удаляет объект <see cref="T:System.Data.DataTable" /> с указанным именем из коллекции.</summary>
      <param name="name">Имя удаляемого объекта <see cref="T:System.Data.DataTable" />.</param>
      <exception cref="T:System.ArgumentException">В коллекции нет таблицы с указанным именем.</exception>
    </member>
    <member name="M:System.Data.DataTableCollection.Remove(System.String,System.String)">
      <summary>Удаляет объект <see cref="T:System.Data.DataTable" /> с указанным именем из коллекции.</summary>
      <param name="name">Имя удаляемого объекта <see cref="T:System.Data.DataTable" />.</param>
      <param name="tableNamespace">Имя пространства имен объекта <see cref="T:System.Data.DataTable" />, в котором осуществляется поиск.</param>
      <exception cref="T:System.ArgumentException">В коллекции нет таблицы с указанным именем.</exception>
    </member>
    <member name="M:System.Data.DataTableCollection.RemoveAt(System.Int32)">
      <summary>Удаляет объект <see cref="T:System.Data.DataTable" /> по указанному индексу из коллекции.</summary>
      <param name="index">Индекс удаляемого объекта <see langword="DataTable" />.</param>
      <exception cref="T:System.ArgumentException">В коллекции нет таблицы по указанному индексу.</exception>
    </member>
    <member name="T:System.Data.DataTableNewRowEventArgs">
      <summary>Предоставляет данные для метода <see cref="M:System.Data.DataTable.NewRow" />.</summary>
    </member>
    <member name="M:System.Data.DataTableNewRowEventArgs.#ctor(System.Data.DataRow)">
      <summary>Инициализирует новый экземпляр <see cref="T:System.Data.DataTableNewRowEventArgs" />.</summary>
      <param name="dataRow">Добавляемый объект <see cref="T:System.Data.DataRow" />.</param>
    </member>
    <member name="P:System.Data.DataTableNewRowEventArgs.Row">
      <summary>Получает добавляемую строку.</summary>
      <returns>Добавляемый объект <see cref="T:System.Data.DataRow" />.</returns>
    </member>
    <member name="T:System.Data.DataTableNewRowEventH*******ler">
      <summary>Представляет метод, обрабатывающий метод <see cref="M:System.Data.DataTable.NewRow" />.</summary>
      <param name="sender">Источник события.</param>
      <param name="e">Объект <see cref="T:System.Data.DataTableNewRowEventArgs" />, содержащий данные события.</param>
    </member>
    <member name="T:System.Data.DataTableReader">
      <summary>Объект <see cref="T:System.Data.DataTableReader" /> получает содержимое одного или нескольких объектов <see cref="T:System.Data.DataTable" /> в виде одного или нескольких однопроходных результирующих наборов, доступных только для чтения.</summary>
    </member>
    <member name="M:System.Data.DataTableReader.#ctor(System.Data.DataTable)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.DataTableReader" />, с использованием данных из заданного объекта <see cref="T:System.Data.DataTable" />.</summary>
      <param name="dataTable">Объект <see cref="T:System.Data.DataTable" />, из которого новый объект <see cref="T:System.Data.DataTableReader" /> получает свой результирующий набор.</param>
    </member>
    <member name="M:System.Data.DataTableReader.#ctor(System.Data.DataTable[])">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.DataTableReader" />, используя указанный массив объектов <see cref="T:System.Data.DataTable" />.</summary>
      <param name="dataTables">Массив объектов <see cref="T:System.Data.DataTable" />, который предоставляет результаты для нового объекта <see cref="T:System.Data.DataTableReader" />.</param>
    </member>
    <member name="M:System.Data.DataTableReader.Close">
      <summary>Закрывает текущий объект <see cref="T:System.Data.DataTableReader" />.</summary>
    </member>
    <member name="P:System.Data.DataTableReader.Depth">
      <summary>Глубина вложенности для текущей строки объекта <see cref="T:System.Data.DataTableReader" />.</summary>
      <returns>Глубина вложенности для текущей строки; всегда равна нулю.</returns>
    </member>
    <member name="P:System.Data.DataTableReader.FieldCount">
      <summary>Возвращает количество столбцов в текущей строке.</summary>
      <returns>Значение 0, если метод не находится внутри допустимого набора записей; в обратном случае — число столбцов в текущей строке.</returns>
      <exception cref="T:System.InvalidOperationException">Предпринята попытка извлечения значения количества полей в закрытом объекте <see cref="T:System.Data.DataTableReader" />.</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetBoolean(System.Int32)">
      <summary>Возвращает значение заданного столбца в виде объекта <see cref="T:System.Boolean" />.</summary>
      <param name="ordinal">Порядковый номер столбца (от нуля).</param>
      <returns>Значение указанного столбца.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Переданный индекс находился вне диапазона от 0 до <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">Предпринята попытка извлечения данных из удаленной строки.</exception>
      <exception cref="T:System.InvalidOperationException">Предпринята попытка чтения или доступа к столбцу закрытого объекта <see cref="T:System.Data.DataTableReader" />.</exception>
      <exception cref="T:System.InvalidCastException">Указанный столбец не содержит значения <see langword="Boolean" />.</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetByte(System.Int32)">
      <summary>Возвращает значение указанного столбца в виде байта.</summary>
      <param name="ordinal">Порядковый номер столбца (от нуля).</param>
      <returns>Значение указанного столбца.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Переданный индекс находился вне диапазона от 0 до <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">Предпринята попытка извлечения данных из удаленной строки.</exception>
      <exception cref="T:System.InvalidOperationException">Предпринята попытка чтения или доступа к столбцу закрытого объекта <see langword="DataTableReader" />.</exception>
      <exception cref="T:System.InvalidCastException">Указанный столбец не содержит данных с типом byte.</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
      <summary>Считывает поток байтов с заданного смещения столбца в буфер в виде массива, который начинается с конкретного смещения буфера.</summary>
      <param name="ordinal">Порядковый номер столбца (от нуля).</param>
      <param name="dataIndex">Индекс в поле, с которого необходимо начать считывание.</param>
      <param name="buffer">Буфер, в который считывается поток байтов.</param>
      <param name="bufferIndex">Индекс в буфере, начиная с которого будут помещаться данные.</param>
      <param name="length">Максимальная длина для копирования в буфер.</param>
      <returns>Число фактически считанных байтов.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Переданный индекс находился вне диапазона от 0 до <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">Предпринята попытка извлечения данных из удаленной строки.</exception>
      <exception cref="T:System.InvalidOperationException">Предпринята попытка чтения или доступа к столбцу закрытого объекта <see langword="DataTableReader" />.</exception>
      <exception cref="T:System.InvalidCastException">Указанный столбец не содержит массива данных с типом byte.</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetChar(System.Int32)">
      <summary>Возвращает значение указанного столбца в виде символа.</summary>
      <param name="ordinal">Порядковый номер столбца (от нуля).</param>
      <returns>Значение столбца.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Переданный индекс находился вне диапазона от 0 до <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">Предпринята попытка извлечения данных из удаленной строки.</exception>
      <exception cref="T:System.InvalidOperationException">Предпринята попытка чтения или доступа к столбцу закрытого объекта <see langword="DataTableReader" />.</exception>
      <exception cref="T:System.InvalidCastException">Заданное поле не содержит знака.</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
      <summary>Возвращает значение указанного столбца в виде массива символов.</summary>
      <param name="ordinal">Порядковый номер столбца (от нуля).</param>
      <param name="dataIndex">Индекс в поле, с которого необходимо начать считывание.</param>
      <param name="buffer">Буфер, в который необходимо считать поток данных с типом char.</param>
      <param name="bufferIndex">Индекс в буфере, начиная с которого будут помещаться данные.</param>
      <param name="length">Максимальная длина для копирования в буфер.</param>
      <returns>Число фактически считанных символов.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Переданный индекс находился вне диапазона от 0 до <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">Предпринята попытка извлечения данных из удаленной строки.</exception>
      <exception cref="T:System.InvalidOperationException">Предпринята попытка чтения или доступа к столбцу закрытого объекта <see langword="DataTableReader" />.</exception>
      <exception cref="T:System.InvalidCastException">Указанный столбец не содержит массива знаков.</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetDataTypeName(System.Int32)">
      <summary>Получает строку, представляющую тип данных в указанном столбце.</summary>
      <param name="ordinal">Порядковый номер столбца (от нуля).</param>
      <returns>Строка, представляющая имя типа данных в столбце.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Переданный индекс находился вне диапазона от 0 до <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</exception>
      <exception cref="T:System.InvalidOperationException">Предпринята попытка чтения или доступа к столбцу закрытого объекта <see cref="T:System.Data.DataTableReader" />.</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetDateTime(System.Int32)">
      <summary>Возвращает значение указанного столбца в виде объекта <see cref="T:System.DateTime" />.</summary>
      <param name="ordinal">Порядковый номер столбца (от нуля).</param>
      <returns>Значение указанного столбца.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Переданный индекс находился вне диапазона от 0 до <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">Предпринята попытка извлечения данных из удаленной строки.</exception>
      <exception cref="T:System.InvalidOperationException">Предпринята попытка чтения или доступа к столбцу закрытого объекта <see langword="DataTableReader" />.</exception>
      <exception cref="T:System.InvalidCastException">Указанный столбец не содержит значения DateTime.</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetDecimal(System.Int32)">
      <summary>Возвращает значение заданного столбца в виде объекта <see cref="T:System.Decimal" />.</summary>
      <param name="ordinal">Порядковый номер столбца (от нуля).</param>
      <returns>Значение указанного столбца.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Переданный индекс находился вне диапазона от 0 до <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">Предпринята попытка извлечения данных из удаленной строки.</exception>
      <exception cref="T:System.InvalidOperationException">Предпринята попытка чтения или доступа к столбцу закрытого объекта <see langword="DataTableReader" />.</exception>
      <exception cref="T:System.InvalidCastException">Указанный столбец не содержит значения <see langword="Decimal" />.</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetDouble(System.Int32)">
      <summary>Возвращает значение указанного столбца в виде числа с плавающей запятой с двойной точностью.</summary>
      <param name="ordinal">Отсчитываемый от нуля порядковый номер столбца.</param>
      <returns>Значение указанного столбца.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Переданный индекс находился вне диапазона от 0 до <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">Предпринята попытка извлечения данных из удаленной строки.</exception>
      <exception cref="T:System.InvalidOperationException">Предпринята попытка чтения или доступа к столбцу закрытого объекта <see langword="DataTableReader" />.</exception>
      <exception cref="T:System.InvalidCastException">Указанный столбец не содержит числа с плавающей запятой с двойной точностью.</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetEnumerator">
      <summary>Возвращает перечислитель, который может использоваться для перемещения по коллекции элементов.</summary>
      <returns>Объект <see cref="T:System.Collections.IEnumerator" />, представляющий коллекцию элементов.</returns>
      <exception cref="T:System.InvalidOperationException">Предпринята попытка чтения или доступа к столбцу закрытого объекта <see cref="T:System.Data.DataTableReader" />.</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetFieldType(System.Int32)">
      <summary>Возвращает тип <see cref="T:System.Type" />, который является типом данных объекта.</summary>
      <param name="ordinal">Порядковый номер столбца (от нуля).</param>
      <returns>Тип данных объекта (<see cref="T:System.Type" />).</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Переданный индекс находился вне диапазона от 0 до <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</exception>
      <exception cref="T:System.InvalidOperationException">Предпринята попытка чтения столбца закрытого объекта <see cref="T:System.Data.DataTableReader" /> или получения доступа к нему.</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetFloat(System.Int32)">
      <summary>Возвращает значение заданного столбца в виде числа с плавающей запятой одинарной точности.</summary>
      <param name="ordinal">Порядковый номер столбца (от нуля).</param>
      <returns>Значение столбца.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Переданный индекс находился вне диапазона от 0 до <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">Предпринята попытка извлечения данных из удаленной строки.</exception>
      <exception cref="T:System.InvalidOperationException">Предпринята попытка чтения или доступа к столбцу закрытого объекта <see cref="T:System.Data.DataTableReader" />.</exception>
      <exception cref="T:System.InvalidCastException">Указанный столбец не содержит числа с плавающей запятой с одинарной точностью.</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetGuid(System.Int32)">
      <summary>Возвращает значение заданного столбца в виде глобально-уникального идентификатора GUID.</summary>
      <param name="ordinal">Порядковый номер столбца (от нуля).</param>
      <returns>Значение указанного столбца.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Переданный индекс находился вне диапазона от 0 до <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">Предпринята попытка извлечения данных из удаленной строки.</exception>
      <exception cref="T:System.InvalidOperationException">Предпринята попытка чтения или доступа к столбцу закрытого объекта <see cref="T:System.Data.DataTableReader" />.</exception>
      <exception cref="T:System.InvalidCastException">Указанный столбец не содержит GUID.</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetInt16(System.Int32)">
      <summary>Получает значение заданного столбца в виде 16-битового целого числа со знаком.</summary>
      <param name="ordinal">Порядковый номер столбца (от нуля).</param>
      <returns>Значение указанного столбца.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Переданный индекс находился вне диапазона от 0 до <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">Предпринята попытка извлечения данных из удаленной строки.</exception>
      <exception cref="T:System.InvalidOperationException">Предпринята попытка чтения или доступа к столбцу закрытого объекта <see cref="T:System.Data.DataTableReader" />.</exception>
      <exception cref="T:System.InvalidCastException">Указанный столбец не содержит 16-разрядное целое число со знаком.</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetInt32(System.Int32)">
      <summary>Возвращает значение указанного столбца в виде 32-разрядного целого числа со знаком.</summary>
      <param name="ordinal">Порядковый номер столбца (от нуля).</param>
      <returns>Значение указанного столбца.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Переданный индекс находился вне диапазона от 0 до <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">Предпринята попытка извлечения данных из удаленной строки.</exception>
      <exception cref="T:System.InvalidOperationException">Предпринята попытка чтения столбца закрытого объекта <see cref="T:System.Data.DataTableReader" /> или получения доступа к нему.</exception>
      <exception cref="T:System.InvalidCastException">Указанный столбец не содержит 32-разрядное целое число со знаком.</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetInt64(System.Int32)">
      <summary>Возвращает значение указанного столбца в виде 64-разрядного целого числа со знаком.</summary>
      <param name="ordinal">Порядковый номер столбца (от нуля).</param>
      <returns>Значение указанного столбца.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Переданный индекс находился вне диапазона от 0 до <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">Предпринята попытка извлечения данных из удаленной строки.</exception>
      <exception cref="T:System.InvalidOperationException">Предпринята попытка чтения столбца закрытого объекта <see cref="T:System.Data.DataTableReader" /> или получения доступа к нему.</exception>
      <exception cref="T:System.InvalidCastException">Указанный столбец не содержит 64-разрядное целое число со знаком.</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetName(System.Int32)">
      <summary>Возвращает значение заданного столбца в виде объекта <see cref="T:System.String" />.</summary>
      <param name="ordinal">Порядковый номер столбца (от нуля).</param>
      <returns>Имя заданного столбца.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Переданный индекс находился вне диапазона от 0 до <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</exception>
      <exception cref="T:System.InvalidOperationException">Предпринята попытка чтения или доступа к столбцу закрытого объекта <see cref="T:System.Data.DataTableReader" />.</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetOrdinal(System.String)">
      <summary>Возвращает порядковый номер столбца при наличии заданного имени столбца.</summary>
      <param name="name">Имя столбца.</param>
      <returns>Порядковый номер столбца (от нуля).</returns>
      <exception cref="T:System.InvalidOperationException">Предпринята попытка чтения или доступа к столбцу закрытого объекта <see cref="T:System.Data.DataTableReader" />.</exception>
      <exception cref="T:System.ArgumentException">Заданное имя недопустимо для имени столбца.</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetProviderSpecificFieldType(System.Int32)">
      <summary>Возвращает тип указанного столбца в формате конкретного поставщика.</summary>
      <param name="ordinal">Порядковый номер столбца (от нуля).</param>
      <returns>Тип данных объекта (<see cref="T:System.Type" />).</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Переданный индекс находился вне диапазона от 0 до <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</exception>
      <exception cref="T:System.InvalidOperationException">Предпринята попытка чтения или доступа к столбцу закрытого объекта <see cref="T:System.Data.DataTableReader" />.</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetProviderSpecificValue(System.Int32)">
      <summary>Возвращает значение указанного столбца в формате конкретного поставщика.</summary>
      <param name="ordinal">Номер столбца (с нуля), значение которого извлекается.</param>
      <returns>Значение указанного столбца в формате конкретного поставщика.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Переданный индекс находился вне диапазона от 0 до <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">Предпринята попытка извлечения данных из удаленной строки.</exception>
      <exception cref="T:System.InvalidOperationException">Предпринята попытка чтения столбца закрытого объекта <see cref="T:System.Data.DataTableReader" /> или получения доступа к нему.</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetProviderSpecificValues(System.Object[])">
      <summary>Заполняет предоставленный массив данными с типом конкретного поставщика для всех столбцов в объекте <see cref="T:System.Data.DataTableReader" />.</summary>
      <param name="values">Массив объектов, заполненный данными типа для столбцов в объекте <see cref="T:System.Data.DataTableReader" />.</param>
      <returns>Число значений столбцов, копируемое в этот массив.</returns>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">Предпринята попытка извлечения данных из удаленной строки.</exception>
      <exception cref="T:System.InvalidOperationException">Предпринята попытка чтения или доступа к столбцу закрытого объекта <see cref="T:System.Data.DataTableReader" />.</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetSchemaTable">
      <summary>Возвращает объект <see cref="T:System.Data.DataTable" />, описывающий метаданные столбцов модуля чтения данных <see cref="T:System.Data.DataTableReader" />.</summary>
      <returns>Объект <see cref="T:System.Data.DataTable" />, описывающий метаданные столбцов.</returns>
      <exception cref="T:System.InvalidOperationException">Объект <see cref="T:System.Data.DataTableReader" /> закрыт.</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetString(System.Int32)">
      <summary>Возвращает значение заданного столбца в виде строки.</summary>
      <param name="ordinal">Порядковый номер столбца (от нуля).</param>
      <returns>Значение указанного столбца.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Переданный индекс находился вне диапазона от 0 до <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">Предпринята попытка извлечения данных из удаленной строки.</exception>
      <exception cref="T:System.InvalidOperationException">Предпринята попытка чтения или доступа к столбцу закрытого объекта <see cref="T:System.Data.DataTableReader" />.</exception>
      <exception cref="T:System.InvalidCastException">Указанный столбец не содержит данных с типом string.</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetValue(System.Int32)">
      <summary>Возвращает значение заданного столбца в его исходном формате.</summary>
      <param name="ordinal">Порядковый номер столбца (от нуля).</param>
      <returns>Значение указанного столбца. Этот метод возвращает значение с типом <see langword="DBNull" /> для столбцов со значениями null.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Переданный индекс находился вне диапазона от 0 до <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">Предпринята попытка извлечения данных из удаленной строки.</exception>
      <exception cref="T:System.InvalidOperationException">Предпринята попытка чтения столбцов закрытого объекта <see cref="T:System.Data.DataTableReader" /> или получения доступа к ним.</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetValues(System.Object[])">
      <summary>Заполняет массив объектов значениями столбцов текущей строки.</summary>
      <param name="values">Массив типа <see cref="T:System.Object" />, в который будут скопированы значения столбцов из объекта <see cref="T:System.Data.DataTableReader" />.</param>
      <returns>Число значений столбцов, копируемое в этот массив.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Переданный индекс находился вне диапазона от 0 до <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">Предпринята попытка извлечения данных из удаленной строки.</exception>
      <exception cref="T:System.InvalidOperationException">Предпринята попытка чтения столбца закрытого объекта <see cref="T:System.Data.DataTableReader" /> или получения доступа к нему.</exception>
    </member>
    <member name="P:System.Data.DataTableReader.HasRows">
      <summary>Получает значение, указывающее, содержит ли объект <see cref="T:System.Data.DataTableReader" /> одну или несколько строк.</summary>
      <returns>Значение <see langword="true" />, если объект <see cref="T:System.Data.DataTableReader" /> содержит одну или несколько строк; в противном случае — значение <see langword="false" />.</returns>
      <exception cref="T:System.InvalidOperationException">Предпринята попытка извлечения сведений о закрытом объекте <see cref="T:System.Data.DataTableReader" />.</exception>
    </member>
    <member name="P:System.Data.DataTableReader.IsClosed">
      <summary>Получает значение, указывающее, закрыт ли объект <see cref="T:System.Data.DataTableReader" />.</summary>
      <returns>Значение <see langword="true" />, если <see cref="T:System.Data.DataTableReader" /> закрыт; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataTableReader.IsDBNull(System.Int32)">
      <summary>Получает значение, указывающее, содержит ли столбец несуществующие или пропущенные значения.</summary>
      <param name="ordinal">Порядковый номер столбца (от нуля).</param>
      <returns>Значение <see langword="true" />, если значение указанного столбца эквивалентно <see cref="T:System.DBNull" />; в обратном случае — значение <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Переданный индекс находился вне диапазона от 0 до <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">Предпринята попытка извлечения данных из удаленной строки.</exception>
      <exception cref="T:System.InvalidOperationException">Предпринята попытка чтения столбца закрытого объекта <see cref="T:System.Data.DataTableReader" /> или получения доступа к нему.</exception>
    </member>
    <member name="P:System.Data.DataTableReader.Item(System.Int32)">
      <summary>Возвращает значение указанного столбца в собственном формате при наличии заданного порядкового номера столбца.</summary>
      <param name="ordinal">Порядковый номер столбца (от нуля).</param>
      <returns>Значение заданного столбца в собственном формате.</returns>
      <exception cref="T:System.IndexOutOfRangeException">Переданный индекс находился вне диапазона от 0 до <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</exception>
    </member>
    <member name="P:System.Data.DataTableReader.Item(System.String)">
      <summary>Возвращает значение заданного столбца в собственном формате при наличии заданного имени столбца.</summary>
      <param name="name">Имя столбца.</param>
      <returns>Значение заданного столбца в собственном формате.</returns>
      <exception cref="T:System.ArgumentException">Заданное имя недопустимо для имени столбца.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">Предпринята попытка извлечения данных из удаленной строки.</exception>
      <exception cref="T:System.InvalidOperationException">Предпринята попытка чтения или доступа к столбцу закрытого объекта <see cref="T:System.Data.DataTableReader" />.</exception>
    </member>
    <member name="M:System.Data.DataTableReader.NextResult">
      <summary>Перемещает <see cref="T:System.Data.DataTableReader" /> к следующему результирующему набору (при его наличии).</summary>
      <returns>Значение <see langword="true" /> при наличии другого результирующего набора; в обратном случае – значение <see langword="false" />.</returns>
      <exception cref="T:System.InvalidOperationException">Предпринята попытка перемещения в закрытом объекте <see cref="T:System.Data.DataTableReader" />.</exception>
    </member>
    <member name="M:System.Data.DataTableReader.Read">
      <summary>Перемещает <see cref="T:System.Data.DataTableReader" /> к следующей записи.</summary>
      <returns>Значение <see langword="true" /> при наличии другой строки для чтения; в обратном случае – значение <see langword="false" />.</returns>
      <exception cref="T:System.InvalidOperationException">Предпринята попытка чтения столбца закрытого объекта <see cref="T:System.Data.DataTableReader" /> или получения доступа к нему.</exception>
    </member>
    <member name="P:System.Data.DataTableReader.RecordsAffected">
      <summary>Получает количество строк, которые были изменены, вставлены или удалены при выполнении оператора SQL.</summary>
      <returns>Объект <see cref="T:System.Data.DataTableReader" /> не поддерживает это свойство и всегда возвращает значение 0.</returns>
    </member>
    <member name="T:System.Data.DataView">
      <summary>Представляет допускающее привязку данных, настраиваемое представление <see cref="T:System.Data.DataTable" /> для сортировки, фильтрации, поиска, изменения и навигации. <see cref="T:System.Data.DataView" /> не сохраняет данные, а представляет связанное представление соответствующего <see cref="T:System.Data.DataTable" />. Изменения данных <see cref="T:System.Data.DataView" /> повлияют на <see cref="T:System.Data.DataTable" />. Изменения данных <see cref="T:System.Data.DataTable" /> повлияют на все связанные с ним <see cref="T:System.Data.DataView" />.</summary>
    </member>
    <member name="M:System.Data.DataView.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.DataView" />.</summary>
    </member>
    <member name="M:System.Data.DataView.#ctor(System.Data.DataTable)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.DataView" /> указанным значением <see cref="T:System.Data.DataTable" />.</summary>
      <param name="table">Таблица <see cref="T:System.Data.DataTable" />, добавляемая в представление <see cref="T:System.Data.DataView" />.</param>
    </member>
    <member name="M:System.Data.DataView.#ctor(System.Data.DataTable,System.String,System.String,System.Data.DataViewRowState)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.DataView" /> заданными свойствами <see cref="T:System.Data.DataTable" />, <see cref="P:System.Data.DataView.RowFilter" />, <see cref="P:System.Data.DataView.Sort" /> и <see cref="T:System.Data.DataViewRowState" />.</summary>
      <param name="table">Таблица <see cref="T:System.Data.DataTable" />, добавляемая в представление <see cref="T:System.Data.DataView" />.</param>
      <param name="RowFilter">Объект <see cref="P:System.Data.DataView.RowFilter" />, применяемый к представлению <see cref="T:System.Data.DataView" />.</param>
      <param name="Sort">Объект <see cref="P:System.Data.DataView.Sort" />, применяемый к представлению <see cref="T:System.Data.DataView" />.</param>
      <param name="RowState">Объект <see cref="T:System.Data.DataViewRowState" />, применяемый к представлению <see cref="T:System.Data.DataView" />.</param>
    </member>
    <member name="M:System.Data.DataView.AddNew">
      <summary>Добавляет новую строку в <see cref="T:System.Data.DataView" />.</summary>
      <returns>Новый объект <see cref="T:System.Data.DataRowView" />.</returns>
    </member>
    <member name="P:System.Data.DataView.AllowDelete">
      <summary>Получает или задает значение, указывающее, разрешено ли удаление.</summary>
      <returns>Значение <see langword="true" />, если удаление разрешено; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.DataView.AllowEdit">
      <summary>Возвращает или задает значение, указывающее, разрешено ли внесение изменений.</summary>
      <returns>Значение <see langword="true" />, если изменение разрешено; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.DataView.AllowNew">
      <summary>Получает или задает значение, указывающее, можно ли добавлять новые строки с помощью метода <see cref="M:System.Data.DataView.AddNew" />.</summary>
      <returns>Значение <see langword="true" />, если новые строки можно добавить; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.DataView.ApplyDefaultSort">
      <summary>Возвращает или задает значение, указывающее, следует ли использовать сортировку по умолчанию. По умолчанию сортировка (по возрастанию) по всем первичными ключам, как определено <see cref="P:System.Data.DataTable.PrimaryKey" />.</summary>
      <returns>Значение <see langword="true" />, если используется сортировка по умолчанию; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataView.BeginInit">
      <summary>Запускает инициализацию <see cref="T:System.Data.DataView" />, используемого в форме или другим компонентом. Инициализация происходит во время выполнения.</summary>
    </member>
    <member name="M:System.Data.DataView.Close">
      <summary>Закрывает объект <see cref="T:System.Data.DataView" />.</summary>
    </member>
    <member name="M:System.Data.DataView.ColumnCollectionChanged(System.Object,System.ComponentModel.CollectionChangeEventArgs)">
      <summary>Происходит после успешного изменения <see cref="T:System.Data.DataColumnCollection" />.</summary>
      <param name="sender">Источник события.</param>
      <param name="e">Объект <see cref="T:System.ComponentModel.ListChangedEventArgs" />, содержащий данные события.</param>
    </member>
    <member name="M:System.Data.DataView.CopyTo(System.Array,System.Int32)">
      <summary>Копирует элементы в массив. Только для интерфейсов веб-форм.</summary>
      <param name="array">Массив для копирования данных.</param>
      <param name="index">Начальный индекс.</param>
    </member>
    <member name="P:System.Data.DataView.Count">
      <summary>Получает число записей в <see cref="T:System.Data.DataView" /> после применения свойств <see cref="P:System.Data.DataView.RowFilter" /> и <see cref="P:System.Data.DataView.RowStateFilter" />.</summary>
      <returns>Количество записей в списке <see cref="T:System.Data.DataView" />.</returns>
    </member>
    <member name="P:System.Data.DataView.DataViewManager">
      <summary>Возвращает объект <see cref="T:System.Data.DataViewManager" />, связанный с этим представлением.</summary>
      <returns>
        <see langword="DataViewManager" />, который создал данное представление. Если это <see cref="T:System.Data.DataView" /> по умолчанию для <see cref="T:System.Data.DataTable" />, свойство <see langword="DataViewManager" /> возвращает <see langword="DataViewManager" /> по умолчанию для <see langword="DataSet" />. В противном случае, если <see langword="DataView" /> был создан без <see langword="DataViewManager" />, это свойство имеет значение <see langword="null" />.</returns>
    </member>
    <member name="M:System.Data.DataView.Delete(System.Int32)">
      <summary>Удаляет строку с заданным индексом.</summary>
      <param name="index">Индекс удаляемой строки.</param>
    </member>
    <member name="M:System.Data.DataView.Dispose(System.Boolean)">
      <summary>Освобождает все используемые объектом <see cref="T:System.Data.DataView" /> ресурсы, кроме памяти.</summary>
      <param name="disposing">Значение <see langword="true" /> позволяет освободить как управляемые, так и неуправляемые ресурсы; значение <see langword="false" /> освобождает только неуправляемые ресурсы.</param>
    </member>
    <member name="M:System.Data.DataView.EndInit">
      <summary>Завершает инициализацию <see cref="T:System.Data.DataView" />, используемого в форме или другим компонентом. Инициализация происходит во время выполнения.</summary>
    </member>
    <member name="M:System.Data.DataView.Equals(System.Data.DataView)">
      <summary>Определяет, считаются ли равными указанные экземпляры <see cref="T:System.Data.DataView" />.</summary>
      <param name="view">Выражение <see cref="T:System.Data.DataView" /> для сравнения.</param>
      <returns>Значение <see langword="true" />, если два экземпляра <see cref="T:System.Data.DataView" /> равны, в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataView.Find(System.Object)">
      <summary>Находит строку в <see cref="T:System.Data.DataView" /> по указанному значению ключа сортировки.</summary>
      <param name="key">Объект, который нужно найти.</param>
      <returns>Индекс строки в <see cref="T:System.Data.DataView" />, содержащий указанное значение ключа сортировки; в противном случае — значение -1, если значение ключа не существует.</returns>
    </member>
    <member name="M:System.Data.DataView.Find(System.Object[])">
      <summary>Находит строку в <see cref="T:System.Data.DataView" /> по указанным значениям ключа сортировки.</summary>
      <param name="key">Массив значений с типом <see cref="T:System.Object" />.</param>
      <returns>Индекс позиции первой строки в <see cref="T:System.Data.DataView" />, совпадающий с указанными значениями ключа сортировки; в противном случае — значение -1, если совпадающие значения ключа сортировки отсутствуют.</returns>
    </member>
    <member name="M:System.Data.DataView.FindRows(System.Object)">
      <summary>Возвращает массив объектов <see cref="T:System.Data.DataRowView" />, столбцы которых соответствуют указанному значению ключа сортировки.</summary>
      <param name="key">Значение столбца с типом <see cref="T:System.Object" />, которое нужно найти.</param>
      <returns>Массив объектов <see langword="DataRowView" />, столбцы которых соответствуют указанному значению ключа сортировки; пустой массив <see langword="DataRowView" />, если строки, содержащие указанное значение ключа сортировки, отсутствуют.</returns>
    </member>
    <member name="M:System.Data.DataView.FindRows(System.Object[])">
      <summary>Возвращает массив объектов <see cref="T:System.Data.DataRowView" />, столбцы которых соответствуют указанному значению ключа сортировки.</summary>
      <param name="key">Массив значений столбца с типом <see cref="T:System.Object" />, которые нужно найти.</param>
      <returns>Массив объектов <see langword="DataRowView" />, столбцы которых соответствуют указанному значению ключа сортировки; пустой массив <see langword="DataRowView" />, если строки, содержащие указанное значение ключа сортировки, отсутствуют.</returns>
    </member>
    <member name="M:System.Data.DataView.GetEnumerator">
      <summary>Возвращает перечислитель для данной коллекции <see cref="T:System.Data.DataView" />.</summary>
      <returns>Объект <see cref="T:System.Collections.IEnumerator" /> для перехода по списку.</returns>
    </member>
    <member name="M:System.Data.DataView.IndexListChanged(System.Object,System.ComponentModel.ListChangedEventArgs)">
      <summary>Происходит после успешного изменения <see cref="T:System.Data.DataView" />.</summary>
      <param name="sender">Источник события.</param>
      <param name="e">Объект <see cref="T:System.ComponentModel.ListChangedEventArgs" />, содержащий данные события.</param>
    </member>
    <member name="E:System.Data.DataView.Initialized">
      <summary>Происходит при завершении инициализации <see cref="T:System.Data.DataView" />.</summary>
    </member>
    <member name="P:System.Data.DataView.IsInitialized">
      <summary>Возвращает значение, указывающее, был ли инициализирован компонент.</summary>
      <returns>Значение <see langword="true" /> указывает, что компонент завершил инициализацию; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.DataView.IsOpen">
      <summary>Получает значение, определяющее, открыт ли сейчас источник данных, а также представления проектных данных в объекте <see cref="T:System.Data.DataTable" />.</summary>
      <returns>Значение <see langword="true" />, если источник открыт; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.DataView.Item(System.Int32)">
      <summary>Получает строку данных из указанной таблицы.</summary>
      <param name="recordIndex">Индекс записи в <see cref="T:System.Data.DataTable" />.</param>
      <returns>Объект <see cref="T:System.Data.DataRowView" /> нужной строки.</returns>
    </member>
    <member name="E:System.Data.DataView.ListChanged">
      <summary>Происходит при изменении списка, управляемого объектом <see cref="T:System.Data.DataView" />.</summary>
    </member>
    <member name="M:System.Data.DataView.OnListChanged(System.ComponentModel.ListChangedEventArgs)">
      <summary>Вызывает событие <see cref="E:System.Data.DataView.ListChanged" />.</summary>
      <param name="e">Объект <see cref="T:System.ComponentModel.ListChangedEventArgs" />, содержащий данные события.</param>
    </member>
    <member name="M:System.Data.DataView.Open">
      <summary>Открывает <see cref="T:System.Data.DataView" />.</summary>
    </member>
    <member name="M:System.Data.DataView.Reset">
      <summary>Зарезервировано только для внутреннего использования.</summary>
    </member>
    <member name="P:System.Data.DataView.RowFilter">
      <summary>Возвращает или задает выражение, используемое для выбора строк, просматриваемых в объекте <see cref="T:System.Data.DataView" />.</summary>
      <returns>Строка, задающая способ фильтрации строк.</returns>
    </member>
    <member name="P:System.Data.DataView.RowStateFilter">
      <summary>Возвращает или задает фильтр состояния строк, применяемый в <see cref="T:System.Data.DataView" />.</summary>
      <returns>Одно из значений <see cref="T:System.Data.DataViewRowState" />.</returns>
    </member>
    <member name="P:System.Data.DataView.Sort">
      <summary>Возвращает или задает столбец или столбцы для сортировки, а затем — порядок сортировки для <see cref="T:System.Data.DataView" />.</summary>
      <returns>Строка, содержащая имя столбца, за которым следует "ASC" (по возрастанию) или "DESC" (по убыванию). Столбцы сортируются по возрастанию по умолчанию. Несколько столбцов могут быть разделены запятыми.</returns>
    </member>
    <member name="P:System.Data.DataView.System#Collections#ICollection#IsSynchronized">
      <summary>Описание этого члена см. в разделе <see cref="P:System.Collections.ICollection.IsSynchronized" />.</summary>
      <returns>Описание этого члена см. в разделе <see cref="P:System.Collections.ICollection.IsSynchronized" />.</returns>
    </member>
    <member name="P:System.Data.DataView.System#Collections#ICollection#SyncRoot">
      <summary>Описание этого члена см. в разделе <see cref="P:System.Collections.ICollection.SyncRoot" />.</summary>
      <returns>Описание этого члена см. в разделе <see cref="P:System.Collections.ICollection.SyncRoot" />.</returns>
    </member>
    <member name="M:System.Data.DataView.System#Collections#IList#Add(System.Object)">
      <summary>Описание этого члена см. в разделе <see cref="M:System.Collections.IList.Add(System.Object)" />.</summary>
      <param name="value">Значение <see cref="T:System.Object" />.</param>
      <returns>Описание этого члена см. в разделе <see cref="M:System.Collections.IList.Add(System.Object)" />.</returns>
    </member>
    <member name="M:System.Data.DataView.System#Collections#IList#Clear">
      <summary>Описание этого члена см. в разделе <see cref="M:System.Collections.IList.Clear" />.</summary>
    </member>
    <member name="M:System.Data.DataView.System#Collections#IList#Contains(System.Object)">
      <summary>Описание этого члена см. в разделе <see cref="M:System.Collections.IList.Contains(System.Object)" />.</summary>
      <param name="value">Значение <see cref="T:System.Object" />.</param>
      <returns>Описание этого члена см. в разделе <see cref="M:System.Collections.IList.Contains(System.Object)" />.</returns>
    </member>
    <member name="M:System.Data.DataView.System#Collections#IList#IndexOf(System.Object)">
      <summary>Описание этого члена см. в разделе <see cref="M:System.Collections.IList.IndexOf(System.Object)" />.</summary>
      <param name="value">Значение <see cref="T:System.Object" />.</param>
      <returns>Описание этого члена см. в разделе <see cref="M:System.Collections.IList.IndexOf(System.Object)" />.</returns>
    </member>
    <member name="M:System.Data.DataView.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>Описание этого члена см. в разделе <see cref="M:System.Collections.IList.Insert(System.Int32,System.Object)" />.</summary>
      <param name="index">Значение <see cref="T:System.Int32" />.</param>
      <param name="value">Вставляемое значение <see cref="T:System.Object" />.</param>
    </member>
    <member name="P:System.Data.DataView.System#Collections#IList#IsFixedSize">
      <summary>Описание этого члена см. в разделе <see cref="P:System.Collections.IList.IsFixedSize" />.</summary>
      <returns>Описание этого члена см. в разделе <see cref="P:System.Collections.IList.IsFixedSize" />.</returns>
    </member>
    <member name="P:System.Data.DataView.System#Collections#IList#IsReadOnly">
      <summary>Описание этого члена см. в разделе <see cref="P:System.Collections.IList.IsReadOnly" />.</summary>
      <returns>Описание этого члена см. в разделе <see cref="P:System.Collections.IList.IsReadOnly" />.</returns>
    </member>
    <member name="P:System.Data.DataView.System#Collections#IList#Item(System.Int32)">
      <summary>Описание этого члена см. в разделе <see cref="P:System.Collections.IList.Item(System.Int32)" />.</summary>
      <param name="recordIndex">Значение <see cref="T:System.Int32" />.</param>
      <returns>Описание этого члена см. в разделе <see cref="P:System.Collections.IList.Item(System.Int32)" />.</returns>
    </member>
    <member name="M:System.Data.DataView.System#Collections#IList#Remove(System.Object)">
      <summary>Описание этого члена см. в разделе <see cref="M:System.Collections.IList.Remove(System.Object)" />.</summary>
      <param name="value">Значение <see cref="T:System.Object" />.</param>
    </member>
    <member name="M:System.Data.DataView.System#Collections#IList#RemoveAt(System.Int32)">
      <summary>Описание этого члена см. в разделе <see cref="M:System.Collections.IList.RemoveAt(System.Int32)" />.</summary>
      <param name="index">Значение <see cref="T:System.Int32" />.</param>
    </member>
    <member name="M:System.Data.DataView.System#ComponentModel#IBindingList#AddIndex(System.ComponentModel.PropertyDescriptor)">
      <summary>Описание этого члена см. в разделе <see cref="M:System.ComponentModel.IBindingList.AddIndex(System.ComponentModel.PropertyDescriptor)" />.</summary>
      <param name="property">Объект <see cref="T:System.ComponentModel.PropertyDescriptor" />.</param>
    </member>
    <member name="M:System.Data.DataView.System#ComponentModel#IBindingList#AddNew">
      <summary>Описание этого члена см. в разделе <see cref="M:System.ComponentModel.IBindingList.AddNew" />.</summary>
      <returns>Элемент, который нужно добавить в список.</returns>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingList#AllowEdit">
      <summary>Описание этого члена см. в разделе <see cref="P:System.ComponentModel.IBindingList.AllowEdit" />.</summary>
      <returns>Описание этого члена см. в разделе <see cref="P:System.ComponentModel.IBindingList.AllowEdit" />.</returns>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingList#AllowNew">
      <summary>Описание этого члена см. в разделе <see cref="P:System.ComponentModel.IBindingList.AllowNew" />.</summary>
      <returns>Описание этого члена см. в разделе <see cref="P:System.ComponentModel.IBindingList.AllowNew" />.</returns>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingList#AllowRemove">
      <summary>Описание этого члена см. в разделе <see cref="P:System.ComponentModel.IBindingList.AllowRemove" />.</summary>
      <returns>Описание этого члена см. в разделе <see cref="P:System.ComponentModel.IBindingList.AllowRemove" />.</returns>
    </member>
    <member name="M:System.Data.DataView.System#ComponentModel#IBindingList#ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)">
      <summary>Описание этого члена см. в разделе <see cref="M:System.ComponentModel.IBindingList.ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)" />.</summary>
      <param name="property">Объект <see cref="T:System.ComponentModel.PropertyDescriptor" />.</param>
      <param name="direction">Объект <see cref="T:System.ComponentModel.ListSortDirection" />.</param>
    </member>
    <member name="M:System.Data.DataView.System#ComponentModel#IBindingList#Find(System.ComponentModel.PropertyDescriptor,System.Object)">
      <summary>Описание этого члена см. в разделе <see cref="M:System.ComponentModel.IBindingList.Find(System.ComponentModel.PropertyDescriptor,System.Object)" />.</summary>
      <param name="property">Объект <see cref="T:System.ComponentModel.PropertyDescriptor" />.</param>
      <param name="key">Значение <see cref="T:System.Object" />.</param>
      <returns>Описание этого члена см. в разделе <see cref="M:System.ComponentModel.IBindingList.Find(System.ComponentModel.PropertyDescriptor,System.Object)" />.</returns>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingList#IsSorted">
      <summary>Описание этого члена см. в разделе <see cref="P:System.ComponentModel.IBindingList.IsSorted" />.</summary>
      <returns>Описание этого члена см. в разделе <see cref="P:System.ComponentModel.IBindingList.IsSorted" />.</returns>
    </member>
    <member name="M:System.Data.DataView.System#ComponentModel#IBindingList#RemoveIndex(System.ComponentModel.PropertyDescriptor)">
      <summary>Описание этого члена см. в разделе <see cref="M:System.ComponentModel.IBindingList.RemoveIndex(System.ComponentModel.PropertyDescriptor)" />.</summary>
      <param name="property">Объект <see cref="T:System.ComponentModel.PropertyDescriptor" />.</param>
    </member>
    <member name="M:System.Data.DataView.System#ComponentModel#IBindingList#RemoveSort">
      <summary>Описание этого члена см. в разделе <see cref="M:System.ComponentModel.IBindingList.RemoveSort" />.</summary>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingList#SortDirection">
      <summary>Описание этого члена см. в разделе <see cref="P:System.ComponentModel.IBindingList.SortDirection" />.</summary>
      <returns>Описание этого члена см. в разделе <see cref="P:System.ComponentModel.IBindingList.SortDirection" />.</returns>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingList#SortProperty">
      <summary>Описание этого члена см. в разделе <see cref="P:System.ComponentModel.IBindingList.SortProperty" />.</summary>
      <returns>Описание этого члена см. в разделе <see cref="P:System.ComponentModel.IBindingList.SortProperty" />.</returns>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingList#SupportsChangeNotification">
      <summary>Описание этого члена см. в разделе <see cref="P:System.ComponentModel.IBindingList.SupportsChangeNotification" />.</summary>
      <returns>Описание этого члена см. в разделе <see cref="P:System.ComponentModel.IBindingList.SupportsChangeNotification" />.</returns>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingList#SupportsSearching">
      <summary>Описание этого члена см. в разделе <see cref="P:System.ComponentModel.IBindingList.SupportsSearching" />.</summary>
      <returns>Описание этого члена см. в разделе <see cref="P:System.ComponentModel.IBindingList.SupportsSearching" />.</returns>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingList#SupportsSorting">
      <summary>Описание этого члена см. в разделе <see cref="P:System.ComponentModel.IBindingList.SupportsSorting" />.</summary>
      <returns>Описание этого члена см. в разделе <see cref="P:System.ComponentModel.IBindingList.SupportsSorting" />.</returns>
    </member>
    <member name="M:System.Data.DataView.System#ComponentModel#IBindingListView#ApplySort(System.ComponentModel.ListSortDescriptionCollection)">
      <summary>Описание этого члена см. в разделе <see cref="M:System.ComponentModel.IBindingListView.ApplySort(System.ComponentModel.ListSortDescriptionCollection)" />.</summary>
      <param name="sorts">Объект <see cref="T:System.ComponentModel.ListSortDescriptionCollection" />.</param>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingListView#Filter">
      <summary>Описание этого члена см. в разделе <see cref="P:System.ComponentModel.IBindingListView.Filter" />.</summary>
      <returns>Описание этого члена см. в разделе <see cref="P:System.ComponentModel.IBindingListView.Filter" />.</returns>
    </member>
    <member name="M:System.Data.DataView.System#ComponentModel#IBindingListView#RemoveFilter">
      <summary>Описание этого члена см. в разделе <see cref="M:System.ComponentModel.IBindingListView.RemoveFilter" />.</summary>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingListView#SortDescriptions">
      <summary>Описание этого члена см. в разделе <see cref="P:System.ComponentModel.IBindingListView.SortDescriptions" />.</summary>
      <returns>Описание этого члена см. в разделе <see cref="P:System.ComponentModel.IBindingListView.SortDescriptions" />.</returns>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingListView#SupportsAdvancedSorting">
      <summary>Описание этого члена см. в разделе <see cref="P:System.ComponentModel.IBindingListView.SupportsAdvancedSorting" />.</summary>
      <returns>Описание этого члена см. в разделе <see cref="P:System.ComponentModel.IBindingListView.SupportsAdvancedSorting" />.</returns>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingListView#SupportsFiltering">
      <summary>Описание этого члена см. в разделе <see cref="P:System.ComponentModel.IBindingListView.SupportsFiltering" />.</summary>
      <returns>Описание этого члена см. в разделе <see cref="P:System.ComponentModel.IBindingListView.SupportsFiltering" />.</returns>
    </member>
    <member name="M:System.Data.DataView.System#ComponentModel#ITypedList#GetItemProperties(System.ComponentModel.PropertyDescriptor[])">
      <summary>Описание этого члена см. в разделе <see cref="M:System.ComponentModel.ITypedList.GetItemProperties(System.ComponentModel.PropertyDescriptor[])" />.</summary>
      <param name="listAccessors">Массив объектов <see cref="T:System.ComponentModel.PropertyDescriptor" />, которые ищутся в коллекции как пригодные для привязки. Это может быть <see langword="null" />.</param>
    </member>
    <member name="M:System.Data.DataView.System#ComponentModel#ITypedList#GetListName(System.ComponentModel.PropertyDescriptor[])">
      <summary>Описание этого члена см. в разделе <see cref="M:System.ComponentModel.ITypedList.GetListName(System.ComponentModel.PropertyDescriptor[])" />.</summary>
      <param name="listAccessors">Массив объектов <see cref="T:System.ComponentModel.PropertyDescriptor" />.</param>
      <returns>Описание этого члена см. в разделе <see cref="M:System.ComponentModel.ITypedList.GetListName(System.ComponentModel.PropertyDescriptor[])" />.</returns>
    </member>
    <member name="P:System.Data.DataView.Table">
      <summary>Возвращает или задает исходный объект <see cref="T:System.Data.DataTable" />.</summary>
      <returns>Объект <see cref="T:System.Data.DataTable" />, предоставляющий данные для этого представления.</returns>
    </member>
    <member name="M:System.Data.DataView.ToTable">
      <summary>Создает и возвращает новый объект <see cref="T:System.Data.DataTable" /> на основе строк в существующем объекте <see cref="T:System.Data.DataView" />.</summary>
      <returns>Новый экземпляр класса <see cref="T:System.Data.DataTable" />, который содержит запрошенные строки и столбцы.</returns>
    </member>
    <member name="M:System.Data.DataView.ToTable(System.Boolean,System.String[])">
      <summary>Создает и возвращает новый объект <see cref="T:System.Data.DataTable" /> на основе строк в существующем объекте <see cref="T:System.Data.DataView" />.</summary>
      <param name="distinct">При значении <see langword="true" /> возвращенный объект <see cref="T:System.Data.DataTable" /> содержит строки с различными значениями для всех столбцов. Значение по умолчанию — <see langword="false" />.</param>
      <param name="columnNames">Массив строк, содержащий список имен столбцов, которые должны быть включены в возвращенный объект <see cref="T:System.Data.DataTable" />. Объект <see cref="T:System.Data.DataTable" />, содержащий указанные столбцы в том порядке, в каком они отображаются внутри массива.</param>
      <returns>Новый экземпляр класса <see cref="T:System.Data.DataTable" />, который содержит запрошенные строки и столбцы.</returns>
    </member>
    <member name="M:System.Data.DataView.ToTable(System.String)">
      <summary>Создает и возвращает новый объект <see cref="T:System.Data.DataTable" /> на основе строк в существующем объекте <see cref="T:System.Data.DataView" />.</summary>
      <param name="tableName">Имя возвращенного объекта <see cref="T:System.Data.DataTable" />.</param>
      <returns>Новый экземпляр класса <see cref="T:System.Data.DataTable" />, который содержит запрошенные строки и столбцы.</returns>
    </member>
    <member name="M:System.Data.DataView.ToTable(System.String,System.Boolean,System.String[])">
      <summary>Создает и возвращает новый объект <see cref="T:System.Data.DataTable" /> на основе строк в существующем объекте <see cref="T:System.Data.DataView" />.</summary>
      <param name="tableName">Имя возвращенного объекта <see cref="T:System.Data.DataTable" />.</param>
      <param name="distinct">При значении <see langword="true" /> возвращенный объект <see cref="T:System.Data.DataTable" /> содержит строки с различными значениями для всех столбцов. Значение по умолчанию — <see langword="false" />.</param>
      <param name="columnNames">Массив строк, содержащий список имен столбцов, которые должны быть включены в возвращенный объект <see cref="T:System.Data.DataTable" />. Объект <see langword="DataTable" />, содержащий указанные столбцы в том порядке, в каком они отображаются внутри массива.</param>
      <returns>Новый экземпляр класса <see cref="T:System.Data.DataTable" />, который содержит запрошенные строки и столбцы.</returns>
    </member>
    <member name="M:System.Data.DataView.UpdateIndex">
      <summary>Зарезервировано только для внутреннего использования.</summary>
    </member>
    <member name="M:System.Data.DataView.UpdateIndex(System.Boolean)">
      <summary>Зарезервировано только для внутреннего использования.</summary>
      <param name="force">Зарезервировано только для внутреннего использования.</param>
    </member>
    <member name="T:System.Data.DataViewManager">
      <summary>Содержит значение по умолчанию <see cref="T:System.Data.DataViewSettingCollection" /> для каждого <see cref="T:System.Data.DataTable" /> в <see cref="T:System.Data.DataSet" />.</summary>
    </member>
    <member name="M:System.Data.DataViewManager.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.DataViewManager" />.</summary>
    </member>
    <member name="M:System.Data.DataViewManager.#ctor(System.Data.DataSet)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.DataViewManager" /> для указанного объекта <see cref="T:System.Data.DataSet" />.</summary>
      <param name="dataSet">Имя используемого объекта <see cref="T:System.Data.DataSet" />.</param>
    </member>
    <member name="M:System.Data.DataViewManager.CreateDataView(System.Data.DataTable)">
      <summary>Создает объект <see cref="T:System.Data.DataView" /> для указанного объекта <see cref="T:System.Data.DataTable" />.</summary>
      <param name="table">Имя объекта <see cref="T:System.Data.DataTable" />, используемого в объекте <see cref="T:System.Data.DataView" />.</param>
      <returns>Объект <see cref="T:System.Data.DataView" />.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.DataSet">
      <summary>Возвращает или задает объект <see cref="T:System.Data.DataSet" /> для использования с коллекцией <see cref="T:System.Data.DataViewManager" />.</summary>
      <returns>Используемый <see cref="T:System.Data.DataSet" />.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.DataViewSettingCollectionString">
      <summary>Возвращает или задает значение, используемое для сохраняемости кода.</summary>
      <returns>Значение, используемое для сохраняемости кода.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.DataViewSettings">
      <summary>Получает коллекцию <see cref="T:System.Data.DataViewSettingCollection" /> для каждого объекта <see cref="T:System.Data.DataTable" /> в <see cref="T:System.Data.DataSet" />.</summary>
      <returns>Коллекция <see cref="T:System.Data.DataViewSettingCollection" /> для каждого объекта <see langword="DataTable" />.</returns>
    </member>
    <member name="E:System.Data.DataViewManager.ListChanged">
      <summary>Происходит после добавления или удаления строки из объекта <see cref="T:System.Data.DataView" />.</summary>
    </member>
    <member name="M:System.Data.DataViewManager.OnListChanged(System.ComponentModel.ListChangedEventArgs)">
      <summary>Вызывает событие <see cref="E:System.Data.DataViewManager.ListChanged" />.</summary>
      <param name="e">Объект <see cref="T:System.ComponentModel.ListChangedEventArgs" />, содержащий данные события.</param>
    </member>
    <member name="M:System.Data.DataViewManager.RelationCollectionChanged(System.Object,System.ComponentModel.CollectionChangeEventArgs)">
      <summary>Вызывает событие <see cref="E:System.Data.DataRelationCollection.CollectionChanged" /> при добавлении или удалении объекта <see cref="T:System.Data.DataRelation" /> из коллекции <see cref="T:System.Data.DataRelationCollection" />.</summary>
      <param name="sender">Источник события.</param>
      <param name="e">Объект <see cref="T:System.ComponentModel.CollectionChangeEventArgs" />, содержащий данные события.</param>
    </member>
    <member name="M:System.Data.DataViewManager.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>Копирует элементы коллекции <see cref="T:System.Collections.ICollection" /> в массив <see cref="T:System.Array" />, начиная с указанного индекса массива <see cref="T:System.Array" />.</summary>
      <param name="array">Одномерный массив <see cref="T:System.Array" />, в который копируются элементы из интерфейса <see cref="T:System.Collections.ICollection" />. Массив <see cref="T:System.Array" /> должен иметь индексацию, начинающуюся с нуля.</param>
      <param name="index">Отсчитываемый от нуля индекс в массиве <paramref name="array" />, указывающий начало копирования.</param>
    </member>
    <member name="P:System.Data.DataViewManager.System#Collections#ICollection#Count">
      <summary>Описание этого члена см. в разделе <see cref="P:System.Collections.ICollection.Count" />.</summary>
      <returns>Описание этого члена см. в разделе <see cref="P:System.Collections.ICollection.Count" />.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#Collections#ICollection#IsSynchronized">
      <summary>Описание этого члена см. в разделе <see cref="P:System.Collections.ICollection.IsSynchronized" />.</summary>
      <returns>
        <see langword="true" />, если доступ к классу <see cref="T:System.Collections.ICollection" /> является синхронизированным (потокобезопасным); в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#Collections#ICollection#SyncRoot">
      <summary>Описание этого члена см. в разделе <see cref="P:System.Collections.ICollection.SyncRoot" />.</summary>
      <returns>Объект, который может использоваться для синхронизации доступа к <see cref="T:System.Collections.ICollection" />.</returns>
    </member>
    <member name="M:System.Data.DataViewManager.System#Collections#IEnumerable#GetEnumerator">
      <summary>Описание этого члена см. в разделе <see cref="M:System.Collections.IEnumerable.GetEnumerator" />.</summary>
      <returns>Описание этого члена см. в разделе <see cref="M:System.Collections.IEnumerable.GetEnumerator" />.</returns>
    </member>
    <member name="M:System.Data.DataViewManager.System#Collections#IList#Add(System.Object)">
      <summary>Добавляет элемент в коллекцию <see cref="T:System.Collections.IList" />.</summary>
      <param name="value">Объект <see cref="T:System.Object" />, добавляемый в список <see cref="T:System.Collections.IList" />.</param>
      <returns>Позиция, на которую вставлен новый элемент.</returns>
    </member>
    <member name="M:System.Data.DataViewManager.System#Collections#IList#Clear">
      <summary>Описание этого члена см. в разделе <see cref="M:System.Collections.IList.Clear" />.</summary>
    </member>
    <member name="M:System.Data.DataViewManager.System#Collections#IList#Contains(System.Object)">
      <summary>Определяет, содержит ли коллекция <see cref="T:System.Collections.IList" /> указанное значение.</summary>
      <param name="value">Объект <see cref="T:System.Object" />, который требуется найти в коллекции <see cref="T:System.Collections.IList" />.</param>
      <returns>Значение <see langword="true" />, если объект <see cref="T:System.Object" /> найден в <see cref="T:System.Collections.IList" />; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataViewManager.System#Collections#IList#IndexOf(System.Object)">
      <summary>Определяет индекс заданного элемента в списке <see cref="T:System.Collections.IList" />.</summary>
      <param name="value">Объект <see cref="T:System.Object" />, который требуется найти в коллекции <see cref="T:System.Collections.IList" />.</param>
      <returns>Индекс <paramref name="value" />, если он найден в списке; в противном случае — значение -1.</returns>
    </member>
    <member name="M:System.Data.DataViewManager.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>Вставляет элемент в список <see cref="T:System.Collections.IList" /> по указанному индексу.</summary>
      <param name="index">Отсчитываемый от нуля индекс, по которому следует вставить элемент <paramref name="value" />.</param>
      <param name="value">Объект <see cref="T:System.Object" />, вставляемый в <see cref="T:System.Collections.IList" />.</param>
    </member>
    <member name="P:System.Data.DataViewManager.System#Collections#IList#IsFixedSize">
      <summary>Описание этого члена см. в разделе <see cref="P:System.Collections.IList.IsFixedSize" />.</summary>
      <returns>Значение <see langword="true" />, если словарь <see cref="T:System.Collections.IList" /> имеет фиксированный размер; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#Collections#IList#IsReadOnly">
      <summary>Описание этого члена см. в разделе <see cref="P:System.Collections.IList.IsReadOnly" />.</summary>
      <returns>Описание этого члена см. в разделе <see cref="P:System.Collections.IList.IsReadOnly" />.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#Collections#IList#Item(System.Int32)">
      <summary>Возвращает или задает элемент по указанному индексу.</summary>
      <param name="index">Отсчитываемый от нуля индекс элемента, который требуется возвратить или задать.</param>
      <returns>Элемент, расположенный по указанному индексу.</returns>
    </member>
    <member name="M:System.Data.DataViewManager.System#Collections#IList#Remove(System.Object)">
      <summary>Удаляет первое вхождение указанного объекта из коллекции <see cref="T:System.Collections.IList" />.</summary>
      <param name="value">Элемент <see cref="T:System.Object" />, который требуется удалить из <see cref="T:System.Collections.IList" />.</param>
    </member>
    <member name="M:System.Data.DataViewManager.System#Collections#IList#RemoveAt(System.Int32)">
      <summary>Удаляет элемент <see cref="T:System.Collections.IList" />, расположенный по указанному индексу.</summary>
      <param name="index">Отсчитываемый от нуля индекс удаляемого элемента.</param>
    </member>
    <member name="M:System.Data.DataViewManager.System#ComponentModel#IBindingList#AddIndex(System.ComponentModel.PropertyDescriptor)">
      <summary>Добавляет дескриптор <see cref="T:System.ComponentModel.PropertyDescriptor" /> к индексам, используемым для поиска.</summary>
      <param name="property">Дескриптор <see cref="T:System.ComponentModel.PropertyDescriptor" />, добавляемый к индексам, используемым для поиска.</param>
    </member>
    <member name="M:System.Data.DataViewManager.System#ComponentModel#IBindingList#AddNew">
      <summary>Описание этого члена см. в разделе <see cref="M:System.ComponentModel.IBindingList.AddNew" />.</summary>
      <returns>Описание этого члена см. в разделе <see cref="M:System.ComponentModel.IBindingList.AddNew" />.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#ComponentModel#IBindingList#AllowEdit">
      <summary>Описание этого члена см. в разделе <see cref="P:System.ComponentModel.IBindingList.AllowEdit" />.</summary>
      <returns>Описание этого члена см. в разделе <see cref="P:System.ComponentModel.IBindingList.AllowEdit" />.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#ComponentModel#IBindingList#AllowNew">
      <summary>Описание этого члена см. в разделе <see cref="P:System.ComponentModel.IBindingList.AllowNew" />.</summary>
      <returns>Описание этого члена см. в разделе <see cref="P:System.ComponentModel.IBindingList.AllowNew" />.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#ComponentModel#IBindingList#AllowRemove">
      <summary>Описание этого члена см. в разделе <see cref="P:System.ComponentModel.IBindingList.AllowRemove" />.</summary>
      <returns>Описание этого члена см. в разделе <see cref="P:System.ComponentModel.IBindingList.AllowRemove" />.</returns>
    </member>
    <member name="M:System.Data.DataViewManager.System#ComponentModel#IBindingList#ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)">
      <summary>Сортирует список, используя дескриптор <see cref="T:System.ComponentModel.PropertyDescriptor" /> и направление <see cref="T:System.ComponentModel.ListSortDirection" />.</summary>
      <param name="property">Дескриптор <see cref="T:System.ComponentModel.PropertyDescriptor" /> для сортировки.</param>
      <param name="direction">Одно из значений <see cref="T:System.ComponentModel.ListSortDirection" />.</param>
    </member>
    <member name="M:System.Data.DataViewManager.System#ComponentModel#IBindingList#Find(System.ComponentModel.PropertyDescriptor,System.Object)">
      <summary>Возвращает индекс строки с данным дескриптором <see cref="T:System.ComponentModel.PropertyDescriptor" />.</summary>
      <param name="property">Дескриптор <see cref="T:System.ComponentModel.PropertyDescriptor" /> для поиска.</param>
      <param name="key">Значение параметра property, используемое для поиска.</param>
      <returns>Индекс строки с данным дескриптором <see cref="T:System.ComponentModel.PropertyDescriptor" />.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#ComponentModel#IBindingList#IsSorted">
      <summary>Описание этого члена см. в разделе <see cref="P:System.ComponentModel.IBindingList.IsSorted" />.</summary>
      <returns>Описание этого члена см. в разделе <see cref="P:System.ComponentModel.IBindingList.IsSorted" />.</returns>
    </member>
    <member name="M:System.Data.DataViewManager.System#ComponentModel#IBindingList#RemoveIndex(System.ComponentModel.PropertyDescriptor)">
      <summary>Удаляет дескриптор <see cref="T:System.ComponentModel.PropertyDescriptor" /> из индексов, используемых для поиска.</summary>
      <param name="property">Дескриптор <see cref="T:System.ComponentModel.PropertyDescriptor" />, удаляемый из индексов, используемых для поиска.</param>
    </member>
    <member name="M:System.Data.DataViewManager.System#ComponentModel#IBindingList#RemoveSort">
      <summary>Удаляет любую сортировку, выполненную с использованием метода <see cref="M:System.ComponentModel.IBindingList.ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)" />.</summary>
    </member>
    <member name="P:System.Data.DataViewManager.System#ComponentModel#IBindingList#SortDirection">
      <summary>Описание этого члена см. в разделе <see cref="P:System.ComponentModel.IBindingList.SortDirection" />.</summary>
      <returns>Описание этого члена см. в разделе <see cref="P:System.ComponentModel.IBindingList.SortDirection" />.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#ComponentModel#IBindingList#SortProperty">
      <summary>Описание этого члена см. в разделе <see cref="P:System.ComponentModel.IBindingList.SortProperty" />.</summary>
      <returns>Описание этого члена см. в разделе <see cref="P:System.ComponentModel.IBindingList.SortProperty" />.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#ComponentModel#IBindingList#SupportsChangeNotification">
      <summary>Описание этого члена см. в разделе <see cref="P:System.ComponentModel.IBindingList.SupportsChangeNotification" />.</summary>
      <returns>Описание этого члена см. в разделе <see cref="P:System.ComponentModel.IBindingList.SupportsChangeNotification" />.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#ComponentModel#IBindingList#SupportsSearching">
      <summary>Описание этого члена см. в разделе <see cref="P:System.ComponentModel.IBindingList.SupportsSearching" />.</summary>
      <returns>Описание этого члена см. в разделе <see cref="P:System.ComponentModel.IBindingList.SupportsSearching" />.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#ComponentModel#IBindingList#SupportsSorting">
      <summary>Описание этого члена см. в разделе <see cref="P:System.ComponentModel.IBindingList.SupportsSorting" />.</summary>
      <returns>Описание этого члена см. в разделе <see cref="P:System.ComponentModel.IBindingList.SupportsSorting" />.</returns>
    </member>
    <member name="M:System.Data.DataViewManager.System#ComponentModel#ITypedList#GetItemProperties(System.ComponentModel.PropertyDescriptor[])">
      <summary>Возвращает <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />, представляющий свойства каждого элемента, используемого для привязки данных.</summary>
      <param name="listAccessors">Массив объектов <see cref="T:System.ComponentModel.PropertyDescriptor" />, которые ищутся в коллекции как пригодные для привязки. Это может быть <see langword="null" />.</param>
      <returns>
        <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />, представляющий свойства каждого элемента, используемого для привязки данных.</returns>
    </member>
    <member name="M:System.Data.DataViewManager.System#ComponentModel#ITypedList#GetListName(System.ComponentModel.PropertyDescriptor[])">
      <summary>Возвращает имя списка.</summary>
      <param name="listAccessors">Массив объектов <see cref="T:System.ComponentModel.PropertyDescriptor" />, для которых возвращается имя списка. Это может быть <see langword="null" />.</param>
      <returns>Имя списка.</returns>
    </member>
    <member name="M:System.Data.DataViewManager.TableCollectionChanged(System.Object,System.ComponentModel.CollectionChangeEventArgs)">
      <summary>Вызывает событие <see cref="E:System.Data.DataTableCollection.CollectionChanged" /> при добавлении или удалении объекта <see cref="T:System.Data.DataTable" /> из коллекции <see cref="T:System.Data.DataTableCollection" />.</summary>
      <param name="sender">Источник события.</param>
      <param name="e">Объект <see cref="T:System.ComponentModel.CollectionChangeEventArgs" />, содержащий данные события.</param>
    </member>
    <member name="T:System.Data.DataViewRowState">
      <summary>Описывает версию данных в объекте <see cref="T:System.Data.DataRow" />.</summary>
    </member>
    <member name="F:System.Data.DataViewRowState.Added">
      <summary>Новая строка.</summary>
    </member>
    <member name="F:System.Data.DataViewRowState.CurrentRows">
      <summary>Текущие строки, включая неизмененные, новые и измененные строки. По умолчанию <see cref="T:System.Data.DataViewRowState" /> имеет значение CurrentRows.</summary>
    </member>
    <member name="F:System.Data.DataViewRowState.Deleted">
      <summary>Удаленная строка.</summary>
    </member>
    <member name="F:System.Data.DataViewRowState.ModifiedCurrent">
      <summary>Текущая версия исходных данных, которые были изменены (см. <see langword="ModifiedOriginal" />).</summary>
    </member>
    <member name="F:System.Data.DataViewRowState.ModifiedOriginal">
      <summary>Версия исходной строки измененных данных. (Хотя данные были изменены, они доступны как <see langword="ModifiedCurrent" />).</summary>
    </member>
    <member name="F:System.Data.DataViewRowState.None">
      <summary>Отсутствует.</summary>
    </member>
    <member name="F:System.Data.DataViewRowState.OriginalRows">
      <summary>Исходные строки, включая неизмененные и удаленные.</summary>
    </member>
    <member name="F:System.Data.DataViewRowState.Unchanged">
      <summary>Неизменившаяся строка.</summary>
    </member>
    <member name="T:System.Data.DataViewSetting">
      <summary>Представляет параметры по умолчанию для свойств <see cref="P:System.Data.DataView.ApplyDefaultSort" />, <see cref="P:System.Data.DataView.DataViewManager" />, <see cref="P:System.Data.DataView.RowFilter" />, <see cref="P:System.Data.DataView.RowStateFilter" />, <see cref="P:System.Data.DataView.Sort" /> и <see cref="P:System.Data.DataView.Table" /> для объекта DataView, созданного из <see cref="T:System.Data.DataViewManager" />.</summary>
    </member>
    <member name="P:System.Data.DataViewSetting.ApplyDefaultSort">
      <summary>Возвращает или задает значение, определяющее необходимость использования сортировки по умолчанию.</summary>
      <returns>Значение <see langword="true" />, если используется сортировка по умолчанию; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.DataViewSetting.DataViewManager">
      <summary>Возвращает составное действие <see cref="T:System.Data.DataViewManager" />, в котором содержится данный объект <see cref="T:System.Data.DataViewSetting" />.</summary>
      <returns>Объект <see cref="T:System.Data.DataViewManager" />.</returns>
    </member>
    <member name="P:System.Data.DataViewSetting.RowFilter">
      <summary>Возвращает или задает фильтр, применяемый в объекте <see cref="T:System.Data.DataView" />. Пример кода с RowFilter см. в разделе <see cref="P:System.Data.DataView.RowFilter" />.</summary>
      <returns>Строка, содержащая применяемый фильтр.</returns>
    </member>
    <member name="P:System.Data.DataViewSetting.RowStateFilter">
      <summary>Возвращает или задает значение, определяющее необходимость отображения строк Current, Deleted, Modified Current, ModifiedOriginal, New, Original, Unchanged или отсутствие строк в объекте <see cref="T:System.Data.DataView" />.</summary>
      <returns>Значение, определяющее строку, которую нужно отобразить.</returns>
    </member>
    <member name="P:System.Data.DataViewSetting.Sort">
      <summary>Возвращает или задает значение, определяющее сортировку, применяемую в объекте <see cref="T:System.Data.DataView" />.</summary>
      <returns>Сортировка, применяемая в объекте <see cref="T:System.Data.DataView" />.</returns>
    </member>
    <member name="P:System.Data.DataViewSetting.Table">
      <summary>Получает объект <see cref="T:System.Data.DataTable" />, к которому нужно применить свойства объекта <see cref="T:System.Data.DataViewSetting" />.</summary>
      <returns>Объект <see cref="T:System.Data.DataTable" />.</returns>
    </member>
    <member name="T:System.Data.DataViewSettingCollection">
      <summary>Содержит доступную только для чтения коллекцию объектов <see cref="T:System.Data.DataViewSetting" /> для каждого объекта <see cref="T:System.Data.DataTable" /> в <see cref="T:System.Data.DataSet" />.</summary>
    </member>
    <member name="M:System.Data.DataViewSettingCollection.CopyTo(System.Array,System.Int32)">
      <summary>Копирует объекты коллекции в одномерный экземпляр класса <see cref="T:System.Array" />, начиная с указанного индекса.</summary>
      <param name="ar">Одномерный объект <see cref="T:System.Array" />, являющийся целевым для значений, скопированных из коллекции.</param>
      <param name="index">Индекс в массиве, с которого требуется начать вставку.</param>
    </member>
    <member name="M:System.Data.DataViewSettingCollection.CopyTo(System.Data.DataViewSetting[],System.Int32)">
      <summary>Копирует объекты коллекции в одномерный экземпляр класса <see cref="T:System.Array" />, начиная с указанного индекса.</summary>
      <param name="ar">Одномерный объект <see cref="T:System.Array" />, являющийся целевым для значений, скопированных из коллекции.</param>
      <param name="index">Индекс в массиве, с которого требуется начать вставку.</param>
    </member>
    <member name="P:System.Data.DataViewSettingCollection.Count">
      <summary>Возвращает количество объектов <see cref="T:System.Data.DataViewSetting" /> в коллекции <see cref="T:System.Data.DataViewSettingCollection" />.</summary>
      <returns>Количество объектов <see cref="T:System.Data.DataViewSetting" /> в коллекции.</returns>
    </member>
    <member name="M:System.Data.DataViewSettingCollection.GetEnumerator">
      <summary>Возвращает объект <see cref="T:System.Collections.IEnumerator" /> для коллекции.</summary>
      <returns>Объект <see cref="T:System.Collections.IEnumerator" />.</returns>
    </member>
    <member name="P:System.Data.DataViewSettingCollection.IsReadOnly">
      <summary>Возвращает значение, которое определяет, является ли коллекция <see cref="T:System.Data.DataViewSettingCollection" /> доступной только для чтения.</summary>
      <returns>Всегда возвращает <see langword="true" /> для указания коллекции только для чтения.</returns>
    </member>
    <member name="P:System.Data.DataViewSettingCollection.IsSynchronized">
      <summary>Получает значение, определяющее, является ли доступ к коллекции <see cref="T:System.Data.DataViewSettingCollection" /> синхронизированным (потокобезопасным).</summary>
      <returns>Это свойство всегда имеет значение <see langword="false" />, если оно не переопределено производным классом.</returns>
    </member>
    <member name="P:System.Data.DataViewSettingCollection.Item(System.Data.DataTable)">
      <summary>Возвращает объекты <see cref="T:System.Data.DataViewSetting" /> указанного класса <see cref="T:System.Data.DataTable" /> из коллекции.</summary>
      <param name="table">Искомый объект <see cref="T:System.Data.DataTable" />.</param>
      <returns>Коллекция объектов <see cref="T:System.Data.DataViewSetting" />.</returns>
    </member>
    <member name="P:System.Data.DataViewSettingCollection.Item(System.Int32)">
      <summary>Возвращает объекты <see cref="T:System.Data.DataViewSetting" /> класса <see cref="T:System.Data.DataTable" /> по указанному индексу.</summary>
      <param name="index">Отсчитываемый от нуля индекс объекта <see cref="T:System.Data.DataTable" />, который требуется найти.</param>
      <returns>Коллекция объектов <see cref="T:System.Data.DataViewSetting" />.</returns>
    </member>
    <member name="P:System.Data.DataViewSettingCollection.Item(System.String)">
      <summary>Возвращает объект <see cref="T:System.Data.DataViewSetting" /> класса <see cref="T:System.Data.DataTable" />, заданный по его имени.</summary>
      <param name="tableName">Имя объекта <see cref="T:System.Data.DataTable" />, который необходимо найти.</param>
      <returns>Коллекция объектов <see cref="T:System.Data.DataViewSetting" />.</returns>
    </member>
    <member name="P:System.Data.DataViewSettingCollection.SyncRoot">
      <summary>Получает объект, с помощью которого можно синхронизировать доступ к коллекции <see cref="T:System.Data.DataViewSettingCollection" />.</summary>
      <returns>Объект, который может использоваться для синхронизации доступа к <see cref="T:System.Data.DataViewSettingCollection" />.</returns>
    </member>
    <member name="T:System.Data.DBConcurrencyException">
      <summary>Исключение, которое вызывается объектом <see cref="T:System.Data.Common.DataAdapter" /> во время выполнения операции вставки, обновления или удаления, не затронувшей ни одной строки.</summary>
    </member>
    <member name="M:System.Data.DBConcurrencyException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.DBConcurrencyException" />.</summary>
    </member>
    <member name="M:System.Data.DBConcurrencyException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.DBConcurrencyException" />.</summary>
      <param name="message">Текстовая строка с подробными сведениями об исключении.</param>
    </member>
    <member name="M:System.Data.DBConcurrencyException.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.DBConcurrencyException" />.</summary>
      <param name="message">Текстовая строка с подробными сведениями об исключении.</param>
      <param name="inner">Ссылка на внутреннее исключение.</param>
    </member>
    <member name="M:System.Data.DBConcurrencyException.#ctor(System.String,System.Exception,System.Data.DataRow[])">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.DBConcurrencyException" />.</summary>
      <param name="message">Сообщение об ошибке с объяснением причины исключения.</param>
      <param name="inner">Исключение, вызвавшее текущее исключение, или пустая ссылка (<see langword="Nothing" /> в Visual Basic), если внутреннее исключение не задано.</param>
      <param name="dataRows">Массив, содержащий объекты <see cref="T:System.Data.DataRow" />, сбой обновления которых привел к возникновению этого исключения.</param>
    </member>
    <member name="M:System.Data.DBConcurrencyException.CopyToRows(System.Data.DataRow[])">
      <summary>Копирует объекты <see cref="T:System.Data.DataRow" />, сбой обновления которых привел к возникновению этого исключения, в указанный массив объектов <see cref="T:System.Data.DataRow" />.</summary>
      <param name="array">Одномерный массив объектов <see cref="T:System.Data.DataRow" />, в который копируются объекты <see cref="T:System.Data.DataRow" />.</param>
    </member>
    <member name="M:System.Data.DBConcurrencyException.CopyToRows(System.Data.DataRow[],System.Int32)">
      <summary>Копирует объекты <see cref="T:System.Data.DataRow" />, сбой обновления которых привел к возникновению этого исключения, в указанный массив объектов <see cref="T:System.Data.DataRow" />, начиная с указанного индекса целевого массива.</summary>
      <param name="array">Одномерный массив объектов <see cref="T:System.Data.DataRow" />, в который копируются объекты <see cref="T:System.Data.DataRow" />.</param>
      <param name="arrayIndex">Индекс целевого массива, с которого начинается копирование.</param>
    </member>
    <member name="M:System.Data.DBConcurrencyException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Заполняет объект сведениями о сериализации данные, необходимыми для сериализации <see cref="T:System.Data.DBConcurrencyException" />.</summary>
      <param name="si">Объект <see cref="T:System.Runtime.Serialization.SerializationInfo" />, содержащий сериализуемые данные, связанные с исключением <see cref="T:System.Data.DBConcurrencyException" />.</param>
      <param name="context">Объект <see cref="T:System.Runtime.Serialization.StreamingContext" />, содержащий источник и назначение сериализуемого потока, связанного с объектом <see cref="T:System.Data.DBConcurrencyException" />.</param>
      <exception cref="T:System.ArgumentNullException">Значением параметра <paramref name="info" /> является пустая ссылка (<see langword="Nothing" /> в Visual Basic).</exception>
    </member>
    <member name="P:System.Data.DBConcurrencyException.Row">
      <summary>Возвращает или задает значение объекта <see cref="T:System.Data.DataRow" />, вызвавшего <see cref="T:System.Data.DBConcurrencyException" />.</summary>
      <returns>Значение объекта <see cref="T:System.Data.DataRow" />.</returns>
    </member>
    <member name="P:System.Data.DBConcurrencyException.RowCount">
      <summary>Возвращает количество строк, обновление которых завершилось сбоем, и создает это исключение.</summary>
      <returns>Целое число, содержащее количество строк, обновление которых завершилось со сбоем.</returns>
    </member>
    <member name="T:System.Data.DbType">
      <summary>Указывает тип данных поля, свойства или объекта <see langword="Parameter" /> поставщика данных .NET Framework.</summary>
    </member>
    <member name="F:System.Data.DbType.AnsiString">
      <summary>Поток переменной длины из символов, не принадлежащих кодировке Юникод. В нем может быть от 1 до 8000 символов.</summary>
    </member>
    <member name="F:System.Data.DbType.AnsiStringFixedLength">
      <summary>Поток фиксированной длины из символов, не принадлежащих кодировке Юникод.</summary>
    </member>
    <member name="F:System.Data.DbType.Binary">
      <summary>Поток переменной длины из двоичных данных, имеющий длину от 1 до 8000 байт.</summary>
    </member>
    <member name="F:System.Data.DbType.Boolean">
      <summary>Простой тип для представления логических значений <see langword="true" /> и <see langword="false" />.</summary>
    </member>
    <member name="F:System.Data.DbType.Byte">
      <summary>8-разрядное целое число без знака, которое может принимать значения от 0 до 255.</summary>
    </member>
    <member name="F:System.Data.DbType.Currency">
      <summary>Значение типа currency, лежащее в диапазоне от -2 63 (или -922 337 203 685 477,5808) до 2 63 -1 (или +922 337 203 685 477,5807) и имеющее точность до одной десятитысячной денежной единицы.</summary>
    </member>
    <member name="F:System.Data.DbType.Date">
      <summary>Тип, представляющий значение даты.</summary>
    </member>
    <member name="F:System.Data.DbType.DateTime">
      <summary>Тип, представляющий значение даты и времени.</summary>
    </member>
    <member name="F:System.Data.DbType.DateTime2">
      <summary>Данные даты и времени. Значение даты может находиться в диапазоне от 1 января 1 г. н. э. до 31 декабря 9999 года н. э. Значение времени может находиться в диапазоне от 00:00:00 до 23:59:59,9999999 с точностью до 100 наносекунд.</summary>
    </member>
    <member name="F:System.Data.DbType.DateTimeOffset">
      <summary>Данные даты и времени с учетом часового пояса. Значение даты может находиться в диапазоне от 1 января 1 г. н. э. до 31 декабря 9999 года н. э. Значение времени может находиться в диапазоне от 00:00:00 до 23:59:59,9999999 с точностью до 100 наносекунд. Часовые пояса могут находиться в диапазоне от -14:00 до +14:00.</summary>
    </member>
    <member name="F:System.Data.DbType.Decimal">
      <summary>Простой тип для представления значений в диапазоне от 1,0 x 10 -28 до приблизительно 7,9 x 10 28 с 28–29 значимыми цифрами.</summary>
    </member>
    <member name="F:System.Data.DbType.Double">
      <summary>Тип для представления значений с плавающей запятой в диапазоне от 5,0 x 10 -324 до приблизительно 1,7 x 10 308 с точностью до 15–16 знаков.</summary>
    </member>
    <member name="F:System.Data.DbType.Guid">
      <summary>Глобальный уникальный идентификатор (GUID).</summary>
    </member>
    <member name="F:System.Data.DbType.Int16">
      <summary>Целочисленный тип для представления 16-разрядных целых чисел со знаком в диапазоне от -32768 до 32767.</summary>
    </member>
    <member name="F:System.Data.DbType.Int32">
      <summary>Целочисленный тип для представления 32-разрядных целых чисел со знаком в диапазоне от -2147483648 до 2147483647.</summary>
    </member>
    <member name="F:System.Data.DbType.Int64">
      <summary>Целочисленный тип для представления 64-разрядных целых чисел со знаком в диапазоне от -9223372036854775808 до 9223372036854775807.</summary>
    </member>
    <member name="F:System.Data.DbType.Object">
      <summary>Общий тип для представления всех значений и ссылок, которые не могут быть представлены ни одним другим значением <see langword="DbType" />.</summary>
    </member>
    <member name="F:System.Data.DbType.SByte">
      <summary>Целочисленный тип для представления 8-разрядных целых чисел со знаком в диапазоне от -128 до 127.</summary>
    </member>
    <member name="F:System.Data.DbType.Single">
      <summary>Тип для представления значений с плавающей запятой в диапазоне от 1,5 x 10 -45 до приблизительно 3,4 x 10 38 с точностью до 7знаков.</summary>
    </member>
    <member name="F:System.Data.DbType.String">
      <summary>Тип, представляющий символьные строки в Юникоде.</summary>
    </member>
    <member name="F:System.Data.DbType.StringFixedLength">
      <summary>Строка фиксированной длины из символов Юникода.</summary>
    </member>
    <member name="F:System.Data.DbType.Time">
      <summary>Тип, представляющий значение <see langword="DateTime" /> SQL Server. Если нужно использовать значение <see langword="time" /> SQL Server, необходимо воспользоваться <see cref="F:System.Data.SqlDbType.Time" />.</summary>
    </member>
    <member name="F:System.Data.DbType.UInt16">
      <summary>Целочисленный тип для представления 16-разрядных целых чисел без знака в диапазоне от 0 до 65535.</summary>
    </member>
    <member name="F:System.Data.DbType.UInt32">
      <summary>Целочисленный тип для представления 32-разрядных целых чисел со значениями от 0 до 4294967295.</summary>
    </member>
    <member name="F:System.Data.DbType.UInt64">
      <summary>Целочисленный тип для представления 64-разрядных целых чисел со значениями от 0 до 18446744073709551615.</summary>
    </member>
    <member name="F:System.Data.DbType.VarNumeric">
      <summary>Числовое значение переменной длины.</summary>
    </member>
    <member name="F:System.Data.DbType.Xml">
      <summary>Проанализированное представление фрагмента или документа XML.</summary>
    </member>
    <member name="T:System.Data.DeletedRowInaccessibleException">
      <summary>Представляет исключение, которое выдается при попытке выполнить действие с удаленным объектом <see cref="T:System.Data.DataRow" />.</summary>
    </member>
    <member name="M:System.Data.DeletedRowInaccessibleException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.DeletedRowInaccessibleException" />.</summary>
    </member>
    <member name="M:System.Data.DeletedRowInaccessibleException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.DeletedRowInaccessibleException" /> со сведениями о сериализации.</summary>
      <param name="info">Данные, необходимые для сериализации или десериализации объекта.</param>
      <param name="context">Описание источника и назначения заданного сериализованного потока.</param>
    </member>
    <member name="M:System.Data.DeletedRowInaccessibleException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.DeletedRowInaccessibleException" /> с заданной строкой.</summary>
      <param name="s">Строка, отображаемая при возникновении исключения.</param>
    </member>
    <member name="M:System.Data.DeletedRowInaccessibleException.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.DeletedRowInaccessibleException" /> указанным сообщением об ошибке и ссылкой на внутреннее исключение, вызвавшее данное исключение.</summary>
      <param name="message">Сообщение об ошибке, указывающее причину создания исключения.</param>
      <param name="innerException">Исключение, вызвавшее текущее исключение, или пустая ссылка (<see langword="Nothing" /> в Visual Basic), если внутреннее исключение не задано.</param>
    </member>
    <member name="T:System.Data.DuplicateNameException">
      <summary>Представляет исключение, которое выдается, если при добавлении строк в объект, относящийся к <see cref="T:System.Data.DataSet" />, нарушается уникальность имен объектов базы данных.</summary>
    </member>
    <member name="M:System.Data.DuplicateNameException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.DuplicateNameException" />.</summary>
    </member>
    <member name="M:System.Data.DuplicateNameException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.DuplicateNameException" /> со сведениями о сериализации.</summary>
      <param name="info">Данные, необходимые для сериализации или десериализации объекта.</param>
      <param name="context">Описание источника и назначения заданного сериализованного потока.</param>
    </member>
    <member name="M:System.Data.DuplicateNameException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.DuplicateNameException" /> с заданной строкой.</summary>
      <param name="s">Строка, отображаемая при возникновении исключения.</param>
    </member>
    <member name="M:System.Data.DuplicateNameException.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.DuplicateNameException" /> с заданной строкой и внутренним исключением.</summary>
      <param name="message">Сообщение об ошибке, указывающее причину создания исключения.</param>
      <param name="innerException">Исключение, вызвавшее текущее исключение, или пустая ссылка (<see langword="Nothing" /> в Visual Basic), если внутреннее исключение не задано.</param>
    </member>
    <member name="T:System.Data.EvaluateException">
      <summary>Представляет исключение, которое выдается, когда невозможно найти значение свойства <see cref="P:System.Data.DataColumn.Expression" /> класса <see cref="T:System.Data.DataColumn" />.</summary>
    </member>
    <member name="M:System.Data.EvaluateException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.EvaluateException" />.</summary>
    </member>
    <member name="M:System.Data.EvaluateException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.EvaluateException" /> со свойствами <see cref="T:System.Runtime.Serialization.SerializationInfo" /> и <see cref="T:System.Runtime.Serialization.StreamingContext" />.</summary>
      <param name="info">Данные, необходимые для сериализации или десериализации объекта.</param>
      <param name="context">Источника и назначение конкретного сериализованного потока.</param>
    </member>
    <member name="M:System.Data.EvaluateException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.EvaluateException" /> с заданной строкой.</summary>
      <param name="s">Строка, отображаемая при возникновении исключения.</param>
    </member>
    <member name="M:System.Data.EvaluateException.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.EvaluateException" /> указанным сообщением об ошибке и ссылкой на внутреннее исключение, вызвавшее данное исключение.</summary>
      <param name="message">Сообщение об ошибке, указывающее причину создания исключения.</param>
      <param name="innerException">Исключение, вызвавшее текущее исключение, или пустая ссылка (<see langword="Nothing" /> в Visual Basic), если внутреннее исключение не задано.</param>
    </member>
    <member name="T:System.Data.FillErrorEventArgs">
      <summary>Предоставляет данные для события <see cref="E:System.Data.Common.DataAdapter.FillError" /> объекта <see cref="T:System.Data.Common.DbDataAdapter" />.</summary>
    </member>
    <member name="M:System.Data.FillErrorEventArgs.#ctor(System.Data.DataTable,System.Object[])">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.FillErrorEventArgs" />.</summary>
      <param name="dataTable">Обновляемая таблица <see cref="T:System.Data.DataTable" />.</param>
      <param name="values">Значения обновляемой строки.</param>
    </member>
    <member name="P:System.Data.FillErrorEventArgs.Continue">
      <summary>Возвращает или задает значение, указывающее, должна ли операция заполнения продолжиться, несмотря на возникновение ошибки.</summary>
      <returns>Значение <see langword="true" />, если операция должна продолжаться; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.FillErrorEventArgs.DataTable">
      <summary>Получает таблицу <see cref="T:System.Data.DataTable" />, которая обновлялась в момент возникновения ошибки.</summary>
      <returns>Обновляемая таблица <see cref="T:System.Data.DataTable" />.</returns>
    </member>
    <member name="P:System.Data.FillErrorEventArgs.Errors">
      <summary>Получает обрабатываемые ошибки.</summary>
      <returns>Обрабатываемые ошибки.</returns>
    </member>
    <member name="P:System.Data.FillErrorEventArgs.Values">
      <summary>Получает значения строки, которая обновлялась в момент возникновения ошибки.</summary>
      <returns>Значения обновляемой строки.</returns>
    </member>
    <member name="T:System.Data.FillErrorEventH*******ler">
      <summary>Представляет метод, обрабатывающий событие <see cref="E:System.Data.Common.DataAdapter.FillError" />.</summary>
      <param name="sender">Источник события.</param>
      <param name="e">Объект класса <see cref="T:System.Data.FillErrorEventArgs" />, содержащий данные о событии.</param>
    </member>
    <member name="T:System.Data.ForeignKeyConstraint">
      <summary>Представляет ограничение, установленное для набора столбцов в отношении "первичный ключ/внешний ключ", на действия, выполняемые при удалении или обновлении значения или строки.</summary>
    </member>
    <member name="M:System.Data.ForeignKeyConstraint.#ctor(System.Data.DataColumn,System.Data.DataColumn)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.ForeignKeyConstraint" /> с указанным родительским и дочерним объектами <see cref="T:System.Data.DataColumn" />.</summary>
      <param name="parentColumn">Родительский объект <see cref="T:System.Data.DataColumn" /> в ограничении.</param>
      <param name="childColumn">Дочерний объект <see cref="T:System.Data.DataColumn" /> в ограничении.</param>
      <exception cref="T:System.ArgumentNullException">Значением одного или обоих столбцов является <see langword="null" />.</exception>
      <exception cref="T:System.Data.InvalidConstraintException">Столбцы имеют различные типы данных.  
Или 
Таблицы не принадлежат одному и тому же объекту <see cref="T:System.Data.DataSet" />.</exception>
    </member>
    <member name="M:System.Data.ForeignKeyConstraint.#ctor(System.Data.DataColumn[],System.Data.DataColumn[])">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.ForeignKeyConstraint" /> указанным родительским и дочерним объектами <see cref="T:System.Data.DataColumn" />.</summary>
      <param name="parentColumns">Массив родительских объектов <see cref="T:System.Data.DataColumn" /> в ограничении.</param>
      <param name="childColumns">Массив дочерних объектов <see cref="T:System.Data.DataColumn" /> в ограничении.</param>
      <exception cref="T:System.ArgumentNullException">Значением одного или обоих столбцов является <see langword="null" />.</exception>
      <exception cref="T:System.Data.InvalidConstraintException">Столбцы имеют различные типы данных.  
Или 
Таблицы не принадлежат одному и тому же объекту <see cref="T:System.Data.DataSet" />.</exception>
    </member>
    <member name="M:System.Data.ForeignKeyConstraint.#ctor(System.String,System.Data.DataColumn,System.Data.DataColumn)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.ForeignKeyConstraint" /> с указанным именем и родительским и дочерним объектами <see cref="T:System.Data.DataColumn" />.</summary>
      <param name="constraintName">Имя ограничения.</param>
      <param name="parentColumn">Родительский объект <see cref="T:System.Data.DataColumn" /> в ограничении.</param>
      <param name="childColumn">Дочерний объект <see cref="T:System.Data.DataColumn" /> в ограничении.</param>
      <exception cref="T:System.ArgumentNullException">Значением одного или обоих столбцов является <see langword="null" />.</exception>
      <exception cref="T:System.Data.InvalidConstraintException">Столбцы имеют различные типы данных.  
Или 
Таблицы не принадлежат одному и тому же объекту <see cref="T:System.Data.DataSet" />.</exception>
    </member>
    <member name="M:System.Data.ForeignKeyConstraint.#ctor(System.String,System.Data.DataColumn[],System.Data.DataColumn[])">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.ForeignKeyConstraint" /> с указанным именем и массивами родительских и дочерних объектов <see cref="T:System.Data.DataColumn" />.</summary>
      <param name="constraintName">Имя <see cref="T:System.Data.ForeignKeyConstraint" />. Если значением является <see langword="null" /> или пустая строка, то при добавлении этого ограничения в коллекцию ему будет присвоено имя по умолчанию.</param>
      <param name="parentColumns">Массив родительских объектов <see cref="T:System.Data.DataColumn" /> в ограничении.</param>
      <param name="childColumns">Массив дочерних объектов <see cref="T:System.Data.DataColumn" /> в ограничении.</param>
      <exception cref="T:System.ArgumentNullException">Значением одного или обоих столбцов является <see langword="null" />.</exception>
      <exception cref="T:System.Data.InvalidConstraintException">Столбцы имеют различные типы данных.  
Или 
Таблицы не принадлежат одному и тому же объекту <see cref="T:System.Data.DataSet" />.</exception>
    </member>
    <member name="M:System.Data.ForeignKeyConstraint.#ctor(System.String,System.String,System.String,System.String[],System.String[],System.Data.AcceptRejectRule,System.Data.Rule,System.Data.Rule)">
      <summary>Этот конструктор предназначен для поддержки времени разработки в среде Visual Studio. Объекты <see cref="T:System.Data.ForeignKeyConstraint" />, созданные с помощью этого конструктора, должны затем добавляться в коллекцию при помощи метода <see cref="M:System.Data.ConstraintCollection.AddRange(System.Data.Constraint[])" />. Таблицы и столбцы с указанными именами должны существовать во время вызова метода; если же метод <see cref="M:System.Data.DataTable.BeginInit" /> был вызван до вызова этого конструктора, таблицы и столбцы с указанными именами должны существовать во время вызова метода <see cref="M:System.Data.DataTable.EndInit" />.</summary>
      <param name="constraintName">Имя ограничения.</param>
      <param name="parentTableName">Имя родительского объекта <see cref="T:System.Data.DataTable" />, который содержит родительские объекты <see cref="T:System.Data.DataColumn" /> в ограничении.</param>
      <param name="parentTableNamespace">Имя <see cref="P:System.Data.DataTable.Namespace" />.</param>
      <param name="parentColumnNames">Массив имен родительских объектов <see cref="T:System.Data.DataColumn" /> в ограничении.</param>
      <param name="childColumnNames">Массив имен дочерних объектов <see cref="T:System.Data.DataColumn" /> в ограничении.</param>
      <param name="acceptRejectRule">Одно из значений перечисления <see cref="T:System.Data.AcceptRejectRule" />. Возможными значениями являются <see langword="None" />, <see langword="Cascade" /> и <see langword="Default" />.</param>
      <param name="deleteRule">Одно из значений <see cref="T:System.Data.Rule" />, используемое при удалении строки. Значение по умолчанию — <see langword="Cascade" />. Возможными значениями являются <see langword="None" />, <see langword="Cascade" />, <see langword="SetNull" />, <see langword="SetDefault" /> и <see langword="Default" />.</param>
      <param name="updateRule">Одно из значений <see cref="T:System.Data.Rule" />, используемое при обновлении строки. Значение по умолчанию — <see langword="Cascade" />. Возможными значениями являются <see langword="None" />, <see langword="Cascade" />, <see langword="SetNull" />, <see langword="SetDefault" /> и <see langword="Default" />.</param>
      <exception cref="T:System.ArgumentNullException">Значением одного или обоих столбцов является <see langword="null" />.</exception>
      <exception cref="T:System.Data.InvalidConstraintException">Столбцы имеют различные типы данных.  
Или 
Таблицы не принадлежат одному и тому же объекту <see cref="T:System.Data.DataSet" />.</exception>
    </member>
    <member name="M:System.Data.ForeignKeyConstraint.#ctor(System.String,System.String,System.String[],System.String[],System.Data.AcceptRejectRule,System.Data.Rule,System.Data.Rule)">
      <summary>Этот конструктор предназначен для поддержки времени разработки в среде Visual Studio. Объекты <see cref="T:System.Data.ForeignKeyConstraint" />, созданные с помощью этого конструктора, должны затем добавляться в коллекцию при помощи метода <see cref="M:System.Data.ConstraintCollection.AddRange(System.Data.Constraint[])" />. Таблицы и столбцы с указанными именами должны существовать во время вызова метода; если же метод <see cref="M:System.Data.DataTable.BeginInit" /> был вызван до вызова этого конструктора, таблицы и столбцы с указанными именами должны существовать во время вызова метода <see cref="M:System.Data.DataTable.EndInit" />.</summary>
      <param name="constraintName">Имя ограничения.</param>
      <param name="parentTableName">Имя родительского объекта <see cref="T:System.Data.DataTable" />, который содержит родительские объекты <see cref="T:System.Data.DataColumn" /> в ограничении.</param>
      <param name="parentColumnNames">Массив имен родительских объектов <see cref="T:System.Data.DataColumn" /> в ограничении.</param>
      <param name="childColumnNames">Массив имен дочерних объектов <see cref="T:System.Data.DataColumn" /> в ограничении.</param>
      <param name="acceptRejectRule">Одно из значений перечисления <see cref="T:System.Data.AcceptRejectRule" />. Возможными значениями являются <see langword="None" />, <see langword="Cascade" /> и <see langword="Default" />.</param>
      <param name="deleteRule">Одно из значений <see cref="T:System.Data.Rule" />, используемое при удалении строки. Значение по умолчанию — <see langword="Cascade" />. Возможными значениями являются <see langword="None" />, <see langword="Cascade" />, <see langword="SetNull" />, <see langword="SetDefault" /> и <see langword="Default" />.</param>
      <param name="updateRule">Одно из значений <see cref="T:System.Data.Rule" />, используемое при обновлении строки. Значение по умолчанию — <see langword="Cascade" />. Возможными значениями являются <see langword="None" />, <see langword="Cascade" />, <see langword="SetNull" />, <see langword="SetDefault" /> и <see langword="Default" />.</param>
      <exception cref="T:System.ArgumentNullException">Значением одного или обоих столбцов является <see langword="null" />.</exception>
      <exception cref="T:System.Data.InvalidConstraintException">Столбцы имеют различные типы данных.  
Или 
Таблицы не принадлежат одному и тому же объекту <see cref="T:System.Data.DataSet" />.</exception>
    </member>
    <member name="P:System.Data.ForeignKeyConstraint.AcceptRejectRule">
      <summary>Указывает действие, которое должно быть выполнено в связи с этим ограничением при вызове метода <see cref="M:System.Data.DataTable.AcceptChanges" />.</summary>
      <returns>Одно из значений перечисления <see cref="T:System.Data.AcceptRejectRule" />. Возможными значениями являются <see langword="None" /> и <see langword="Cascade" />. Значение по умолчанию — <see langword="None" />.</returns>
    </member>
    <member name="P:System.Data.ForeignKeyConstraint.Columns">
      <summary>Возвращает дочерние столбцы этого ограничения.</summary>
      <returns>Массив объектов <see cref="T:System.Data.DataColumn" />, являющихся дочерними столбцами в ограничении.</returns>
    </member>
    <member name="P:System.Data.ForeignKeyConstraint.DeleteRule">
      <summary>Возвращает или задает действие, которое происходит в пределах этого ограничения при удалении строки.</summary>
      <returns>Одно из значений перечисления <see cref="T:System.Data.Rule" />. Значение по умолчанию — <see langword="Cascade" />.</returns>
    </member>
    <member name="M:System.Data.ForeignKeyConstraint.Equals(System.Object)">
      <summary>Возвращает значение,указывающее, идентичен ли текущий объект <see cref="T:System.Data.ForeignKeyConstraint" /> указанному объекту.</summary>
      <param name="key">Объект, с которым сравнивается объект <see cref="T:System.Data.ForeignKeyConstraint" />. Два объекта <see cref="T:System.Data.ForeignKeyConstraint" /> равны, если они накладывают ограничения на одни и те же столбцы.</param>
      <returns>Значение <see langword="true" />, если объекты одинаковы; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.ForeignKeyConstraint.GetHashCode">
      <summary>Возвращает хэш-код этого экземпляра объекта <see cref="T:System.Data.ForeignKeyConstraint" />.</summary>
      <returns>Хэш-код в виде 32-разрядного целого числа со знаком.</returns>
    </member>
    <member name="P:System.Data.ForeignKeyConstraint.RelatedColumns">
      <summary>Родительские столбцы этого ограничения.</summary>
      <returns>Массив объектов <see cref="T:System.Data.DataColumn" />, являющихся родительскими столбцами в ограничении.</returns>
    </member>
    <member name="P:System.Data.ForeignKeyConstraint.RelatedTable">
      <summary>Возвращает родительскую таблицу этого ограничения.</summary>
      <returns>Родительский объект <see cref="T:System.Data.DataTable" /> этого ограничения.</returns>
    </member>
    <member name="P:System.Data.ForeignKeyConstraint.Table">
      <summary>Возвращает дочернюю таблицу этого ограничения.</summary>
      <returns>Объект <see cref="T:System.Data.DataTable" />, являющийся дочерней таблицей в этом ограничении.</returns>
    </member>
    <member name="P:System.Data.ForeignKeyConstraint.UpdateRule">
      <summary>Возвращает или задает действие, которое происходит в пределах этого ограничения при обновлении строки.</summary>
      <returns>Одно из значений перечисления <see cref="T:System.Data.Rule" />. Значение по умолчанию — <see langword="Cascade" />.</returns>
    </member>
    <member name="T:System.Data.IColumnMapping">
      <summary>Связывает столбец источника данных со столбцом объекта <see cref="T:System.Data.DataSet" />. Этот интерфейс реализуется классом <see cref="T:System.Data.Common.DataColumnMapping" />, который совместно используется поставщиками данных .NET Framework.</summary>
    </member>
    <member name="P:System.Data.IColumnMapping.DataSetColumn">
      <summary>Возвращает или задает имя столбца в объекте <see cref="T:System.Data.DataSet" /> для сопоставления.</summary>
      <returns>Имя столбца в объекте <see cref="T:System.Data.DataSet" /> для сопоставления. Имя без учета регистра.</returns>
    </member>
    <member name="P:System.Data.IColumnMapping.SourceColumn">
      <summary>Возвращает или задает имя столбца в источнике данных для сопоставления. Имя указано с учетом регистра.</summary>
      <returns>Имя столбца в источнике данных, определяемое с учетом регистра.</returns>
    </member>
    <member name="T:System.Data.IColumnMappingCollection">
      <summary>Содержит коллекцию объектов DataColumnMapping. Этот интерфейс реализуется классом <see cref="T:System.Data.Common.DataColumnMappingCollection" />, который совместно используется поставщиками данных .NET Framework.</summary>
    </member>
    <member name="M:System.Data.IColumnMappingCollection.Add(System.String,System.String)">
      <summary>Добавляет объект ColumnMapping к коллекции ColumnMapping, используя имена столбца-источника и столбца <see cref="T:System.Data.DataSet" />.</summary>
      <param name="sourceColumnName">Зависящее от регистра имя исходного столбца.</param>
      <param name="dataSetColumnName">Имя столбца <see cref="T:System.Data.DataSet" />.</param>
      <returns>Объект ColumnMapping, который был добавлен в коллекцию.</returns>
    </member>
    <member name="M:System.Data.IColumnMappingCollection.Contains(System.String)">
      <summary>Возвращает значение, указывающее, содержится ли в коллекции <see cref="T:System.Data.Common.DataColumnMappingCollection" /> объект <see cref="T:System.Data.Common.DataColumnMapping" /> с указанным именем столбца-источника.</summary>
      <param name="sourceColumnName">Зависящее от регистра имя исходного столбца.</param>
      <returns>Значение <see langword="true" />, если объект <see cref="T:System.Data.Common.DataColumnMapping" /> с указанным именем столбца-источника существует; в обратном случае – значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.IColumnMappingCollection.GetByDataSetColumn(System.String)">
      <summary>Возвращает объект ColumnMapping, соответствующий указанному имени столбца <see cref="T:System.Data.DataSet" />.</summary>
      <param name="dataSetColumnName">Имя столбца <see cref="T:System.Data.DataSet" /> в коллекции.</param>
      <returns>Объект ColumnMapping, соответствующий указанному имени <see langword="DataSet" />.</returns>
    </member>
    <member name="M:System.Data.IColumnMappingCollection.IndexOf(System.String)">
      <summary>Возвращает расположение объекта <see cref="T:System.Data.Common.DataColumnMapping" />, соответствующего указанному имени столбца-источника. Имя указано с учетом регистра.</summary>
      <param name="sourceColumnName">Зависящее от регистра имя исходного столбца.</param>
      <returns>Расположение объекта <see langword="DataColumnMapping" />, соответствующего указанному имени столбца-источника (отсчет ведется с нуля).</returns>
    </member>
    <member name="P:System.Data.IColumnMappingCollection.Item(System.String)">
      <summary>Возвращает или задает объект <see cref="T:System.Data.IColumnMapping" /> с указанным именем <see langword="SourceColumn" />.</summary>
      <param name="index">Имя <see langword="SourceColumn" /> для искомого объекта <see langword="IColumnMapping" />.</param>
      <returns>Объект <see langword="IColumnMapping" /> с указанным именем <see langword="SourceColumn" />.</returns>
    </member>
    <member name="M:System.Data.IColumnMappingCollection.RemoveAt(System.String)">
      <summary>Удаляет объект <see cref="T:System.Data.IColumnMapping" /> с указанным именем <see cref="P:System.Data.IColumnMapping.SourceColumn" /> из коллекции.</summary>
      <param name="sourceColumnName">Имя <see langword="SourceColumn" /> с учетом регистра.</param>
      <exception cref="T:System.IndexOutOfRangeException">Объект <see cref="T:System.Data.Common.DataColumnMapping" /> с указанным именем <see langword="SourceColumn" /> не существует.</exception>
    </member>
    <member name="T:System.Data.IDataAdapter">
      <summary>Позволяет объекту реализовать DataAdapter и представляет набор методов и соответствующие свойства, связанные с операциями, для заполнения и обновления объекта <see cref="T:System.Data.DataSet" /> и обновления источника данных.  
 Экземпляры <see cref="T:System.Data.IDbDataAdapter" /> — для источников данных, которые являются или напоминают реляционные базы данных с текстуальными командами (например, Transact-SQL), а экземпляры <see cref="T:System.Data.IDataAdapter" /> могут использовать любой тип источника данных.</summary>
    </member>
    <member name="M:System.Data.IDataAdapter.Fill(System.Data.DataSet)">
      <summary>Добавляет или обновляет строки в объект <see cref="T:System.Data.DataSet" /> для получения соответствия со строками в источнике данных, используя имя объекта <see cref="T:System.Data.DataSet" /> и создает объект <see cref="T:System.Data.DataTable" /> с именем "Table".</summary>
      <param name="dataSet">Объект <see cref="T:System.Data.DataSet" /> для заполнения записями и, если необходимо, — схемой.</param>
      <returns>Количество строк, успешно добавленных или обновленных в объекте <see cref="T:System.Data.DataSet" />. Не включает строки, на которые воздействуют операторы, не возвращающие строк.</returns>
    </member>
    <member name="M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
      <summary>Добавляет объект <see cref="T:System.Data.DataTable" /> с именем Table в указанный объект <see cref="T:System.Data.DataSet" /> и настраивает схему для соответствия этому объекту в источнике данных на основе указанного значения типа <see cref="T:System.Data.SchemaType" />.</summary>
      <param name="dataSet">Объект <see cref="T:System.Data.DataSet" /> для заполнения схемой из источника данных.</param>
      <param name="schemaType">Одно из значений перечисления <see cref="T:System.Data.SchemaType" />.</param>
      <returns>Массив объектов <see cref="T:System.Data.DataTable" />, который содержит сведения схемы, возвращенные из источника данных.</returns>
    </member>
    <member name="M:System.Data.IDataAdapter.GetFillParameters">
      <summary>Получает параметры, заданные пользователем при выполнении оператора SQL SELECT.</summary>
      <returns>Массив объектов <see cref="T:System.Data.IDataParameter" /> содержит параметры, заданные пользователем.</returns>
    </member>
    <member name="P:System.Data.IDataAdapter.MissingMappingAction">
      <summary>Указывает, будут ли несопоставленные столбцы-источники или таблицы-источники передаваться со своими исходными именами, чтобы пройти через фильтр или вызвать ошибку.</summary>
      <returns>Одно из значений перечисления <see cref="T:System.Data.MissingMappingAction" />. Значение по умолчанию — <see langword="Passthrough" />.</returns>
      <exception cref="T:System.ArgumentException">Заданное значение не является одним из значений <see cref="T:System.Data.MissingMappingAction" />.</exception>
    </member>
    <member name="P:System.Data.IDataAdapter.MissingSchemaAction">
      <summary>Указывает или задает значение, определяющее, будут ли отсутствующие исходные таблицы, столбцы и их отношения добавляться в схему набора данных, игнорироваться или вызывать ошибку.</summary>
      <returns>Одно из значений перечисления <see cref="T:System.Data.MissingSchemaAction" />. Значение по умолчанию — <see langword="Add" />.</returns>
      <exception cref="T:System.ArgumentException">Заданное значение не является одним из значений <see cref="T:System.Data.MissingSchemaAction" />.</exception>
    </member>
    <member name="P:System.Data.IDataAdapter.TableMappings">
      <summary>Указывает, как исходная таблица сопоставлена с таблицей набора данных.</summary>
      <returns>Коллекция, обеспечивающая основное сопоставление между возвращенными записями и объектом <see cref="T:System.Data.DataSet" />. Значение по умолчанию — пустая коллекция.</returns>
    </member>
    <member name="M:System.Data.IDataAdapter.Update(System.Data.DataSet)">
      <summary>Вызывает соответствующие операторы INSERT, UPDATE или DELETE для каждой вставленной, обновленной или удаленной строки в указанном объекте <see cref="T:System.Data.DataSet" /> из объекта <see cref="T:System.Data.DataTable" /> с именем "Table".</summary>
      <param name="dataSet">Объект <see cref="T:System.Data.DataSet" />, использованный для обновления источника данных.</param>
      <returns>Количество строк, успешно обновленных из объекта <see cref="T:System.Data.DataSet" />.</returns>
      <exception cref="T:System.Data.DBConcurrencyException">Попытка выполнить оператор INSERT, UPDATE или DELETE привела к нулевому количеству обработанных записей.</exception>
    </member>
    <member name="T:System.Data.IDataParameter">
      <summary>Представляет параметр, относящийся к объекту Comm*******, и при необходимости его сопоставление со столбцами <see cref="T:System.Data.DataSet" />. Реализация осуществляется с помощью поставщиков данных .NET Framework, которые обращаются к источникам данных.</summary>
    </member>
    <member name="P:System.Data.IDataParameter.DbType">
      <summary>Возвращает или устанавливает тип <see cref="T:System.Data.DbType" /> параметра.</summary>
      <returns>Одно из значений <see cref="T:System.Data.DbType" />. Значение по умолчанию — <see cref="F:System.Data.DbType.String" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Свойству не задано допустимое значение <see cref="T:System.Data.DbType" />.</exception>
    </member>
    <member name="P:System.Data.IDataParameter.Direction">
      <summary>Возвращает или задает значение, указывающее, является ли параметр только входным, только выходным, двунаправленным или параметром, возвращаемым хранимой процедурой.</summary>
      <returns>Одно из значений <see cref="T:System.Data.ParameterDirection" />. Значение по умолчанию — <see langword="Input" />.</returns>
      <exception cref="T:System.ArgumentException">Для свойства не задано одно из допустимых значений типа <see cref="T:System.Data.ParameterDirection" />.</exception>
    </member>
    <member name="P:System.Data.IDataParameter.IsNullable">
      <summary>Возвращает значение, указывающее, принимает ли этот параметр значения null.</summary>
      <returns>
        <see langword="true" />, если допускаются значения null. В противном случае — <see langword="false" />. Значение по умолчанию — <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.IDataParameter.ParameterName">
      <summary>Возвращает или задает имя таблицы для объекта <see cref="T:System.Data.IDataParameter" />.</summary>
      <returns>Имя <see cref="T:System.Data.IDataParameter" />. Значение по умолчанию - пустая строка.</returns>
    </member>
    <member name="P:System.Data.IDataParameter.SourceColumn">
      <summary>Возвращает или задает имя исходного столбца, сопоставленного с <see cref="T:System.Data.DataSet" /> и используемого для загрузки или возвращения значения <see cref="P:System.Data.IDataParameter.Value" />.</summary>
      <returns>Имя исходного столбца, сопоставленного с <see cref="T:System.Data.DataSet" />. Значение по умолчанию - пустая строка.</returns>
    </member>
    <member name="P:System.Data.IDataParameter.SourceVersion">
      <summary>Возвращает или задает значение <see cref="T:System.Data.DataRowVersion" /> при загрузке <see cref="P:System.Data.IDataParameter.Value" />.</summary>
      <returns>Одно из значений <see cref="T:System.Data.DataRowVersion" />. Значение по умолчанию — <see langword="Current" />.</returns>
      <exception cref="T:System.ArgumentException">Для свойства не задано одно из допустимых значений типа <see cref="T:System.Data.DataRowVersion" />.</exception>
    </member>
    <member name="P:System.Data.IDataParameter.Value">
      <summary>Возвращает или задает значение параметра.</summary>
      <returns>Объект <see cref="T:System.Object" />, который является значением параметра. Значение по умолчанию — null.</returns>
    </member>
    <member name="T:System.Data.IDataParameterCollection">
      <summary>Собирает все параметры, относящиеся к объекту Comm*******, и их сопоставления со столбцами <see cref="T:System.Data.DataSet" />. Реализация осуществляют поставщики данных .NET Framework, которые обращаются к источникам данных.</summary>
    </member>
    <member name="M:System.Data.IDataParameterCollection.Contains(System.String)">
      <summary>Возвращает значение, которое показывает, имеет ли параметр в коллекции указанное имя.</summary>
      <param name="parameterName">Имя параметра.</param>
      <returns>Значение <see langword="true" />, если коллекция содержит параметр. В противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.IDataParameterCollection.IndexOf(System.String)">
      <summary>Возвращает расположение элемента <see cref="T:System.Data.IDataParameter" /> в коллекции.</summary>
      <param name="parameterName">Имя параметра.</param>
      <returns>Отсчитываемое от нуля расположение элемента <see cref="T:System.Data.IDataParameter" /> в коллекции.</returns>
    </member>
    <member name="P:System.Data.IDataParameterCollection.Item(System.String)">
      <summary>Возвращает или задает параметр по указанному индексу.</summary>
      <param name="parameterName">Имя получаемого параметра.</param>
      <returns>Элемент <see cref="T:System.Object" />, расположенный по указанному индексу.</returns>
    </member>
    <member name="M:System.Data.IDataParameterCollection.RemoveAt(System.String)">
      <summary>Удаляет объект <see cref="T:System.Data.IDataParameter" /> из коллекции.</summary>
      <param name="parameterName">Имя параметра.</param>
    </member>
    <member name="T:System.Data.IDataReader">
      <summary>Предоставляет средства чтения одного или нескольких прямонаправленных потоков наборов результатов, полученных вследствие выполнения команды в источнике данных. Реализацию осуществляют поставщики данных .NET Framework, которые имеют доступ к реляционным базам данных.</summary>
    </member>
    <member name="M:System.Data.IDataReader.Close">
      <summary>Закрывает объект <see cref="T:System.Data.IDataReader" />.</summary>
    </member>
    <member name="P:System.Data.IDataReader.Depth">
      <summary>Возвращает значение, показывающее глубину вложенности для текущей строки.</summary>
      <returns>Уровень вложенности.</returns>
    </member>
    <member name="M:System.Data.IDataReader.GetSchemaTable">
      <summary>Возвращает объект <see cref="T:System.Data.DataTable" />, описывающий метаданные столбцов модуля чтения данных <see cref="T:System.Data.IDataReader" />.</summary>
      <returns>Объект <see cref="T:System.Data.DataTable" />, описывающий метаданные столбцов.</returns>
      <exception cref="T:System.InvalidOperationException">Объект <see cref="T:System.Data.IDataReader" /> закрыт.</exception>
    </member>
    <member name="P:System.Data.IDataReader.IsClosed">
      <summary>Возвращает значение, которое указывает, является ли модуль чтения закрытым.</summary>
      <returns>
        <see langword="true" />, если модуль чтения данных закрытый. В противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.IDataReader.NextResult">
      <summary>Перемещает модуль чтения данных к следующему результату при чтении результатов из пакета инструкций SQL.</summary>
      <returns>Значение <see langword="true" />, если имеются другие строки; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.IDataReader.Read">
      <summary>Перемещает <see cref="T:System.Data.IDataReader" /> к следующей записи.</summary>
      <returns>Значение <see langword="true" />, если имеются другие строки; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.IDataReader.RecordsAffected">
      <summary>Возвращает число строк, которые были изменены, вставлены или удалены инструкцией SQL.</summary>
      <returns>Число измененных, вставленных или удаленных строк. Значение 0, если строки не были затронуты или инструкция завершилась ошибкой. Значение -1 для инструкций SELECT.</returns>
    </member>
    <member name="T:System.Data.IDataRecord">
      <summary>Предоставляет доступ к значениям столбцов в каждой строке для <see langword="DataReader" />. Реализация осуществляют поставщики данных .NET Framework, которые обращаются к реляционным базам данных.</summary>
    </member>
    <member name="P:System.Data.IDataRecord.FieldCount">
      <summary>Возвращает число столбцов в текущей строке.</summary>
      <returns>Если отсутствует в допустимом наборе записей 0. В противном случае — число столбцов в текущей записи. Значение по умолчанию — -1.</returns>
    </member>
    <member name="M:System.Data.IDataRecord.GetBoolean(System.Int32)">
      <summary>Возвращает значение указанного столбца в виде логического значения.</summary>
      <param name="i">Порядковый номер столбца (от нуля).</param>
      <returns>Значение столбца.</returns>
      <exception cref="T:System.IndexOutOfRangeException">Переданный индекс находился вне диапазона от 0 до значения <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
    </member>
    <member name="M:System.Data.IDataRecord.GetByte(System.Int32)">
      <summary>Возвращает 8-битное целое число без знака для указанного столбца.</summary>
      <param name="i">Порядковый номер столбца (от нуля).</param>
      <returns>8-битное целое число без знака для указанного столбца.</returns>
      <exception cref="T:System.IndexOutOfRangeException">Переданный индекс находился вне диапазона от 0 до значения <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
    </member>
    <member name="M:System.Data.IDataRecord.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
      <summary>Считывает поток байтов из указанного смещения столбца в буфер в виде массива, начиная с заданного смещения буфера.</summary>
      <param name="i">Порядковый номер столбца (от нуля).</param>
      <param name="fieldOffset">Индекс в поле, с которого необходимо начать считывание.</param>
      <param name="buffer">Буфер, в который считывается поток байтов.</param>
      <param name="bufferoffset">Индекс для <paramref name="buffer" /> для запуска операции чтения.</param>
      <param name="length">Количество байтов, чтение которых необходимо выполнить.</param>
      <returns>Число фактически считанных байтов.</returns>
      <exception cref="T:System.IndexOutOfRangeException">Переданный индекс находился вне диапазона от 0 до значения <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
    </member>
    <member name="M:System.Data.IDataRecord.GetChar(System.Int32)">
      <summary>Возвращает значение символа для указанного столбца.</summary>
      <param name="i">Порядковый номер столбца (от нуля).</param>
      <returns>Значение символа указанного столбца.</returns>
      <exception cref="T:System.IndexOutOfRangeException">Переданный индекс находился вне диапазона от 0 до значения <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
    </member>
    <member name="M:System.Data.IDataRecord.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
      <summary>Считывает поток символов из указанного смещения столбца в буфер как массив, начиная с заданного смещения буфера.</summary>
      <param name="i">Порядковый номер столбца (от нуля).</param>
      <param name="fieldoffset">Индекс в строке, с которого начинается операция считывания.</param>
      <param name="buffer">Буфер, в который считывается поток байтов.</param>
      <param name="bufferoffset">Индекс для <paramref name="buffer" /> для запуска операции чтения.</param>
      <param name="length">Количество байтов, чтение которых необходимо выполнить.</param>
      <returns>Число фактически считанных символов.</returns>
      <exception cref="T:System.IndexOutOfRangeException">Переданный индекс находился вне диапазона от 0 до значения <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
    </member>
    <member name="M:System.Data.IDataRecord.GetData(System.Int32)">
      <summary>Возвращает <see cref="T:System.Data.IDataReader" /> для указанного порядкового номера столбца.</summary>
      <param name="i">Индекс поля, которое необходимо найти.</param>
      <returns>
        <see cref="T:System.Data.IDataReader" /> для указанного порядкового номера столбца.</returns>
      <exception cref="T:System.IndexOutOfRangeException">Переданный индекс находился вне диапазона от 0 до значения <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
    </member>
    <member name="M:System.Data.IDataRecord.GetDataTypeName(System.Int32)">
      <summary>Возвращает сведения о типе данных для указанного поля.</summary>
      <param name="i">Индекс поля, которое необходимо найти.</param>
      <returns>Сведения о типе данных для указанного поля.</returns>
      <exception cref="T:System.IndexOutOfRangeException">Переданный индекс находился вне диапазона от 0 до значения <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
    </member>
    <member name="M:System.Data.IDataRecord.GetDateTime(System.Int32)">
      <summary>Возвращает значение даты и времени для указанного поля.</summary>
      <param name="i">Индекс поля, которое необходимо найти.</param>
      <returns>Значение даты и времени данных для указанного поля.</returns>
      <exception cref="T:System.IndexOutOfRangeException">Переданный индекс находился вне диапазона от 0 до значения <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
    </member>
    <member name="M:System.Data.IDataRecord.GetDecimal(System.Int32)">
      <summary>Возвращает числовое значение с фиксированным расположением для указанного поля.</summary>
      <param name="i">Индекс поля, которое необходимо найти.</param>
      <returns>Числовое значение с фиксированным расположением для указанного поля.</returns>
      <exception cref="T:System.IndexOutOfRangeException">Переданный индекс находился вне диапазона от 0 до значения <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
    </member>
    <member name="M:System.Data.IDataRecord.GetDouble(System.Int32)">
      <summary>Возвращает число с плавающей запятой двойной точности для указанного поля.</summary>
      <param name="i">Индекс поля, которое необходимо найти.</param>
      <returns>Число с плавающей запятой двойной точности для указанного поля.</returns>
      <exception cref="T:System.IndexOutOfRangeException">Переданный индекс находился вне диапазона от 0 до значения <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
    </member>
    <member name="M:System.Data.IDataRecord.GetFieldType(System.Int32)">
      <summary>Возвращает сведения <see cref="T:System.Type" /> о типе <see cref="T:System.Object" />, который будет возвращен из <see cref="M:System.Data.IDataRecord.GetValue(System.Int32)" />.</summary>
      <param name="i">Индекс поля, которое необходимо найти.</param>
      <returns>Сведения <see cref="T:System.Type" /> о типе <see cref="T:System.Object" />, который будет возвращен из <see cref="M:System.Data.IDataRecord.GetValue(System.Int32)" />.</returns>
      <exception cref="T:System.IndexOutOfRangeException">Переданный индекс находился вне диапазона от 0 до значения <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
    </member>
    <member name="M:System.Data.IDataRecord.GetFloat(System.Int32)">
      <summary>Возвращает число с плавающей запятой одиночной точности для указанного поля.</summary>
      <param name="i">Индекс поля, которое необходимо найти.</param>
      <returns>Число с плавающей запятой одиночной точности для указанного поля.</returns>
      <exception cref="T:System.IndexOutOfRangeException">Переданный индекс находился вне диапазона от 0 до значения <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
    </member>
    <member name="M:System.Data.IDataRecord.GetGuid(System.Int32)">
      <summary>Возвращает значение GUID указанного поля.</summary>
      <param name="i">Индекс поля, которое необходимо найти.</param>
      <returns>Значение GUID указанного поля.</returns>
      <exception cref="T:System.IndexOutOfRangeException">Переданный индекс находился вне диапазона от 0 до значения <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
    </member>
    <member name="M:System.Data.IDataRecord.GetInt16(System.Int32)">
      <summary>Возвращает 16-битное целое число со знаком для указанного поля.</summary>
      <param name="i">Индекс поля, которое необходимо найти.</param>
      <returns>16-битное целое число со знаком для указанного поля.</returns>
      <exception cref="T:System.IndexOutOfRangeException">Переданный индекс находился вне диапазона от 0 до значения <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
    </member>
    <member name="M:System.Data.IDataRecord.GetInt32(System.Int32)">
      <summary>Возвращает 32-битное целое число со знаком для указанного поля.</summary>
      <param name="i">Индекс поля, которое необходимо найти.</param>
      <returns>32-битное целое число со знаком для указанного поля.</returns>
      <exception cref="T:System.IndexOutOfRangeException">Переданный индекс находился вне диапазона от 0 до значения <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
    </member>
    <member name="M:System.Data.IDataRecord.GetInt64(System.Int32)">
      <summary>Возвращает 64-битное целое число со знаком для указанного поля.</summary>
      <param name="i">Индекс поля, которое необходимо найти.</param>
      <returns>64-битное целое число со знаком для указанного поля.</returns>
      <exception cref="T:System.IndexOutOfRangeException">Переданный индекс находился вне диапазона от 0 до значения <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
    </member>
    <member name="M:System.Data.IDataRecord.GetName(System.Int32)">
      <summary>Возвращает имя для поля, которое необходимо найти.</summary>
      <param name="i">Индекс поля, которое необходимо найти.</param>
      <returns>Имя поля или пустая строка (""), если возвращаемое значение отсутствует.</returns>
      <exception cref="T:System.IndexOutOfRangeException">Переданный индекс находился вне диапазона от 0 до значения <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
    </member>
    <member name="M:System.Data.IDataRecord.GetOrdinal(System.String)">
      <summary>Возвращает индекс именованного поля.</summary>
      <param name="name">Имя искомого поля.</param>
      <returns>Индекс именованного поля.</returns>
    </member>
    <member name="M:System.Data.IDataRecord.GetString(System.Int32)">
      <summary>Получает значение строки заданного ключа.</summary>
      <param name="i">Индекс поля, которое необходимо найти.</param>
      <returns>Значение строки заданного ключа.</returns>
      <exception cref="T:System.IndexOutOfRangeException">Переданный индекс находился вне диапазона от 0 до значения <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
    </member>
    <member name="M:System.Data.IDataRecord.GetValue(System.Int32)">
      <summary>Возвращает значение указанного поля.</summary>
      <param name="i">Индекс поля, которое необходимо найти.</param>
      <returns>
        <see cref="T:System.Object" /> — будет содержать возвращаемое значение поля.</returns>
      <exception cref="T:System.IndexOutOfRangeException">Переданный индекс находился вне диапазона от 0 до значения <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
    </member>
    <member name="M:System.Data.IDataRecord.GetValues(System.Object[])">
      <summary>Заполняет массив объектов значениями столбцов текущей записи.</summary>
      <param name="values">Массив <see cref="T:System.Object" />, в который нужно копировать поля атрибутов.</param>
      <returns>Число экземпляров <see cref="T:System.Object" /> в массиве.</returns>
    </member>
    <member name="M:System.Data.IDataRecord.IsDBNull(System.Int32)">
      <summary>Возвращает логическое значение, показывающее, имеет ли указанное поле значение null.</summary>
      <param name="i">Индекс поля, которое необходимо найти.</param>
      <returns>Значение <see langword="true" />, если для указанного поля задано значение null. В противном случае — значение <see langword="false" />.</returns>
      <exception cref="T:System.IndexOutOfRangeException">Переданный индекс находился вне диапазона от 0 до значения <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
    </member>
    <member name="P:System.Data.IDataRecord.Item(System.Int32)">
      <summary>Возвращает столбец, находящийся по указанному индексу.</summary>
      <param name="i">Отсчитываемый от нуля индекс возвращаемого столбца.</param>
      <returns>Столбец, находящийся по указанному индексу, например <see cref="T:System.Object" />.</returns>
      <exception cref="T:System.IndexOutOfRangeException">Переданный индекс находился вне диапазона от 0 до значения <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
    </member>
    <member name="P:System.Data.IDataRecord.Item(System.String)">
      <summary>Возвращает столбец с указанным именем.</summary>
      <param name="name">Имя столбца, который нужно найти.</param>
      <returns>Столбец с указанным именем в качестве <see cref="T:System.Object" />.</returns>
      <exception cref="T:System.IndexOutOfRangeException">Столбец с указанным именем не найден.</exception>
    </member>
    <member name="T:System.Data.IDbComm*******">
      <summary>Представляет инструкцию SQL, выполняемую при подключении к источнику данных, которую реализуют поставщики данных платформы NET Framework, имеющие доступ к реляционным базам данных.</summary>
    </member>
    <member name="M:System.Data.IDbComm*******.Cancel">
      <summary>Пытается отменить выполнение <see cref="T:System.Data.IDbComm*******" />.</summary>
    </member>
    <member name="P:System.Data.IDbComm*******.Comm*******Text">
      <summary>Возвращает или задает текстовую команду для выполнения в отношении источника данных.</summary>
      <returns>Текстовая команда для выполнения. Значением по умолчанию является пустая строка ("").</returns>
    </member>
    <member name="P:System.Data.IDbComm*******.Comm*******Timeout">
      <summary>Возвращает или задает время ожидания перед завершением попытки выполнить команду и созданием ошибки.</summary>
      <returns>Время (в секундах) ожидания выполнения команды. Значение по умолчанию - 30 секунды.</returns>
      <exception cref="T:System.ArgumentException">Присвоенное значение свойства меньше 0.</exception>
    </member>
    <member name="P:System.Data.IDbComm*******.Comm*******Type">
      <summary>Указывает или определяет, как интерпретируется свойство <see cref="P:System.Data.IDbComm*******.Comm*******Text" />.</summary>
      <returns>Одно из значений перечисления <see cref="T:System.Data.Comm*******Type" />. Значение по умолчанию: <see langword="Text" />.</returns>
    </member>
    <member name="P:System.Data.IDbComm*******.Connection">
      <summary>Возвращает или задает объект <see cref="T:System.Data.IDbConnection" />, используемый этим экземпляром класса <see cref="T:System.Data.IDbComm*******" />.</summary>
      <returns>Подключение к источнику данных.</returns>
    </member>
    <member name="M:System.Data.IDbComm*******.CreateParameter">
      <summary>Создает новый экземпляр объекта <see cref="T:System.Data.IDbDataParameter" />.</summary>
      <returns>Объект <see langword="IDbDataParameter" />.</returns>
    </member>
    <member name="M:System.Data.IDbComm*******.ExecuteNonQuery">
      <summary>Выполняет инструкцию SQL для объекта <see langword="Connection" /> поставщика данных .NET Framework и возвращает число задействованных строк.</summary>
      <returns>Число обработанных строк.</returns>
      <exception cref="T:System.InvalidOperationException">Подключение не существует.  

или - 
Соединение не открыто.</exception>
    </member>
    <member name="M:System.Data.IDbComm*******.ExecuteReader">
      <summary>Выполняет <see cref="P:System.Data.IDbComm*******.Comm*******Text" /> в <see cref="P:System.Data.IDbComm*******.Connection" /> и создает <see cref="T:System.Data.IDataReader" />.</summary>
      <returns>Объект <see cref="T:System.Data.IDataReader" />.</returns>
    </member>
    <member name="M:System.Data.IDbComm*******.ExecuteReader(System.Data.Comm*******Behavior)">
      <summary>Выполняет <see cref="P:System.Data.IDbComm*******.Comm*******Text" /> в <see cref="P:System.Data.IDbComm*******.Connection" /> и строит <see cref="T:System.Data.IDataReader" /> с помощью одного из значений <see cref="T:System.Data.Comm*******Behavior" />.</summary>
      <param name="behavior">Одно из значений перечисления <see cref="T:System.Data.Comm*******Behavior" />.</param>
      <returns>Объект <see cref="T:System.Data.IDataReader" />.</returns>
    </member>
    <member name="M:System.Data.IDbComm*******.ExecuteScalar">
      <summary>Выполняет запрос и возвращает первый столбец первой строки результирующего набора, возвращаемого запросом. Дополнительные столбцы или строки не обрабатываются.</summary>
      <returns>Первый столбец или первая строка в результирующем наборе.</returns>
    </member>
    <member name="P:System.Data.IDbComm*******.Parameters">
      <summary>Возвращает набор <see cref="T:System.Data.IDataParameterCollection" />.</summary>
      <returns>Параметры инструкции SQL или хранимой процедуры.</returns>
    </member>
    <member name="M:System.Data.IDbComm*******.Prepare">
      <summary>Создает подготовленную (или скомпилированную) версию команды в источнике данных.</summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Data.OleDb.OleDbComm*******.Connection" /> не указывается.  

или - 
Свойство <see cref="P:System.Data.OleDb.OleDbComm*******.Connection" /> не является методом <see cref="M:System.Data.OleDb.OleDbConnection.Open" />.</exception>
    </member>
    <member name="P:System.Data.IDbComm*******.Transaction">
      <summary>Возвращает или задает транзакцию, в рамках которой выполняется объект <see langword="Comm*******" /> поставщика данных .NET Framework.</summary>
      <returns>выполняется объект <see langword="Comm*******" /> поставщика данных .NET Framework. Значение по умолчанию — <see langword="null" />.</returns>
    </member>
    <member name="P:System.Data.IDbComm*******.UpdatedRowSource">
      <summary>Возвращает или задает способ применения результатов команды к объекту <see cref="T:System.Data.DataRow" /> при использовании метода <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" /> объекта <see cref="T:System.Data.Common.DbDataAdapter" />.</summary>
      <returns>Одно из значений перечисления <see cref="T:System.Data.UpdateRowSource" />. Значение по умолчанию — <see langword="Both" />, если команда не создается автоматически. Значение по умолчанию — <see langword="None" />.</returns>
      <exception cref="T:System.ArgumentException">Введенное значение не являлось одним из значений <see cref="T:System.Data.UpdateRowSource" />.</exception>
    </member>
    <member name="T:System.Data.IDbConnection">
      <summary>Представляет открытое подключение к источнику данных и реализуется поставщиками данных платформы NET Framework, которые имеют доступ к реляционным базам данных.</summary>
    </member>
    <member name="M:System.Data.IDbConnection.BeginTransaction">
      <summary>Начинает транзакцию базы данных.</summary>
      <returns>Объект, представляющий новую транзакцию.</returns>
    </member>
    <member name="M:System.Data.IDbConnection.BeginTransaction(System.Data.IsolationLevel)">
      <summary>Начинает транзакцию базы данных с указанным значением <see cref="T:System.Data.IsolationLevel" />.</summary>
      <param name="il">Одно из значений перечисления <see cref="T:System.Data.IsolationLevel" />.</param>
      <returns>Объект, представляющий новую транзакцию.</returns>
    </member>
    <member name="M:System.Data.IDbConnection.ChangeDatabase(System.String)">
      <summary>Изменяет текущую базу данных для открытого объекта <see langword="Connection" />.</summary>
      <param name="databaseName">Имя базы данных, которая предназначена для использования вместо текущей базы данных.</param>
    </member>
    <member name="M:System.Data.IDbConnection.Close">
      <summary>Закрывает соединение с базой данных.</summary>
    </member>
    <member name="P:System.Data.IDbConnection.ConnectionString">
      <summary>Получает или задает строку, используемую для открытия базы данных.</summary>
      <returns>Строка, содержащая параметры подключения.</returns>
    </member>
    <member name="P:System.Data.IDbConnection.ConnectionTimeout">
      <summary>Получает время ожидания при попытке установки подключения, по истечении которого попытка подключения завершается и создается ошибка.</summary>
      <returns>Время (в секундах), в течение которого должно производиться ожидание открытия соединения. Значение по умолчанию - 15 секунды.</returns>
    </member>
    <member name="M:System.Data.IDbConnection.CreateComm*******">
      <summary>Создает и возвращает объект Comm*******, связанный с подключением.</summary>
      <returns>Объект Comm*******, связанный с подключением.</returns>
    </member>
    <member name="P:System.Data.IDbConnection.Database">
      <summary>Получает имя текущей базы данных или базы данных, которая будет использоваться после открытия подключения.</summary>
      <returns>Имя текущей базы данных или базы данных, которая будет использоваться после открытия подключения. Значение по умолчанию - пустая строка.</returns>
    </member>
    <member name="M:System.Data.IDbConnection.Open">
      <summary>Устанавливает подключение к базе данных с параметрами, указанными в свойстве <see langword="ConnectionString" /> объекта Connection для определенного поставщика.</summary>
    </member>
    <member name="P:System.Data.IDbConnection.State">
      <summary>Возвращает текущее состояние подключения.</summary>
      <returns>Одно из значений перечисления <see cref="T:System.Data.ConnectionState" />.</returns>
    </member>
    <member name="T:System.Data.IDbDataAdapter">
      <summary>Представляет набор связанных с командой свойств, которые используются для заполнения <see cref="T:System.Data.DataSet" /> и обновления источника данных, реализуемый поставщиками данных .NET Framework, осуществляющими доступ к реляционным базам данных.</summary>
    </member>
    <member name="P:System.Data.IDbDataAdapter.DeleteComm*******">
      <summary>Возвращает или задает оператор SQL для удаления записей из набора данных.</summary>
      <returns>Интерфейс <see cref="T:System.Data.IDbComm*******" />, используемый во время применения метода <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> для удаления записей в источнике данных, соответствующих удаленным строкам в наборе данных.</returns>
    </member>
    <member name="P:System.Data.IDbDataAdapter.InsertComm*******">
      <summary>Возвращает или задает оператор SQL для вставки новых записей в источник данных.</summary>
      <returns>Интерфейс <see cref="T:System.Data.IDbComm*******" />, используемый во время применения метода <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> для вставки записей в источник данных, соответствующих новым строкам в наборе данных.</returns>
    </member>
    <member name="P:System.Data.IDbDataAdapter.SelectComm*******">
      <summary>Возвращает или задает оператор SQL для выбора записей в источнике данных.</summary>
      <returns>Интерфейс <see cref="T:System.Data.IDbComm*******" />, используемый во время применения метода <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> для выбора записей из источника данных для размещения в наборе данных.</returns>
    </member>
    <member name="P:System.Data.IDbDataAdapter.UpdateComm*******">
      <summary>Возвращает или задает оператор SQL для обновления записей в источнике данных.</summary>
      <returns>Интерфейс <see cref="T:System.Data.IDbComm*******" />, используемый во время применения метода <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> для обновления записей в источнике данных, соответствующих измененным строкам в наборе данных.</returns>
    </member>
    <member name="T:System.Data.IDbDataParameter">
      <summary>Используется в конструкторах данных Visual Basic .NET для представления параметра в объект Comm******* и при необходимости его сопоставления со столбцами <see cref="T:System.Data.DataSet" />.</summary>
    </member>
    <member name="P:System.Data.IDbDataParameter.Precision">
      <summary>Указывает точность числовых параметров.</summary>
      <returns>Максимальное число разрядов, используемых для представления свойства Value объекта Parameter поставщика данных. Значение по умолчанию — 0. Оно указывает, что точность значения Value задает поставщик данных.</returns>
    </member>
    <member name="P:System.Data.IDbDataParameter.Scale">
      <summary>Указывает масштаб числовых параметров.</summary>
      <returns>Число десятичных разрядов, до которых вычисляется значение <see cref="P:System.Data.OleDb.OleDbParameter.Value" />. Значение по умолчанию — 0.</returns>
    </member>
    <member name="P:System.Data.IDbDataParameter.Size">
      <summary>Размер параметра.</summary>
      <returns>Максимальная длина данных (в байтах) в столбце. Значение по умолчанию определяется исходя из значения параметра.</returns>
    </member>
    <member name="T:System.Data.IDbTransaction">
      <summary>Представляет транзакцию, выполняемую с источником данных; реализуется поставщиками данных платформы NET Framework, у которых есть доступ к реляционным базам данных.</summary>
    </member>
    <member name="M:System.Data.IDbTransaction.Commit">
      <summary>Фиксирует транзакцию базы данных.</summary>
      <exception cref="T:System.Exception">Ошибка при попытке фиксации транзакции.</exception>
      <exception cref="T:System.InvalidOperationException">Транзакция уже зафиксирована, или выполнен откат.  

или - 
Соединение закрыто.</exception>
    </member>
    <member name="P:System.Data.IDbTransaction.Connection">
      <summary>Указывает объект Connection для связывания с транзакцией.</summary>
      <returns>Объект Connection для связывания с транзакцией.</returns>
    </member>
    <member name="P:System.Data.IDbTransaction.IsolationLevel">
      <summary>Указывает <see cref="T:System.Data.IsolationLevel" /> для этой транзакции.</summary>
      <returns>
        <see cref="T:System.Data.IsolationLevel" /> для этой транзакции. Значение по умолчанию: <see langword="ReadCommitted" />.</returns>
    </member>
    <member name="M:System.Data.IDbTransaction.Rollback">
      <summary>Откатывает транзакцию из состояния ожидания.</summary>
      <exception cref="T:System.Exception">Ошибка при попытке фиксации транзакции.</exception>
      <exception cref="T:System.InvalidOperationException">Транзакция уже зафиксирована, или выполнен откат.  

или - 
Соединение закрыто.</exception>
    </member>
    <member name="T:System.Data.InRowChangingEventException">
      <summary>Представляет исключение, которое выдается при вызове метода <see cref="M:System.Data.DataRow.EndEdit" /> в событии <see cref="E:System.Data.DataTable.RowChanging" />.</summary>
    </member>
    <member name="M:System.Data.InRowChangingEventException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.InRowChangingEventException" />.</summary>
    </member>
    <member name="M:System.Data.InRowChangingEventException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.InRowChangingEventException" /> со сведениями о сериализации.</summary>
      <param name="info">Данные, необходимые для сериализации или десериализации объекта.</param>
      <param name="context">Описание источника и назначения заданного сериализованного потока.</param>
    </member>
    <member name="M:System.Data.InRowChangingEventException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.InRowChangingEventException" /> с заданной строкой.</summary>
      <param name="s">Строка, отображаемая при возникновении исключения.</param>
    </member>
    <member name="M:System.Data.InRowChangingEventException.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.InRowChangingEventException" /> указанным сообщением об ошибке и ссылкой на внутреннее исключение, вызвавшее данное исключение.</summary>
      <param name="message">Сообщение об ошибке, указывающее причину создания исключения.</param>
      <param name="innerException">Исключение, вызвавшее текущее исключение, или пустая ссылка (<see langword="Nothing" /> в Visual Basic), если внутреннее исключение не задано.</param>
    </member>
    <member name="T:System.Data.InternalDataCollectionBase">
      <summary>Предоставляет базовую функциональность для создания коллекций.</summary>
    </member>
    <member name="M:System.Data.InternalDataCollectionBase.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.InternalDataCollectionBase" />.</summary>
    </member>
    <member name="M:System.Data.InternalDataCollectionBase.CopyTo(System.Array,System.Int32)">
      <summary>Копирует все элементы текущего объекта <see cref="T:System.Data.InternalDataCollectionBase" /> в одномерный массив <see cref="T:System.Array" />, начиная с указанного индекса <see cref="T:System.Data.InternalDataCollectionBase" />.</summary>
      <param name="ar">Одномерный массив <see cref="T:System.Array" />, в который копируются элементы текущего объекта <see cref="T:System.Data.InternalDataCollectionBase" />.</param>
      <param name="index">Индекс целевого массива <see cref="T:System.Array" />, с которого начинается копирование.</param>
    </member>
    <member name="P:System.Data.InternalDataCollectionBase.Count">
      <summary>Возвращает общее число элементов в коллекции.</summary>
      <returns>Общее число элементов в коллекции.</returns>
    </member>
    <member name="M:System.Data.InternalDataCollectionBase.GetEnumerator">
      <summary>Возвращает объект <see cref="T:System.Collections.IEnumerator" /> для коллекции.</summary>
      <returns>Объект <see cref="T:System.Collections.IEnumerator" /> для коллекции.</returns>
    </member>
    <member name="P:System.Data.InternalDataCollectionBase.IsReadOnly">
      <summary>Возвращает значение, которое определяет, является ли коллекция <see cref="T:System.Data.InternalDataCollectionBase" /> доступной только для чтения.</summary>
      <returns>Значение <see langword="true" />, если коллекция доступна только для чтения; в противном случае — значение <see langword="false" />. Значение по умолчанию — <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.InternalDataCollectionBase.IsSynchronized">
      <summary>Возвращает значение, указывающее, синхронизирована ли коллекция <see cref="T:System.Data.InternalDataCollectionBase" />.</summary>
      <returns>Значение <see langword="true" />, если коллекция синхронизирована; в противном случае — значение <see langword="false" />. Значение по умолчанию — <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.InternalDataCollectionBase.List">
      <summary>Возвращает элементы коллекции в виде списка.</summary>
      <returns>Объект <see cref="T:System.Collections.ArrayList" />, содержащий коллекцию.</returns>
    </member>
    <member name="P:System.Data.InternalDataCollectionBase.SyncRoot">
      <summary>Возвращает объект, который можно использовать для синхронизации коллекции.</summary>
      <returns>Объект <see cref="T:System.Object" />, который используется для синхронизации коллекции.</returns>
    </member>
    <member name="T:System.Data.InvalidConstraintException">
      <summary>Представляет исключение, возникающее при неправильной попытке создания отношения или доступа к нему.</summary>
    </member>
    <member name="M:System.Data.InvalidConstraintException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.InvalidConstraintException" />.</summary>
    </member>
    <member name="M:System.Data.InvalidConstraintException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.InvalidConstraintException" /> со сведениями о сериализации.</summary>
      <param name="info">Данные, необходимые для сериализации или десериализации объекта.</param>
      <param name="context">Описание источника и назначения заданного сериализованного потока.</param>
    </member>
    <member name="M:System.Data.InvalidConstraintException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.InvalidConstraintException" /> с заданной строкой.</summary>
      <param name="s">Строка, отображаемая при возникновении исключения.</param>
    </member>
    <member name="M:System.Data.InvalidConstraintException.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.InvalidConstraintException" /> указанным сообщением об ошибке и ссылкой на внутреннее исключение, вызвавшее данное исключение.</summary>
      <param name="message">Сообщение об ошибке, указывающее причину создания исключения.</param>
      <param name="innerException">Исключение, вызвавшее текущее исключение, или пустая ссылка (<see langword="Nothing" /> в Visual Basic), если внутреннее исключение не задано.</param>
    </member>
    <member name="T:System.Data.InvalidExpressionException">
      <summary>Представляет собой исключение, возникающее при попытке добавления столбца <see cref="T:System.Data.DataColumn" />, содержащего недопустимое выражение <see cref="P:System.Data.DataColumn.Expression" />, к коллекции <see cref="T:System.Data.DataColumnCollection" />.</summary>
    </member>
    <member name="M:System.Data.InvalidExpressionException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.InvalidExpressionException" />.</summary>
    </member>
    <member name="M:System.Data.InvalidExpressionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.InvalidExpressionException" /> со свойствами <see cref="T:System.Runtime.Serialization.SerializationInfo" /> и <see cref="T:System.Runtime.Serialization.StreamingContext" />.</summary>
      <param name="info">Данные, необходимые для сериализации или десериализации объекта.</param>
      <param name="context">Источник и назначение данного сериализованного потока.</param>
    </member>
    <member name="M:System.Data.InvalidExpressionException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.InvalidExpressionException" /> с заданной строкой.</summary>
      <param name="s">Строка, отображаемая при возникновении исключения.</param>
    </member>
    <member name="M:System.Data.InvalidExpressionException.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.InvalidExpressionException" /> указанным сообщением об ошибке и ссылкой на внутреннее исключение, вызвавшее данное исключение.</summary>
      <param name="message">Сообщение об ошибке, указывающее причину создания исключения.</param>
      <param name="innerException">Исключение, вызвавшее текущее исключение, или пустая ссылка (<see langword="Nothing" /> в Visual Basic), если внутреннее исключение не задано.</param>
    </member>
    <member name="T:System.Data.IsolationLevel">
      <summary>Указывает режим блокировки транзакций для подключения.</summary>
    </member>
    <member name="F:System.Data.IsolationLevel.Chaos">
      <summary>Ожидающие изменения более изолированных транзакций не могут быть перезаписаны.</summary>
    </member>
    <member name="F:System.Data.IsolationLevel.ReadCommitted">
      <summary>В процессе чтения данных совмещаемые блокировки сохраняются, чтобы избежать чтения "грязных" данных, однако данные могут быть изменены до окончания транзакции, что может стать причиной неповторяемого чтения или появления фиктивных данных.</summary>
    </member>
    <member name="F:System.Data.IsolationLevel.ReadUncommitted">
      <summary>Чтение "грязных" данных возможно, что означает отсутствие совмещаемых и монопольных блокировок.</summary>
    </member>
    <member name="F:System.Data.IsolationLevel.RepeatableRead">
      <summary>Блокировки помещаются на все данные, используемые в запросе, что предотвращает обновление данных другими пользователями. Предотвращает неповторяемое чтение, однако появление фиктивных строк остается возможным.</summary>
    </member>
    <member name="F:System.Data.IsolationLevel.Serializable">
      <summary>Блокировка диапазона устанавливается для объекта <see cref="T:System.Data.DataSet" />, что предотвращает обновление или ставку строк другими пользователями в набор данных до завершения транзакции.</summary>
    </member>
    <member name="F:System.Data.IsolationLevel.Snapshot">
      <summary>Уменьшает блокировку, сохраняя версию данных, которую приложение может считывать в то время, когда другое приложение изменяет те же самые данные. Указывает, что из одной транзакции пользователь не может просматривать изменения, сделанные в других транзакциях, даже если он запросит их повторно.</summary>
    </member>
    <member name="F:System.Data.IsolationLevel.Unspecified">
      <summary>Используется уровень изоляции, отличный от указанного, однако этот уровень не может быть определен.</summary>
    </member>
    <member name="T:System.Data.ITableMapping">
      <summary>Связывает исходную таблицу с таблицей в <see cref="T:System.Data.DataSet" /> и реализуется классом <see cref="T:System.Data.Common.DataTableMapping" />, который обычно используется поставщиками данных .NET Framework.</summary>
    </member>
    <member name="P:System.Data.ITableMapping.ColumnMappings">
      <summary>Получает производной коллекции <see cref="T:System.Data.Common.DataColumnMappingCollection" /> для объекта <see cref="T:System.Data.DataTable" />.</summary>
      <returns>Коллекция сопоставлений столбцов данных.</returns>
    </member>
    <member name="P:System.Data.ITableMapping.DataSetTable">
      <summary>Возвращает или задает имя таблицы в <see cref="T:System.Data.DataSet" /> без учета регистра.</summary>
      <returns>Имя таблицы в <see cref="T:System.Data.DataSet" /> без учета регистра.</returns>
    </member>
    <member name="P:System.Data.ITableMapping.SourceTable">
      <summary>Возвращает или задает имя исходной таблицы с учетом регистра.</summary>
      <returns>Имя исходной таблицы с учетом регистра.</returns>
    </member>
    <member name="T:System.Data.ITableMappingCollection">
      <summary>Содержит коллекцию объектов TableMapping и реализуется коллекцией <see cref="T:System.Data.Common.DataTableMappingCollection" />, которая обычно используется поставщиками данных .NET Framework.</summary>
    </member>
    <member name="M:System.Data.ITableMappingCollection.Add(System.String,System.String)">
      <summary>Добавляет сопоставление таблицы в коллекцию.</summary>
      <param name="sourceTableName">Имя исходной таблицы с учетом регистра.</param>
      <param name="dataSetTableName">Имя таблицы <see cref="T:System.Data.DataSet" />.</param>
      <returns>Ссылка на вновь сопоставленный объект <see cref="T:System.Data.ITableMapping" />.</returns>
    </member>
    <member name="M:System.Data.ITableMappingCollection.Contains(System.String)">
      <summary>Получает значение, указывающее на наличие в коллекции сопоставления таблицы с указанным именем исходной таблицы.</summary>
      <param name="sourceTableName">Имя исходной таблицы с учетом регистра.</param>
      <returns>Значение <see langword="true" />, если сопоставление таблицы с указанным именем исходной таблицы существует; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.ITableMappingCollection.GetByDataSetTable(System.String)">
      <summary>Получает объект TableMapping с указанным именем таблицы <see cref="T:System.Data.DataSet" />.</summary>
      <param name="dataSetTableName">Имя таблицы <see langword="DataSet" /> в коллекции.</param>
      <returns>Объект TableMapping с указанным именем таблицы <see langword="DataSet" />.</returns>
    </member>
    <member name="M:System.Data.ITableMappingCollection.IndexOf(System.String)">
      <summary>Получает местоположение объекта <see cref="T:System.Data.ITableMapping" /> в коллекции.</summary>
      <param name="sourceTableName">Имя исходной таблицы с учетом регистра.</param>
      <returns>Получает местоположение объекта <see cref="T:System.Data.ITableMapping" /> в коллекции (отсчет ведется от нуля).</returns>
    </member>
    <member name="P:System.Data.ITableMappingCollection.Item(System.String)">
      <summary>Возвращает или задает экземпляр класса <see cref="T:System.Data.ITableMapping" /> с указанным именем <see cref="P:System.Data.ITableMapping.SourceTable" />.</summary>
      <param name="index">Имя <see langword="SourceTable" /> объекта <see cref="T:System.Data.ITableMapping" />.</param>
      <returns>Экземпляр класса <see cref="T:System.Data.ITableMapping" /> с указанным именем <see langword="SourceTable" />.</returns>
    </member>
    <member name="M:System.Data.ITableMappingCollection.RemoveAt(System.String)">
      <summary>Удаляет объект <see cref="T:System.Data.ITableMapping" /> с указанным именем <see cref="P:System.Data.ITableMapping.SourceTable" /> из коллекции.</summary>
      <param name="sourceTableName">Имя <see langword="SourceTable" /> с учетом регистра.</param>
    </member>
    <member name="T:System.Data.KeyRestrictionBehavior">
      <summary>Определяет список параметров строки подключения, определяемых свойством <see langword="KeyRestrictions" />, которые могут быть разрешены или запрещены.</summary>
    </member>
    <member name="F:System.Data.KeyRestrictionBehavior.AllowOnly">
      <summary>По умолчанию. Определяет только разрешенные дополнительные параметры строки подключения.</summary>
    </member>
    <member name="F:System.Data.KeyRestrictionBehavior.PreventUsage">
      <summary>Определяет запрещенные дополнительные параметры строки подключения.</summary>
    </member>
    <member name="T:System.Data.LoadOption">
      <summary>Управляет применением значений из источника данных в существующих строках при использовании метода <see cref="Overload:System.Data.DataTable.Load" /> или <see cref="Overload:System.Data.DataSet.Load" />.</summary>
    </member>
    <member name="F:System.Data.LoadOption.OverwriteChanges">
      <summary>Входные значения для этой строки будут записаны как в текущее значение, так и в исходное значение данных для каждого столбца.</summary>
    </member>
    <member name="F:System.Data.LoadOption.PreserveChanges">
      <summary>Входные значения для этой строки будут записаны в исходные значения данных для каждого столбца. Текущая версия данных в столбце не изменяется.  Это значение по умолчанию.</summary>
    </member>
    <member name="F:System.Data.LoadOption.Upsert">
      <summary>Входные значения для этой строки будут записаны в текущее значение данных для каждого столбца. Исходная версия данных в столбце не изменяется.</summary>
    </member>
    <member name="T:System.Data.MappingType">
      <summary>Указывает на порядок сопоставления <see cref="T:System.Data.DataColumn" />.</summary>
    </member>
    <member name="F:System.Data.MappingType.Attribute">
      <summary>Столбец сопоставляется с атрибутом XML.</summary>
    </member>
    <member name="F:System.Data.MappingType.Element">
      <summary>Столбец сопоставляется с элементом XML.</summary>
    </member>
    <member name="F:System.Data.MappingType.Hidden">
      <summary>Столбец сопоставляется с внутренней структурой.</summary>
    </member>
    <member name="F:System.Data.MappingType.SimpleContent">
      <summary>Столбец сопоставляется с узелом <see cref="T:System.Xml.XmlText" />.</summary>
    </member>
    <member name="T:System.Data.MergeFailedEventArgs">
      <summary>Происходит, если целевой и исходный объекты <see langword="DataRow" /> имеют одинаковое значение первичного ключа и если свойство <see cref="P:System.Data.DataSet.EnforceConstraints" /> имеет значение true.</summary>
    </member>
    <member name="M:System.Data.MergeFailedEventArgs.#ctor(System.Data.DataTable,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.MergeFailedEventArgs" /> с <see cref="T:System.Data.DataTable" /> и описанием конфликта слияния.</summary>
      <param name="table">Объект <see cref="T:System.Data.DataTable" />.</param>
      <param name="conflict">Описание конфликта слияния.</param>
    </member>
    <member name="P:System.Data.MergeFailedEventArgs.Conflict">
      <summary>Возвращает описание конфликта слияния.</summary>
      <returns>Описание конфликта слияния.</returns>
    </member>
    <member name="P:System.Data.MergeFailedEventArgs.Table">
      <summary>Возвращает объект <see cref="T:System.Data.DataTable" />.</summary>
      <returns>Объект <see cref="T:System.Data.DataTable" />.</returns>
    </member>
    <member name="T:System.Data.MergeFailedEventH*******ler">
      <summary>Представляет метод, обрабатывающий событие <see cref="E:System.Data.DataSet.MergeFailed" />.</summary>
      <param name="sender">Источник события.</param>
      <param name="e">Данные для события.</param>
    </member>
    <member name="T:System.Data.MissingMappingAction">
      <summary>Определяет действие, которое выполняется при отсутствии сопоставления в исходной таблице или исходном столбце.</summary>
    </member>
    <member name="F:System.Data.MissingMappingAction.Error">
      <summary>Если отсутствует сопоставление указанного столбца, создается исключение <see cref="T:System.InvalidOperationException" />.</summary>
    </member>
    <member name="F:System.Data.MissingMappingAction.Ignore">
      <summary>Столбец или таблица, для которых сопоставление отсутствует, игнорируются. Возвращает <see langword="null" />.</summary>
    </member>
    <member name="F:System.Data.MissingMappingAction.Passthrough">
      <summary>Создается исходный столбец или исходная таблица, которая добавляется к <see cref="T:System.Data.DataSet" /> с использованием исходного имени.</summary>
    </member>
    <member name="T:System.Data.MissingPrimaryKeyException">
      <summary>Представляет собой исключение, выдаваемое при попытке доступа к строке таблицы, не имеющей первичного ключа.</summary>
    </member>
    <member name="M:System.Data.MissingPrimaryKeyException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.MissingPrimaryKeyException" />.</summary>
    </member>
    <member name="M:System.Data.MissingPrimaryKeyException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.MissingPrimaryKeyException" /> со сведениями о сериализации.</summary>
      <param name="info">Данные, необходимые для сериализации или десериализации объекта.</param>
      <param name="context">Описание источника и назначения заданного сериализованного потока.</param>
    </member>
    <member name="M:System.Data.MissingPrimaryKeyException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.MissingPrimaryKeyException" /> с заданной строкой.</summary>
      <param name="s">Строка, отображаемая при возникновении исключения.</param>
    </member>
    <member name="M:System.Data.MissingPrimaryKeyException.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.MissingPrimaryKeyException" /> указанным сообщением об ошибке и ссылкой на внутреннее исключение, вызвавшее данное исключение.</summary>
      <param name="message">Сообщение об ошибке, указывающее причину создания исключения.</param>
      <param name="innerException">Исключение, вызвавшее текущее исключение, или пустая ссылка (<see langword="Nothing" /> в Visual Basic), если внутреннее исключение не задано.</param>
    </member>
    <member name="T:System.Data.MissingSchemaAction">
      <summary>Определяет действие, выполняемое при добавлении данных к <see cref="T:System.Data.DataSet" />, если необходимые объекты <see cref="T:System.Data.DataTable" /> или <see cref="T:System.Data.DataColumn" /> отсутствуют.</summary>
    </member>
    <member name="F:System.Data.MissingSchemaAction.Add">
      <summary>Добавляет необходимые столбцы для завершения схемы.</summary>
    </member>
    <member name="F:System.Data.MissingSchemaAction.AddWithKey">
      <summary>Добавляет необходимые столбцы и сведения о первичном ключе для завершения схемы. Дополнительные сведения о порядке добавления сведений о первичном ключе к <see cref="T:System.Data.DataTable" /> см. в описании метода <see cref="M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)" />. Для правильного функционирования <see langword="AddWithKey" /> с поставщиком данных .NET Framework для Microsoft OLE DB необходимо, чтобы собственный поставщик Microsoft OLE DB получил необходимые сведения о первичном ключе путем задания свойства DBPROP_UNIQUEROWS и определил столбцы первичного ключа с помощью проверки свойства DBCOLUMN_KEYCOLUMN в IColumnsRowset. В качестве альтернативного варианта пользователь может явно задать ограничения первичного ключа для каждого объекта <see cref="T:System.Data.DataTable" />. Это гарантирует, что при добавлении записей, соответствующих уже имеющимся записям, они будут обновляться, а не дописываться в конец. При использовании метода <see langword="AddWithKey" /> поставщик данных .NET Framework для SQL Server добавляет предложение FOR BROWSE к выполняемому оператору. Пользователь должен быть осведомлен о возможных побочных эффектах, например о проблемах, возникающих при использовании операторов SET FMTONLY ON. Дополнительные сведения см. в разделе SET FMTONLY (Transact-SQL).</summary>
    </member>
    <member name="F:System.Data.MissingSchemaAction.Error">
      <summary>Если отсутствует сопоставление указанного столбца, создается исключение <see cref="T:System.InvalidOperationException" />.</summary>
    </member>
    <member name="F:System.Data.MissingSchemaAction.Ignore">
      <summary>Игнорирует лишние столбцы.</summary>
    </member>
    <member name="T:System.Data.NoNullAllowedException">
      <summary>Представляет исключение, которое создается при попытке вставить значение NULL в столбец, где <see cref="P:System.Data.DataColumn.AllowDBNull" /> имеет значение <see langword="false" />.</summary>
    </member>
    <member name="M:System.Data.NoNullAllowedException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.NoNullAllowedException" />.</summary>
    </member>
    <member name="M:System.Data.NoNullAllowedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.NoNullAllowedException" /> со сведениями о сериализации.</summary>
      <param name="info">Данные, необходимые для сериализации или десериализации объекта.</param>
      <param name="context">Описание источника и назначения заданного сериализованного потока.</param>
    </member>
    <member name="M:System.Data.NoNullAllowedException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.NoNullAllowedException" /> с заданной строкой.</summary>
      <param name="s">Строка, отображаемая при возникновении исключения.</param>
    </member>
    <member name="M:System.Data.NoNullAllowedException.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.NoNullAllowedException" /> указанным сообщением об ошибке и ссылкой на внутреннее исключение, вызвавшее данное исключение.</summary>
      <param name="message">Сообщение об ошибке, указывающее причину создания исключения.</param>
      <param name="innerException">Исключение, вызвавшее текущее исключение, или пустая ссылка (<see langword="Nothing" /> в Visual Basic), если внутреннее исключение не задано.</param>
    </member>
    <member name="T:System.Data.Odbc.OdbcComm*******">
      <summary>Представляет инструкцию SQL или хранимую процедуру, выполняемую с источником данных. Этот класс не наследуется.</summary>
    </member>
    <member name="M:System.Data.Odbc.OdbcComm*******.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.Odbc.OdbcComm*******" />.</summary>
    </member>
    <member name="M:System.Data.Odbc.OdbcComm*******.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.Odbc.OdbcComm*******" /> текстом запроса.</summary>
      <param name="cmdText">Текст запроса.</param>
    </member>
    <member name="M:System.Data.Odbc.OdbcComm*******.#ctor(System.String,System.Data.Odbc.OdbcConnection)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.Odbc.OdbcComm*******" /> с текстом запроса и объектом <see cref="T:System.Data.Odbc.OdbcConnection" />.</summary>
      <param name="cmdText">Текст запроса.</param>
      <param name="connection">Объект <see cref="T:System.Data.Odbc.OdbcConnection" />, представляющий подключение к источнику данных.</param>
    </member>
    <member name="M:System.Data.Odbc.OdbcComm*******.#ctor(System.String,System.Data.Odbc.OdbcConnection,System.Data.Odbc.OdbcTransaction)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.Odbc.OdbcComm*******" /> с текстом запроса, объектом <see cref="T:System.Data.Odbc.OdbcConnection" /> и транзакцией <see cref="P:System.Data.Odbc.OdbcComm*******.Transaction" />.</summary>
      <param name="cmdText">Текст запроса.</param>
      <param name="connection">Объект <see cref="T:System.Data.Odbc.OdbcConnection" />, представляющий подключение к источнику данных.</param>
      <param name="transaction">Транзакция, в которой выполняется <see cref="T:System.Data.Odbc.OdbcComm*******" />.</param>
    </member>
    <member name="M:System.Data.Odbc.OdbcComm*******.Cancel">
      <summary>Пытается отменить выполнение <see cref="T:System.Data.Odbc.OdbcComm*******" />.</summary>
    </member>
    <member name="P:System.Data.Odbc.OdbcComm*******.Comm*******Text">
      <summary>Возвращает или задает инструкцию или хранимую процедуру SQL, выполняемую с источником данных.</summary>
      <returns>Инструкция или хранимая процедура SQL, подлежащая выполнению. Значением по умолчанию является пустая строка ("").</returns>
    </member>
    <member name="P:System.Data.Odbc.OdbcComm*******.Comm*******Timeout">
      <summary>Возвращает или задает время ожидания перед прекращением попытки выполнить команду и выводом ошибки.</summary>
      <returns>Время в секундах, в течение которого должно происходить ожидание выполнения команды. По умолчанию используется значение 30 секунд.</returns>
    </member>
    <member name="P:System.Data.Odbc.OdbcComm*******.Comm*******Type">
      <summary>Возвращает или задает значение, которое указывает, как интерпретируется свойство <see cref="P:System.Data.Odbc.OdbcComm*******.Comm*******Text" />.</summary>
      <returns>Одно из значений <see cref="T:System.Data.Comm*******Type" />. Значение по умолчанию — <see langword="Text" />.</returns>
      <exception cref="T:System.ArgumentException">Значение не является допустимым объектом <see cref="T:System.Data.Comm*******Type" />.</exception>
    </member>
    <member name="P:System.Data.Odbc.OdbcComm*******.Connection">
      <summary>Возвращает или задает объект <see cref="T:System.Data.Odbc.OdbcConnection" />, используемый этим экземпляром класса <see cref="T:System.Data.Odbc.OdbcComm*******" />.</summary>
      <returns>Подключение к источнику данных. Значение по умолчанию null.</returns>
      <exception cref="T:System.InvalidOperationException">Свойство <see cref="P:System.Data.Odbc.OdbcComm*******.Connection" /> изменилось в течение транзакции.</exception>
    </member>
    <member name="M:System.Data.Odbc.OdbcComm*******.CreateParameter">
      <summary>Создает новый экземпляр объекта <see cref="T:System.Data.Odbc.OdbcParameter" />.</summary>
      <returns>Объект <see cref="T:System.Data.Odbc.OdbcParameter" />.</returns>
    </member>
    <member name="P:System.Data.Odbc.OdbcComm*******.DesignTimeVisible">
      <summary>Возвращает или задает значение, указывающее, должен ли объект команды быть видимым в настраиваемом элементе управления интерфейса.</summary>
      <returns>
        <see langword="true" /> Если объект команды должен быть видимым в элементе управления; в противном случае <see langword="false" />. Значение по умолчанию — <see langword="true" />.</returns>
    </member>
    <member name="M:System.Data.Odbc.OdbcComm*******.ExecuteNonQuery">
      <summary>Выполняет оператор SQL применительно к свойству <see cref="P:System.Data.Odbc.OdbcComm*******.Connection" /> и возвращает количество измененных командой строк.</summary>
      <returns>Операторы UPDATE, INSERT и DELETE возвращают количество строк, которые были обработаны с их помощью. Для всех прочих типов операторов возвращаемым значением является -1.</returns>
      <exception cref="T:System.InvalidOperationException">Подключение не существует.  
-или- 
Соединение не открыто.</exception>
    </member>
    <member name="M:System.Data.Odbc.OdbcComm*******.ExecuteReader">
      <summary>Отправляет свойство <see cref="P:System.Data.Odbc.OdbcComm*******.Comm*******Text" /> свойству <see cref="P:System.Data.Odbc.OdbcComm*******.Connection" /> и создает объект <see cref="T:System.Data.Odbc.OdbcDataReader" />.</summary>
      <returns>Объект <see cref="T:System.Data.Odbc.OdbcDataReader" />.</returns>
    </member>
    <member name="M:System.Data.Odbc.OdbcComm*******.ExecuteReader(System.Data.Comm*******Behavior)">
      <summary>Отправляет <see cref="P:System.Data.Odbc.OdbcComm*******.Comm*******Text" /> в <see cref="P:System.Data.Odbc.OdbcComm*******.Connection" /> и создает <see cref="T:System.Data.Odbc.OdbcDataReader" />, используя одно из значений <see langword="Comm*******Behavior" />.</summary>
      <param name="behavior">Одно из значений <see langword="System.Data.Comm*******Behavior" />.</param>
      <returns>Объект <see cref="T:System.Data.Odbc.OdbcDataReader" />.</returns>
    </member>
    <member name="M:System.Data.Odbc.OdbcComm*******.ExecuteScalar">
      <summary>Выполняет запрос и возвращает первый столбец первой строки результирующего набора, возвращаемого запросом. Дополнительные столбцы или строки не обрабатываются.</summary>
      <returns>Первый столбец первой строки набора результатов или пустая ссылка, если набор результатов пуст.</returns>
    </member>
    <member name="P:System.Data.Odbc.OdbcComm*******.Parameters">
      <summary>Возвращает набор <see cref="T:System.Data.Odbc.OdbcParameterCollection" />.</summary>
      <returns>Параметры инструкции SQL или хранимой процедуры. По умолчанию является пустой коллекцией.</returns>
    </member>
    <member name="M:System.Data.Odbc.OdbcComm*******.Prepare">
      <summary>Создает подготовленную (или скомпилированную) версию команды в источнике данных.</summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Data.Odbc.OdbcComm*******.Connection" /> не указывается.  
-или- 
Свойство <see cref="P:System.Data.Odbc.OdbcComm*******.Connection" /> не является методом <see cref="M:System.Data.Odbc.OdbcConnection.Open" />.</exception>
    </member>
    <member name="M:System.Data.Odbc.OdbcComm*******.ResetComm*******Timeout">
      <summary>Сбрасывает значение свойства <see cref="P:System.Data.Odbc.OdbcComm*******.Comm*******Timeout" /> и задает ему значение по умолчанию.</summary>
    </member>
    <member name="M:System.Data.Odbc.OdbcComm*******.System#ICloneable#Clone">
      <summary>Описание этого члена см. в разделе <see cref="M:System.ICloneable.Clone" />.</summary>
      <returns>Новый объект <see cref="T:System.Object" />, который является копией данного экземпляра.</returns>
    </member>
    <member name="P:System.Data.Odbc.OdbcComm*******.Transaction">
      <summary>Возвращает или задает транзакцию <see cref="T:System.Data.Odbc.OdbcTransaction" />, в которой выполняется команда <see cref="T:System.Data.Odbc.OdbcComm*******" />.</summary>
      <returns>Объект <see cref="T:System.Data.Odbc.OdbcTransaction" />. Значение по умолчанию null.</returns>
    </member>
    <member name="P:System.Data.Odbc.OdbcComm*******.UpdatedRowSource">
      <summary>Возвращает или задает значение, указывающее, каким образом метод Update должен применять результаты выполнения команды к DataRow.</summary>
      <returns>Одно из значений <see cref="T:System.Data.UpdateRowSource" />.</returns>
    </member>
    <member name="T:System.Data.Odbc.OdbcComm*******Builder">
      <summary>Автоматически генерирует однотабличные команды, которые позволяют согласовать изменения, вносимые в объект <see cref="T:System.Data.DataSet" />, со связанным источником данных. Этот класс не наследуется.</summary>
    </member>
    <member name="M:System.Data.Odbc.OdbcComm*******Builder.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.Odbc.OdbcComm*******Builder" />.</summary>
    </member>
    <member name="M:System.Data.Odbc.OdbcComm*******Builder.#ctor(System.Data.Odbc.OdbcDataAdapter)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.Odbc.OdbcComm*******Builder" /> вместе со связанным объектом <see cref="T:System.Data.Odbc.OdbcDataAdapter" />.</summary>
      <param name="adapter">Объект <see cref="T:System.Data.Odbc.OdbcDataAdapter" />, который необходимо связать с объектом <see cref="T:System.Data.Odbc.OdbcComm*******Builder" />.</param>
    </member>
    <member name="P:System.Data.Odbc.OdbcComm*******Builder.DataAdapter">
      <summary>Возвращает или задает объект <see cref="T:System.Data.Odbc.OdbcDataAdapter" />, для которого данный объект <see cref="T:System.Data.Odbc.OdbcComm*******Builder" /> будет генерировать операторы SQL.</summary>
      <returns>Объект <see cref="T:System.Data.Odbc.OdbcDataAdapter" />, связанный с этим объектом <see cref="T:System.Data.Odbc.OdbcComm*******Builder" />.</returns>
    </member>
    <member name="M:System.Data.Odbc.OdbcComm*******Builder.DeriveParameters(System.Data.Odbc.OdbcComm*******)">
      <summary>Извлекает сведения о параметрах из хранимой процедуры, указанной в объекте <see cref="T:System.Data.Odbc.OdbcComm*******" />, и включает их в коллекцию параметров <see cref="P:System.Data.Odbc.OdbcComm*******.Parameters" /> указанного объекта <see cref="T:System.Data.Odbc.OdbcComm*******" />.</summary>
      <param name="comm*******">Объект <see cref="T:System.Data.Odbc.OdbcComm*******" /> ссылается на хранимую процедуру, из которой необходимо извлечь сведения о параметрах. Извлеченные параметры добавляются в коллекцию параметров <see cref="P:System.Data.Odbc.OdbcComm*******.Parameters" /> объекта <see cref="T:System.Data.Odbc.OdbcComm*******" />.</param>
      <exception cref="T:System.InvalidOperationException">Основной драйвер ODBC не поддерживает возврат сведений о параметрах хранимой процедуры, или текст команды содержит неверное имя хранимой процедуры, или указанный объект <see cref="T:System.Data.Comm*******Type" /> не является <see langword="Comm*******Type.StoredProcedure" />.</exception>
    </member>
    <member name="M:System.Data.Odbc.OdbcComm*******Builder.GetDeleteComm*******">
      <summary>Возвращает автоматически созданный объект <see cref="T:System.Data.Odbc.OdbcComm*******" />, который требуется для выполнения операций удаления в источнике данных.</summary>
      <returns>Автоматически созданный объект <see cref="T:System.Data.Odbc.OdbcComm*******" />, необходимый для выполнения операций удаления.</returns>
    </member>
    <member name="M:System.Data.Odbc.OdbcComm*******Builder.GetDeleteComm*******(System.Boolean)">
      <summary>Возвращает автоматически созданный объект <see cref="T:System.Data.Odbc.OdbcComm*******" />, который требуется для выполнения операций удаления в источнике данных.</summary>
      <param name="useColumnsForParameterNames">Если значение равно <see langword="true" />, создаются имена параметров, совпадающие с именами столбцов, если это возможно. Если значение равно <see langword="false" />, создаются @p1, @p2 и т. д.</param>
      <returns>Автоматически созданный объект <see cref="T:System.Data.Odbc.OdbcComm*******" />, необходимый для выполнения операций удаления.</returns>
    </member>
    <member name="M:System.Data.Odbc.OdbcComm*******Builder.GetInsertComm*******">
      <summary>Возвращает автоматически созданный объект <see cref="T:System.Data.Odbc.OdbcComm*******" />, который требуется для выполнения операций вставки в источнике данных.</summary>
      <returns>Автоматически созданный объект <see cref="T:System.Data.Odbc.OdbcComm*******" />, необходимый для выполнения операций вставки.</returns>
    </member>
    <member name="M:System.Data.Odbc.OdbcComm*******Builder.GetInsertComm*******(System.Boolean)">
      <summary>Возвращает автоматически созданный объект <see cref="T:System.Data.Odbc.OdbcComm*******" />, который требуется для выполнения операций вставки в источнике данных.</summary>
      <param name="useColumnsForParameterNames">Если значение равно <see langword="true" />, создаются имена параметров, совпадающие с именами столбцов, если это возможно. Если значение равно <see langword="false" />, создаются @p1, @p2 и т. д.</param>
      <returns>Автоматически созданный объект <see cref="T:System.Data.Odbc.OdbcComm*******" />, необходимый для выполнения операций вставки.</returns>
    </member>
    <member name="M:System.Data.Odbc.OdbcComm*******Builder.GetUpdateComm*******">
      <summary>Возвращает автоматически созданный объект <see cref="T:System.Data.Odbc.OdbcComm*******" />, который требуется для выполнения операций обновления в источнике данных.</summary>
      <returns>Автоматически созданный объект <see cref="T:System.Data.Odbc.OdbcComm*******" />, необходимый для выполнения операций обновления.</returns>
    </member>
    <member name="M:System.Data.Odbc.OdbcComm*******Builder.GetUpdateComm*******(System.Boolean)">
      <summary>Возвращает автоматически созданный объект <see cref="T:System.Data.Odbc.OdbcComm*******" />, который требуется для выполнения операций обновления в источнике данных.</summary>
      <param name="useColumnsForParameterNames">Если значение равно <see langword="true" />, создаются имена параметров, совпадающие с именами столбцов, если это возможно. Если значение равно <see langword="false" />, создаются @p1, @p2 и т. д.</param>
      <returns>Автоматически созданный объект <see cref="T:System.Data.Odbc.OdbcComm*******" />, необходимый для выполнения операций обновления.</returns>
    </member>
    <member name="M:System.Data.Odbc.OdbcComm*******Builder.QuoteIdentifier(System.String)">
      <summary>При заданном идентификаторе без кавычек в каталоге, набранном в правильном регистре, возвращает заключенный в кавычки идентификатор в корректной форме. При этом корректно исключаются встроенные в идентификатор кавычки.</summary>
      <param name="unquotedIdentifier">Исходный идентификатор без кавычек.</param>
      <returns>Версия идентификатора, заключенного кавычки. Кавычки, внедренные в идентификатор, корректно исключаются.</returns>
    </member>
    <member name="M:System.Data.Odbc.OdbcComm*******Builder.QuoteIdentifier(System.String,System.Data.Odbc.OdbcConnection)">
      <summary>При заданном идентификаторе без кавычек в каталоге, набранном в правильном регистре, возвращает заключенный в кавычки идентификатор в корректной форме. При этом корректно исключаются встроенные в идентификатор кавычки.</summary>
      <param name="unquotedIdentifier">Исходный идентификатор без кавычек.</param>
      <param name="connection">Если подключение выполнено, заставляет управляемую оболочку получить символ кавычки от драйвера ODBC, вызывая SQLGetInfo (SQL_IDENTIFIER_QUOTE_CHAR). Если подключение не выполнено, строка заключается в кавычки, используя значения из свойств <see cref="P:System.Data.Common.DbComm*******Builder.QuotePrefix" /> и <see cref="P:System.Data.Common.DbComm*******Builder.QuoteSuffix" />.</param>
      <returns>Версия идентификатора, заключенного кавычки. Кавычки, внедренные в идентификатор, корректно исключаются.</returns>
    </member>
    <member name="M:System.Data.Odbc.OdbcComm*******Builder.UnquoteIdentifier(System.String)">
      <summary>Если идентификатор заключен в кавычки, возвращает правильную форму этого идентификатора без кавычек, при этом корректно учитываются кавычки, внедренные в идентификатор.</summary>
      <param name="quotedIdentifier">Идентификатор, из которого будут удалены внедренные кавычки.</param>
      <returns>Идентификатор без кавычек, в котором корректно сохранены все внедренные кавычки.</returns>
    </member>
    <member name="M:System.Data.Odbc.OdbcComm*******Builder.UnquoteIdentifier(System.String,System.Data.Odbc.OdbcConnection)">
      <summary>Если идентификатор заключен в кавычки, возвращает правильную форму этого идентификатора без кавычек, при этом корректно учитываются кавычки, внедренные в идентификатор.</summary>
      <param name="quotedIdentifier">Идентификатор, из которого будут удалены внедренные кавычки.</param>
      <param name="connection">
        <see cref="T:System.Data.Odbc.OdbcConnection" />.</param>
      <returns>Идентификатор без кавычек, в котором корректно сохранены все внедренные кавычки.</returns>
    </member>
    <member name="T:System.Data.Odbc.OdbcConnection">
      <summary>Представляет открытое подключение к источнику данных.</summary>
    </member>
    <member name="M:System.Data.Odbc.OdbcConnection.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.Odbc.OdbcConnection" />.</summary>
    </member>
    <member name="M:System.Data.Odbc.OdbcConnection.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.Odbc.OdbcConnection" /> с заданной строкой подключения.</summary>
      <param name="connectionString">Подключение, используемое для открытия источника данных.</param>
    </member>
    <member name="M:System.Data.Odbc.OdbcConnection.BeginTransaction">
      <summary>Начинает транзакцию в источнике данных.</summary>
      <returns>Объект, представляющий новую транзакцию.</returns>
      <exception cref="T:System.InvalidOperationException">Транзакция активна в текущий момент. Параллельные транзакции не поддерживаются.</exception>
    </member>
    <member name="M:System.Data.Odbc.OdbcConnection.BeginTransaction(System.Data.IsolationLevel)">
      <summary>Начинает транзакцию в источнике данных, используя заданное значение <see cref="T:System.Data.IsolationLevel" />.</summary>
      <param name="isolevel">Уровень изоляции транзакции для этого подключения. Если уровень изоляции не указан, используется уровень изоляции, установленный для драйвера по умолчанию.</param>
      <returns>Объект, представляющий новую транзакцию.</returns>
      <exception cref="T:System.InvalidOperationException">Транзакция активна в текущий момент. Параллельные транзакции не поддерживаются.</exception>
    </member>
    <member name="M:System.Data.Odbc.OdbcConnection.ChangeDatabase(System.String)">
      <summary>Изменяет текущую базу данных, связанную с открытым подключением <see cref="T:System.Data.Odbc.OdbcConnection" />.</summary>
      <param name="value">Имя базы данных.</param>
      <exception cref="T:System.ArgumentException">Недопустимое имя базы данных.</exception>
      <exception cref="T:System.InvalidOperationException">Соединение не открыто.</exception>
      <exception cref="T:System.Data.Odbc.OdbcException">Невозможно изменить базу данных.</exception>
    </member>
    <member name="M:System.Data.Odbc.OdbcConnection.Close">
      <summary>Закрывает подключение к источнику данных.</summary>
    </member>
    <member name="P:System.Data.Odbc.OdbcConnection.ConnectionString">
      <summary>Возвращает или задает строку, используемую для открытия источника данных.</summary>
      <returns>Строка подключения драйвера ODBC, включающая параметры, необходимые для установления начального подключения, например, имя источника данных. Значением по умолчанию является пустая строка (""). Его максимальная длина равна 1024 символам.</returns>
    </member>
    <member name="P:System.Data.Odbc.OdbcConnection.ConnectionTimeout">
      <summary>Возвращает или задает значение времени ожидания при попытке установления подключения, по истечении которого процедура завершается и генерируется ошибка.</summary>
      <returns>Выраженное в секундах время ожидания открытия подключения. Значение по умолчанию - 15 секунды.</returns>
      <exception cref="T:System.ArgumentException">Заданное значение меньше 0.</exception>
    </member>
    <member name="M:System.Data.Odbc.OdbcConnection.CreateComm*******">
      <summary>Создает и возвращает объект <see cref="T:System.Data.Odbc.OdbcComm*******" />, связанный с объектом <see cref="T:System.Data.Odbc.OdbcConnection" />.</summary>
      <returns>Объект <see cref="T:System.Data.Odbc.OdbcComm*******" />.</returns>
    </member>
    <member name="P:System.Data.Odbc.OdbcConnection.Database">
      <summary>Получает имя текущей базы данных или базы данных, которая будет использоваться после открытия подключения.</summary>
      <returns>Имя текущей базы данных. Пока не открыто подключение значением по умолчанию является пустая строка ("").</returns>
    </member>
    <member name="P:System.Data.Odbc.OdbcConnection.DataSource">
      <summary>Получает имя сервера или имя файла источника данных.</summary>
      <returns>Имя сервера или имя файла источника данных. Пока не открыто подключение значением по умолчанию является пустая строка ("").</returns>
    </member>
    <member name="P:System.Data.Odbc.OdbcConnection.Driver">
      <summary>Получает имя драйвера ODBC, заданного для текущего подключения.</summary>
      <returns>Имя драйвера ODBC. Обычно это имя DLL-файла (например, Sqlsrv32.dll). Пока не открыто подключение значением по умолчанию является пустая строка ("").</returns>
    </member>
    <member name="M:System.Data.Odbc.OdbcConnection.EnlistDistributedTransaction(System.EnterpriseServices.ITransaction)">
      <summary>Выполняет присоединение указанной транзакции как распределенной транзакции.</summary>
      <param name="transaction">Ссылка на существующий объект <see cref="T:System.EnterpriseServices.ITransaction" />, к которому выполняется присоединение.</param>
    </member>
    <member name="M:System.Data.Odbc.OdbcConnection.EnlistTransaction(System.Transactions.Transaction)">
      <summary>Выполняет присоединение указанной транзакции как распределенной транзакции.</summary>
      <param name="transaction">Ссылка на существующий объект <see cref="T:System.Transactions.Transaction" />, к которому выполняется присоединение.</param>
    </member>
    <member name="M:System.Data.Odbc.OdbcConnection.GetSchema">
      <summary>Возвращает сведения о схеме для источника данных этого объекта <see cref="T:System.Data.Odbc.OdbcConnection" />.</summary>
      <returns>Объект <see cref="T:System.Data.DataTable" />, содержащий сведения о схеме.</returns>
    </member>
    <member name="M:System.Data.Odbc.OdbcConnection.GetSchema(System.String)">
      <summary>Возвращает сведения схемы для источника данных этого объекта <see cref="T:System.Data.Odbc.OdbcConnection" />, используя указанное имя для имени схемы.</summary>
      <param name="collectionName">Определяет имя схемы, которая должна быть возвращена.</param>
      <returns>Объект <see cref="T:System.Data.DataTable" />, содержащий сведения о схеме.</returns>
    </member>
    <member name="M:System.Data.Odbc.OdbcConnection.GetSchema(System.String,System.String[])">
      <summary>Возвращает сведения о схеме для источника данных этого объекта <see cref="T:System.Data.Odbc.OdbcConnection" />, используя указанную строку в качестве имени схемы и указанный массив строк для значений ограничений.</summary>
      <param name="collectionName">Определяет имя схемы, которая должна быть возвращена.</param>
      <param name="restrictionValues">Задает набор значений ограничений для запрошенной схемы.</param>
      <returns>Объект <see cref="T:System.Data.DataTable" />, содержащий сведения о схеме.</returns>
    </member>
    <member name="E:System.Data.Odbc.OdbcConnection.InfoMessage">
      <summary>Происходит при отсылке драйвером ODBC предупреждающего или информационного сообщения.</summary>
    </member>
    <member name="M:System.Data.Odbc.OdbcConnection.Open">
      <summary>Открывает подключение к источнику данных с параметрами свойства, задаваемыми объектом <see cref="P:System.Data.Odbc.OdbcConnection.ConnectionString" />.</summary>
      <exception cref="T:System.NotSupportedException">Функциональность этого метода не поддерживается в базовом классе и должна быть реализована в производном классе.</exception>
    </member>
    <member name="M:System.Data.Odbc.OdbcConnection.ReleaseObjectPool">
      <summary>Указывает, что при освобождении последнего основного подключения может быть отключен обработчик среды ODBC Driver Manager.</summary>
    </member>
    <member name="P:System.Data.Odbc.OdbcConnection.ServerVersion">
      <summary>Получает строку, содержащую номер версии сервера, к которому подключается клиент.</summary>
      <returns>Версия подключенного сервера.</returns>
      <exception cref="T:System.InvalidOperationException">Соединение закрыто.</exception>
    </member>
    <member name="P:System.Data.Odbc.OdbcConnection.State">
      <summary>Возвращает текущее состояние подключения.</summary>
      <returns>Поразрядное сочетание значений <see cref="T:System.Data.ConnectionState" />. Значение по умолчанию — <see langword="Closed" />.</returns>
    </member>
    <member name="M:System.Data.Odbc.OdbcConnection.System#ICloneable#Clone">
      <summary>Описание этого члена см. в разделе <see cref="M:System.ICloneable.Clone" />.</summary>
      <returns>Новый объект <see cref="T:System.Object" />, который является копией данного экземпляра.</returns>
    </member>
    <member name="T:System.Data.Odbc.OdbcConnectionStringBuilder">
      <summary>Удобное средство, с помощью которого можно создавать используемые классом <see cref="T:System.Data.Odbc.OdbcConnection" /> строки соединений и управлять их содержимым.</summary>
    </member>
    <member name="M:System.Data.Odbc.OdbcConnectionStringBuilder.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.Odbc.OdbcConnectionStringBuilder" />.</summary>
    </member>
    <member name="M:System.Data.Odbc.OdbcConnectionStringBuilder.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.Odbc.OdbcConnectionStringBuilder" />. Предоставленная строка подключения содержит данные для сведений о внутреннем подключении экземпляра.</summary>
      <param name="connectionString">Основа для сведений о внутреннем подключении объекта. Выполняет анализ пар "ключ/значение".</param>
      <exception cref="T:System.ArgumentException">Строка подключения неправильно отформатирована (возможно отсутствует обязательный знак равенства "=" в паре "ключ/значение").</exception>
    </member>
    <member name="M:System.Data.Odbc.OdbcConnectionStringBuilder.Clear">
      <summary>Удаляет содержимое экземпляра <see cref="T:System.Data.Odbc.OdbcConnectionStringBuilder" />.</summary>
    </member>
    <member name="M:System.Data.Odbc.OdbcConnectionStringBuilder.ContainsKey(System.String)">
      <summary>Определяет, содержит ли объект <see cref="T:System.Data.Odbc.OdbcConnectionStringBuilder" /> указанный ключ.</summary>
      <param name="keyword">Ключ, который требуется найти в <see cref="T:System.Data.Odbc.OdbcConnectionStringBuilder" />.</param>
      <returns>Значение <see langword="true" />, если в <see cref="T:System.Data.Odbc.OdbcConnectionStringBuilder" /> содержится элемент с указанным ключом; в противном случае — значение <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="keyword" /> имеет значение null (<see langword="Nothing" /> в Visual Basic).</exception>
    </member>
    <member name="P:System.Data.Odbc.OdbcConnectionStringBuilder.Driver">
      <summary>Возвращает или задает имя драйвера ODBC, связанного с подключением.</summary>
      <returns>Значение свойства <see cref="P:System.Data.Odbc.OdbcConnectionStringBuilder.Driver" /> или <see langword="String.Empty" />, если значение не указано.</returns>
    </member>
    <member name="P:System.Data.Odbc.OdbcConnectionStringBuilder.Dsn">
      <summary>Возвращает или задает имя источника данных (DSN), связанного с подключением.</summary>
      <returns>Значение свойства <see cref="P:System.Data.Odbc.OdbcConnectionStringBuilder.Dsn" /> или <see langword="String.Empty" />, если значение не указано.</returns>
    </member>
    <member name="P:System.Data.Odbc.OdbcConnectionStringBuilder.Item(System.String)">
      <summary>Возвращает или задает значение, связанное с указанным ключом. В языке C# это свойство является индексатором.</summary>
      <param name="keyword">Ключ возвращаемого или задаваемого элемента.</param>
      <returns>Значение, связанное с указанным ключом.</returns>
      <exception cref="T:System.ArgumentException">Строка подключения неправильно отформатирована (возможно отсутствует обязательный знак равенства "=" в паре "ключ/значение").</exception>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="keyword" /> является неопределенной ссылкой (<see langword="Nothing" /> в Visual Basic).</exception>
    </member>
    <member name="P:System.Data.Odbc.OdbcConnectionStringBuilder.Keys">
      <summary>Возвращает коллекцию <see cref="T:System.Collections.ICollection" />, которая содержит ключи из <see cref="T:System.Data.Odbc.OdbcConnectionStringBuilder" />.</summary>
      <returns>Коллекция <see cref="T:System.Collections.ICollection" />, которая содержит ключи из <see cref="T:System.Data.Odbc.OdbcConnectionStringBuilder" />.</returns>
    </member>
    <member name="M:System.Data.Odbc.OdbcConnectionStringBuilder.Remove(System.String)">
      <summary>Удаляет из экземпляра <see cref="T:System.Data.Odbc.OdbcConnectionStringBuilder" /> запись с указанным ключом.</summary>
      <param name="keyword">Ключ пары «ключ-значение», удаляемой из строки подключения в этом объекте <see cref="T:System.Data.Odbc.OdbcConnectionStringBuilder" />.</param>
      <returns>Значение <see langword="true" />, если ключ был указан в строке подключения и был удален. Значение <see langword="false" />, если такого ключа не было.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="keyword" /> имеет значение null (<see langword="Nothing" /> в Visual Basic).</exception>
    </member>
    <member name="M:System.Data.Odbc.OdbcConnectionStringBuilder.TryGetValue(System.String,System.Object@)">
      <summary>Получает значение, соответствующее заданному ключу, из данного объекта <see cref="T:System.Data.Odbc.OdbcConnectionStringBuilder" />.</summary>
      <param name="keyword">Ключ искомого элемента.</param>
      <param name="value">Значение, соответствующее <paramref name="keyword" />.</param>
      <returns>Значение <see langword="true" />, если <paramref name="keyword" /> найден в строке подключения, в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="T:System.Data.Odbc.OdbcDataAdapter">
      <summary>Представляет набор команд данных и подключение к базе данных, которые используются для заполнения <see cref="T:System.Data.DataSet" /> и обновления источника данных. Этот класс не наследуется.</summary>
    </member>
    <member name="M:System.Data.Odbc.OdbcDataAdapter.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.Odbc.OdbcDataAdapter" />.</summary>
    </member>
    <member name="M:System.Data.Odbc.OdbcDataAdapter.#ctor(System.Data.Odbc.OdbcComm*******)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.Odbc.OdbcDataAdapter" /> с заданным оператором SQL SELECT.</summary>
      <param name="selectComm*******">Объект <see cref="T:System.Data.Odbc.OdbcComm*******" />, который является оператором SQL SELECT или хранимой процедурой и задается как свойство <see cref="P:System.Data.Odbc.OdbcDataAdapter.SelectComm*******" /> объекта <see cref="T:System.Data.Odbc.OdbcDataAdapter" />.</param>
    </member>
    <member name="M:System.Data.Odbc.OdbcDataAdapter.#ctor(System.String,System.Data.Odbc.OdbcConnection)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.Odbc.OdbcDataAdapter" /> с оператором SQL SELECT и объектом <see cref="T:System.Data.Odbc.OdbcConnection" />.</summary>
      <param name="selectComm*******Text">Строка, представляющая собой оператор SQL SELECT или хранимую процедуру, используемую в свойстве <see cref="P:System.Data.Odbc.OdbcDataAdapter.SelectComm*******" /> объекта <see cref="T:System.Data.Odbc.OdbcDataAdapter" />.</param>
      <param name="selectConnection">
        <see cref="T:System.Data.Odbc.OdbcConnection" /> представляет подключение.</param>
    </member>
    <member name="M:System.Data.Odbc.OdbcDataAdapter.#ctor(System.String,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.Odbc.OdbcDataAdapter" /> с оператором SQL SELECT и строкой подключения.</summary>
      <param name="selectComm*******Text">Строка, представляющая собой оператор SQL SELECT или хранимую процедуру, используемую в свойстве <see cref="P:System.Data.Odbc.OdbcDataAdapter.SelectComm*******" /> объекта <see cref="T:System.Data.Odbc.OdbcDataAdapter" />.</param>
      <param name="selectConnectionString">Строка подключения.</param>
    </member>
    <member name="P:System.Data.Odbc.OdbcDataAdapter.DeleteComm*******">
      <summary>Возвращает или задает оператор SQL или хранимую процедуру, используемую для удаления записей в источнике данных.</summary>
      <returns>Объект <see cref="T:System.Data.Odbc.OdbcComm*******" />, используемый во время операции обновления для удаления тех записей в источнике данных, которые соответствуют удаленным строкам в объекте <see cref="T:System.Data.DataSet" />.</returns>
    </member>
    <member name="P:System.Data.Odbc.OdbcDataAdapter.InsertComm*******">
      <summary>Возвращает или задает инструкцию либо хранимую процедуру SQL, используемую для вставки записей в источнике данных.</summary>
      <returns>Параметр <see cref="T:System.Data.Odbc.OdbcComm*******" />, используемый в ходе операции вставки записей в источнике данных в соответствии с новыми строками в <see cref="T:System.Data.DataSet" />.</returns>
    </member>
    <member name="E:System.Data.Odbc.OdbcDataAdapter.RowUpdated">
      <summary>Происходит во время операции обновления после выполнения команды в отношении источника данных.</summary>
    </member>
    <member name="E:System.Data.Odbc.OdbcDataAdapter.RowUpdating">
      <summary>Происходит во время <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> перед выполнением команды в отношении источника данных.</summary>
    </member>
    <member name="P:System.Data.Odbc.OdbcDataAdapter.SelectComm*******">
      <summary>Возвращает или задает оператор SQL или хранимую процедуру для выборки записей в источнике данных.</summary>
      <returns>Объект <see cref="T:System.Data.Odbc.OdbcComm*******" />, который используется во время операции заполнения для выбора записей из источника данных с целью их размещения в объекте <see cref="T:System.Data.DataSet" />.</returns>
    </member>
    <member name="P:System.Data.Odbc.OdbcDataAdapter.System#Data#IDbDataAdapter#DeleteComm*******">
      <summary>Описание этого члена см. в разделе <see cref="P:System.Data.IDbDataAdapter.DeleteComm*******" />.</summary>
      <returns>Интерфейс <see cref="T:System.Data.IDbComm*******" />, используемый во время обновления для удаления записей в источнике данных, соответствующих удаленным строкам в наборе данных.</returns>
    </member>
    <member name="P:System.Data.Odbc.OdbcDataAdapter.System#Data#IDbDataAdapter#InsertComm*******">
      <summary>Описание этого члена см. в разделе <see cref="P:System.Data.IDbDataAdapter.InsertComm*******" />.</summary>
      <returns>Интерфейс <see cref="T:System.Data.IDbComm*******" />, используемый во время обновления для вставки записей из источника данных для размещения в наборе данных.</returns>
    </member>
    <member name="P:System.Data.Odbc.OdbcDataAdapter.System#Data#IDbDataAdapter#SelectComm*******">
      <summary>Описание этого члена см. в разделе <see cref="P:System.Data.IDbDataAdapter.SelectComm*******" />.</summary>
      <returns>Интерфейс <see cref="T:System.Data.IDbComm*******" />, используемый во время обновления для выбора записей из источника данных для размещения в наборе данных.</returns>
    </member>
    <member name="P:System.Data.Odbc.OdbcDataAdapter.System#Data#IDbDataAdapter#UpdateComm*******">
      <summary>Описание этого члена см. в разделе <see cref="P:System.Data.IDbDataAdapter.UpdateComm*******" />.</summary>
      <returns>Интерфейс <see cref="T:System.Data.IDbComm*******" />, используемый во время обновления для обновления записей в источнике данных, соответствующих измененным строкам в наборе данных.</returns>
    </member>
    <member name="M:System.Data.Odbc.OdbcDataAdapter.System#ICloneable#Clone">
      <summary>Описание этого члена см. в разделе <see cref="M:System.ICloneable.Clone" />.</summary>
      <returns>Новый объект <see cref="T:System.Object" />, который является копией данного экземпляра.</returns>
    </member>
    <member name="P:System.Data.Odbc.OdbcDataAdapter.UpdateComm*******">
      <summary>Возвращает или задает инструкцию SQL либо хранимую процедуру (используется для обновления записей в источнике данных).</summary>
      <returns>
        <see cref="T:System.Data.Odbc.OdbcComm*******" /> — используется в ходе операции обновления записей в источнике данных в соответствии с измененными строками в <see cref="T:System.Data.DataSet" />.</returns>
    </member>
    <member name="T:System.Data.Odbc.OdbcDataReader">
      <summary>Предоставляет способ чтения потока строк данных из источника только в прямом порядке. Этот класс не наследуется.</summary>
    </member>
    <member name="M:System.Data.Odbc.OdbcDataReader.Close">
      <summary>Закрывает объект <see cref="T:System.Data.Odbc.OdbcDataReader" />.</summary>
    </member>
    <member name="P:System.Data.Odbc.OdbcDataReader.Depth">
      <summary>Возвращает значение, указывающее глубину вложенности для текущей строки.</summary>
      <returns>Глубина вложенности для текущей строки.</returns>
    </member>
    <member name="P:System.Data.Odbc.OdbcDataReader.FieldCount">
      <summary>Возвращает число столбцов в текущей строке.</summary>
      <returns>Значение 0, если столбец отсутствует в допустимом наборе записей; в противном случае — количество столбцов в текущей записи. Значение по умолчанию — -1.</returns>
      <exception cref="T:System.NotSupportedException">Текущее подключение к источнику данных отсутствует.</exception>
    </member>
    <member name="M:System.Data.Odbc.OdbcDataReader.GetBoolean(System.Int32)">
      <summary>Возвращает значение указанного столбца в виде логического значения.</summary>
      <param name="i">Порядковый номер столбца (от нуля).</param>
      <returns>Логическое значение, являющееся значением столбца.</returns>
      <exception cref="T:System.InvalidCastException">Указанное приведение недопустимо.</exception>
    </member>
    <member name="M:System.Data.Odbc.OdbcDataReader.GetByte(System.Int32)">
      <summary>Возвращает значение указанного столбца в виде байта.</summary>
      <param name="i">Порядковый номер столбца (от нуля).</param>
      <returns>Значение заданного столбца в виде байта.</returns>
      <exception cref="T:System.InvalidCastException">Указанное приведение недопустимо.</exception>
    </member>
    <member name="M:System.Data.Odbc.OdbcDataReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
      <summary>Считывает поток байтов из заданного смещения столбца в буфер в виде массива, начиная с конкретного смещения буфера.</summary>
      <param name="i">Порядковый номер столбца (от нуля).</param>
      <param name="dataIndex">Индекс в поле, с которого необходимо начать операцию чтения.</param>
      <param name="buffer">Буфер, в который считывается поток байтов.</param>
      <param name="bufferIndex">Индекс в <paramref name="buffer" />, с которого должна начинаться операция записи.</param>
      <param name="length">Количество байтов, чтение которых необходимо выполнить.</param>
      <returns>Число фактически считанных байтов.</returns>
    </member>
    <member name="M:System.Data.Odbc.OdbcDataReader.GetChar(System.Int32)">
      <summary>Возвращает значение указанного столбца в виде символа.</summary>
      <param name="i">Порядковый номер столбца (от нуля).</param>
      <returns>Значение указанного столбца в виде символа.</returns>
      <exception cref="T:System.InvalidCastException">Указанное приведение недопустимо.</exception>
    </member>
    <member name="M:System.Data.Odbc.OdbcDataReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
      <summary>Считывает поток символов из заданного смещения столбца в буфер в виде массива, начиная с конкретного смещения буфера.</summary>
      <param name="i">Порядковый номер столбца (от нуля).</param>
      <param name="dataIndex">Индекс в строке, с которого начнется операция чтения.</param>
      <param name="buffer">Буфер, в который копируются данные.</param>
      <param name="bufferIndex">Индекс в <paramref name="buffer" />, с которого должна начинаться операция записи.</param>
      <param name="length">Число символов для чтения.</param>
      <returns>Число фактически считанных символов.</returns>
    </member>
    <member name="M:System.Data.Odbc.OdbcDataReader.GetDataTypeName(System.Int32)">
      <summary>Получает имя исходного типа данных.</summary>
      <param name="i">Порядковый номер столбца (от нуля).</param>
      <returns>Имя исходного типа данных.</returns>
    </member>
    <member name="M:System.Data.Odbc.OdbcDataReader.GetDate(System.Int32)">
      <summary>Возвращает значение указанного столбца в виде объекта <see cref="T:System.DateTime" />.</summary>
      <param name="i">Порядковый номер столбца (от нуля).</param>
      <returns>Значение заданного столбца в виде объекта <see cref="T:System.DateTime" />.</returns>
    </member>
    <member name="M:System.Data.Odbc.OdbcDataReader.GetDateTime(System.Int32)">
      <summary>Возвращает значение указанного столбца в виде объекта <see cref="T:System.DateTime" />.</summary>
      <param name="i">Порядковый номер столбца (от нуля).</param>
      <returns>Значение заданного столбца в виде объекта <see cref="T:System.DateTime" />.</returns>
      <exception cref="T:System.InvalidCastException">Указанное приведение недопустимо.</exception>
    </member>
    <member name="M:System.Data.Odbc.OdbcDataReader.GetDecimal(System.Int32)">
      <summary>Возвращает значение указанного столбца в виде объекта <see cref="T:System.Decimal" />.</summary>
      <param name="i">Порядковый номер столбца (от нуля).</param>
      <returns>Значение заданного столбца в виде объекта <see cref="T:System.Decimal" />.</returns>
      <exception cref="T:System.InvalidCastException">Указанное приведение недопустимо.</exception>
    </member>
    <member name="M:System.Data.Odbc.OdbcDataReader.GetDouble(System.Int32)">
      <summary>Получает значение заданного столбца в виде числа двойной точности с плавающей запятой.</summary>
      <param name="i">Порядковый номер столбца (от нуля).</param>
      <returns>Значение указанного столбца в виде числа с плавающей запятой с двойной точностью.</returns>
      <exception cref="T:System.InvalidCastException">Указанное приведение недопустимо.</exception>
    </member>
    <member name="M:System.Data.Odbc.OdbcDataReader.GetEnumerator">
      <summary>Возвращает перечислитель <see cref="T:System.Collections.IEnumerator" />, который может использоваться для просмотра строк в модуле чтения данных.</summary>
      <returns>Перечислитель <see cref="T:System.Collections.IEnumerator" />, который может использоваться для просмотра строк в модуле чтения данных.</returns>
    </member>
    <member name="M:System.Data.Odbc.OdbcDataReader.GetFieldType(System.Int32)">
      <summary>Возвращает тип <see cref="T:System.Type" />, который является типом данных объекта.</summary>
      <param name="i">Порядковый номер столбца (от нуля).</param>
      <returns>Тип данных объекта (<see cref="T:System.Type" />).</returns>
    </member>
    <member name="M:System.Data.Odbc.OdbcDataReader.GetFloat(System.Int32)">
      <summary>Возвращает значение указанного столбца в виде числа с плавающей запятой с одиночной точностью.</summary>
      <param name="i">Порядковый номер столбца (от нуля).</param>
      <returns>Значение указанного столбца в виде числа с плавающей запятой с одиночной точностью.</returns>
      <exception cref="T:System.InvalidCastException">Указанное приведение недопустимо.</exception>
    </member>
    <member name="M:System.Data.Odbc.OdbcDataReader.GetGuid(System.Int32)">
      <summary>Возвращает значение заданного столбца в виде глобального уникального идентификатора (GUID).</summary>
      <param name="i">Порядковый номер столбца (от нуля).</param>
      <returns>Значение указанного столбца в виде GUID.</returns>
      <exception cref="T:System.InvalidCastException">Указанное приведение недопустимо.</exception>
    </member>
    <member name="M:System.Data.Odbc.OdbcDataReader.GetInt16(System.Int32)">
      <summary>Получает значение заданного столбца в виде 16-битового целого числа со знаком.</summary>
      <param name="i">Порядковый номер столбца (от нуля).</param>
      <returns>Значение заданного столбца в виде 16-разрядного целого числа со знаком.</returns>
      <exception cref="T:System.InvalidCastException">Указанное приведение недопустимо.</exception>
    </member>
    <member name="M:System.Data.Odbc.OdbcDataReader.GetInt32(System.Int32)">
      <summary>Возвращает значение указанного столбца в виде 32-разрядного целого числа со знаком.</summary>
      <param name="i">Порядковый номер столбца (от нуля).</param>
      <returns>Значение заданного столбца в виде 32-разрядного целого числа со знаком.</returns>
      <exception cref="T:System.InvalidCastException">Указанное приведение недопустимо.</exception>
    </member>
    <member name="M:System.Data.Odbc.OdbcDataReader.GetInt64(System.Int32)">
      <summary>Возвращает значение указанного столбца в виде 64-разрядного целого числа со знаком.</summary>
      <param name="i">Порядковый номер столбца (от нуля).</param>
      <returns>Значение заданного столбца в виде 64-разрядного целого числа со знаком.</returns>
      <exception cref="T:System.InvalidCastException">Указанное приведение недопустимо.</exception>
    </member>
    <member name="M:System.Data.Odbc.OdbcDataReader.GetName(System.Int32)">
      <summary>Возвращает имя заданного столбца.</summary>
      <param name="i">Порядковый номер столбца (от нуля).</param>
      <returns>Строка, являющаяся именем заданного столбца.</returns>
    </member>
    <member name="M:System.Data.Odbc.OdbcDataReader.GetOrdinal(System.String)">
      <summary>Возвращает порядковый номер столбца при наличии заданного имени столбца.</summary>
      <param name="value">Имя столбца.</param>
      <returns>Порядковый номер столбца (от нуля).</returns>
    </member>
    <member name="M:System.Data.Odbc.OdbcDataReader.GetSchemaTable">
      <summary>Возвращает объект <see cref="T:System.Data.DataTable" />, описывающий метаданные столбцов модуля чтения данных <see cref="T:System.Data.Odbc.OdbcDataReader" />.</summary>
      <returns>Объект <see cref="T:System.Data.DataTable" />, описывающий метаданные столбцов.</returns>
      <exception cref="T:System.InvalidOperationException">Объект <see cref="T:System.Data.Odbc.OdbcDataReader" /> закрыт.</exception>
    </member>
    <member name="M:System.Data.Odbc.OdbcDataReader.GetString(System.Int32)">
      <summary>Возвращает значение заданного столбца в виде объекта <see cref="T:System.String" />.</summary>
      <param name="i">Порядковый номер столбца (от нуля).</param>
      <returns>Значение указанного столбца в виде <see cref="T:System.String" />.</returns>
      <exception cref="T:System.InvalidCastException">Указанное приведение недопустимо.</exception>
    </member>
    <member name="M:System.Data.Odbc.OdbcDataReader.GetTime(System.Int32)">
      <summary>Возвращает значение указанного столбца в виде объекта <see cref="T:System.TimeSpan" />.</summary>
      <param name="i">Порядковый номер столбца (от нуля).</param>
      <returns>Значение заданного столбца в виде объекта <see cref="T:System.TimeSpan" />.</returns>
    </member>
    <member name="M:System.Data.Odbc.OdbcDataReader.GetValue(System.Int32)">
      <summary>Получает значение столбца с указанным порядковом номером в собственном формате.</summary>
      <param name="i">Порядковый номер столбца (от нуля).</param>
      <returns>Возвращаемое значение.</returns>
    </member>
    <member name="M:System.Data.Odbc.OdbcDataReader.GetValues(System.Object[])">
      <summary>Заполняет массив объектов значениями столбцов текущей строки.</summary>
      <param name="values">Массив типа <see cref="T:System.Object" />, в который необходимо скопировать столбцы атрибутов.</param>
      <returns>Число экземпляров <see cref="T:System.Object" /> в массиве.</returns>
    </member>
    <member name="P:System.Data.Odbc.OdbcDataReader.HasRows">
      <summary>Получает значение, указывающее, содержит ли объект <see cref="T:System.Data.Odbc.OdbcDataReader" /> одну или несколько строк.</summary>
      <returns>Значение <see langword="true" />, если объект <see cref="T:System.Data.Odbc.OdbcDataReader" /> содержит одну или несколько строк; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Odbc.OdbcDataReader.IsClosed">
      <summary>Указывает, закрыт ли объект <see cref="T:System.Data.Odbc.OdbcDataReader" />.</summary>
      <returns>Значение <see langword="true" />, если объект <see cref="T:System.Data.Odbc.OdbcDataReader" /> закрыт; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Odbc.OdbcDataReader.IsDBNull(System.Int32)">
      <summary>Возвращает значение, указывающее, содержатся ли в столбце несуществующие или отсутствующие значения.</summary>
      <param name="i">Порядковый номер столбца (от нуля).</param>
      <returns>Значение <see langword="true" />, если значение указанного столбца эквивалентно <see cref="T:System.DBNull" />; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Odbc.OdbcDataReader.Item(System.Int32)">
      <summary>Возвращает значение указанного столбца в собственном формате при наличии заданного порядкового номера столбца.</summary>
      <param name="i">Порядковый номер столбца.</param>
      <returns>Значение заданного столбца в собственном формате.</returns>
      <exception cref="T:System.IndexOutOfRangeException">Переданный индекс находился вне диапазона от 0 до значения <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
    </member>
    <member name="P:System.Data.Odbc.OdbcDataReader.Item(System.String)">
      <summary>Возвращает значение заданного столбца в собственном формате при наличии заданного имени столбца.</summary>
      <param name="value">Имя столбца.</param>
      <returns>Значение заданного столбца в собственном формате.</returns>
      <exception cref="T:System.IndexOutOfRangeException">Столбец с указанным именем не найден.</exception>
    </member>
    <member name="M:System.Data.Odbc.OdbcDataReader.NextResult">
      <summary>Перемещает объект <see cref="T:System.Data.Odbc.OdbcDataReader" /> в следующий результат, когда выполняется чтение результатов пакетных операторов SQL.</summary>
      <returns>Значение <see langword="true" />, если имеются и другие наборы результатов; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Odbc.OdbcDataReader.Read">
      <summary>Перемещает <see cref="T:System.Data.Odbc.OdbcDataReader" /> к следующей записи.</summary>
      <returns>Значение <see langword="true" />, если имеются другие строки; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Odbc.OdbcDataReader.RecordsAffected">
      <summary>Возвращает число строк, которые были изменены, вставлены или удалены инструкцией SQL.</summary>
      <returns>Число измененных, вставленных или удаленных строк. Значение -1 для операторов SELECT; значение 0, если строки не изменены или оператор не выполнен.</returns>
    </member>
    <member name="T:System.Data.Odbc.OdbcError">
      <summary>Собирает сведения, имеющие отношение к предупреждению или ошибке, возвращенной источником данных.</summary>
    </member>
    <member name="P:System.Data.Odbc.OdbcError.Message">
      <summary>Получает краткое описание ошибки.</summary>
      <returns>Описание ошибки.</returns>
    </member>
    <member name="P:System.Data.Odbc.OdbcError.NativeError">
      <summary>Получает сведения об ошибке, относящиеся к ее источнику.</summary>
      <returns>Сведения об ошибке, относящиеся к ее источнику.</returns>
    </member>
    <member name="P:System.Data.Odbc.OdbcError.Source">
      <summary>Получает имя драйвера, который сгенерировал ошибку.</summary>
      <returns>Имя драйвера, который сгенерировал ошибку.</returns>
    </member>
    <member name="P:System.Data.Odbc.OdbcError.SQLState">
      <summary>Получает пятисимвольный код ошибки, соответствующий стандарту ANSI SQL для баз данных.</summary>
      <returns>Пятизначный код ошибки, определяющий ее источник, если такая ошибка могла возникнуть в нескольких местах.</returns>
    </member>
    <member name="M:System.Data.Odbc.OdbcError.ToString">
      <summary>Возвращает полный текст сообщения об ошибке.</summary>
      <returns>Полный текст сообщения об ошибке.</returns>
    </member>
    <member name="T:System.Data.Odbc.OdbcErrorCollection">
      <summary>Собирает все ошибки, создаваемые <see cref="T:System.Data.Odbc.OdbcDataAdapter" />. Этот класс не наследуется.</summary>
    </member>
    <member name="M:System.Data.Odbc.OdbcErrorCollection.CopyTo(System.Array,System.Int32)">
      <summary>Копирует элементы коллекции <see cref="T:System.Data.Odbc.OdbcErrorCollection" /> в массив, начиная с заданного индекса внутри массива.</summary>
      <param name="array">Массив, в который копируются элементы.</param>
      <param name="i">Начальный индекс массива <paramref name="array" />.</param>
      <exception cref="T:System.ArgumentException">Сумма значений <paramref name="index" /> и количество элементов в коллекции <see cref="T:System.Data.Odbc.OdbcErrorCollection" /> больше длины массива.</exception>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="array" /> — <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Индекс <paramref name="index" /> является недопустимым для массива <paramref name="array" />.</exception>
    </member>
    <member name="M:System.Data.Odbc.OdbcErrorCollection.CopyTo(System.Data.Odbc.OdbcError[],System.Int32)">
      <summary>Копирует все элементы текущей коллекции <see cref="T:System.Data.Odbc.OdbcErrorCollection" /> в указанную коллекцию <see cref="T:System.Data.Odbc.OdbcErrorCollection" />, начиная с указанного индекса в коллекции назначения.</summary>
      <param name="array">Коллекция <see cref="T:System.Data.Odbc.OdbcErrorCollection" /> — назначение для элементов, копируемых из текущей коллекции <see cref="T:System.Data.Odbc.OdbcErrorCollection" />.</param>
      <param name="i">32-разрядное целое число, представляющее индекс в коллекции <see cref="T:System.Data.Odbc.OdbcErrorCollection" />, с которого начинается копирование.</param>
    </member>
    <member name="P:System.Data.Odbc.OdbcErrorCollection.Count">
      <summary>Получает число ошибок в коллекции.</summary>
      <returns>Общее число ошибок в коллекции.</returns>
    </member>
    <member name="M:System.Data.Odbc.OdbcErrorCollection.GetEnumerator">
      <summary>Возвращает объект, который реализует интерфейс <see cref="T:System.Collections.IEnumerator" /> и который может выполнять итерацию объектов <see cref="T:System.Data.Odbc.OdbcErrorCollection" /> в <see cref="T:System.Data.Odbc.OdbcErrorCollection" />.</summary>
      <returns>Объект, который реализует интерфейс <see cref="T:System.Collections.IEnumerator" /> и который может выполнять итерацию объектов <see cref="T:System.Data.Odbc.OdbcErrorCollection" /> в <see cref="T:System.Data.Odbc.OdbcErrorCollection" />.</returns>
    </member>
    <member name="P:System.Data.Odbc.OdbcErrorCollection.Item(System.Int32)">
      <summary>Возвращает ошибку с указанным индексом.</summary>
      <param name="i">Начинающийся с нуля индекс извлекаемой ошибки.</param>
      <returns>Объект <see cref="T:System.Data.Odbc.OdbcError" />, содержащий ошибку с указанным индексом.</returns>
    </member>
    <member name="P:System.Data.Odbc.OdbcErrorCollection.System#Collections#ICollection#IsSynchronized">
      <summary>Описание этого члена см. в разделе <see cref="P:System.Collections.ICollection.IsSynchronized" />.</summary>
      <returns>
        <see langword="true" />, если доступ к классу <see cref="T:System.Collections.ICollection" /> является синхронизированным (потокобезопасным); в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Odbc.OdbcErrorCollection.System#Collections#ICollection#SyncRoot">
      <summary>Описание этого члена см. в разделе <see cref="P:System.Collections.ICollection.SyncRoot" />.</summary>
      <returns>Объект, который может использоваться для синхронизации доступа к <see cref="T:System.Collections.ICollection" />.</returns>
    </member>
    <member name="T:System.Data.Odbc.OdbcException">
      <summary>Исключение, которое генерируется в тех случаях, когда источником данных ODBC возвращается предупреждение или ошибка. Этот класс не наследуется.</summary>
    </member>
    <member name="P:System.Data.Odbc.OdbcException.Errors">
      <summary>Получает коллекцию из одного или нескольких объектов <see cref="T:System.Data.Odbc.OdbcError" />, которые предоставляют подробные сведения об исключениях, выдаваемых поставщиком данных .NET Framework для ODBC.</summary>
      <returns>Накопленные экземпляры класса <see cref="T:System.Data.Odbc.OdbcError" />.</returns>
    </member>
    <member name="M:System.Data.Odbc.OdbcException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Этот элемент переопределяет метод <see cref="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />.</summary>
      <param name="si">Объект <see cref="T:System.Runtime.Serialization.SerializationInfo" />, хранящий сериализованные данные объекта, относящиеся к выдаваемому исключению.</param>
      <param name="context">Объект <see cref="T:System.Runtime.Serialization.StreamingContext" />, содержащий контекстные сведения об источнике или назначении.</param>
      <exception cref="T:System.ArgumentNullException">Значением параметра <paramref name="si" /> является пустая ссылка (<see langword="Nothing" /> в Visual Basic).</exception>
    </member>
    <member name="P:System.Data.Odbc.OdbcException.Source">
      <summary>Получает имя драйвера ODBC, который сгенерировал ошибку.</summary>
      <returns>Имя драйвера ODBC, который сгенерировал ошибку.</returns>
    </member>
    <member name="T:System.Data.Odbc.OdbcFactory">
      <summary>Представляет набор методов для создания экземпляров классов поставщиков ODBC, реализующих источник данных.</summary>
    </member>
    <member name="M:System.Data.Odbc.OdbcFactory.CreateComm*******">
      <summary>Возвращает строго типизированный экземпляр <see cref="T:System.Data.Common.DbComm*******" />.</summary>
      <returns>Новый строго типизированный экземпляр <see cref="T:System.Data.Common.DbComm*******" />.</returns>
    </member>
    <member name="M:System.Data.Odbc.OdbcFactory.CreateComm*******Builder">
      <summary>Возвращает строго типизированный экземпляр <see cref="T:System.Data.Common.DbComm*******Builder" />.</summary>
      <returns>Новый строго типизированный экземпляр <see cref="T:System.Data.Common.DbComm*******Builder" />.</returns>
    </member>
    <member name="M:System.Data.Odbc.OdbcFactory.CreateConnection">
      <summary>Возвращает строго типизированный экземпляр <see cref="T:System.Data.Common.DbConnection" />.</summary>
      <returns>Новый строго типизированный экземпляр <see cref="T:System.Data.Common.DbConnection" />.</returns>
    </member>
    <member name="M:System.Data.Odbc.OdbcFactory.CreateConnectionStringBuilder">
      <summary>Возвращает строго типизированный экземпляр <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</summary>
      <returns>Новый строго типизированный экземпляр <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</returns>
    </member>
    <member name="M:System.Data.Odbc.OdbcFactory.CreateDataAdapter">
      <summary>Возвращает строго типизированный экземпляр <see cref="T:System.Data.Common.DbDataAdapter" />.</summary>
      <returns>Новый строго типизированный экземпляр <see cref="T:System.Data.Common.DbDataAdapter" />.</returns>
    </member>
    <member name="M:System.Data.Odbc.OdbcFactory.CreateParameter">
      <summary>Возвращает строго типизированный экземпляр <see cref="T:System.Data.Common.DbParameter" />.</summary>
      <returns>Новый строго типизированный экземпляр <see cref="T:System.Data.Common.DbParameter" />.</returns>
    </member>
    <member name="M:System.Data.Odbc.OdbcFactory.CreatePermission(System.Security.Permissions.PermissionState)">
      <summary>Возвращает строго типизированный экземпляр <see cref="T:System.Security.CodeAccessPermission" />.</summary>
      <param name="state">Элемент перечисления <see cref="T:System.Security.Permissions.PermissionState" />.</param>
      <returns>Новый строго типизированный экземпляр <see cref="T:System.Security.CodeAccessPermission" />.</returns>
    </member>
    <member name="F:System.Data.Odbc.OdbcFactory.Instance">
      <summary>Получает экземпляр <see cref="T:System.Data.Odbc.OdbcFactory" />, который позволяет извлекать объекты данных со строгой типизацией.</summary>
    </member>
    <member name="T:System.Data.Odbc.OdbcInfoMessageEventArgs">
      <summary>Предоставляет данные для события <see cref="E:System.Data.Odbc.OdbcConnection.InfoMessage" />.</summary>
    </member>
    <member name="P:System.Data.Odbc.OdbcInfoMessageEventArgs.Errors">
      <summary>Получает коллекцию предупреждений, отправленных из источника данных.</summary>
      <returns>Коллекция предупреждений, отправленных из источника данных.</returns>
    </member>
    <member name="P:System.Data.Odbc.OdbcInfoMessageEventArgs.Message">
      <summary>Возвращает полный текст ошибки, отправленной из базы данных.</summary>
      <returns>Полный текст ошибки.</returns>
    </member>
    <member name="M:System.Data.Odbc.OdbcInfoMessageEventArgs.ToString">
      <summary>Извлекает строковое представление события <see cref="E:System.Data.Odbc.OdbcConnection.InfoMessage" />.</summary>
      <returns>Строка, представляющая событие <see cref="E:System.Data.Odbc.OdbcConnection.InfoMessage" />.</returns>
    </member>
    <member name="T:System.Data.Odbc.OdbcInfoMessageEventH*******ler">
      <summary>Представляет метод, обрабатывающий событие <see cref="E:System.Data.Odbc.OdbcConnection.InfoMessage" /> для <see cref="T:System.Data.Odbc.OdbcConnection" />.</summary>
      <param name="sender">Источник события.</param>
      <param name="e">Объект <see cref="T:System.Data.Odbc.OdbcInfoMessageEventArgs" />, содержащий данные о событии.</param>
    </member>
    <member name="T:System.Data.Odbc.OdbcMetaDataCollectionNames">
      <summary>Предоставляет список констант для использования с методом GetSchema в целях извлечения коллекций метаданных.</summary>
    </member>
    <member name="F:System.Data.Odbc.OdbcMetaDataCollectionNames.Columns">
      <summary>Константа для использования с методом GetSchema, представляющая коллекцию Columns.</summary>
    </member>
    <member name="F:System.Data.Odbc.OdbcMetaDataCollectionNames.Indexes">
      <summary>Константа для использования с методом GetSchema, представляющая коллекцию Indexes.</summary>
    </member>
    <member name="F:System.Data.Odbc.OdbcMetaDataCollectionNames.ProcedureColumns">
      <summary>Константа для использования с методом GetSchema, представляющая коллекцию ProcedureColumns.</summary>
    </member>
    <member name="F:System.Data.Odbc.OdbcMetaDataCollectionNames.ProcedureParameters">
      <summary>Константа для использования с методом GetSchema, представляющая коллекцию ProcedureParameters.</summary>
    </member>
    <member name="F:System.Data.Odbc.OdbcMetaDataCollectionNames.Procedures">
      <summary>Константа для использования с методом GetSchema, представляющая коллекцию Procedures.</summary>
    </member>
    <member name="F:System.Data.Odbc.OdbcMetaDataCollectionNames.Tables">
      <summary>Константа для использования с методом GetSchema, представляющая коллекцию Tables.</summary>
    </member>
    <member name="F:System.Data.Odbc.OdbcMetaDataCollectionNames.Views">
      <summary>Константа для использования с методом GetSchema, представляющая коллекцию Views.</summary>
    </member>
    <member name="T:System.Data.Odbc.OdbcMetaDataColumnNames">
      <summary>Предоставляет статические значения, которые используются для имен столбцов в объектах <see cref="T:System.Data.Odbc.OdbcMetaDataCollectionNames" />, содержащихся в таблице <see cref="T:System.Data.DataTable" />. Объект <see cref="T:System.Data.DataTable" /> создан с помощью метода GetSchema.</summary>
    </member>
    <member name="F:System.Data.Odbc.OdbcMetaDataColumnNames.BooleanFalseLiteral">
      <summary>Используется методом GetSchema для создания столбца BooleanFalseLiteral.</summary>
    </member>
    <member name="F:System.Data.Odbc.OdbcMetaDataColumnNames.BooleanTrueLiteral">
      <summary>Используется методом GetSchema для создания столбца BooleanTrueLiteral.</summary>
    </member>
    <member name="F:System.Data.Odbc.OdbcMetaDataColumnNames.SQLType">
      <summary>Используется методом GetSchema для создания столбца SQLType.</summary>
    </member>
    <member name="T:System.Data.Odbc.OdbcParameter">
      <summary>Представляет параметр для объекта <see cref="T:System.Data.Odbc.OdbcComm*******" /> и (необязательно) его сопоставление с <see cref="T:System.Data.DataColumn" />. Этот класс не наследуется.</summary>
    </member>
    <member name="M:System.Data.Odbc.OdbcParameter.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.Odbc.OdbcParameter" />.</summary>
    </member>
    <member name="M:System.Data.Odbc.OdbcParameter.#ctor(System.String,System.Data.Odbc.OdbcType)">
      <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.Data.Odbc.OdbcParameter" />, использующего имя параметра и тип данных.</summary>
      <param name="name">Имя параметра.</param>
      <param name="type">Одно из значений <see cref="T:System.Data.Odbc.OdbcType" />.</param>
      <exception cref="T:System.ArgumentException">Значение, передаваемое в параметре <paramref name="type" />, имеет недопустимый тип внутренних данных.</exception>
    </member>
    <member name="M:System.Data.Odbc.OdbcParameter.#ctor(System.String,System.Data.Odbc.OdbcType,System.Int32)">
      <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.Data.Odbc.OdbcParameter" />, использующего имя параметра, тип данных и длину.</summary>
      <param name="name">Имя параметра.</param>
      <param name="type">Одно из значений <see cref="T:System.Data.Odbc.OdbcType" />.</param>
      <param name="size">Длина параметра.</param>
      <exception cref="T:System.ArgumentException">Значение, передаваемое в параметре <paramref name="type" />, имеет недопустимый тип внутренних данных.</exception>
    </member>
    <member name="M:System.Data.Odbc.OdbcParameter.#ctor(System.String,System.Data.Odbc.OdbcType,System.Int32,System.Data.ParameterDirection,System.Boolean,System.Byte,System.Byte,System.String,System.Data.DataRowVersion,System.Object)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.Odbc.OdbcParameter" />, использующий имя параметра, тип данных, длину, имя исходного столбца, направление параметра, точность чисел и другие свойства.</summary>
      <param name="parameterName">Имя параметра.</param>
      <param name="odbcType">Одно из значений <see cref="T:System.Data.Odbc.OdbcType" />.</param>
      <param name="size">Длина параметра.</param>
      <param name="parameterDirection">Одно из значений <see cref="T:System.Data.ParameterDirection" />.</param>
      <param name="isNullable">Значение <see langword="true" />, если поле допускает значение NULL, значение <see langword="false" /> — в противном случае.</param>
      <param name="precision">Общее число разрядов слева и справа от десятичной запятой, до которого вычисляется значения <see cref="P:System.Data.Odbc.OdbcParameter.Value" />.</param>
      <param name="scale">Общее число десятичных разрядов, до которого вычисляется значение <see cref="P:System.Data.Odbc.OdbcParameter.Value" />.</param>
      <param name="srcColumn">Имя исходного столбца.</param>
      <param name="srcVersion">Одно из значений <see cref="T:System.Data.DataRowVersion" />.</param>
      <param name="value">Объект <see cref="T:System.Object" />, который является значением <see cref="T:System.Data.Odbc.OdbcParameter" />.</param>
      <exception cref="T:System.ArgumentException">Значение, передаваемое в параметре <paramref name="type" />, имеет недопустимый тип внутренних данных.</exception>
    </member>
    <member name="M:System.Data.Odbc.OdbcParameter.#ctor(System.String,System.Data.Odbc.OdbcType,System.Int32,System.Data.ParameterDirection,System.Byte,System.Byte,System.String,System.Data.DataRowVersion,System.Boolean,System.Object)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.Odbc.OdbcParameter" />, использующий имя параметра, тип данных, длину, имя исходного столбца, направление параметра, точность чисел и другие свойства.</summary>
      <param name="parameterName">Имя параметра.</param>
      <param name="odbcType">Одно из значений <see cref="P:System.Data.Odbc.OdbcParameter.OdbcType" />.</param>
      <param name="size">Длина параметра.</param>
      <param name="parameterDirection">Одно из значений <see cref="T:System.Data.ParameterDirection" />.</param>
      <param name="precision">Общее число разрядов слева и справа от десятичной запятой, до которого вычисляется значения <see cref="P:System.Data.Odbc.OdbcParameter.Value" />.</param>
      <param name="scale">Общее число десятичных разрядов, до которого вычисляется значение <see cref="P:System.Data.Odbc.OdbcParameter.Value" />.</param>
      <param name="sourceColumn">Имя исходного столбца.</param>
      <param name="sourceVersion">Одно из значений <see cref="T:System.Data.DataRowVersion" />.</param>
      <param name="sourceColumnNullMapping">Значение <see langword="true" />, если соответствующий столбец источника может содержать значение null; в противном случае — значение <see langword="false" />.</param>
      <param name="value">Объект <see cref="T:System.Object" />, который является значением <see cref="T:System.Data.Odbc.OdbcParameter" />.</param>
      <exception cref="T:System.ArgumentException">Значение, передаваемое в параметре <paramref name="type" />, имеет недопустимый тип внутренних данных.</exception>
    </member>
    <member name="M:System.Data.Odbc.OdbcParameter.#ctor(System.String,System.Data.Odbc.OdbcType,System.Int32,System.String)">
      <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.Data.Odbc.OdbcParameter" />, использующего имя параметра, тип данных, длину и имя столбца источника.</summary>
      <param name="name">Имя параметра.</param>
      <param name="type">Одно из значений <see cref="T:System.Data.Odbc.OdbcType" />.</param>
      <param name="size">Длина параметра.</param>
      <param name="sourcecolumn">Имя исходного столбца.</param>
      <exception cref="T:System.ArgumentException">Значение, передаваемое в параметре <paramref name="type" />, имеет недопустимый тип внутренних данных.</exception>
    </member>
    <member name="M:System.Data.Odbc.OdbcParameter.#ctor(System.String,System.Object)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.Odbc.OdbcParameter" />, использующий имя параметра и объект <see cref="T:System.Data.Odbc.OdbcParameter" />.</summary>
      <param name="name">Имя параметра.</param>
      <param name="value">Объект <see cref="T:System.Data.Odbc.OdbcParameter" />.</param>
    </member>
    <member name="P:System.Data.Odbc.OdbcParameter.DbType">
      <summary>Возвращает или устанавливает тип <see cref="T:System.Data.DbType" /> параметра.</summary>
      <returns>Одно из значений <see cref="T:System.Data.DbType" />. Значение по умолчанию — <see cref="T:System.String" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Свойству не задано допустимое значение <see cref="T:System.Data.DbType" />.</exception>
    </member>
    <member name="P:System.Data.Odbc.OdbcParameter.Direction">
      <summary>Возвращает или задает значение, указывающее, является ли параметр только входным, только выходным, двунаправленным или параметром, возвращаемым хранимой процедурой.</summary>
      <returns>Одно из значений <see cref="T:System.Data.ParameterDirection" />. Значение по умолчанию — <see langword="Input" />.</returns>
      <exception cref="T:System.ArgumentException">Для свойства не задано одно из допустимых значений типа <see cref="T:System.Data.ParameterDirection" />.</exception>
    </member>
    <member name="P:System.Data.Odbc.OdbcParameter.IsNullable">
      <summary>Возвращает или задает значение, указывающее, принимает ли этот параметр значения NULL.</summary>
      <returns>Значение <see langword="true" />, если допускаются значения NULL. В противном случае — значение <see langword="false" />. Значение по умолчанию — <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Odbc.OdbcParameter.OdbcType">
      <summary>Возвращает или устанавливает тип <see cref="T:System.Data.Odbc.OdbcType" /> параметра.</summary>
      <returns>Значение <see cref="T:System.Data.Odbc.OdbcType" />, которое является типом <see cref="T:System.Data.Odbc.OdbcType" /> параметра. Значение по умолчанию — <see langword="Nchar" />.</returns>
    </member>
    <member name="P:System.Data.Odbc.OdbcParameter.ParameterName">
      <summary>Возвращает или задает имя таблицы для объекта <see cref="T:System.Data.Odbc.OdbcParameter" />.</summary>
      <returns>Имя <see cref="T:System.Data.Odbc.OdbcParameter" />. Значение по умолчанию — пустая строка ("").</returns>
    </member>
    <member name="P:System.Data.Odbc.OdbcParameter.Precision">
      <summary>Возвращает или задает количество знаков, используемых для представления свойства <see cref="P:System.Data.Odbc.OdbcParameter.Value" />.</summary>
      <returns>Максимальное число разрядов, используемых для представления свойства <see cref="P:System.Data.Odbc.OdbcParameter.Value" />. Значение по умолчанию равно 0 и означает, что точность <see cref="P:System.Data.Odbc.OdbcParameter.Value" /> задается поставщиком данных.</returns>
    </member>
    <member name="M:System.Data.Odbc.OdbcParameter.ResetDbType">
      <summary>Сбрасывает тип, связанный с параметром <see cref="T:System.Data.Odbc.OdbcParameter" />.</summary>
    </member>
    <member name="M:System.Data.Odbc.OdbcParameter.ResetOdbcType">
      <summary>Сбрасывает тип, связанный с параметром <see cref="T:System.Data.Odbc.OdbcParameter" />.</summary>
    </member>
    <member name="P:System.Data.Odbc.OdbcParameter.Scale">
      <summary>Возвращает или задает число десятичных разрядов, до которых вычисляется значение <see cref="P:System.Data.Odbc.OdbcParameter.Value" />.</summary>
      <returns>Число десятичных разрядов, до которых вычисляется значение <see cref="P:System.Data.Odbc.OdbcParameter.Value" />. Значение по умолчанию — 0.</returns>
    </member>
    <member name="P:System.Data.Odbc.OdbcParameter.Size">
      <summary>Возвращает или задает максимальный размер данных в столбце.</summary>
      <returns>Максимальный размер данных в столбце. Значение по умолчанию определяется исходя из значения параметра.</returns>
    </member>
    <member name="P:System.Data.Odbc.OdbcParameter.SourceColumn">
      <summary>Возвращает или задает имя исходного столбца, сопоставленного <see cref="T:System.Data.DataSet" /> и используемого для загрузки или возвращения значения <see cref="P:System.Data.Odbc.OdbcParameter.Value" />.</summary>
      <returns>Имя исходного столбца, который будет использоваться для установки значения этого параметра. Значение по умолчанию — пустая строка ("").</returns>
    </member>
    <member name="P:System.Data.Odbc.OdbcParameter.SourceColumnNullMapping">
      <summary>Возвращает или задает значение, показывающее, допускает ли исходный столбец значение NULL. Это позволяет объекту <see cref="T:System.Data.Common.DbComm*******Builder" /> правильно генерировать операторы Update для столбцов, которые могут содержать значения null.</summary>
      <returns>Значение <see langword="true" />, если исходный столбец допускает значение NULL; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Odbc.OdbcParameter.SourceVersion">
      <summary>Возвращает или задает значение <see cref="T:System.Data.DataRowVersion" />, используемое при загрузке <see cref="P:System.Data.Odbc.OdbcParameter.Value" />.</summary>
      <returns>Одно из значений <see cref="T:System.Data.DataRowVersion" />. Значением по умолчанию является "Current" (Текущий).</returns>
    </member>
    <member name="M:System.Data.Odbc.OdbcParameter.System#ICloneable#Clone">
      <summary>Описание этого члена см. в разделе <see cref="M:System.ICloneable.Clone" />.</summary>
      <returns>Новый объект <see cref="T:System.Object" />, который является копией данного экземпляра.</returns>
    </member>
    <member name="M:System.Data.Odbc.OdbcParameter.ToString">
      <summary>Возвращает строку, содержащую имя <see cref="P:System.Data.Odbc.OdbcParameter.ParameterName" />.</summary>
      <returns>Строка, содержащая имя <see cref="P:System.Data.Odbc.OdbcParameter.ParameterName" />.</returns>
    </member>
    <member name="P:System.Data.Odbc.OdbcParameter.Value">
      <summary>Возвращает или задает значение параметра.</summary>
      <returns>Объект <see cref="T:System.Object" />, который является значением параметра. Значение по умолчанию — null.</returns>
    </member>
    <member name="T:System.Data.Odbc.OdbcParameterCollection">
      <summary>Представляет коллекцию параметров, относящихся к <see cref="T:System.Data.Odbc.OdbcComm*******" />, а также соответствующие им сопоставления со столбцами в <see cref="T:System.Data.DataSet" />. Этот класс не наследуется.</summary>
    </member>
    <member name="M:System.Data.Odbc.OdbcParameterCollection.Add(System.Data.Odbc.OdbcParameter)">
      <summary>Добавляет заданный объект <see cref="T:System.Data.Odbc.OdbcParameter" /> в <see cref="T:System.Data.Odbc.OdbcParameterCollection" />.</summary>
      <param name="value">Параметр <see cref="T:System.Data.Odbc.OdbcParameter" /> для добавления в коллекцию.</param>
      <returns>Индекс нового объекта <see cref="T:System.Data.Odbc.OdbcParameter" />.</returns>
      <exception cref="T:System.ArgumentException">
        <see cref="T:System.Data.Odbc.OdbcParameter" />, заданный в параметре <paramref name="value" />, уже добавлен в эту или другую коллекцию <see cref="T:System.Data.Odbc.OdbcParameterCollection" />.</exception>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="value" /> имеет значение null.</exception>
    </member>
    <member name="M:System.Data.Odbc.OdbcParameterCollection.Add(System.Object)">
      <summary>Добавляет указанный объект <see cref="T:System.Data.Odbc.OdbcParameter" /> в коллекцию <see cref="T:System.Data.Odbc.OdbcParameterCollection" />.</summary>
      <param name="value">Объект <see cref="T:System.Object" />.</param>
      <returns>Индекс нового объекта <see cref="T:System.Data.Odbc.OdbcParameter" /> в коллекции.</returns>
    </member>
    <member name="M:System.Data.Odbc.OdbcParameterCollection.Add(System.String,System.Data.Odbc.OdbcType)">
      <summary>Добавляет <see cref="T:System.Data.Odbc.OdbcParameter" /> с заданным именем параметра и типом данных в коллекцию <see cref="T:System.Data.Odbc.OdbcParameterCollection" />.</summary>
      <param name="parameterName">Имя параметра.</param>
      <param name="odbcType">Одно из значений <see cref="T:System.Data.Odbc.OdbcType" />.</param>
      <returns>Индекс нового объекта <see cref="T:System.Data.Odbc.OdbcParameter" />.</returns>
    </member>
    <member name="M:System.Data.Odbc.OdbcParameterCollection.Add(System.String,System.Data.Odbc.OdbcType,System.Int32)">
      <summary>Добавляет <see cref="T:System.Data.Odbc.OdbcParameter" /> с заданным именем, типом данных и длиной столбца в <see cref="T:System.Data.Odbc.OdbcParameterCollection" />.</summary>
      <param name="parameterName">Имя параметра.</param>
      <param name="odbcType">Одно из значений <see cref="T:System.Data.Odbc.OdbcType" />.</param>
      <param name="size">Длина столбца.</param>
      <returns>Индекс нового объекта <see cref="T:System.Data.Odbc.OdbcParameter" />.</returns>
    </member>
    <member name="M:System.Data.Odbc.OdbcParameterCollection.Add(System.String,System.Data.Odbc.OdbcType,System.Int32,System.String)">
      <summary>Добавляет объект <see cref="T:System.Data.Odbc.OdbcParameter" /> с заданным именем параметра, типом данных, длиной столбца и именем столбца источника в <see cref="T:System.Data.Odbc.OdbcParameterCollection" />.</summary>
      <param name="parameterName">Имя параметра.</param>
      <param name="odbcType">Одно из значений <see cref="T:System.Data.Odbc.OdbcType" />.</param>
      <param name="size">Длина столбца.</param>
      <param name="sourceColumn">Имя исходного столбца.</param>
      <returns>Индекс нового объекта <see cref="T:System.Data.Odbc.OdbcParameter" />.</returns>
    </member>
    <member name="M:System.Data.Odbc.OdbcParameterCollection.Add(System.String,System.Object)">
      <summary>Добавляет объект <see cref="T:System.Data.Odbc.OdbcParameter" /> с заданным именем параметра и значением в <see cref="T:System.Data.Odbc.OdbcParameterCollection" />.</summary>
      <param name="parameterName">Имя параметра.</param>
      <param name="value">
        <see cref="P:System.Data.OleDb.OleDbParameter.Value" /> из <see cref="T:System.Data.Odbc.OdbcParameter" /> для добавления в коллекцию.</param>
      <returns>Индекс нового объекта <see cref="T:System.Data.Odbc.OdbcParameter" />.</returns>
      <exception cref="T:System.InvalidCastException">Параметр <paramref name="value" /> не является <see cref="T:System.Data.Odbc.OdbcParameter" />.</exception>
    </member>
    <member name="M:System.Data.Odbc.OdbcParameterCollection.AddRange(System.Array)">
      <summary>Добавляет массив значений в конец коллекции <see cref="T:System.Data.Odbc.OdbcParameterCollection" />.</summary>
      <param name="values">Добавляемые значения <see cref="T:System.Array" />.</param>
    </member>
    <member name="M:System.Data.Odbc.OdbcParameterCollection.AddRange(System.Data.Odbc.OdbcParameter[])">
      <summary>Добавляет массив значений <see cref="T:System.Data.Odbc.OdbcParameter" /> в конец коллекции <see cref="T:System.Data.Odbc.OdbcParameterCollection" />.</summary>
      <param name="values">Массив объектов <see cref="T:System.Data.Odbc.OdbcParameter" />, добавляемый в коллекцию.</param>
    </member>
    <member name="M:System.Data.Odbc.OdbcParameterCollection.AddWithValue(System.String,System.Object)">
      <summary>Добавляет значение в конец коллекции <see cref="T:System.Data.Odbc.OdbcParameterCollection" />.</summary>
      <param name="parameterName">Имя параметра.</param>
      <param name="value">Добавляемое значение.</param>
      <returns>Объект <see cref="T:System.Data.Odbc.OdbcParameter" />.</returns>
    </member>
    <member name="M:System.Data.Odbc.OdbcParameterCollection.Clear">
      <summary>Удаляет все объекты <see cref="T:System.Data.Odbc.OdbcParameter" /> из коллекции <see cref="T:System.Data.Odbc.OdbcParameterCollection" />.</summary>
    </member>
    <member name="M:System.Data.Odbc.OdbcParameterCollection.Contains(System.Data.Odbc.OdbcParameter)">
      <summary>Определяет, находится ли заданный объект <see cref="T:System.Data.Odbc.OdbcParameter" /> в этой коллекции <see cref="T:System.Data.Odbc.OdbcParameterCollection" />.</summary>
      <param name="value">Значение <see cref="T:System.Data.Odbc.OdbcParameter" />.</param>
      <returns>Значение <see langword="true" />, если <see cref="T:System.Data.Odbc.OdbcParameter" /> входит в коллекцию; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Odbc.OdbcParameterCollection.Contains(System.Object)">
      <summary>Определяет, находится ли заданный объект <see cref="T:System.Object" /> в этой коллекции <see cref="T:System.Data.Odbc.OdbcParameterCollection" />.</summary>
      <param name="value">Значение <see cref="T:System.Object" />.</param>
      <returns>Значение <see langword="true" />, если <see cref="T:System.Data.Odbc.OdbcParameterCollection" /> содержит значение; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Odbc.OdbcParameterCollection.Contains(System.String)">
      <summary>Получает значение, указывающее, имеется ли в коллекции объект <see cref="T:System.Data.Odbc.OdbcParameter" /> с заданным именем параметра.</summary>
      <param name="value">Имя искомого объекта <see cref="T:System.Data.Odbc.OdbcParameter" />.</param>
      <returns>Значение <see langword="true" />, если коллекция содержит параметр. В противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Odbc.OdbcParameterCollection.CopyTo(System.Array,System.Int32)">
      <summary>Копирует все элементы текущей коллекции <see cref="T:System.Data.Odbc.OdbcParameterCollection" /> в указанный одномерный массив <see cref="T:System.Array" />, начиная с указанного индекса в массиве <see cref="T:System.Array" />.</summary>
      <param name="array">Одномерный массив <see cref="T:System.Array" /> — назначение для элементов, копируемых из текущей коллекции <see cref="T:System.Data.Odbc.OdbcParameterCollection" />.</param>
      <param name="index">32-разрядное целое число, представляющее индекс в коллекции <see cref="T:System.Array" />, с которого начинается копирование.</param>
    </member>
    <member name="M:System.Data.Odbc.OdbcParameterCollection.CopyTo(System.Data.Odbc.OdbcParameter[],System.Int32)">
      <summary>Копирует все элементы текущей коллекции <see cref="T:System.Data.Odbc.OdbcParameterCollection" /> в указанную коллекцию <see cref="T:System.Data.Odbc.OdbcParameterCollection" />, начиная с указанного индекса в коллекции назначения.</summary>
      <param name="array">Коллекция <see cref="T:System.Data.Odbc.OdbcParameterCollection" /> — назначение для элементов, копируемых из текущей коллекции <see cref="T:System.Data.Odbc.OdbcParameterCollection" />.</param>
      <param name="index">32-разрядное целое число, представляющее индекс в коллекции <see cref="T:System.Data.Odbc.OdbcParameterCollection" />, с которого начинается копирование.</param>
    </member>
    <member name="P:System.Data.Odbc.OdbcParameterCollection.Count">
      <summary>Возвращает целое число, которое содержит количество элементов в <see cref="T:System.Data.Odbc.OdbcParameterCollection" />. Только для чтения.</summary>
      <returns>Число элементов в коллекции <see cref="T:System.Data.Odbc.OdbcParameterCollection" /> является значением типа Integer.</returns>
    </member>
    <member name="M:System.Data.Odbc.OdbcParameterCollection.GetEnumerator">
      <summary>Возвращает перечислитель, осуществляющий перебор элементов списка <see cref="T:System.Data.Odbc.OdbcParameterCollection" />.</summary>
      <returns>Интерфейс <see cref="T:System.Collections.IEnumerator" /> для <see cref="T:System.Data.Odbc.OdbcParameterCollection" />.</returns>
    </member>
    <member name="M:System.Data.Odbc.OdbcParameterCollection.IndexOf(System.Data.Odbc.OdbcParameter)">
      <summary>Возвращает положение указанного объекта <see cref="T:System.Data.Odbc.OdbcParameter" /> в коллекции.</summary>
      <param name="value">Объект <see cref="T:System.Data.Odbc.OdbcParameter" /> в коллекции, который требуется найти.</param>
      <returns>Местоположение (отсчитываемое с нуля) указанного объекта <see cref="T:System.Data.Odbc.OdbcParameter" /> в коллекции.</returns>
    </member>
    <member name="M:System.Data.Odbc.OdbcParameterCollection.IndexOf(System.Object)">
      <summary>Возвращает положение указанного объекта <see cref="T:System.Object" /> в коллекции.</summary>
      <param name="value">Искомый объект <see cref="T:System.Object" />.</param>
      <returns>Отсчитываемое от нуля расположение указанного объекта <see cref="T:System.Object" />, который является объектом <see cref="T:System.Data.Odbc.OdbcParameter" /> в коллекции.</returns>
    </member>
    <member name="M:System.Data.Odbc.OdbcParameterCollection.IndexOf(System.String)">
      <summary>Возвращает положение заданного объекта <see cref="T:System.Data.Odbc.OdbcParameter" /> с указанным именем.</summary>
      <param name="parameterName">Имя искомого объекта <see cref="T:System.Data.Odbc.OdbcParameter" /> с учетом регистра.</param>
      <returns>Положение (отсчет с нуля) указанного объекта <see cref="T:System.Data.Odbc.OdbcParameter" /> с заданным именем с учетом регистра.</returns>
    </member>
    <member name="M:System.Data.Odbc.OdbcParameterCollection.Insert(System.Int32,System.Data.Odbc.OdbcParameter)">
      <summary>Вставляет объект <see cref="T:System.Data.Odbc.OdbcParameter" /> в коллекцию <see cref="T:System.Data.Odbc.OdbcParameterCollection" /> по указанному индексу.</summary>
      <param name="index">Отсчитываемый с нуля индекс, с которым следует вставить объект.</param>
      <param name="value">Объект <see cref="T:System.Data.Odbc.OdbcParameter" />, вставляемый в коллекцию <see cref="T:System.Data.Odbc.OdbcParameterCollection" />.</param>
    </member>
    <member name="M:System.Data.Odbc.OdbcParameterCollection.Insert(System.Int32,System.Object)">
      <summary>Вставляет <see cref="T:System.Object" /> в <see cref="T:System.Data.Odbc.OdbcParameterCollection" /> по указанному индексу.</summary>
      <param name="index">Отсчитываемый с нуля индекс, с которым следует вставить объект.</param>
      <param name="value">Объект <see cref="T:System.Object" />, который необходимо вставить в <see cref="T:System.Data.Odbc.OdbcParameterCollection" />.</param>
    </member>
    <member name="P:System.Data.Odbc.OdbcParameterCollection.IsFixedSize">
      <summary>Возвращает значение, показывающее, имеет ли объект <see cref="T:System.Data.Odbc.OdbcParameterCollection" /> фиксированный размер. Только для чтения.</summary>
      <returns>Значение <see langword="true" />, если словарь <see cref="T:System.Data.Odbc.OdbcParameterCollection" /> имеет фиксированный размер; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Odbc.OdbcParameterCollection.IsReadOnly">
      <summary>Возвращает значение, которое определяет, является ли коллекция <see cref="T:System.Data.Odbc.OdbcParameterCollection" /> доступной только для чтения.</summary>
      <returns>Значение <see langword="true" />, если коллекция <see cref="T:System.Data.Odbc.OdbcParameterCollection" /> доступна только для чтения, в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Odbc.OdbcParameterCollection.IsSynchronized">
      <summary>Возвращает значение, которое определяет, является ли коллекция <see cref="T:System.Data.Odbc.OdbcParameterCollection" /> синхронизированной. Только для чтения.</summary>
      <returns>Значение <see langword="true" />, если коллекция <see cref="T:System.Data.Odbc.OdbcParameterCollection" /> синхронизирована; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Odbc.OdbcParameterCollection.Item(System.Int32)">
      <summary>Возвращает или задает объект <see cref="T:System.Data.Odbc.OdbcParameter" /> с заданным индексом.</summary>
      <param name="index">Индекс получаемого параметра (отсчет с нуля).</param>
      <returns>Параметр <see cref="T:System.Data.Odbc.OdbcParameter" /> по указанному индексу.</returns>
      <exception cref="T:System.IndexOutOfRangeException">Указанный индекс не существует.</exception>
    </member>
    <member name="P:System.Data.Odbc.OdbcParameterCollection.Item(System.String)">
      <summary>Возвращает или задает объект <see cref="T:System.Data.Odbc.OdbcParameter" /> с заданным именем.</summary>
      <param name="parameterName">Имя получаемого параметра.</param>
      <returns>Параметр <see cref="T:System.Data.Odbc.OdbcParameter" /> с указанным именем.</returns>
      <exception cref="T:System.IndexOutOfRangeException">Указанного имени не существует.</exception>
    </member>
    <member name="M:System.Data.Odbc.OdbcParameterCollection.Remove(System.Data.Odbc.OdbcParameter)">
      <summary>Удаляет объект <see cref="T:System.Data.Odbc.OdbcParameter" /> из коллекции <see cref="T:System.Data.Odbc.OdbcParameterCollection" />.</summary>
      <param name="value">Объект <see cref="T:System.Data.Odbc.OdbcParameter" />, который должен быть удален из коллекции.</param>
      <exception cref="T:System.InvalidCastException">Параметр не является объектом <see cref="T:System.Data.Odbc.OdbcParameter" />.</exception>
      <exception cref="T:System.SystemException">Параметр отсутствует в коллекции.</exception>
    </member>
    <member name="M:System.Data.Odbc.OdbcParameterCollection.Remove(System.Object)">
      <summary>Удаляет объект <see cref="T:System.Object" /> из коллекции <see cref="T:System.Data.Odbc.OdbcParameterCollection" />.</summary>
      <param name="value">Объект<see cref="T:System.Object" />, удаляемый из коллекции <see cref="T:System.Data.Odbc.OdbcParameterCollection" />.</param>
    </member>
    <member name="M:System.Data.Odbc.OdbcParameterCollection.RemoveAt(System.Int32)">
      <summary>Удаляет объект <see cref="T:System.Data.Odbc.OdbcParameter" /> с указанным индексом из коллекции <see cref="T:System.Data.Odbc.OdbcParameterCollection" />.</summary>
      <param name="index">Индекс (отсчет с нуля) удаляемого объекта <see cref="T:System.Data.Odbc.OdbcParameter" />.</param>
    </member>
    <member name="M:System.Data.Odbc.OdbcParameterCollection.RemoveAt(System.String)">
      <summary>Удаляет объект <see cref="T:System.Data.Odbc.OdbcParameter" /> из коллекции <see cref="T:System.Data.Odbc.OdbcParameterCollection" /> с заданным именем параметра.</summary>
      <param name="parameterName">Имя удаляемого объекта <see cref="T:System.Data.Odbc.OdbcParameter" />.</param>
    </member>
    <member name="P:System.Data.Odbc.OdbcParameterCollection.SyncRoot">
      <summary>Получает объект, с помощью которого можно синхронизировать доступ к коллекции <see cref="T:System.Data.Odbc.OdbcParameterCollection" />. Только для чтения.</summary>
      <returns>Объект, который может использоваться для синхронизации доступа к <see cref="T:System.Data.Odbc.OdbcParameterCollection" />.</returns>
    </member>
    <member name="T:System.Data.Odbc.OdbcPermission">
      <summary>Позволяет поставщику данных .NET Framework для ODBC обеспечить пользователю уровень безопасности, достаточный для доступа к источнику данных ODBC. Этот класс не наследуется.</summary>
    </member>
    <member name="M:System.Data.Odbc.OdbcPermission.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.Odbc.OdbcPermission" />.</summary>
    </member>
    <member name="M:System.Data.Odbc.OdbcPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.Odbc.OdbcPermission" /> с использованием одного из стандартных значений <see cref="T:System.Security.Permissions.PermissionState" />.</summary>
      <param name="state">Одно из значений перечисления <see cref="T:System.Security.Permissions.PermissionState" />.</param>
    </member>
    <member name="M:System.Data.Odbc.OdbcPermission.#ctor(System.Security.Permissions.PermissionState,System.Boolean)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.Odbc.OdbcPermission" />.</summary>
      <param name="state">Одно из значений перечисления <see langword="System.Security.Permissions.PermissionState" />.</param>
      <param name="allowBlankPassword">Указывает, разрешается ли пустой пароль.</param>
    </member>
    <member name="M:System.Data.Odbc.OdbcPermission.Add(System.String,System.String,System.Data.KeyRestrictionBehavior)">
      <summary>Добавляет доступ к существующему состоянию разрешения для заданной строки подключения.</summary>
      <param name="connectionString">Разрешенная строка подключения.</param>
      <param name="restrictions">Строка, определяющая разрешенные или запрещенные параметры строки подключения.</param>
      <param name="behavior">Одно из значений перечисления <see cref="T:System.Data.KeyRestrictionBehavior" />.</param>
    </member>
    <member name="M:System.Data.Odbc.OdbcPermission.Copy">
      <summary>Возвращает объект <see cref="T:System.Data.Odbc.OdbcPermission" /> в качестве <see cref="T:System.Security.IPermission" />.</summary>
      <returns>Копия текущего объекта разрешения.</returns>
    </member>
    <member name="T:System.Data.Odbc.OdbcPermissionAttribute">
      <summary>Связывает операцию безопасности с пользовательским атрибутом безопасности.</summary>
    </member>
    <member name="M:System.Data.Odbc.OdbcPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.Odbc.OdbcPermissionAttribute" /> с использованием одного из стандартных значений <see cref="T:System.Security.Permissions.SecurityAction" />.</summary>
      <param name="action">Одно из значений <see cref="T:System.Security.Permissions.SecurityAction" />, представляющих действие, которое может быть выполнено с применением декларативной безопасности.</param>
    </member>
    <member name="M:System.Data.Odbc.OdbcPermissionAttribute.CreatePermission">
      <summary>Возвращает объект <see cref="T:System.Data.Odbc.OdbcPermission" />, который настроен в соответствии со свойствами атрибутов.</summary>
      <returns>Объект <see cref="T:System.Data.Odbc.OdbcPermission" />.</returns>
    </member>
    <member name="T:System.Data.Odbc.OdbcRowUpdatedEventArgs">
      <summary>Предоставляет данные для события <see cref="E:System.Data.Odbc.OdbcDataAdapter.RowUpdated" />.</summary>
    </member>
    <member name="M:System.Data.Odbc.OdbcRowUpdatedEventArgs.#ctor(System.Data.DataRow,System.Data.IDbComm*******,System.Data.StatementType,System.Data.Common.DataTableMapping)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.Odbc.OdbcRowUpdatedEventArgs" />.</summary>
      <param name="row">Объект <see langword="DataRow" />, пропускаемый через операцию обновления.</param>
      <param name="comm*******">Команда <see cref="T:System.Data.Odbc.OdbcComm*******" />, выполняемая при вызове метода <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</param>
      <param name="statementType">Одно из значений <see cref="T:System.Data.StatementType" />, указывающих тип выполненного запроса.</param>
      <param name="tableMapping">Объект <see cref="T:System.Data.Common.DataTableMapping" />, пропускаемый через <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</param>
    </member>
    <member name="P:System.Data.Odbc.OdbcRowUpdatedEventArgs.Comm*******">
      <summary>Получает объект <see cref="T:System.Data.Odbc.OdbcComm*******" />, выполняемый при вызове метода <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</summary>
      <returns>Команда <see cref="T:System.Data.Odbc.OdbcComm*******" />, выполняемая при вызове метода <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</returns>
    </member>
    <member name="T:System.Data.Odbc.OdbcRowUpdatedEventH*******ler">
      <summary>Представляет метод, обрабатывающий событие <see cref="E:System.Data.Odbc.OdbcDataAdapter.RowUpdated" /> для <see cref="T:System.Data.Odbc.OdbcDataAdapter" />.</summary>
      <param name="sender">Источник события.</param>
      <param name="e">Объект класса <see cref="T:System.Data.Odbc.OdbcRowUpdatedEventArgs" />, содержащий данные о событии.</param>
    </member>
    <member name="T:System.Data.Odbc.OdbcRowUpdatingEventArgs">
      <summary>Предоставляет данные для события <see cref="E:System.Data.Odbc.OdbcDataAdapter.RowUpdating" />.</summary>
    </member>
    <member name="M:System.Data.Odbc.OdbcRowUpdatingEventArgs.#ctor(System.Data.DataRow,System.Data.IDbComm*******,System.Data.StatementType,System.Data.Common.DataTableMapping)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.Odbc.OdbcRowUpdatingEventArgs" />.</summary>
      <param name="row">Объект <see cref="T:System.Data.DataRow" />, который требуется обновить.</param>
      <param name="comm*******">Команда <see cref="T:System.Data.Odbc.OdbcComm*******" />, выполняемая во время операции обновления.</param>
      <param name="statementType">Одно из значений <see cref="T:System.Data.StatementType" />, указывающих тип выполненного запроса.</param>
      <param name="tableMapping">Объект <see cref="T:System.Data.Common.DataTableMapping" />, пропускаемый через <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</param>
    </member>
    <member name="P:System.Data.Odbc.OdbcRowUpdatingEventArgs.Comm*******">
      <summary>Возвращает или задает команду <see cref="T:System.Data.Odbc.OdbcComm*******" />, выполняемую при вызове метода <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</summary>
      <returns>Команда <see cref="T:System.Data.Odbc.OdbcComm*******" />, выполняемая при вызове метода <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</returns>
    </member>
    <member name="T:System.Data.Odbc.OdbcRowUpdatingEventH*******ler">
      <summary>Представляет метод, обрабатывающий событие <see cref="E:System.Data.Odbc.OdbcDataAdapter.RowUpdating" /> для <see cref="T:System.Data.Odbc.OdbcDataAdapter" />.</summary>
      <param name="sender">Источник события.</param>
      <param name="e">Объект класса <see cref="T:System.Data.Odbc.OdbcRowUpdatingEventArgs" />, содержащий данные о событии.</param>
    </member>
    <member name="T:System.Data.Odbc.OdbcTransaction">
      <summary>Представляет транзакцию SQL, которую нужно выполнить в источнике данных. Этот класс не наследуется.</summary>
    </member>
    <member name="M:System.Data.Odbc.OdbcTransaction.Commit">
      <summary>Фиксирует транзакцию базы данных.</summary>
      <exception cref="T:System.Exception">Ошибка при попытке фиксации транзакции.</exception>
      <exception cref="T:System.InvalidOperationException">Транзакция уже зафиксирована, или выполнен откат.  

или - 
Соединение закрыто.</exception>
    </member>
    <member name="P:System.Data.Odbc.OdbcTransaction.Connection">
      <summary>Получает объект <see cref="T:System.Data.Odbc.OdbcConnection" />, связанный с транзакцией, или <see langword="null" />, если транзакция уже недействительна.</summary>
      <returns>Объект <see cref="T:System.Data.Odbc.OdbcConnection" />, связанный с транзакцией.</returns>
    </member>
    <member name="P:System.Data.Odbc.OdbcTransaction.IsolationLevel">
      <summary>Указывает <see cref="T:System.Data.IsolationLevel" /> для этой транзакции.</summary>
      <returns>
        <see cref="T:System.Data.IsolationLevel" /> для этой транзакции. Значение по умолчанию зависит от основного драйвера ODBC.</returns>
    </member>
    <member name="M:System.Data.Odbc.OdbcTransaction.Rollback">
      <summary>Откатывает транзакцию из состояния ожидания.</summary>
      <exception cref="T:System.Exception">Ошибка при попытке фиксации транзакции.</exception>
      <exception cref="T:System.InvalidOperationException">Транзакция уже зафиксирована, или выполнен откат.  

или - 
Соединение закрыто.</exception>
    </member>
    <member name="T:System.Data.Odbc.OdbcType">
      <summary>Задает тип данных поля или свойства для использования в объекте <see cref="T:System.Data.Odbc.OdbcParameter" />.</summary>
    </member>
    <member name="F:System.Data.Odbc.OdbcType.BigInt">
      <summary>Точное числовое значение с точностью 19 (со знаком) или 20 (без знака) и масштабом 0 (со знаком: –2[63] &lt;= n &lt;= 2[63] – 1, без знака: 0 &lt;= n &lt;= 2[64] – 1) (SQL_BIGINT). Соответствует <see cref="T:System.Int64" />.</summary>
    </member>
    <member name="F:System.Data.Odbc.OdbcType.Binary">
      <summary>Поток двоичных данных (SQL_BINARY). Соответствует <see cref="T:System.Array" /> типа <see cref="T:System.Byte" />.</summary>
    </member>
    <member name="F:System.Data.Odbc.OdbcType.Bit">
      <summary>Однобитовые двоичные данные (SQL_BIT). Соответствует <see cref="T:System.Boolean" />.</summary>
    </member>
    <member name="F:System.Data.Odbc.OdbcType.Char">
      <summary>Строка символов фиксированной длины (SQL_CHAR). Соответствует <see cref="T:System.String" />.</summary>
    </member>
    <member name="F:System.Data.Odbc.OdbcType.Date">
      <summary>Данные, представляющие дату в формате ггггммдд (SQL_TYPE_DATE). Соответствует <see cref="T:System.DateTime" />.</summary>
    </member>
    <member name="F:System.Data.Odbc.OdbcType.DateTime">
      <summary>Данные, представляющие дату в формате ггггммддччммсс (SQL_TYPE_TIMESTAMP). Соответствует <see cref="T:System.DateTime" />.</summary>
    </member>
    <member name="F:System.Data.Odbc.OdbcType.Decimal">
      <summary>Точное числовое значение со знаком с точностью по крайней мере p и масштабом s, где 1 &lt;= p &lt;= 15 и s &lt;= p. Максимальная точность зависит от драйвера (SQL_DECIMAL). Соответствует <see cref="T:System.Decimal" />.</summary>
    </member>
    <member name="F:System.Data.Odbc.OdbcType.Double">
      <summary>Приближенное числовое значение со знаком и двоичной точностью 53 (ноль или абсолютное значение от 10[–308] до 10[308]) (SQL_DOUBLE). Соответствует <see cref="T:System.Double" />.</summary>
    </member>
    <member name="F:System.Data.Odbc.OdbcType.Image">
      <summary>Двоичные данные с переменной длиной. Максимальная длина зависит от источника данных (SQL_LONGVARBINARY). Соответствует <see cref="T:System.Array" /> типа <see cref="T:System.Byte" />.</summary>
    </member>
    <member name="F:System.Data.Odbc.OdbcType.Int">
      <summary>Точное числовое значение с точностью 10 и масштабом 0 (со знаком: –2[31] &lt;= n &lt;= 2[31] – 1, без знака: 0 &lt;= n &lt;= 2[32] – 1) (SQL_INTEGER). Соответствует <see cref="T:System.Int32" />.</summary>
    </member>
    <member name="F:System.Data.Odbc.OdbcType.NChar">
      <summary>Строка символов Юникода с фиксированной длиной (SQL_WCHAR). Соответствует <see cref="T:System.String" />.</summary>
    </member>
    <member name="F:System.Data.Odbc.OdbcType.NText">
      <summary>Символьные данные Юникода с переменной длиной. Максимальная длина зависит от источника данных. (SQL_WLONGVARCHAR). Соответствует <see cref="T:System.String" />.</summary>
    </member>
    <member name="F:System.Data.Odbc.OdbcType.Numeric">
      <summary>Точное числовое значение со знаком с точностью p и масштабом s, где 1 &lt;= p &lt;= 15 и s &lt;= p (SQL_NUMERIC). Соответствует <see cref="T:System.Decimal" />.</summary>
    </member>
    <member name="F:System.Data.Odbc.OdbcType.NVarChar">
      <summary>Поток символов Юникода с переменной длиной (SQL_WVARCHAR). Соответствует <see cref="T:System.String" />.</summary>
    </member>
    <member name="F:System.Data.Odbc.OdbcType.Real">
      <summary>Приближенное числовое значение со знаком и двоичной точностью 24 (ноль или абсолютное значение от 10[-38] до 10[38]) (SQL_REAL). Соответствует <see cref="T:System.Single" />.</summary>
    </member>
    <member name="F:System.Data.Odbc.OdbcType.SmallDateTime">
      <summary>Данные, представляющие дату и время в формате ггггммддччммсс (SQL_TYPE_TIMESTAMP). Соответствует <see cref="T:System.DateTime" />.</summary>
    </member>
    <member name="F:System.Data.Odbc.OdbcType.SmallInt">
      <summary>Точное числовое значение с точностью 5 и масштабом 0 (со знаком: –32 768 &lt;= n &lt;= 32 767, без знака: 0 &lt;= n &lt;= 65 535) (SQL_SMALLINT). Соответствует <see cref="T:System.Int16" />.</summary>
    </member>
    <member name="F:System.Data.Odbc.OdbcType.Text">
      <summary>Символьные данные с переменной длиной. Максимальная длина зависит от источника данных (SQL_LONGVARCHAR). Соответствует <see cref="T:System.String" />.</summary>
    </member>
    <member name="F:System.Data.Odbc.OdbcType.Time">
      <summary>Данные, представляющие дату в формате ччммсс (SQL_TYPE_TIMES). Соответствует <see cref="T:System.DateTime" />.</summary>
    </member>
    <member name="F:System.Data.Odbc.OdbcType.Timestamp">
      <summary>Поток двоичных данных (SQL_BINARY). Соответствует <see cref="T:System.Array" /> типа <see cref="T:System.Byte" />.</summary>
    </member>
    <member name="F:System.Data.Odbc.OdbcType.TinyInt">
      <summary>Точное числовое значение с точностью 3 и масштабом 0 (со знаком: –128 &lt;= n &lt;= 127, без знака: 0 &lt;= n &lt;= 255) (SQL_TINYINT). Соответствует <see cref="T:System.Byte" />.</summary>
    </member>
    <member name="F:System.Data.Odbc.OdbcType.UniqueIdentifier">
      <summary>Идентификатор GUID с фиксированной длиной (SQL_GUID). Соответствует <see cref="T:System.Guid" />.</summary>
    </member>
    <member name="F:System.Data.Odbc.OdbcType.VarBinary">
      <summary>Двоичные данные переменной длины. Максимальная длина задается пользователем (SQL_VARBINARY). Соответствует <see cref="T:System.Array" /> типа <see cref="T:System.Byte" />.</summary>
    </member>
    <member name="F:System.Data.Odbc.OdbcType.VarChar">
      <summary>Потоковая символьная строка переменной длины (SQL_CHAR). Соответствует <see cref="T:System.String" />.</summary>
    </member>
    <member name="T:System.Data.OleDb.OleDbComm*******">
      <summary>Представляет инструкцию SQL или хранимую процедуру, выполняемую с источником данных.</summary>
    </member>
    <member name="M:System.Data.OleDb.OleDbComm*******.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.OleDb.OleDbComm*******" />.</summary>
    </member>
    <member name="M:System.Data.OleDb.OleDbComm*******.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.OleDb.OleDbComm*******" /> текстом запроса.</summary>
      <param name="cmdText">Текст запроса.</param>
    </member>
    <member name="M:System.Data.OleDb.OleDbComm*******.#ctor(System.String,System.Data.OleDb.OleDbConnection)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.OleDb.OleDbComm*******" /> с использованием текста запроса и подключения <see cref="T:System.Data.OleDb.OleDbConnection" />.</summary>
      <param name="cmdText">Текст запроса.</param>
      <param name="connection">
        <see cref="T:System.Data.OleDb.OleDbConnection" /> — представляет подключение к источнику данных.</param>
    </member>
    <member name="M:System.Data.OleDb.OleDbComm*******.#ctor(System.String,System.Data.OleDb.OleDbConnection,System.Data.OleDb.OleDbTransaction)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.OleDb.OleDbComm*******" /> с использованием текста запроса, <see cref="T:System.Data.OleDb.OleDbConnection" /> и <see cref="P:System.Data.OleDb.OleDbComm*******.Transaction" />.</summary>
      <param name="cmdText">Текст запроса.</param>
      <param name="connection">
        <see cref="T:System.Data.OleDb.OleDbConnection" /> — представляет подключение к источнику данных.</param>
      <param name="transaction">Транзакция, в которой выполняется <see cref="T:System.Data.OleDb.OleDbComm*******" />.</param>
    </member>
    <member name="M:System.Data.OleDb.OleDbComm*******.Cancel">
      <summary>Пытается отменить выполнение <see cref="T:System.Data.OleDb.OleDbComm*******" />.</summary>
    </member>
    <member name="M:System.Data.OleDb.OleDbComm*******.Clone">
      <summary>Создает новый объект <see cref="T:System.Data.OleDb.OleDbComm*******" />, являющийся копией текущего экземпляра.</summary>
      <returns>Новый объект <see cref="T:System.Data.OleDb.OleDbComm*******" />, являющийся копией этого экземпляра.</returns>
    </member>
    <member name="P:System.Data.OleDb.OleDbComm*******.Comm*******Text">
      <summary>Возвращает или задает оператор SQL или хранимую процедуру, выполняемую над источником данных.</summary>
      <returns>Инструкция или хранимая процедура SQL, подлежащая выполнению. Значение по умолчанию - пустая строка.</returns>
    </member>
    <member name="P:System.Data.OleDb.OleDbComm*******.Comm*******Timeout">
      <summary>Возвращает или задает время ожидания перед прекращением попытки выполнить команду и выводом ошибки.</summary>
      <returns>Время (в секундах) ожидания выполнения команды. По умолчанию используется значение 30 секунд.</returns>
    </member>
    <member name="P:System.Data.OleDb.OleDbComm*******.Comm*******Type">
      <summary>Возвращает или задает значение, которое указывает, как интерпретируется свойство <see cref="P:System.Data.OleDb.OleDbComm*******.Comm*******Text" />.</summary>
      <returns>Одно из значений <see cref="P:System.Data.OleDb.OleDbComm*******.Comm*******Type" />. Значение по умолчанию - Text.</returns>
      <exception cref="T:System.ArgumentException">Значение не является допустимым объектом <see cref="P:System.Data.OleDb.OleDbComm*******.Comm*******Type" />.</exception>
    </member>
    <member name="P:System.Data.OleDb.OleDbComm*******.Connection">
      <summary>Возвращает или задает объект <see cref="T:System.Data.OleDb.OleDbConnection" />, используемый этим экземпляром класса <see cref="T:System.Data.OleDb.OleDbComm*******" />.</summary>
      <returns>Подключение к источнику данных. Значение по умолчанию — <see langword="null" />.</returns>
      <exception cref="T:System.InvalidOperationException">Свойство <see cref="P:System.Data.OleDb.OleDbComm*******.Connection" /> изменилось в течение транзакции.</exception>
    </member>
    <member name="M:System.Data.OleDb.OleDbComm*******.CreateParameter">
      <summary>Создает новый экземпляр объекта <see cref="T:System.Data.OleDb.OleDbParameter" />.</summary>
      <returns>Объект <see cref="T:System.Data.OleDb.OleDbParameter" />.</returns>
    </member>
    <member name="P:System.Data.OleDb.OleDbComm*******.DesignTimeVisible">
      <summary>Возвращает или задает значение, указывающее, должен ли объект команды отображаться в настраиваемом элементе управления конструктора Windows Forms.</summary>
      <returns>Значение, которое указывает, должен ли объект команды быть видимым в элементе управления. Значение по умолчанию — <see langword="true" />.</returns>
    </member>
    <member name="M:System.Data.OleDb.OleDbComm*******.ExecuteNonQuery">
      <summary>Выполняет оператор SQL применительно к свойству <see cref="P:System.Data.OleDb.OleDbComm*******.Connection" /> и возвращает количество измененных командой строк.</summary>
      <returns>Число обработанных строк.</returns>
      <exception cref="T:System.InvalidOperationException">Подключение не существует.  
-или- 
Соединение не открыто.  
-или- 
Не удается выполнить команду в контексте транзакции, отличающемся от контекста, в котором подключение было изначально зарегистрировано.</exception>
    </member>
    <member name="M:System.Data.OleDb.OleDbComm*******.ExecuteReader">
      <summary>Отправляет свойство <see cref="P:System.Data.OleDb.OleDbComm*******.Comm*******Text" /> свойству <see cref="P:System.Data.OleDb.OleDbComm*******.Connection" /> и создает объект <see cref="T:System.Data.OleDb.OleDbDataReader" />.</summary>
      <returns>Объект <see cref="T:System.Data.OleDb.OleDbDataReader" />.</returns>
      <exception cref="T:System.InvalidOperationException">Не удается выполнить команду в контексте транзакции, отличающемся от контекста, в котором подключение было изначально зарегистрировано.</exception>
    </member>
    <member name="M:System.Data.OleDb.OleDbComm*******.ExecuteReader(System.Data.Comm*******Behavior)">
      <summary>Отправляет <see cref="P:System.Data.OleDb.OleDbComm*******.Comm*******Text" /> в <see cref="P:System.Data.OleDb.OleDbComm*******.Connection" /> и создает <see cref="T:System.Data.OleDb.OleDbDataReader" />, используя одно из значений <see cref="T:System.Data.Comm*******Behavior" />.</summary>
      <param name="behavior">Одно из значений <see cref="T:System.Data.Comm*******Behavior" />.</param>
      <returns>Объект <see cref="T:System.Data.OleDb.OleDbDataReader" />.</returns>
      <exception cref="T:System.InvalidOperationException">Не удается выполнить команду в контексте транзакции, отличающемся от контекста, в котором подключение было изначально зарегистрировано.</exception>
    </member>
    <member name="M:System.Data.OleDb.OleDbComm*******.ExecuteScalar">
      <summary>Выполняет запрос и возвращает первый столбец первой строки результирующего набора, возвращаемого запросом. Дополнительные столбцы или строки не обрабатываются.</summary>
      <returns>Первый столбец первой строки набора результатов или пустая ссылка, если набор результатов пуст.</returns>
      <exception cref="T:System.InvalidOperationException">Не удается выполнить команду в контексте транзакции, отличающемся от контекста, в котором подключение было изначально зарегистрировано.</exception>
    </member>
    <member name="P:System.Data.OleDb.OleDbComm*******.Parameters">
      <summary>Возвращает набор <see cref="T:System.Data.OleDb.OleDbParameterCollection" />.</summary>
      <returns>Параметры инструкции SQL или хранимой процедуры. По умолчанию является пустой коллекцией.</returns>
    </member>
    <member name="M:System.Data.OleDb.OleDbComm*******.Prepare">
      <summary>Создает подготовленную (или скомпилированную) версию команды в источнике данных.</summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Data.OleDb.OleDbComm*******.Connection" /> не указывается.  
-или- 
Подключение <see cref="P:System.Data.OleDb.OleDbComm*******.Connection" /> не открыто.</exception>
    </member>
    <member name="M:System.Data.OleDb.OleDbComm*******.ResetComm*******Timeout">
      <summary>Сбрасывает значение свойства <see cref="P:System.Data.OleDb.OleDbComm*******.Comm*******Timeout" /> и задает ему значение по умолчанию.</summary>
    </member>
    <member name="M:System.Data.OleDb.OleDbComm*******.System#Data#IDbComm*******#ExecuteReader">
      <summary>Описание этого члена см. в разделе <see cref="M:System.Data.IDbComm*******.ExecuteReader" />.</summary>
      <returns>Объект <see cref="T:System.Data.IDataReader" />.</returns>
    </member>
    <member name="M:System.Data.OleDb.OleDbComm*******.System#Data#IDbComm*******#ExecuteReader(System.Data.Comm*******Behavior)">
      <summary>Выполняет <see cref="P:System.Data.IDbComm*******.Comm*******Text" /> в <see cref="P:System.Data.IDbComm*******.Connection" /> и строит <see cref="T:System.Data.IDataReader" /> с помощью одного из значений <see cref="T:System.Data.Comm*******Behavior" />.</summary>
      <param name="behavior">Одно из значений <see cref="T:System.Data.Comm*******Behavior" />.</param>
      <returns>Объект <see cref="T:System.Data.IDataReader" />, построенный с использованием одного из значений <see cref="T:System.Data.Comm*******Behavior" />.</returns>
    </member>
    <member name="M:System.Data.OleDb.OleDbComm*******.System#ICloneable#Clone">
      <summary>Описание этого члена см. в разделе <see cref="M:System.ICloneable.Clone" />.</summary>
      <returns>Новый объект <see cref="T:System.Object" />, который является копией данного экземпляра.</returns>
    </member>
    <member name="P:System.Data.OleDb.OleDbComm*******.Transaction">
      <summary>Возвращает или задает транзакцию <see cref="T:System.Data.OleDb.OleDbTransaction" />, в которой выполняется команда <see cref="T:System.Data.OleDb.OleDbComm*******" />.</summary>
      <returns>
        <see cref="T:System.Data.OleDb.OleDbTransaction" />. Значение по умолчанию — <see langword="null" />.</returns>
    </member>
    <member name="P:System.Data.OleDb.OleDbComm*******.UpdatedRowSource">
      <summary>Возвращает или задает способы применения результатов команд к объекту <see cref="T:System.Data.DataRow" /> при использовании метода <see langword="Update" /> объекта <see cref="T:System.Data.OleDb.OleDbDataAdapter" />.</summary>
      <returns>Одно из значений <see cref="T:System.Data.UpdateRowSource" />.</returns>
      <exception cref="T:System.ArgumentException">Введенное значение не являлось одним из значений <see cref="T:System.Data.UpdateRowSource" />.</exception>
    </member>
    <member name="T:System.Data.OleDb.OleDbComm*******Builder">
      <summary>Автоматически генерирует однотабличные команды, которые позволяют согласовать изменения, вносимые в объект <see cref="T:System.Data.DataSet" />, со связанной базой данных. Этот класс не наследуется.</summary>
    </member>
    <member name="M:System.Data.OleDb.OleDbComm*******Builder.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.OleDb.OleDbComm*******Builder" />.</summary>
    </member>
    <member name="M:System.Data.OleDb.OleDbComm*******Builder.#ctor(System.Data.OleDb.OleDbDataAdapter)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.OleDb.OleDbComm*******Builder" /> вместе со связанным объектом <see cref="T:System.Data.OleDb.OleDbDataAdapter" />.</summary>
      <param name="adapter">Объект <see cref="T:System.Data.OleDb.OleDbDataAdapter" />.</param>
    </member>
    <member name="P:System.Data.OleDb.OleDbComm*******Builder.DataAdapter">
      <summary>Возвращает или задает объект <see cref="T:System.Data.OleDb.OleDbDataAdapter" />, для которого автоматически создаются операторы SQL.</summary>
      <returns>Объект <see cref="T:System.Data.OleDb.OleDbDataAdapter" />.</returns>
    </member>
    <member name="M:System.Data.OleDb.OleDbComm*******Builder.DeriveParameters(System.Data.OleDb.OleDbComm*******)">
      <summary>Извлекает сведения о параметрах из хранимой процедуры, указанной в объекте <see cref="T:System.Data.OleDb.OleDbComm*******" />, и включает их в коллекцию параметров <see cref="P:System.Data.OleDb.OleDbComm*******.Parameters" /> указанного объекта <see cref="T:System.Data.OleDb.OleDbComm*******" />.</summary>
      <param name="comm*******">Объект <see cref="T:System.Data.OleDb.OleDbComm*******" /> ссылается на хранимую процедуру, из которой необходимо извлечь сведения о параметрах. Извлеченные параметры добавляются в коллекцию параметров <see cref="P:System.Data.OleDb.OleDbComm*******.Parameters" /> объекта <see cref="T:System.Data.OleDb.OleDbComm*******" />.</param>
      <exception cref="T:System.InvalidOperationException">Соответствующий поставщик OLE DB не поддерживает возврат сведений о параметрах хранимых процедур, текст команды не является допустимым именем хранимой процедуры, либо указанное значение <see cref="P:System.Data.OleDb.OleDbComm*******.Comm*******Type" /> не является <see langword="StoredProcedure" />.</exception>
    </member>
    <member name="M:System.Data.OleDb.OleDbComm*******Builder.GetDeleteComm*******">
      <summary>Возвращает автоматически созданный объект <see cref="T:System.Data.OleDb.OleDbComm*******" />, который требуется для выполнения операций удаления в источнике данных.</summary>
      <returns>Автоматически созданный объект <see cref="T:System.Data.OleDb.OleDbComm*******" />, необходимый для выполнения операций удаления.</returns>
    </member>
    <member name="M:System.Data.OleDb.OleDbComm*******Builder.GetDeleteComm*******(System.Boolean)">
      <summary>Возвращает автоматически созданный объект <see cref="T:System.Data.OleDb.OleDbComm*******" />, который требуется для выполнения операций удаления в источнике данных.</summary>
      <param name="useColumnsForParameterNames">Если значение равно <see langword="true" />, создаются имена параметров, совпадающие с именами столбцов, если это возможно. Если значение равно <see langword="false" />, создаются @p1, @p2 и т. д.</param>
      <returns>Автоматически созданный объект <see cref="T:System.Data.OleDb.OleDbComm*******" />, необходимый для выполнения операций удаления.</returns>
    </member>
    <member name="M:System.Data.OleDb.OleDbComm*******Builder.GetInsertComm*******">
      <summary>Возвращает автоматически созданный объект <see cref="T:System.Data.OleDb.OleDbComm*******" />, который требуется для выполнения операций вставки в источнике данных.</summary>
      <returns>Автоматически созданный объект <see cref="T:System.Data.OleDb.OleDbComm*******" />, необходимый для выполнения операций вставки.</returns>
    </member>
    <member name="M:System.Data.OleDb.OleDbComm*******Builder.GetInsertComm*******(System.Boolean)">
      <summary>Возвращает автоматически созданный объект <see cref="T:System.Data.OleDb.OleDbComm*******" />, который требуется для выполнения операций вставки в источнике данных.</summary>
      <param name="useColumnsForParameterNames">Если значение равно <see langword="true" />, создаются имена параметров, совпадающие с именами столбцов, если это возможно. Если значение равно <see langword="false" />, создаются @p1, @p2 и т. д.</param>
      <returns>Автоматически созданный объект <see cref="T:System.Data.OleDb.OleDbComm*******" />, необходимый для выполнения операций вставки.</returns>
    </member>
    <member name="M:System.Data.OleDb.OleDbComm*******Builder.GetUpdateComm*******">
      <summary>Возвращает автоматически созданный объект <see cref="T:System.Data.OleDb.OleDbComm*******" />, который требуется для выполнения операций обновления в источнике данных.</summary>
      <returns>Автоматически созданный объект <see cref="T:System.Data.OleDb.OleDbComm*******" />, необходимый для выполнения операций обновления.</returns>
    </member>
    <member name="M:System.Data.OleDb.OleDbComm*******Builder.GetUpdateComm*******(System.Boolean)">
      <summary>Возвращает автоматически созданный объект <see cref="T:System.Data.OleDb.OleDbComm*******" />, который требуется для выполнения операций обновления в источнике данных (дополнительно могут использоваться столбцы для определения имен параметров).</summary>
      <param name="useColumnsForParameterNames">Если значение равно <see langword="true" />, создаются имена параметров, совпадающие с именами столбцов, если это возможно. Если значение равно <see langword="false" />, создаются @p1, @p2 и т. д.</param>
      <returns>Автоматически созданный объект <see cref="T:System.Data.OleDb.OleDbComm*******" />, необходимый для выполнения операций обновления.</returns>
    </member>
    <member name="M:System.Data.OleDb.OleDbComm*******Builder.QuoteIdentifier(System.String)">
      <summary>При заданном идентификаторе без кавычек в каталоге, набранном в правильном регистре, возвращает заключенный в кавычки идентификатор в корректной форме. При этом корректно исключаются встроенные в идентификатор кавычки.</summary>
      <param name="unquotedIdentifier">Исходный идентификатор без кавычек.</param>
      <returns>Версия идентификатора, заключенного кавычки. Кавычки, внедренные в идентификатор, корректно исключаются.</returns>
    </member>
    <member name="M:System.Data.OleDb.OleDbComm*******Builder.QuoteIdentifier(System.String,System.Data.OleDb.OleDbConnection)">
      <summary>При заданном идентификаторе без кавычек в каталоге, набранном в правильном регистре, возвращает заключенный в кавычки идентификатор в корректной форме. При этом корректно исключаются встроенные в идентификатор кавычки.</summary>
      <param name="unquotedIdentifier">Не заключенный в кавычки идентификатор должен возвращаться в формате с кавычками.</param>
      <param name="connection">Если подключение выполнено, заставляет управляемую оболочку получить символ кавычки от поставщика OLE DB. Если подключение не выполнено, строка заключается в кавычки, используя значения из свойств <see cref="P:System.Data.Common.DbComm*******Builder.QuotePrefix" /> и <see cref="P:System.Data.Common.DbComm*******Builder.QuoteSuffix" />.</param>
      <returns>Версия идентификатора, заключенного кавычки. Кавычки, внедренные в идентификатор, корректно исключаются.</returns>
    </member>
    <member name="M:System.Data.OleDb.OleDbComm*******Builder.UnquoteIdentifier(System.String)">
      <summary>При заданном идентификаторе без кавычек в каталоге, набранном в правильном регистре, возвращает заключенный в кавычки идентификатор в корректной форме. При этом все кавычки, внедренные в идентификатор, корректно сохраняются.</summary>
      <param name="quotedIdentifier">Идентификатор, из которого будут удалены внедренные кавычки.</param>
      <returns>Идентификатор без кавычек, в котором корректно сохранены все внедренные кавычки.</returns>
    </member>
    <member name="M:System.Data.OleDb.OleDbComm*******Builder.UnquoteIdentifier(System.String,System.Data.OleDb.OleDbConnection)">
      <summary>При заданном идентификаторе без кавычек в каталоге, набранном в правильном регистре, возвращает заключенный в кавычки идентификатор в корректной форме. При этом все кавычки, внедренные в идентификатор, корректно сохраняются.</summary>
      <param name="quotedIdentifier">Идентификатор, из которого будут удалены внедренные кавычки.</param>
      <param name="connection">
        <see cref="T:System.Data.OleDb.OleDbConnection" />.</param>
      <returns>Идентификатор без кавычек, в котором корректно сохранены все внедренные кавычки.</returns>
    </member>
    <member name="T:System.Data.OleDb.OleDbConnection">
      <summary>Представляет открытое подключение к источнику данных.</summary>
    </member>
    <member name="M:System.Data.OleDb.OleDbConnection.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.OleDb.OleDbConnection" />.</summary>
    </member>
    <member name="M:System.Data.OleDb.OleDbConnection.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.OleDb.OleDbConnection" /> с заданной строкой подключения.</summary>
      <param name="connectionString">Соединение, используемое для открытия базы данных.</param>
    </member>
    <member name="M:System.Data.OleDb.OleDbConnection.BeginTransaction">
      <summary>Запускает транзакцию базы данных с текущим значением <see cref="T:System.Data.IsolationLevel" />.</summary>
      <returns>Объект, представляющий новую транзакцию.</returns>
      <exception cref="T:System.InvalidOperationException">Параллельные транзакции не поддерживаются.</exception>
    </member>
    <member name="M:System.Data.OleDb.OleDbConnection.BeginTransaction(System.Data.IsolationLevel)">
      <summary>Начинает транзакцию базы данных с указанным уровнем изоляции.</summary>
      <param name="isolationLevel">Уровень изоляции, с которым должна выполняться транзакция.</param>
      <returns>Объект, представляющий новую транзакцию.</returns>
      <exception cref="T:System.InvalidOperationException">Параллельные транзакции не поддерживаются.</exception>
    </member>
    <member name="M:System.Data.OleDb.OleDbConnection.ChangeDatabase(System.String)">
      <summary>Осуществляет смену текущей базы данных для открытого соединения <see cref="T:System.Data.OleDb.OleDbConnection" />.</summary>
      <param name="value">Имя базы данных.</param>
      <exception cref="T:System.ArgumentException">Недопустимое имя базы данных.</exception>
      <exception cref="T:System.InvalidOperationException">Соединение не открыто.</exception>
      <exception cref="T:System.Data.OleDb.OleDbException">Невозможно изменить базу данных.</exception>
    </member>
    <member name="M:System.Data.OleDb.OleDbConnection.Close">
      <summary>Закрывает подключение к источнику данных.</summary>
    </member>
    <member name="P:System.Data.OleDb.OleDbConnection.ConnectionString">
      <summary>Получает или задает строку, используемую для открытия базы данных.</summary>
      <returns>Строка подключения поставщика OLE DB, содержащая имя источника данных и другие параметры, необходимые для установки начального подключения. Значение по умолчанию - пустая строка.</returns>
      <exception cref="T:System.ArgumentException">Передан недопустимый аргумент строки соединения, или не задан обязательный аргумент строки соединения.</exception>
    </member>
    <member name="P:System.Data.OleDb.OleDbConnection.ConnectionTimeout">
      <summary>Получает время ожидания при попытке установки подключения, по истечении которого попытка подключения завершается и создается ошибка.</summary>
      <returns>Выраженное в секундах время ожидания открытия подключения. Значение по умолчанию - 15 секунды.</returns>
      <exception cref="T:System.ArgumentException">Заданное значение меньше 0.</exception>
    </member>
    <member name="M:System.Data.OleDb.OleDbConnection.CreateComm*******">
      <summary>Создает и возвращает объект <see cref="T:System.Data.OleDb.OleDbComm*******" />, связанный с объектом <see cref="T:System.Data.OleDb.OleDbConnection" />.</summary>
      <returns>Объект <see cref="T:System.Data.OleDb.OleDbComm*******" />.</returns>
    </member>
    <member name="P:System.Data.OleDb.OleDbConnection.Database">
      <summary>Получает имя текущей базы данных или базы данных, которая будет использоваться после открытия подключения.</summary>
      <returns>Имя текущей базы данных или базы данных, которая будет использоваться после открытия подключения. Значение по умолчанию - пустая строка.</returns>
    </member>
    <member name="P:System.Data.OleDb.OleDbConnection.DataSource">
      <summary>Получает имя сервера или имя файла источника данных.</summary>
      <returns>Имя сервера или имя файла источника данных. Значение по умолчанию - пустая строка.</returns>
    </member>
    <member name="M:System.Data.OleDb.OleDbConnection.EnlistDistributedTransaction(System.EnterpriseServices.ITransaction)">
      <summary>Выполняет присоединение указанной транзакции как распределенной транзакции.</summary>
      <param name="transaction">Ссылка на существующий объект <see cref="T:System.EnterpriseServices.ITransaction" />, к которому выполняется присоединение.</param>
    </member>
    <member name="M:System.Data.OleDb.OleDbConnection.EnlistTransaction(System.Transactions.Transaction)">
      <summary>Выполняет присоединение указанной транзакции как распределенной транзакции.</summary>
      <param name="transaction">Ссылка на существующий объект <see cref="T:System.Transactions.Transaction" />, к которому выполняется присоединение.</param>
    </member>
    <member name="M:System.Data.OleDb.OleDbConnection.GetOleDbSchemaTable(System.Guid,System.Object[])">
      <summary>Возвращает сведения схемы из источника данных, как указано в GUID, и после применения указанных ограничений.</summary>
      <param name="schema">Одно из значений <see cref="T:System.Data.OleDb.OleDbSchemaGuid" />, указывающее возвращаемую таблицу схемы.</param>
      <param name="restrictions">Массив <see cref="T:System.Object" /> значений ограничений. Они применяются в порядке следования столбцов ограничений. Это означает, что первое значение ограничения применяется к первому столбцу ограничений, второе — ко второму столбцу ограничений и т. д.</param>
      <returns>Объект <see cref="T:System.Data.DataTable" />, содержащий запрошенные сведения о схеме.</returns>
      <exception cref="T:System.Data.OleDb.OleDbException">Указанный набор ограничений недопустим.</exception>
      <exception cref="T:System.InvalidOperationException">Объект <see cref="T:System.Data.OleDb.OleDbConnection" /> закрыт.</exception>
      <exception cref="T:System.ArgumentException">Указанный набор строк схемы не поддерживается поставщиком OLE DB.  
-или- 
Параметр <paramref name="schema" /> содержит значение <see cref="F:System.Data.OleDb.OleDbSchemaGuid.DbInfoLiterals" />, а параметр <paramref name="restrictions" /> содержит одно или несколько ограничений.</exception>
    </member>
    <member name="M:System.Data.OleDb.OleDbConnection.GetSchema">
      <summary>Возвращает сведения о схеме для источника данных этого объекта <see cref="T:System.Data.OleDb.OleDbConnection" />.</summary>
      <returns>Объект <see cref="T:System.Data.DataTable" />, содержащий сведения о схеме.</returns>
    </member>
    <member name="M:System.Data.OleDb.OleDbConnection.GetSchema(System.String)">
      <summary>Возвращает сведения о схеме для источника данных этого объекта <see cref="T:System.Data.OleDb.OleDbConnection" />, используя указанную строку в качестве имени схемы.</summary>
      <param name="collectionName">Определяет имя схемы, которая должна быть возвращена.</param>
      <returns>Объект <see cref="T:System.Data.DataTable" />, содержащий сведения о схеме.</returns>
    </member>
    <member name="M:System.Data.OleDb.OleDbConnection.GetSchema(System.String,System.String[])">
      <summary>Возвращает сведения о схеме для источника данных этого объекта <see cref="T:System.Data.OleDb.OleDbConnection" />, используя указанную строку в качестве имени схемы и указанный массив строк для значений ограничений.</summary>
      <param name="collectionName">Определяет имя схемы, которая должна быть возвращена.</param>
      <param name="restrictionValues">Задает набор значений ограничений для запрошенной схемы.</param>
      <returns>Объект <see cref="T:System.Data.DataTable" />, содержащий сведения о схеме.</returns>
    </member>
    <member name="E:System.Data.OleDb.OleDbConnection.InfoMessage">
      <summary>Происходит, когда поставщик отправляет предупреждение или информационное сообщение.</summary>
    </member>
    <member name="M:System.Data.OleDb.OleDbConnection.Open">
      <summary>Открывает подключение к базе данных со значениями свойств, определяемыми объектом <see cref="P:System.Data.OleDb.OleDbConnection.ConnectionString" />.</summary>
      <exception cref="T:System.InvalidOperationException">Подключение уже открыто.</exception>
      <exception cref="T:System.Data.OleDb.OleDbException">При открытии подключения произошла ошибка на уровне подключения.</exception>
    </member>
    <member name="P:System.Data.OleDb.OleDbConnection.Provider">
      <summary>Получает имя поставщика OLE DB, указанное в выражении "Provider= " строки подключения.</summary>
      <returns>Имя поставщика, указанное в выражении "Provider= " строки подключения. Значение по умолчанию - пустая строка.</returns>
    </member>
    <member name="M:System.Data.OleDb.OleDbConnection.ReleaseObjectPool">
      <summary>Означает, что пул объектов <see cref="T:System.Data.OleDb.OleDbConnection" /> может быть освобожден, когда последнее основное подключение будет освобождено.</summary>
    </member>
    <member name="M:System.Data.OleDb.OleDbConnection.ResetState">
      <summary>Обновляет свойство <see cref="P:System.Data.OleDb.OleDbConnection.State" /> объекта <see cref="T:System.Data.OleDb.OleDbConnection" />.</summary>
    </member>
    <member name="P:System.Data.OleDb.OleDbConnection.ServerVersion">
      <summary>Получает строку, содержащую номер версии сервера, к которому подключается клиент.</summary>
      <returns>Версия подключенного сервера.</returns>
      <exception cref="T:System.InvalidOperationException">Соединение закрыто.</exception>
    </member>
    <member name="P:System.Data.OleDb.OleDbConnection.State">
      <summary>Возвращает текущее состояние подключения.</summary>
      <returns>Поразрядное сочетание значений <see cref="T:System.Data.ConnectionState" />. По умолчанию — "Closed" (Закрыто).</returns>
    </member>
    <member name="M:System.Data.OleDb.OleDbConnection.System#ICloneable#Clone">
      <summary>Описание этого члена см. в разделе <see cref="M:System.ICloneable.Clone" />.</summary>
      <returns>Новый объект <see cref="T:System.Object" />, который является копией данного экземпляра.</returns>
    </member>
    <member name="T:System.Data.OleDb.OleDbConnectionStringBuilder">
      <summary>Удобное средство, с помощью которого можно создавать используемые классом <see cref="T:System.Data.OleDb.OleDbConnection" /> строки соединений и управлять их содержимым.</summary>
    </member>
    <member name="M:System.Data.OleDb.OleDbConnectionStringBuilder.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.OleDb.OleDbConnectionStringBuilder" />.</summary>
    </member>
    <member name="M:System.Data.OleDb.OleDbConnectionStringBuilder.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.OleDb.OleDbConnectionStringBuilder" />. Предоставленная строка подключения содержит данные для сведений о внутреннем подключении экземпляра.</summary>
      <param name="connectionString">Основа для сведений о внутреннем подключении объекта. Выполняет анализ пар "ключ/значение".</param>
      <exception cref="T:System.ArgumentException">Строка подключения неправильно отформатирована (возможно отсутствует обязательный знак равенства "=" в паре "ключ/значение").</exception>
    </member>
    <member name="M:System.Data.OleDb.OleDbConnectionStringBuilder.Clear">
      <summary>Удаляет содержимое экземпляра <see cref="T:System.Data.OleDb.OleDbConnectionStringBuilder" />.</summary>
    </member>
    <member name="M:System.Data.OleDb.OleDbConnectionStringBuilder.ContainsKey(System.String)">
      <summary>Определяет, содержит ли объект <see cref="T:System.Data.OleDb.OleDbConnectionStringBuilder" /> указанный ключ.</summary>
      <param name="keyword">Ключ, который требуется найти в <see cref="T:System.Data.OleDb.OleDbConnectionStringBuilder" />.</param>
      <returns>Значение <see langword="true" />, если в <see cref="T:System.Data.OleDb.OleDbConnectionStringBuilder" /> содержится элемент с указанным ключом; в противном случае — значение <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="keyword" /> имеет значение null (<see langword="Nothing" /> в Visual Basic).</exception>
    </member>
    <member name="P:System.Data.OleDb.OleDbConnectionStringBuilder.DataSource">
      <summary>Возвращает или задает имя источника данных, к которому необходимо подключиться.</summary>
      <returns>Значение свойства <see cref="P:System.Data.OleDb.OleDbConnectionStringBuilder.DataSource" /> или <see langword="String.Empty" />, если значение не указано.</returns>
    </member>
    <member name="P:System.Data.OleDb.OleDbConnectionStringBuilder.FileName">
      <summary>Возвращает или задает имя UDL-файла для подключения к источнику данных.</summary>
      <returns>Значение свойства <see cref="P:System.Data.OleDb.OleDbConnectionStringBuilder.FileName" /> или <see langword="String.Empty" />, если значение не указано.</returns>
    </member>
    <member name="P:System.Data.OleDb.OleDbConnectionStringBuilder.Item(System.String)">
      <summary>Возвращает или задает значение, связанное с указанным ключом. В языке C# это свойство является индексатором.</summary>
      <param name="keyword">Ключ возвращаемого или задаваемого элемента.</param>
      <returns>Значение, связанное с указанным ключом.</returns>
      <exception cref="T:System.ArgumentException">Строка подключения неправильно отформатирована (возможно отсутствует обязательный знак равенства "=" в паре "ключ/значение").</exception>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="keyword" /> является неопределенной ссылкой (<see langword="Nothing" /> в Visual Basic).</exception>
    </member>
    <member name="P:System.Data.OleDb.OleDbConnectionStringBuilder.Keys">
      <summary>Возвращает коллекцию <see cref="T:System.Collections.ICollection" />, которая содержит ключи из <see cref="T:System.Data.OleDb.OleDbConnectionStringBuilder" />.</summary>
      <returns>Коллекция <see cref="T:System.Collections.ICollection" />, которая содержит ключи из <see cref="T:System.Data.OleDb.OleDbConnectionStringBuilder" />.</returns>
    </member>
    <member name="P:System.Data.OleDb.OleDbConnectionStringBuilder.OleDbServices">
      <summary>Возвращает или задает значение, передаваемое в строку подключения для ключа служб OLE DB.</summary>
      <returns>Значение, соответствующее ключу служб OLE DB в строке подключения. По умолчанию значение равно -13.</returns>
    </member>
    <member name="P:System.Data.OleDb.OleDbConnectionStringBuilder.PersistSecurityInfo">
      <summary>Возвращает или задает логическое значение, которое определяет, возвращаются ли важнейшие сведения (такие как пароль) как часть подключения, если оно открыто или когда-либо находилось в открытом состоянии.</summary>
      <returns>Значение свойства <see cref="P:System.Data.OleDb.OleDbConnectionStringBuilder.PersistSecurityInfo" /> или <see langword="false" />, если значение не указано.</returns>
    </member>
    <member name="P:System.Data.OleDb.OleDbConnectionStringBuilder.Provider">
      <summary>Возвращает или задает строку, которая содержит имя поставщика данных, связанного с внутренней строкой подключения.</summary>
      <returns>Значение свойства <see cref="P:System.Data.OleDb.OleDbConnectionStringBuilder.Provider" /> или <see langword="String.Empty" />, если значение не указано.</returns>
    </member>
    <member name="M:System.Data.OleDb.OleDbConnectionStringBuilder.Remove(System.String)">
      <summary>Удаляет из экземпляра <see cref="T:System.Data.OleDb.OleDbConnectionStringBuilder" /> запись с указанным ключом.</summary>
      <param name="keyword">Ключ пары «ключ-значение», удаляемой из строки подключения в этом объекте <see cref="T:System.Data.OleDb.OleDbConnectionStringBuilder" />.</param>
      <returns>Значение <see langword="true" />, если ключ существовал в строке подключения и был удален; значение <see langword="false" />, если ключа не было.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="keyword" /> имеет значение null (<see langword="Nothing" /> в Visual Basic).</exception>
    </member>
    <member name="M:System.Data.OleDb.OleDbConnectionStringBuilder.TryGetValue(System.String,System.Object@)">
      <summary>Извлекает значение, соответствующее предоставляемому ключу из экземпляра <see cref="T:System.Data.OleDb.OleDbConnectionStringBuilder" />.</summary>
      <param name="keyword">Ключ искомого элемента.</param>
      <param name="value">Значение, соответствующее <paramref name="keyword" />.</param>
      <returns>Значение <see langword="true" />, если значение <paramref name="keyword" /> найдено в строке подключения. В противном случае — значение <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="keyword" /> содержит значение NULL (<see langword="Nothing" /> в Visual Basic).</exception>
    </member>
    <member name="T:System.Data.OleDb.OleDbDataAdapter">
      <summary>Представляет набор команд данных и подключение к базе данных, которые используются для заполнения <see cref="T:System.Data.DataSet" /> и обновления источника данных.</summary>
    </member>
    <member name="M:System.Data.OleDb.OleDbDataAdapter.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.OleDb.OleDbDataAdapter" />.</summary>
    </member>
    <member name="M:System.Data.OleDb.OleDbDataAdapter.#ctor(System.Data.OleDb.OleDbComm*******)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.OleDb.OleDbDataAdapter" /> с помощью указанной команды <see cref="T:System.Data.OleDb.OleDbComm*******" /> в качестве свойства <see cref="P:System.Data.OleDb.OleDbDataAdapter.SelectComm*******" />.</summary>
      <param name="selectComm*******">Объект <see cref="T:System.Data.OleDb.OleDbComm*******" />, представляющий собой оператор SELECT или хранимую процедуру и заданный как свойство <see cref="P:System.Data.OleDb.OleDbDataAdapter.SelectComm*******" /> объекта <see cref="T:System.Data.OleDb.OleDbDataAdapter" />.</param>
    </member>
    <member name="M:System.Data.OleDb.OleDbDataAdapter.#ctor(System.String,System.Data.OleDb.OleDbConnection)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.OleDb.OleDbDataAdapter" /> с помощью <see cref="P:System.Data.OleDb.OleDbDataAdapter.SelectComm*******" />.</summary>
      <param name="selectComm*******Text">Строка, представляющая собой оператор SQL SELECT или хранимую процедуру, используемую в свойстве <see cref="P:System.Data.OleDb.OleDbDataAdapter.SelectComm*******" /> объекта <see cref="T:System.Data.OleDb.OleDbDataAdapter" />.</param>
      <param name="selectConnection">
        <see cref="T:System.Data.OleDb.OleDbConnection" /> представляет подключение.</param>
    </member>
    <member name="M:System.Data.OleDb.OleDbDataAdapter.#ctor(System.String,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.OleDb.OleDbDataAdapter" /> с помощью <see cref="P:System.Data.OleDb.OleDbDataAdapter.SelectComm*******" />.</summary>
      <param name="selectComm*******Text">Строка, представляющая собой оператор SQL SELECT или хранимую процедуру, используемую в свойстве <see cref="P:System.Data.OleDb.OleDbDataAdapter.SelectComm*******" /> объекта <see cref="T:System.Data.OleDb.OleDbDataAdapter" />.</param>
      <param name="selectConnectionString">Строка подключения.</param>
    </member>
    <member name="P:System.Data.OleDb.OleDbDataAdapter.DeleteComm*******">
      <summary>Возвращает или задает оператор SQL или хранимую процедуру для удаления записей из набора данных.</summary>
      <returns>Команда <see cref="T:System.Data.OleDb.OleDbComm*******" />, используемая в ходе обновления <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> для удаления из источника данных записей, соответствующих удаленным строкам в наборе <see cref="T:System.Data.DataSet" />.</returns>
    </member>
    <member name="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataSet,System.Object,System.String)">
      <summary>Добавляет или обновляет строки в наборе <see cref="T:System.Data.DataSet" /> для соответствия строкам в объекте ADO <see langword="Recordset" /> или <see langword="Record" /> с помощью указанного набора <see cref="T:System.Data.DataSet" />, объекта ADO и имени таблицы источника.</summary>
      <param name="dataSet">Набор <see cref="T:System.Data.DataSet" /> для заполнения записями и, если необходимо, — схемой.</param>
      <param name="ADODBRecordSet">Объект ADO <see langword="Recordset" /> или <see langword="Record" />.</param>
      <param name="srcTable">Таблица источника, используемая для установки соответствия таблиц.</param>
      <returns>Количество строк, успешно добавленных или обновленных в объекте <see cref="T:System.Data.DataSet" />. Не включает строки, на которые воздействуют операторы, не возвращающие строк.</returns>
      <exception cref="T:System.SystemException">Исходная таблица является недопустимой.</exception>
    </member>
    <member name="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataTable,System.Object)">
      <summary>Добавляет или обновляет строки в <see cref="T:System.Data.DataTable" /> для соответствия строкам в объекте ADO <see langword="Recordset" /> или <see langword="Record" /> с помощью указанной таблицы <see cref="T:System.Data.DataTable" /> и объектов ADO.</summary>
      <param name="dataTable">Набор <see cref="T:System.Data.DataTable" /> для заполнения записями и, если необходимо, — схемой.</param>
      <param name="ADODBRecordSet">Объект ADO <see langword="Recordset" /> или <see langword="Record" />.</param>
      <returns>Число успешно обновленных строк в таблице <see cref="T:System.Data.DataTable" />. Не включает строки, на которые воздействуют операторы, не возвращающие строк.</returns>
    </member>
    <member name="P:System.Data.OleDb.OleDbDataAdapter.InsertComm*******">
      <summary>Возвращает или задает инструкцию либо хранимую процедуру SQL, используемую для вставки записей в источнике данных.</summary>
      <returns>Команда <see cref="T:System.Data.OleDb.OleDbComm*******" />, используемая в ходе <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> для добавления в источник данных записей, соответствующих новым строкам в наборе <see cref="T:System.Data.DataSet" />.</returns>
    </member>
    <member name="E:System.Data.OleDb.OleDbDataAdapter.RowUpdated">
      <summary>Происходит во время <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> после выполнения команды для источника данных. Предпринята попытка обновления. Следовательно, происходит событие.</summary>
    </member>
    <member name="E:System.Data.OleDb.OleDbDataAdapter.RowUpdating">
      <summary>Происходит во время <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> перед выполнением команды в отношении источника данных. Предпринята попытка обновления. Следовательно, происходит событие.</summary>
    </member>
    <member name="P:System.Data.OleDb.OleDbDataAdapter.SelectComm*******">
      <summary>Возвращает или задает оператор SQL или хранимую процедуру для выборки записей в источнике данных.</summary>
      <returns>Команда <see cref="T:System.Data.OleDb.OleDbComm*******" />, используемая в ходе <see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" /> для выборки из источника данных записей с целью их помещения в набор <see cref="T:System.Data.DataSet" />.</returns>
    </member>
    <member name="P:System.Data.OleDb.OleDbDataAdapter.System#Data#IDbDataAdapter#DeleteComm*******">
      <summary>Описание этого члена см. в разделе <see cref="P:System.Data.IDbDataAdapter.DeleteComm*******" />.</summary>
      <returns>Интерфейс <see cref="T:System.Data.IDbComm*******" />, используемый во время обновления для удаления записей в источнике данных, соответствующих удаленным строкам в наборе данных.</returns>
    </member>
    <member name="P:System.Data.OleDb.OleDbDataAdapter.System#Data#IDbDataAdapter#InsertComm*******">
      <summary>Описание этого члена см. в разделе <see cref="P:System.Data.IDbDataAdapter.InsertComm*******" />.</summary>
      <returns>Интерфейс <see cref="T:System.Data.IDbComm*******" />, используемый во время обновления для вставки записей из источника данных для размещения в наборе данных.</returns>
    </member>
    <member name="P:System.Data.OleDb.OleDbDataAdapter.System#Data#IDbDataAdapter#SelectComm*******">
      <summary>Описание этого члена см. в разделе <see cref="P:System.Data.IDbDataAdapter.SelectComm*******" />.</summary>
      <returns>Интерфейс <see cref="T:System.Data.IDbComm*******" />, используемый во время обновления для выбора записей из источника данных для размещения в наборе данных.</returns>
    </member>
    <member name="P:System.Data.OleDb.OleDbDataAdapter.System#Data#IDbDataAdapter#UpdateComm*******">
      <summary>Описание этого члена см. в разделе <see cref="P:System.Data.IDbDataAdapter.UpdateComm*******" />.</summary>
      <returns>Интерфейс <see cref="T:System.Data.IDbComm*******" />, используемый во время обновления для обновления записей в источнике данных, соответствующих измененным строкам в наборе данных.</returns>
    </member>
    <member name="M:System.Data.OleDb.OleDbDataAdapter.System#ICloneable#Clone">
      <summary>Описание этого члена см. в разделе <see cref="M:System.ICloneable.Clone" />.</summary>
      <returns>Новый объект <see cref="T:System.Object" />, который является копией данного экземпляра.</returns>
    </member>
    <member name="P:System.Data.OleDb.OleDbDataAdapter.UpdateComm*******">
      <summary>Возвращает или задает инструкцию SQL либо хранимую процедуру (используется для обновления записей в источнике данных).</summary>
      <returns>
        <see cref="T:System.Data.OleDb.OleDbComm*******" /> — используется в ходе <see cref="T:System.Data.DataSet" /> для обновления записей в источнике данных в соответствии с измененными строками в <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</returns>
    </member>
    <member name="T:System.Data.OleDb.OleDbDataReader">
      <summary>Предоставляет способ чтения потока строк данных из источника только в прямом порядке. Этот класс не наследуется.</summary>
    </member>
    <member name="M:System.Data.OleDb.OleDbDataReader.Close">
      <summary>Закрывает объект <see cref="T:System.Data.OleDb.OleDbDataReader" />.</summary>
    </member>
    <member name="P:System.Data.OleDb.OleDbDataReader.Depth">
      <summary>Возвращает значение, указывающее глубину вложенности для текущей строки.</summary>
      <returns>Глубина вложенности для текущей строки.</returns>
    </member>
    <member name="P:System.Data.OleDb.OleDbDataReader.FieldCount">
      <summary>Возвращает число столбцов в текущей строке.</summary>
      <returns>Значение 0, если столбец отсутствует в допустимом наборе записей; в противном случае — количество столбцов в текущей записи. Значение по умолчанию — -1.</returns>
      <exception cref="T:System.NotSupportedException">Текущее подключение к источнику данных отсутствует.</exception>
    </member>
    <member name="M:System.Data.OleDb.OleDbDataReader.GetBoolean(System.Int32)">
      <summary>Возвращает значение указанного столбца в виде логического значения.</summary>
      <param name="ordinal">Порядковый номер столбца (от нуля).</param>
      <returns>Значение столбца.</returns>
      <exception cref="T:System.InvalidCastException">Указанное приведение недопустимо.</exception>
    </member>
    <member name="M:System.Data.OleDb.OleDbDataReader.GetByte(System.Int32)">
      <summary>Возвращает значение указанного столбца в виде байта.</summary>
      <param name="ordinal">Порядковый номер столбца (от нуля).</param>
      <returns>Значение заданного столбца в виде байта.</returns>
      <exception cref="T:System.InvalidCastException">Указанное приведение недопустимо.</exception>
    </member>
    <member name="M:System.Data.OleDb.OleDbDataReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
      <summary>Считывает поток байтов из заданного смещения столбца в буфер в виде массива, начиная с заданного смещения буфера.</summary>
      <param name="ordinal">Порядковый номер столбца (от нуля).</param>
      <param name="dataIndex">Индекс в поле, с которого необходимо начать считывание.</param>
      <param name="buffer">Буфер, в который считывается поток байтов.</param>
      <param name="bufferIndex">Индекс в <paramref name="buffer" />, с которого должна начинаться операция записи.</param>
      <param name="length">Максимальная длина для копирования в буфер.</param>
      <returns>Число фактически считанных байтов.</returns>
    </member>
    <member name="M:System.Data.OleDb.OleDbDataReader.GetChar(System.Int32)">
      <summary>Возвращает значение указанного столбца в виде символа.</summary>
      <param name="ordinal">Порядковый номер столбца (от нуля).</param>
      <returns>Значение указанного столбца.</returns>
      <exception cref="T:System.InvalidCastException">Указанное приведение недопустимо.</exception>
    </member>
    <member name="M:System.Data.OleDb.OleDbDataReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
      <summary>Считывает поток символов из заданного смещения столбца в буфер в виде массива, начиная с заданного смещения буфера.</summary>
      <param name="ordinal">Порядковый номер столбца (от нуля).</param>
      <param name="dataIndex">Индекс в строке, с которого начинается операция считывания.</param>
      <param name="buffer">Буфер, в который копируются данные.</param>
      <param name="bufferIndex">Индекс в <paramref name="buffer" />, с которого должна начинаться операция записи.</param>
      <param name="length">Число символов для чтения.</param>
      <returns>Число фактически считанных символов.</returns>
    </member>
    <member name="M:System.Data.OleDb.OleDbDataReader.GetData(System.Int32)">
      <summary>Возвращает объект <see cref="T:System.Data.OleDb.OleDbDataReader" /> для запрошенного порядкового номера столбца.</summary>
      <param name="ordinal">Порядковый номер столбца (от нуля).</param>
      <returns>Объект <see cref="T:System.Data.OleDb.OleDbDataReader" />.</returns>
    </member>
    <member name="M:System.Data.OleDb.OleDbDataReader.GetDataTypeName(System.Int32)">
      <summary>Получает имя исходного типа данных.</summary>
      <param name="index">Порядковый номер столбца (от нуля).</param>
      <returns>Имя типа внутренних данных. Дополнительные сведения см. в разделах Типы данных SQL Server или Типы данных Access.</returns>
    </member>
    <member name="M:System.Data.OleDb.OleDbDataReader.GetDateTime(System.Int32)">
      <summary>Возвращает значение указанного столбца в виде объекта <see cref="T:System.DateTime" />.</summary>
      <param name="ordinal">Порядковый номер столбца (от нуля).</param>
      <returns>Значение указанного столбца.</returns>
      <exception cref="T:System.InvalidCastException">Указанное приведение недопустимо.</exception>
    </member>
    <member name="M:System.Data.OleDb.OleDbDataReader.GetDecimal(System.Int32)">
      <summary>Возвращает значение указанного столбца в виде объекта <see cref="T:System.Decimal" />.</summary>
      <param name="ordinal">Порядковый номер столбца (от нуля).</param>
      <returns>Значение указанного столбца.</returns>
      <exception cref="T:System.InvalidCastException">Указанное приведение недопустимо.</exception>
    </member>
    <member name="M:System.Data.OleDb.OleDbDataReader.GetDouble(System.Int32)">
      <summary>Получает значение заданного столбца в виде числа двойной точности с плавающей запятой.</summary>
      <param name="ordinal">Порядковый номер столбца (от нуля).</param>
      <returns>Значение указанного столбца.</returns>
      <exception cref="T:System.InvalidCastException">Указанное приведение недопустимо.</exception>
    </member>
    <member name="M:System.Data.OleDb.OleDbDataReader.GetEnumerator">
      <summary>Возвращает перечислитель <see cref="T:System.Collections.IEnumerator" />, который может использоваться для просмотра строк в модуле чтения данных.</summary>
      <returns>Перечислитель <see cref="T:System.Collections.IEnumerator" />, который может использоваться для просмотра строк в модуле чтения данных.</returns>
    </member>
    <member name="M:System.Data.OleDb.OleDbDataReader.GetFieldType(System.Int32)">
      <summary>Возвращает тип <see cref="T:System.Type" />, который является типом данных объекта.</summary>
      <param name="index">Порядковый номер столбца (от нуля).</param>
      <returns>Тип данных объекта (<see cref="T:System.Type" />).</returns>
    </member>
    <member name="M:System.Data.OleDb.OleDbDataReader.GetFloat(System.Int32)">
      <summary>Возвращает значение указанного столбца в виде числа с плавающей запятой с одиночной точностью.</summary>
      <param name="ordinal">Порядковый номер столбца (от нуля).</param>
      <returns>Значение указанного столбца.</returns>
      <exception cref="T:System.InvalidCastException">Указанное приведение недопустимо.</exception>
    </member>
    <member name="M:System.Data.OleDb.OleDbDataReader.GetGuid(System.Int32)">
      <summary>Возвращает значение заданного столбца в виде глобального уникального идентификатора (GUID).</summary>
      <param name="ordinal">Порядковый номер столбца (от нуля).</param>
      <returns>Значение указанного столбца.</returns>
      <exception cref="T:System.InvalidCastException">Указанное приведение недопустимо.</exception>
    </member>
    <member name="M:System.Data.OleDb.OleDbDataReader.GetInt16(System.Int32)">
      <summary>Получает значение заданного столбца в виде 16-битового целого числа со знаком.</summary>
      <param name="ordinal">Порядковый номер столбца (от нуля).</param>
      <returns>Значение указанного столбца.</returns>
      <exception cref="T:System.InvalidCastException">Указанное приведение недопустимо.</exception>
    </member>
    <member name="M:System.Data.OleDb.OleDbDataReader.GetInt32(System.Int32)">
      <summary>Возвращает значение указанного столбца в виде 32-разрядного целого числа со знаком.</summary>
      <param name="ordinal">Порядковый номер столбца (от нуля).</param>
      <returns>Значение указанного столбца.</returns>
      <exception cref="T:System.InvalidCastException">Указанное приведение недопустимо.</exception>
    </member>
    <member name="M:System.Data.OleDb.OleDbDataReader.GetInt64(System.Int32)">
      <summary>Возвращает значение указанного столбца в виде 64-разрядного целого числа со знаком.</summary>
      <param name="ordinal">Порядковый номер столбца (от нуля).</param>
      <returns>Значение указанного столбца.</returns>
      <exception cref="T:System.InvalidCastException">Указанное приведение недопустимо.</exception>
    </member>
    <member name="M:System.Data.OleDb.OleDbDataReader.GetName(System.Int32)">
      <summary>Возвращает имя заданного столбца.</summary>
      <param name="index">Порядковый номер столбца (от нуля).</param>
      <returns>Имя заданного столбца.</returns>
    </member>
    <member name="M:System.Data.OleDb.OleDbDataReader.GetOrdinal(System.String)">
      <summary>Возвращает порядковый номер столбца при наличии заданного имени столбца.</summary>
      <param name="name">Имя столбца.</param>
      <returns>Порядковый номер столбца (от нуля).</returns>
      <exception cref="T:System.IndexOutOfRangeException">Заданное имя недопустимо для имени столбца.</exception>
    </member>
    <member name="M:System.Data.OleDb.OleDbDataReader.GetSchemaTable">
      <summary>Возвращает объект <see cref="T:System.Data.DataTable" />, описывающий метаданные столбцов модуля чтения данных <see cref="T:System.Data.OleDb.OleDbDataReader" />.</summary>
      <returns>Объект <see cref="T:System.Data.DataTable" />, описывающий метаданные столбцов.</returns>
      <exception cref="T:System.InvalidOperationException">Объект <see cref="T:System.Data.OleDb.OleDbDataReader" /> закрыт.</exception>
    </member>
    <member name="M:System.Data.OleDb.OleDbDataReader.GetString(System.Int32)">
      <summary>Возвращает значение заданного столбца в виде строки.</summary>
      <param name="ordinal">Порядковый номер столбца (от нуля).</param>
      <returns>Значение указанного столбца.</returns>
      <exception cref="T:System.InvalidCastException">Указанное приведение недопустимо.</exception>
    </member>
    <member name="M:System.Data.OleDb.OleDbDataReader.GetTimeSpan(System.Int32)">
      <summary>Возвращает значение указанного столбца в виде объекта <see cref="T:System.TimeSpan" />.</summary>
      <param name="ordinal">Порядковый номер столбца (от нуля).</param>
      <returns>Значение указанного столбца.</returns>
      <exception cref="T:System.InvalidCastException">Указанное приведение недопустимо.</exception>
    </member>
    <member name="M:System.Data.OleDb.OleDbDataReader.GetValue(System.Int32)">
      <summary>Получает значение столбца с указанным порядковом номером в собственном формате.</summary>
      <param name="ordinal">Порядковый номер столбца (от нуля).</param>
      <returns>Возвращаемое значение.</returns>
    </member>
    <member name="M:System.Data.OleDb.OleDbDataReader.GetValues(System.Object[])">
      <summary>Заполняет массив объектов значениями столбцов текущей строки.</summary>
      <param name="values">Массив объектов <see cref="T:System.Object" />, в который необходимо скопировать столбцы атрибутов.</param>
      <returns>Число экземпляров <see cref="T:System.Object" /> в массиве.</returns>
    </member>
    <member name="P:System.Data.OleDb.OleDbDataReader.HasRows">
      <summary>Получает значение, указывающее, содержит ли объект <see cref="T:System.Data.OleDb.OleDbDataReader" /> одну или несколько строк.</summary>
      <returns>Значение <see langword="true" />, если объект <see cref="T:System.Data.OleDb.OleDbDataReader" /> содержит одну или несколько строк; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.OleDb.OleDbDataReader.IsClosed">
      <summary>Указывает, закрыто ли устройство считывания данных.</summary>
      <returns>Значение <see langword="true" />, если <see cref="T:System.Data.OleDb.OleDbDataReader" /> закрыт; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.OleDb.OleDbDataReader.IsDBNull(System.Int32)">
      <summary>Возвращает значение, указывающее, содержатся ли в столбце несуществующие или отсутствующие значения.</summary>
      <param name="ordinal">Порядковый номер столбца (от нуля).</param>
      <returns>Значение <see langword="true" />, если значение указанного столбца эквивалентно <see cref="T:System.DBNull" />; в обратном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.OleDb.OleDbDataReader.Item(System.Int32)">
      <summary>Возвращает значение указанного столбца в собственном формате при наличии заданного порядкового номера столбца.</summary>
      <param name="index">Порядковый номер столбца.</param>
      <returns>Значение заданного столбца в собственном формате.</returns>
      <exception cref="T:System.IndexOutOfRangeException">Переданный индекс находился вне диапазона от 0 до значения <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
    </member>
    <member name="P:System.Data.OleDb.OleDbDataReader.Item(System.String)">
      <summary>Возвращает значение заданного столбца в собственном формате при наличии заданного имени столбца.</summary>
      <param name="name">Имя столбца.</param>
      <returns>Значение заданного столбца в собственном формате.</returns>
      <exception cref="T:System.IndexOutOfRangeException">Столбец с указанным именем не найден.</exception>
    </member>
    <member name="M:System.Data.OleDb.OleDbDataReader.NextResult">
      <summary>Перемещает модуль чтения данных к следующему результату при чтении результатов из пакета инструкций SQL.</summary>
      <returns>Значение <see langword="true" />, если имеются и другие наборы результатов, в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.OleDb.OleDbDataReader.Read">
      <summary>Перемещает <see cref="T:System.Data.OleDb.OleDbDataReader" /> к следующей записи.</summary>
      <returns>Значение <see langword="true" />, если имеются другие строки; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.OleDb.OleDbDataReader.RecordsAffected">
      <summary>Возвращает число строк, которые были изменены, вставлены или удалены инструкцией SQL.</summary>
      <returns>Число измененных, вставленных или удаленных строк. Значение 0, если строки не были затронуты или инструкция завершилась ошибкой. Значение -1 для инструкций SELECT.</returns>
    </member>
    <member name="P:System.Data.OleDb.OleDbDataReader.VisibleFieldCount">
      <summary>Возвращает число не скрытых полей в <see cref="T:System.Data.OleDb.OleDbDataReader" />.</summary>
      <returns>Число не скрытых полей.</returns>
    </member>
    <member name="T:System.Data.OleDb.OleDbEnumerator">
      <summary>Предоставляет механизм для перечисления всех доступных поставщиков OLE DB в локальной сети.</summary>
    </member>
    <member name="M:System.Data.OleDb.OleDbEnumerator.#ctor">
      <summary>Создает экземпляр класса <see cref="T:System.Data.OleDb.OleDbEnumerator" />.</summary>
    </member>
    <member name="M:System.Data.OleDb.OleDbEnumerator.GetElements">
      <summary>Извлекает таблицу <see cref="T:System.Data.DataTable" />, в которой содержатся сведения о всех видимых поставщиках OLE DB.</summary>
      <returns>Таблица <see cref="T:System.Data.DataTable" />, в которой содержатся сведения о видимых поставщиках OLE DB.</returns>
      <exception cref="T:System.InvalidCastException">Поставщик не поддерживает ISourcesRowset.</exception>
      <exception cref="T:System.Data.OleDb.OleDbException">Исключение возникло у основного поставщика.</exception>
    </member>
    <member name="M:System.Data.OleDb.OleDbEnumerator.GetEnumerator(System.Type)">
      <summary>Использует конкретный перечислитель OLE DB для возврата объекта <see cref="T:System.Data.OleDb.OleDbDataReader" />, содержащего сведения об установленных в текущий момент поставщиках OLE DB, без требования экземпляра класса <see cref="T:System.Data.OleDb.OleDbEnumerator" />.</summary>
      <param name="type">Объект <see cref="T:System.Type" />.</param>
      <returns>Объект <see cref="T:System.Data.OleDb.OleDbDataReader" />, содержащий сведения о запрошенных поставщиках OLE DB с помощью заданного перечислителя OLE DB.</returns>
      <exception cref="T:System.InvalidCastException">Поставщик не поддерживает ISourcesRowset.</exception>
      <exception cref="T:System.Data.OleDb.OleDbException">Исключение возникло у основного поставщика.</exception>
    </member>
    <member name="M:System.Data.OleDb.OleDbEnumerator.GetRootEnumerator">
      <summary>Возвращает объект <see cref="T:System.Data.OleDb.OleDbDataReader" />, содержащий сведения об установленных в текущий момент поставщиках OLE DB, без требования экземпляра класса <see cref="T:System.Data.OleDb.OleDbEnumerator" />.</summary>
      <returns>Объект <see cref="T:System.Data.OleDb.OleDbDataReader" />, в котором содержатся сведения о видимых поставщиках OLE DB.</returns>
      <exception cref="T:System.InvalidCastException">Поставщик не поддерживает ISourcesRowset.</exception>
      <exception cref="T:System.Data.OleDb.OleDbException">Исключение возникло у основного поставщика.</exception>
    </member>
    <member name="T:System.Data.OleDb.OleDbError">
      <summary>Собирает сведения, имеющие отношение к предупреждению или ошибке, возвращенной источником данных.</summary>
    </member>
    <member name="P:System.Data.OleDb.OleDbError.Message">
      <summary>Получает краткое описание ошибки.</summary>
      <returns>Краткое описание ошибки.</returns>
    </member>
    <member name="P:System.Data.OleDb.OleDbError.NativeError">
      <summary>Получает сведения об ошибке, выдаваемые конкретной базой данных.</summary>
      <returns>Сведения об ошибке, выдаваемые конкретной базой данных.</returns>
    </member>
    <member name="P:System.Data.OleDb.OleDbError.Source">
      <summary>Возвращает имя вызвавшего ошибку поставщика.</summary>
      <returns>Имя вызвавшего ошибку поставщика.</returns>
    </member>
    <member name="P:System.Data.OleDb.OleDbError.SQLState">
      <summary>Получает пятизначный код ошибки, соответствующий стандарту ANSI SQL для базы данных.</summary>
      <returns>Пятизначный код ошибки, определяющий ее источник, если такая ошибка могла возникнуть в нескольких местах.</returns>
    </member>
    <member name="M:System.Data.OleDb.OleDbError.ToString">
      <summary>Возвращает полный текст сообщения об ошибке.</summary>
      <returns>Полный текст сообщения об ошибке.</returns>
    </member>
    <member name="T:System.Data.OleDb.OleDbErrorCollection">
      <summary>Собирает все ошибки, созданные поставщиком данных .NET Framework для OLE DB. Этот класс не наследуется.</summary>
    </member>
    <member name="M:System.Data.OleDb.OleDbErrorCollection.CopyTo(System.Array,System.Int32)">
      <summary>Копирует элементы <see cref="T:System.Data.OleDb.OleDbErrorCollection" /> в массив <see cref="T:System.Array" />, начиная с заданного индекса в массиве <see cref="T:System.Array" />.</summary>
      <param name="array">Массив <see cref="T:System.Array" />, в который копируются элементы.</param>
      <param name="index">Начальный индекс массива <paramref name="array" />.</param>
      <exception cref="T:System.ArgumentException">Сумма индекса <paramref name="index" /> и числа элементов в коллекции <see cref="T:System.Data.OleDb.OleDbErrorCollection" /> больше длины массива <see cref="T:System.Array" />.</exception>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="array" /> — <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Индекс <paramref name="index" /> является недопустимым для массива <paramref name="array" />.</exception>
    </member>
    <member name="M:System.Data.OleDb.OleDbErrorCollection.CopyTo(System.Data.OleDb.OleDbError[],System.Int32)">
      <summary>Копирует все элементы текущей коллекции <see cref="T:System.Data.OleDb.OleDbErrorCollection" /> в указанную коллекцию <see cref="T:System.Data.OleDb.OleDbErrorCollection" />, начиная с указанного индекса в коллекции назначения.</summary>
      <param name="array">Коллекция <see cref="T:System.Data.OleDb.OleDbErrorCollection" /> — назначение для элементов, копируемых из текущей коллекции <see cref="T:System.Data.OleDb.OleDbErrorCollection" />.</param>
      <param name="index">32-разрядное целое число, представляющее индекс в коллекции <see cref="T:System.Data.OleDb.OleDbErrorCollection" />, с которого начинается копирование.</param>
    </member>
    <member name="P:System.Data.OleDb.OleDbErrorCollection.Count">
      <summary>Получает число ошибок в коллекции.</summary>
      <returns>Общее число ошибок в коллекции.</returns>
    </member>
    <member name="M:System.Data.OleDb.OleDbErrorCollection.GetEnumerator">
      <summary>Предоставляет метод <see cref="M:System.Collections.IEnumerable.GetEnumerator" />, который поддерживает простую итерацию по коллекции с помощью поставщика данных .NET Framework.</summary>
      <returns>Объект <see cref="T:System.Collections.IEnumerator" />, который может использоваться для итерации элементов коллекции.</returns>
    </member>
    <member name="P:System.Data.OleDb.OleDbErrorCollection.Item(System.Int32)">
      <summary>Возвращает ошибку с указанным индексом.</summary>
      <param name="index">Начинающийся с нуля индекс извлекаемой ошибки.</param>
      <returns>Объект <see cref="T:System.Data.OleDb.OleDbError" />, содержащий ошибку с указанным индексом.</returns>
    </member>
    <member name="P:System.Data.OleDb.OleDbErrorCollection.System#Collections#ICollection#IsSynchronized">
      <summary>Описание этого члена см. в разделе <see cref="P:System.Collections.ICollection.IsSynchronized" />.</summary>
      <returns>Значение <see langword="true" />, если доступ к коллекции является синхронизированным (потокобезопасным); в противном случае — значение <see langword="false" />. Значение по умолчанию — <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.OleDb.OleDbErrorCollection.System#Collections#ICollection#SyncRoot">
      <summary>Описание этого члена см. в разделе <see cref="P:System.Collections.ICollection.SyncRoot" />.</summary>
      <returns>Объект <see cref="T:System.Object" />, который может использоваться для синхронизации доступа к коллекции.</returns>
    </member>
    <member name="T:System.Data.OleDb.OleDbException">
      <summary>Исключение, которое генерируется, когда соответствующий поставщик возвращает предупреждение или ошибку для источника данных OLE DB. Этот класс не наследуется.</summary>
    </member>
    <member name="P:System.Data.OleDb.OleDbException.ErrorCode">
      <summary>Получает значение HRESULT ошибки.</summary>
      <returns>Значение HRESULT ошибки.</returns>
    </member>
    <member name="P:System.Data.OleDb.OleDbException.Errors">
      <summary>Получает коллекцию из одного или нескольких объектов <see cref="T:System.Data.OleDb.OleDbError" />, которые предоставляют подробные сведения об исключениях, выдаваемых поставщиком данных .NET Framework для OLE DB.</summary>
      <returns>Накопленные экземпляры класса <see cref="T:System.Data.OleDb.OleDbError" />.</returns>
    </member>
    <member name="M:System.Data.OleDb.OleDbException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Этот элемент переопределяет метод <see cref="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />.</summary>
      <param name="si">Объект <see cref="T:System.Runtime.Serialization.SerializationInfo" />, хранящий сериализованные данные объекта, относящиеся к выдаваемому исключению.</param>
      <param name="context">Объект <see cref="T:System.Runtime.Serialization.StreamingContext" />, содержащий контекстные сведения об источнике или назначении.</param>
      <exception cref="T:System.ArgumentNullException">Значением параметра <paramref name="si" /> является пустая ссылка (<see langword="Nothing" /> в Visual Basic).</exception>
    </member>
    <member name="T:System.Data.OleDb.OleDbFactory">
      <summary>Представляет набор методов для создания экземпляров классов поставщиков OLEDB, реализующих источник данных.</summary>
    </member>
    <member name="M:System.Data.OleDb.OleDbFactory.CreateComm*******">
      <summary>Возвращает строго типизированный экземпляр <see cref="T:System.Data.Common.DbComm*******" />.</summary>
      <returns>Новый строго типизированный экземпляр <see cref="T:System.Data.Common.DbComm*******" />.</returns>
    </member>
    <member name="M:System.Data.OleDb.OleDbFactory.CreateComm*******Builder">
      <summary>Возвращает строго типизированный экземпляр <see cref="T:System.Data.Common.DbComm*******Builder" />.</summary>
      <returns>Новый строго типизированный экземпляр <see cref="T:System.Data.Common.DbComm*******Builder" />.</returns>
    </member>
    <member name="M:System.Data.OleDb.OleDbFactory.CreateConnection">
      <summary>Возвращает строго типизированный экземпляр <see cref="T:System.Data.Common.DbConnection" />.</summary>
      <returns>Новый строго типизированный экземпляр <see cref="T:System.Data.Common.DbConnection" />.</returns>
    </member>
    <member name="M:System.Data.OleDb.OleDbFactory.CreateConnectionStringBuilder">
      <summary>Возвращает строго типизированный экземпляр <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</summary>
      <returns>Новый строго типизированный экземпляр <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</returns>
    </member>
    <member name="M:System.Data.OleDb.OleDbFactory.CreateDataAdapter">
      <summary>Возвращает строго типизированный экземпляр <see cref="T:System.Data.Common.DbDataAdapter" />.</summary>
      <returns>Новый строго типизированный экземпляр <see cref="T:System.Data.Common.DbDataAdapter" />.</returns>
    </member>
    <member name="M:System.Data.OleDb.OleDbFactory.CreateParameter">
      <summary>Возвращает строго типизированный экземпляр <see cref="T:System.Data.Common.DbParameter" />.</summary>
      <returns>Новый строго типизированный экземпляр <see cref="T:System.Data.Common.DbParameter" />.</returns>
    </member>
    <member name="M:System.Data.OleDb.OleDbFactory.CreatePermission(System.Security.Permissions.PermissionState)">
      <summary>Возвращает строго типизированный экземпляр <see cref="T:System.Security.CodeAccessPermission" />.</summary>
      <param name="state">Элемент перечисления <see cref="T:System.Security.Permissions.PermissionState" />.</param>
      <returns>Строго типизированный экземпляр <see cref="T:System.Security.CodeAccessPermission" />.</returns>
    </member>
    <member name="F:System.Data.OleDb.OleDbFactory.Instance">
      <summary>Получает экземпляр объекта <see cref="T:System.Data.OleDb.OleDbFactory" />. Это может использоваться для извлечения строго типизированных объектов данных.</summary>
    </member>
    <member name="T:System.Data.OleDb.OleDbInfoMessageEventArgs">
      <summary>Предоставляет данные для события <see cref="E:System.Data.OleDb.OleDbConnection.InfoMessage" />. Этот класс не наследуется.</summary>
    </member>
    <member name="P:System.Data.OleDb.OleDbInfoMessageEventArgs.ErrorCode">
      <summary>Получает HRESULT, соответствующий стандарту ANSI SQL для базы данных.</summary>
      <returns>HRESULT, определяющий источник ошибки, если ошибка может выдаваться из нескольких мест.</returns>
    </member>
    <member name="P:System.Data.OleDb.OleDbInfoMessageEventArgs.Errors">
      <summary>Получает коллекцию предупреждений, отправленных из источника данных.</summary>
      <returns>Коллекция предупреждений, отправленных из источника данных.</returns>
    </member>
    <member name="P:System.Data.OleDb.OleDbInfoMessageEventArgs.Message">
      <summary>Получает полный текст ошибки, переданный из источника данных.</summary>
      <returns>Полный текст ошибки.</returns>
    </member>
    <member name="P:System.Data.OleDb.OleDbInfoMessageEventArgs.Source">
      <summary>Получает имя объекта, вызвавшего ошибку.</summary>
      <returns>Имя объекта, вызвавшего ошибку.</returns>
    </member>
    <member name="M:System.Data.OleDb.OleDbInfoMessageEventArgs.ToString">
      <summary>Извлекает строковое представление события <see cref="E:System.Data.OleDb.OleDbConnection.InfoMessage" />.</summary>
      <returns>Строка, представляющая событие <see cref="E:System.Data.OleDb.OleDbConnection.InfoMessage" />.</returns>
    </member>
    <member name="T:System.Data.OleDb.OleDbInfoMessageEventH*******ler">
      <summary>Представляет метод, обрабатывающий событие <see cref="E:System.Data.OleDb.OleDbConnection.InfoMessage" /> для <see cref="T:System.Data.OleDb.OleDbConnection" />.</summary>
      <param name="sender">Источник события.</param>
      <param name="e">Объект <see cref="T:System.Data.OleDb.OleDbInfoMessageEventArgs" />, содержащий данные о событии.</param>
    </member>
    <member name="T:System.Data.OleDb.OleDbLiteral">
      <summary>Возвращает сведения о литералах, используемых в текстовых командах, значениях данных и объектах баз данных.</summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbLiteral.Binary_Literal">
      <summary>Двоичный литерал в текстовой команде. Отображается в DBLITERAL_BINARY_LITERAL.</summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbLiteral.Catalog_Name">
      <summary>Имя каталога в текстовой команде. Отображается в DBLITERAL_CATALOG_NAME.</summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbLiteral.Catalog_Separator">
      <summary>Знак, отделяющий имя каталога от остальной части идентификатора в текстовой команде. Отображается в DBLITERAL_CATALOG_SEPARATOR.</summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbLiteral.Char_Literal">
      <summary>Символьный литерал в текстовой команде. Отображается в DBLITERAL_CHAR_LITERAL.</summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbLiteral.Column_Alias">
      <summary>Псевдоним столбца в текстовой команде. Отображается в DBLITERAL_COLUMN_ALIAS.</summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbLiteral.Column_Name">
      <summary>Имя столбца, используемое в текстовой команде или в интерфейсе определения данных. Отображается в DBLITERAL_COLUMN_NAME.</summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbLiteral.Correlation_Name">
      <summary>Имя корреляции (псевдоним таблицы) в текстовой команде. Отображается в DBLITERAL_CORRELATION_NAME.</summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbLiteral.Cube_Name">
      <summary>Имя куба в составе схемы (или каталога, если поставщик не поддерживает схемы).</summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbLiteral.Cursor_Name">
      <summary>Имя курсора в текстовой команде. Отображается в DBLITERAL_CURSOR_NAME.</summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbLiteral.Dimension_Name">
      <summary>Имя размерности. Если данная размерность входит в состав нескольких кубов, здесь указывается одна строка для каждого сочетания "куб-размерность".</summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbLiteral.Escape_Percent_Prefix">
      <summary>Знак, используемый в выражении LIKE в качестве подстановочного знака для символа, возвращаемого для литерала DBLITERAL_LIKE_PERCENT. Например, если знак процента (%) служит для обозначения нескольких символов (возможно, нулевого их числа) и указана обратная косая черта (\), последовательность знаков "abc\%%" соответствует всем символьным значениям, начинающимся с "abc%". В некоторых диалектах SQL предусмотрено специальное выражение (ESCAPE-выражение), с помощью которого можно переопределить это значение. Отображается в DBLITERAL_ESCAPE_PERCENT_PREFIX.</summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbLiteral.Escape_Percent_Suffix">
      <summary>Escape-символ (если есть), используемый в качестве суффикса для символа, возвращаемого для литерала DBLITERAL_LIKE_PERCENT. Например, если знак процента (%) служит для обозначения нескольких символов (возможно, нулевого их числа), а знаки процента вставляются в текст заключенными в квадратные скобки, значение DBLITERAL_ESCAPE_PERCENT_PREFIX равно "[", DBLITERAL_ESCAPE_PERCENT_SUFFIX равно "]", а последовательность знаков "abc[%]%" соответствует всем символьным значениям, начинающимся с "abc%". Поставщики, не использующие суффикс для вставки знака DBLITERAL_ESCAPE_PERCENT, не возвращают значение этого литерала и при запросе могут установить значение элемента lt структуры DBLITERAL равным DBLITERAL_INVALID. Отображается в DBLITERAL_ESCAPE_PERCENT_SUFFIX.</summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbLiteral.Escape_Underscore_Prefix">
      <summary>Знак, используемый в выражении LIKE в качестве подстановочного знака для символа, возвращаемого для литерала DBLITERAL_LIKE_UNDERSCORE. Например, если знак подчеркивания () служит для обозначения только одного символа и указана обратная косая черта (\), последовательность знаков "abc\\ " соответствует всем пятизначным символьным значениям, начинающимся с "abc\". В некоторых диалектах SQL предусмотрено специальное выражение (ESCAPE-выражение), с помощью которого можно переопределить это значение. Отображается в DBLITERAL_ESCAPE_UNDERSCORE_PREFIX.</summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbLiteral.Escape_Underscore_Suffix">
      <summary>Знак, используемый в выражении LIKE в качестве подстановочного знака для символа, возвращаемого для литерала DBLITERAL_LIKE_UNDERSCORE. Например, если знак подчеркивания () служит для обозначения только одного символа и указана обратная косая черта (\), последовательность знаков "abc\\ " соответствует всем пятизначным символьным значениям, начинающимся с "abc\". В некоторых диалектах SQL предусмотрено специальное выражение (ESCAPE-выражение), с помощью которого можно переопределить это значение. Отображается в DBLITERAL_ESCAPE_UNDERSCORE_SUFFIX.</summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbLiteral.Hierarchy_Name">
      <summary>Имя иерархии. Если размерность не содержит иерархий или содержит только одну иерархию, в текущем столбце стоит значение null.</summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbLiteral.Index_Name">
      <summary>Имя индекса, используемое в текстовой команде или в интерфейсе определения данных. Отображается в DBLITERAL_INDEX_NAME.</summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbLiteral.Invalid">
      <summary>Недопустимое значение. Отображается в DBLITERAL_INVALID.</summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbLiteral.Level_Name">
      <summary>Имя куба, к которому относится текущий уровень.</summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbLiteral.Like_Percent">
      <summary>Знак, используемый в выражении LIKE для соответствия нескольким знакам или отсутствию знаков. Например, если это знак процента (%), то последовательность знаков "abc%" соответствует всем символьным значениям, начинающимся с "abc". Отображается в DBLITERAL_LIKE_PERCENT.</summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbLiteral.Like_Underscore">
      <summary>Знак, используемый в выражении LIKE для соответствия только одному знаку. Например, если это знак подчеркивания (), то последовательность знаков "abc\" соответствует всем четырехзначным символьным значениям, начинающимся с "abc". Отображается в DBLITERAL_LIKE_UNDERSCORE.</summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbLiteral.Member_Name">
      <summary>Имя элемента.</summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbLiteral.Procedure_Name">
      <summary>Имя процедуры в текстовой команде. Отображается в DBLITERAL_PROCEDURE_NAME.</summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbLiteral.Property_Name">
      <summary>Имя свойства.</summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbLiteral.Quote_Prefix">
      <summary>Знак, используемый в текстовой команде в качестве открывающей кавычки для заключения в кавычки идентификаторов, содержащих специальные знаки. Отображается в DBLITERAL_QUOTE_PREFIX.</summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbLiteral.Quote_Suffix">
      <summary>Знак, используемый в текстовой команде в качестве закрывающей кавычки для заключения в кавычки идентификаторов, содержащих специальные знаки. Поставщики 1.x, использующие один и тот же знак в качестве префикса и суффикса, могут не возвращать это значение литерала и при запросе могут установить значение элемента структуры DBLITERAL равным DBLITERAL_INVALID. Отображается в DBLITERAL_QUOTE_SUFFIX.</summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbLiteral.Schema_Name">
      <summary>Имя схемы в текстовой команде. Отображается в DBLITERAL_SCHEMA_NAME.</summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbLiteral.Schema_Separator">
      <summary>Знак, отделяющий имя схемы от остальной части идентификатора в текстовой команде. Отображается в DBLITERAL_SCHEMA_SEPARATOR.</summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbLiteral.Table_Name">
      <summary>Имя таблицы, используемое в текстовой команде или в интерфейсе определения данных. Отображается в DBLITERAL_TABLE_NAME.</summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbLiteral.Text_Comm*******">
      <summary>Текстовая команда, например оператор SQL. Отображается в DBLITERAL_TEXT_COMMAND.</summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbLiteral.User_Name">
      <summary>Имя пользователя в текстовой команде. Отображается в DBLITERAL_USER_NAME.</summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbLiteral.View_Name">
      <summary>Имя представления в текстовой команде. Отображается в DBLITERAL_VIEW_NAME.</summary>
    </member>
    <member name="T:System.Data.OleDb.OleDbMetaDataCollectionNames">
      <summary>Предоставляет список констант для использования с методом GetSchema в целях извлечения коллекций метаданных.</summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbMetaDataCollectionNames.Catalogs">
      <summary>Константа для использования с методом GetSchema, представляющая коллекцию Catalogs.</summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbMetaDataCollectionNames.Collations">
      <summary>Константа для использования с методом GetSchema, представляющая коллекцию Collations.</summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbMetaDataCollectionNames.Columns">
      <summary>Константа для использования с методом GetSchema, представляющая коллекцию Columns.</summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbMetaDataCollectionNames.Indexes">
      <summary>Константа для использования с методом GetSchema, представляющая коллекцию Indexes.</summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbMetaDataCollectionNames.ProcedureColumns">
      <summary>Константа для использования с методом GetSchema, представляющая коллекцию ProcedureColumns.</summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbMetaDataCollectionNames.ProcedureParameters">
      <summary>Константа для использования с методом GetSchema, представляющая коллекцию ProcedureParameters.</summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbMetaDataCollectionNames.Procedures">
      <summary>Константа для использования с методом GetSchema, представляющая коллекцию Procedures.</summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbMetaDataCollectionNames.Tables">
      <summary>Константа для использования с методом GetSchema, представляющая коллекцию Tables.</summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbMetaDataCollectionNames.Views">
      <summary>Константа для использования с методом GetSchema, представляющая коллекцию Views.</summary>
    </member>
    <member name="T:System.Data.OleDb.OleDbMetaDataColumnNames">
      <summary>Предоставляет статические значения, которые используются для имен столбцов в объектах <see cref="T:System.Data.OleDb.OleDbMetaDataCollectionNames" />, содержащихся в таблице <see cref="T:System.Data.DataTable" />. Объект <see cref="T:System.Data.DataTable" /> создан с помощью метода GetSchema.</summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbMetaDataColumnNames.BooleanFalseLiteral">
      <summary>Используется методом GetSchema для создания столбца BooleanFalseLiteral.</summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbMetaDataColumnNames.BooleanTrueLiteral">
      <summary>Используется методом GetSchema для создания столбца BooleanTrueLiteral.</summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbMetaDataColumnNames.DateTimeDigits">
      <summary>Используется методом GetSchema для создания столбца DateTimeDigits.</summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbMetaDataColumnNames.NativeDataType">
      <summary>Используется методом GetSchema для создания столбца NativeDataType.</summary>
    </member>
    <member name="T:System.Data.OleDb.OleDbParameter">
      <summary>Представляет параметр для объекта <see cref="T:System.Data.OleDb.OleDbComm*******" /> и (необязательно) его сопоставление со столбцом <see cref="T:System.Data.DataSet" />. Этот класс не наследуется.</summary>
    </member>
    <member name="M:System.Data.OleDb.OleDbParameter.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.OleDb.OleDbParameter" />.</summary>
    </member>
    <member name="M:System.Data.OleDb.OleDbParameter.#ctor(System.String,System.Data.OleDb.OleDbType)">
      <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.Data.OleDb.OleDbParameter" />, использующего имя параметра и тип данных.</summary>
      <param name="name">Имя сопоставляемого параметра.</param>
      <param name="dataType">Одно из значений <see cref="T:System.Data.OleDb.OleDbType" />.</param>
      <exception cref="T:System.ArgumentException">Значение, передаваемое в параметре <paramref name="dataType" />, имеет недопустимый тип внутренних данных.</exception>
    </member>
    <member name="M:System.Data.OleDb.OleDbParameter.#ctor(System.String,System.Data.OleDb.OleDbType,System.Int32)">
      <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.Data.OleDb.OleDbParameter" />, использующего имя параметра, тип данных и длину.</summary>
      <param name="name">Имя сопоставляемого параметра.</param>
      <param name="dataType">Одно из значений <see cref="T:System.Data.OleDb.OleDbType" />.</param>
      <param name="size">Длина параметра.</param>
      <exception cref="T:System.ArgumentException">Значение, передаваемое в параметре <paramref name="dataType" />, имеет недопустимый тип внутренних данных.</exception>
    </member>
    <member name="M:System.Data.OleDb.OleDbParameter.#ctor(System.String,System.Data.OleDb.OleDbType,System.Int32,System.Data.ParameterDirection,System.Boolean,System.Byte,System.Byte,System.String,System.Data.DataRowVersion,System.Object)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.OleDb.OleDbParameter" />, использующий имя параметра, тип данных, длину, имя исходного столбца, направление параметра, точность чисел и другие свойства.</summary>
      <param name="parameterName">Имя параметра.</param>
      <param name="dbType">Одно из значений <see cref="T:System.Data.OleDb.OleDbType" />.</param>
      <param name="size">Длина параметра.</param>
      <param name="direction">Одно из значений <see cref="T:System.Data.ParameterDirection" />.</param>
      <param name="isNullable">Значение <see langword="true" />, если поле допускает значение NULL, значение <see langword="false" /> — в противном случае.</param>
      <param name="precision">Общее число разрядов слева и справа от десятичной запятой, до которого вычисляется значения <see cref="P:System.Data.OleDb.OleDbParameter.Value" />.</param>
      <param name="scale">Общее число десятичных разрядов, до которого вычисляется значение <see cref="P:System.Data.OleDb.OleDbParameter.Value" />.</param>
      <param name="srcColumn">Имя исходного столбца.</param>
      <param name="srcVersion">Одно из значений <see cref="T:System.Data.DataRowVersion" />.</param>
      <param name="value">Объект <see cref="T:System.Object" />, который является значением <see cref="T:System.Data.OleDb.OleDbParameter" />.</param>
      <exception cref="T:System.ArgumentException">Значение, передаваемое в параметре <paramref name="dataType" />, имеет недопустимый тип внутренних данных.</exception>
    </member>
    <member name="M:System.Data.OleDb.OleDbParameter.#ctor(System.String,System.Data.OleDb.OleDbType,System.Int32,System.Data.ParameterDirection,System.Byte,System.Byte,System.String,System.Data.DataRowVersion,System.Boolean,System.Object)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.OleDb.OleDbParameter" />, использующий имя параметра, тип данных, длину, имя исходного столбца, направление параметра, точность чисел и другие свойства.</summary>
      <param name="parameterName">Имя параметра.</param>
      <param name="dbType">Одно из значений <see cref="T:System.Data.OleDb.OleDbType" />.</param>
      <param name="size">Длина параметра.</param>
      <param name="direction">Одно из значений <see cref="T:System.Data.ParameterDirection" />.</param>
      <param name="precision">Общее число разрядов слева и справа от десятичной запятой, до которого вычисляется значения <see cref="P:System.Data.OleDb.OleDbParameter.Value" />.</param>
      <param name="scale">Общее число десятичных разрядов, до которого вычисляется значение <see cref="P:System.Data.OleDb.OleDbParameter.Value" />.</param>
      <param name="sourceColumn">Имя исходного столбца.</param>
      <param name="sourceVersion">Одно из значений <see cref="T:System.Data.DataRowVersion" />.</param>
      <param name="sourceColumnNullMapping">
        <see langword="true" />, если исходный столбец допускает значение NULL, <see langword="false" /> — в противном случае.</param>
      <param name="value">Объект <see cref="T:System.Object" />, который является значением <see cref="T:System.Data.OleDb.OleDbParameter" />.</param>
      <exception cref="T:System.ArgumentException">Значение, передаваемое в параметре <paramref name="dataType" />, имеет недопустимый тип внутренних данных.</exception>
    </member>
    <member name="M:System.Data.OleDb.OleDbParameter.#ctor(System.String,System.Data.OleDb.OleDbType,System.Int32,System.String)">
      <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.Data.OleDb.OleDbParameter" />, использующего имя параметра, тип данных, длину и имя столбца источника.</summary>
      <param name="name">Имя сопоставляемого параметра.</param>
      <param name="dataType">Одно из значений <see cref="T:System.Data.OleDb.OleDbType" />.</param>
      <param name="size">Длина параметра.</param>
      <param name="srcColumn">Имя исходного столбца.</param>
      <exception cref="T:System.ArgumentException">Значение, передаваемое в параметре <paramref name="dataType" />, имеет недопустимый тип внутренних данных.</exception>
    </member>
    <member name="M:System.Data.OleDb.OleDbParameter.#ctor(System.String,System.Object)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.OleDb.OleDbParameter" />, использующий имя параметра и значение нового объекта <see cref="T:System.Data.OleDb.OleDbParameter" />.</summary>
      <param name="name">Имя сопоставляемого параметра.</param>
      <param name="value">Значение нового объекта <see cref="T:System.Data.OleDb.OleDbParameter" />.</param>
    </member>
    <member name="P:System.Data.OleDb.OleDbParameter.DbType">
      <summary>Возвращает или устанавливает тип <see cref="T:System.Data.DbType" /> параметра.</summary>
      <returns>Одно из значений <see cref="T:System.Data.DbType" />. Значение по умолчанию — <see cref="F:System.Data.DbType.String" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Свойству не задано допустимое значение <see cref="T:System.Data.DbType" />.</exception>
    </member>
    <member name="P:System.Data.OleDb.OleDbParameter.Direction">
      <summary>Возвращает или задает значение, определяющее, предназначен ли параметр только для ввода, только для вывода, является ли он двунаправленным или возвращается хранимой процедурой.</summary>
      <returns>Одно из значений <see cref="T:System.Data.ParameterDirection" />. Значение по умолчанию — <see langword="Input" />.</returns>
      <exception cref="T:System.ArgumentException">Для свойства не задано одно из допустимых значений типа <see cref="T:System.Data.ParameterDirection" />.</exception>
    </member>
    <member name="P:System.Data.OleDb.OleDbParameter.IsNullable">
      <summary>Возвращает или задает значение, указывающее, принимает ли этот параметр значения NULL.</summary>
      <returns>Значение <see langword="true" />, если допускаются значения NULL. В противном случае — значение <see langword="false" />. Значение по умолчанию — <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.OleDb.OleDbParameter.OleDbType">
      <summary>Возвращает или устанавливает тип <see cref="T:System.Data.OleDb.OleDbType" /> параметра.</summary>
      <returns>Тип <see cref="T:System.Data.OleDb.OleDbType" /> параметра. Значение по умолчанию — <see cref="F:System.Data.OleDb.OleDbType.VarWChar" />.</returns>
    </member>
    <member name="P:System.Data.OleDb.OleDbParameter.ParameterName">
      <summary>Возвращает или задает имя таблицы для объекта <see cref="T:System.Data.OleDb.OleDbParameter" />.</summary>
      <returns>Имя <see cref="T:System.Data.OleDb.OleDbParameter" />. Значение по умолчанию — пустая строка ("").</returns>
    </member>
    <member name="P:System.Data.OleDb.OleDbParameter.Precision">
      <summary>Возвращает или задает максимальное число разрядов, используемых для представления свойства <see cref="P:System.Data.OleDb.OleDbParameter.Value" />.</summary>
      <returns>Максимальное число разрядов, используемых для представления свойства <see cref="P:System.Data.OleDb.OleDbParameter.Value" />. Значение по умолчанию равно 0 и означает, что точность <see cref="P:System.Data.OleDb.OleDbParameter.Value" /> задается поставщиком данных.</returns>
    </member>
    <member name="M:System.Data.OleDb.OleDbParameter.ResetDbType">
      <summary>Сбрасывает тип, связанный с параметром <see cref="T:System.Data.OleDb.OleDbParameter" />.</summary>
    </member>
    <member name="M:System.Data.OleDb.OleDbParameter.ResetOleDbType">
      <summary>Сбрасывает тип, связанный с параметром <see cref="T:System.Data.OleDb.OleDbParameter" />.</summary>
    </member>
    <member name="P:System.Data.OleDb.OleDbParameter.Scale">
      <summary>Возвращает или задает число десятичных разрядов, до которых вычисляется значение <see cref="P:System.Data.OleDb.OleDbParameter.Value" />.</summary>
      <returns>Число десятичных разрядов, до которых вычисляется значение <see cref="P:System.Data.OleDb.OleDbParameter.Value" />. Значение по умолчанию — 0.</returns>
    </member>
    <member name="P:System.Data.OleDb.OleDbParameter.Size">
      <summary>Возвращает или задает максимальную длину данных (в байтах) в столбце.</summary>
      <returns>Максимальная длина данных (в байтах) в столбце. Значение по умолчанию определяется исходя из значения параметра.</returns>
    </member>
    <member name="P:System.Data.OleDb.OleDbParameter.SourceColumn">
      <summary>Возвращает или задает имя исходного столбца, сопоставленного <see cref="T:System.Data.DataSet" /> и используемого для загрузки или возвращения значения <see cref="P:System.Data.OleDb.OleDbParameter.Value" />.</summary>
      <returns>Имя исходного столбца, сопоставленного <see cref="T:System.Data.DataSet" />. Значение по умолчанию - пустая строка.</returns>
    </member>
    <member name="P:System.Data.OleDb.OleDbParameter.SourceColumnNullMapping">
      <summary>Возвращает или задает значение, показывающее, допускает ли исходный столбец значение NULL. Это позволяет <see cref="T:System.Data.Common.DbComm*******Builder" /> правильно создавать инструкции Update для столбцов со значением NULL.</summary>
      <returns>Значение <see langword="true" />, если исходный столбец допускает значение NULL; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.OleDb.OleDbParameter.SourceVersion">
      <summary>Возвращает или задает значение <see cref="T:System.Data.DataRowVersion" />, используемое при загрузке <see cref="P:System.Data.OleDb.OleDbParameter.Value" />.</summary>
      <returns>Одно из значений <see cref="T:System.Data.DataRowVersion" />. Значение по умолчанию — <see langword="Current" />.</returns>
      <exception cref="T:System.ArgumentException">Свойство не было установлено в одно из значений <see cref="T:System.Data.DataRowVersion" />.</exception>
    </member>
    <member name="M:System.Data.OleDb.OleDbParameter.System#ICloneable#Clone">
      <summary>Описание этого члена см. в разделе <see cref="M:System.ICloneable.Clone" />.</summary>
      <returns>Новый объект <see cref="T:System.Object" />, который является копией данного экземпляра.</returns>
    </member>
    <member name="M:System.Data.OleDb.OleDbParameter.ToString">
      <summary>Возвращает строку, содержащую имя <see cref="P:System.Data.OleDb.OleDbParameter.ParameterName" />.</summary>
      <returns>Строка, содержащая имя <see cref="P:System.Data.OleDb.OleDbParameter.ParameterName" />.</returns>
    </member>
    <member name="P:System.Data.OleDb.OleDbParameter.Value">
      <summary>Возвращает или задает значение параметра.</summary>
      <returns>Объект <see cref="T:System.Object" />, который является значением параметра. Значение по умолчанию — null.</returns>
    </member>
    <member name="T:System.Data.OleDb.OleDbParameterCollection">
      <summary>Представляет коллекцию параметров, относящихся к <see cref="T:System.Data.OleDb.OleDbComm*******" />, а также соответствующие им сопоставления со столбцами в <see cref="T:System.Data.DataSet" />.</summary>
    </member>
    <member name="M:System.Data.OleDb.OleDbParameterCollection.Add(System.Data.OleDb.OleDbParameter)">
      <summary>Добавляет заданный объект <see cref="T:System.Data.OleDb.OleDbParameter" /> в <see cref="T:System.Data.OleDb.OleDbParameterCollection" />.</summary>
      <param name="value">Параметр <see cref="T:System.Data.OleDb.OleDbParameter" /> для добавления в коллекцию.</param>
      <returns>Индекс нового объекта <see cref="T:System.Data.OleDb.OleDbParameter" />.</returns>
      <exception cref="T:System.ArgumentException">
        <see cref="T:System.Data.OleDb.OleDbParameter" />, заданный в параметре <paramref name="value" />, уже добавлен в эту или другую коллекцию <see cref="T:System.Data.OleDb.OleDbParameterCollection" />.</exception>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="value" /> имеет значение null.</exception>
    </member>
    <member name="M:System.Data.OleDb.OleDbParameterCollection.Add(System.Object)">
      <summary>Добавляет указанный объект <see cref="T:System.Data.OleDb.OleDbParameter" /> в коллекцию <see cref="T:System.Data.OleDb.OleDbParameterCollection" />.</summary>
      <param name="value">Объект <see cref="T:System.Object" />.</param>
      <returns>Индекс нового объекта <see cref="T:System.Data.OleDb.OleDbParameter" /> в коллекции.</returns>
    </member>
    <member name="M:System.Data.OleDb.OleDbParameterCollection.Add(System.String,System.Data.OleDb.OleDbType)">
      <summary>Добавляет <see cref="T:System.Data.OleDb.OleDbParameter" /> с заданным именем параметра и типом данных в коллекцию <see cref="T:System.Data.OleDb.OleDbParameterCollection" />.</summary>
      <param name="parameterName">Имя параметра.</param>
      <param name="oleDbType">Одно из значений <see cref="T:System.Data.OleDb.OleDbType" />.</param>
      <returns>Индекс нового объекта <see cref="T:System.Data.OleDb.OleDbParameter" />.</returns>
    </member>
    <member name="M:System.Data.OleDb.OleDbParameterCollection.Add(System.String,System.Data.OleDb.OleDbType,System.Int32)">
      <summary>Добавляет <see cref="T:System.Data.OleDb.OleDbParameter" /> с заданным именем, типом данных и длиной столбца в <see cref="T:System.Data.OleDb.OleDbParameterCollection" />.</summary>
      <param name="parameterName">Имя параметра.</param>
      <param name="oleDbType">Одно из значений <see cref="T:System.Data.OleDb.OleDbType" />.</param>
      <param name="size">Длина столбца.</param>
      <returns>Индекс нового объекта <see cref="T:System.Data.OleDb.OleDbParameter" />.</returns>
    </member>
    <member name="M:System.Data.OleDb.OleDbParameterCollection.Add(System.String,System.Data.OleDb.OleDbType,System.Int32,System.String)">
      <summary>Добавляет объект <see cref="T:System.Data.OleDb.OleDbParameter" /> с заданным именем параметра, типом данных, длиной столбца и именем столбца источника в <see cref="T:System.Data.OleDb.OleDbParameterCollection" />.</summary>
      <param name="parameterName">Имя параметра.</param>
      <param name="oleDbType">Одно из значений <see cref="T:System.Data.OleDb.OleDbType" />.</param>
      <param name="size">Длина столбца.</param>
      <param name="sourceColumn">Имя исходного столбца.</param>
      <returns>Индекс нового объекта <see cref="T:System.Data.OleDb.OleDbParameter" />.</returns>
    </member>
    <member name="M:System.Data.OleDb.OleDbParameterCollection.Add(System.String,System.Object)">
      <summary>Добавляет объект <see cref="T:System.Data.OleDb.OleDbParameter" /> с заданным именем параметра и значением в <see cref="T:System.Data.OleDb.OleDbParameterCollection" />.</summary>
      <param name="parameterName">Имя параметра.</param>
      <param name="value">
        <see cref="P:System.Data.OleDb.OleDbParameter.Value" /> из <see cref="T:System.Data.OleDb.OleDbParameter" /> для добавления в коллекцию.</param>
      <returns>Индекс нового объекта <see cref="T:System.Data.OleDb.OleDbParameter" />.</returns>
      <exception cref="T:System.InvalidCastException">Параметр <paramref name="value" /> не является <see cref="T:System.Data.OleDb.OleDbParameter" />.</exception>
    </member>
    <member name="M:System.Data.OleDb.OleDbParameterCollection.AddRange(System.Array)">
      <summary>Добавляет массив значений в конец коллекции <see cref="T:System.Data.OleDb.OleDbParameterCollection" />.</summary>
      <param name="values">Добавляемые значения <see cref="T:System.Array" />.</param>
    </member>
    <member name="M:System.Data.OleDb.OleDbParameterCollection.AddRange(System.Data.OleDb.OleDbParameter[])">
      <summary>Добавляет массив значений <see cref="T:System.Data.OleDb.OleDbParameter" /> в конец коллекции <see cref="T:System.Data.OleDb.OleDbParameterCollection" />.</summary>
      <param name="values">Добавляемые значения <see cref="T:System.Data.OleDb.OleDbParameter" />.</param>
    </member>
    <member name="M:System.Data.OleDb.OleDbParameterCollection.AddWithValue(System.String,System.Object)">
      <summary>Добавляет значение в конец коллекции <see cref="T:System.Data.OleDb.OleDbParameterCollection" />.</summary>
      <param name="parameterName">Имя параметра.</param>
      <param name="value">Добавляемое значение.</param>
      <returns>Объект <see cref="T:System.Data.OleDb.OleDbParameter" />.</returns>
    </member>
    <member name="M:System.Data.OleDb.OleDbParameterCollection.Clear">
      <summary>Удаляет все объекты <see cref="T:System.Data.OleDb.OleDbParameter" /> из коллекции <see cref="T:System.Data.OleDb.OleDbParameterCollection" />.</summary>
    </member>
    <member name="M:System.Data.OleDb.OleDbParameterCollection.Contains(System.Data.OleDb.OleDbParameter)">
      <summary>Определяет, находится ли заданный объект <see cref="T:System.Data.OleDb.OleDbParameter" /> в этой коллекции <see cref="T:System.Data.OleDb.OleDbParameterCollection" />.</summary>
      <param name="value">Значение <see cref="T:System.Data.OleDb.OleDbParameter" />.</param>
      <returns>Значение <see langword="true" />, если элемент <see cref="T:System.Data.OleDb.OleDbParameter" /> присутствует в коллекции, в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.OleDb.OleDbParameterCollection.Contains(System.Object)">
      <summary>Определяет, находится ли заданный объект <see cref="T:System.Object" /> в этой коллекции <see cref="T:System.Data.OleDb.OleDbParameterCollection" />.</summary>
      <param name="value">Значение <see cref="T:System.Object" />.</param>
      <returns>Значение <see langword="true" />, если коллекция <see cref="T:System.Data.OleDb.OleDbParameterCollection" /> содержит параметр <paramref name="value" />; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.OleDb.OleDbParameterCollection.Contains(System.String)">
      <summary>Определяет, находится ли заданный объект <see cref="T:System.String" /> в этой коллекции <see cref="T:System.Data.OleDb.OleDbParameterCollection" />.</summary>
      <param name="value">Значение <see cref="T:System.String" />.</param>
      <returns>
        <see langword="true" />, если коллекция <see cref="T:System.Data.OleDb.OleDbParameterCollection" /> содержит значение; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.OleDb.OleDbParameterCollection.CopyTo(System.Array,System.Int32)">
      <summary>Копирует все элементы текущей коллекции <see cref="T:System.Data.OleDb.OleDbParameterCollection" /> в указанный одномерный массив <see cref="T:System.Array" />, начиная с указанного индекса в массиве <see cref="T:System.Array" />.</summary>
      <param name="array">Одномерный массив <see cref="T:System.Array" /> — назначение для элементов, копируемых из текущей коллекции <see cref="T:System.Data.OleDb.OleDbParameterCollection" />.</param>
      <param name="index">32-разрядное целое число, представляющее индекс в коллекции <see cref="T:System.Array" />, с которого начинается копирование.</param>
    </member>
    <member name="M:System.Data.OleDb.OleDbParameterCollection.CopyTo(System.Data.OleDb.OleDbParameter[],System.Int32)">
      <summary>Копирует все элементы текущей коллекции <see cref="T:System.Data.OleDb.OleDbParameterCollection" /> в указанную коллекцию <see cref="T:System.Data.OleDb.OleDbParameterCollection" />, начиная с указанного индекса в коллекции назначения.</summary>
      <param name="array">Коллекция <see cref="T:System.Data.OleDb.OleDbParameterCollection" /> — назначение для элементов, копируемых из текущей коллекции <see cref="T:System.Data.OleDb.OleDbParameterCollection" />.</param>
      <param name="index">32-разрядное целое число, представляющее индекс в коллекции <see cref="T:System.Data.OleDb.OleDbParameterCollection" />, с которого начинается копирование.</param>
    </member>
    <member name="P:System.Data.OleDb.OleDbParameterCollection.Count">
      <summary>Возвращает целое число, которое содержит количество элементов в <see cref="T:System.Data.OleDb.OleDbParameterCollection" />. Только для чтения.</summary>
      <returns>Количество элементов в <see cref="T:System.Data.OleDb.OleDbParameterCollection" />, представленное в виде целого числа.</returns>
    </member>
    <member name="M:System.Data.OleDb.OleDbParameterCollection.GetEnumerator">
      <summary>Возвращает перечислитель, осуществляющий перебор элементов списка <see cref="T:System.Data.OleDb.OleDbParameterCollection" />.</summary>
      <returns>Интерфейс <see cref="T:System.Collections.IEnumerator" /> для <see cref="T:System.Data.OleDb.OleDbParameterCollection" />.</returns>
    </member>
    <member name="M:System.Data.OleDb.OleDbParameterCollection.IndexOf(System.Data.OleDb.OleDbParameter)">
      <summary>Возвращает положение указанного объекта <see cref="T:System.Data.OleDb.OleDbParameter" /> в коллекции.</summary>
      <param name="value">Объект <see cref="T:System.Data.OleDb.OleDbParameter" /> в коллекции, который требуется найти.</param>
      <returns>Отсчитываемое от нуля расположение указанного объекта <see cref="T:System.Data.OleDb.OleDbParameter" />, который является объектом <see cref="T:System.Data.OleDb.OleDbParameter" /> в коллекции.</returns>
    </member>
    <member name="M:System.Data.OleDb.OleDbParameterCollection.IndexOf(System.Object)">
      <summary>Местоположение указанного объекта <see cref="T:System.Object" /> в коллекции.</summary>
      <param name="value">Искомый объект <see cref="T:System.Object" />.</param>
      <returns>Отсчитываемое от нуля расположение указанного объекта <see cref="T:System.Object" />, который является объектом <see cref="T:System.Data.OleDb.OleDbParameterCollection" /> в коллекции.</returns>
    </member>
    <member name="M:System.Data.OleDb.OleDbParameterCollection.IndexOf(System.String)">
      <summary>Возвращает положение заданного объекта <see cref="T:System.Data.OleDb.OleDbParameter" /> с указанным именем.</summary>
      <param name="parameterName">Имя искомого объекта <see cref="T:System.Data.OleDb.OleDbParameter" /> с учетом регистра.</param>
      <returns>Положение (отсчет с нуля) указанного объекта <see cref="T:System.Data.OleDb.OleDbParameter" /> с заданным именем с учетом регистра.</returns>
    </member>
    <member name="M:System.Data.OleDb.OleDbParameterCollection.Insert(System.Int32,System.Data.OleDb.OleDbParameter)">
      <summary>Вставляет объект <see cref="T:System.Data.OleDb.OleDbParameter" /> в коллекцию <see cref="T:System.Data.OleDb.OleDbParameterCollection" /> по указанному индексу.</summary>
      <param name="index">Индекс (отсчет с нуля), по которому необходимо вставить значение.</param>
      <param name="value">Объект <see cref="T:System.Data.OleDb.OleDbParameter" />, который необходимо вставить в коллекцию <see cref="T:System.Data.OleDb.OleDbParameterCollection" />.</param>
    </member>
    <member name="M:System.Data.OleDb.OleDbParameterCollection.Insert(System.Int32,System.Object)">
      <summary>Вставляет <see cref="T:System.Object" /> в <see cref="T:System.Data.OleDb.OleDbParameterCollection" /> по указанному индексу.</summary>
      <param name="index">Индекс (отсчет с нуля), по которому необходимо вставить значение.</param>
      <param name="value">Объект <see cref="T:System.Object" />, который необходимо вставить в <see cref="T:System.Data.OleDb.OleDbParameterCollection" />.</param>
    </member>
    <member name="P:System.Data.OleDb.OleDbParameterCollection.IsFixedSize">
      <summary>Возвращает значение, показывающее, имеет ли объект <see cref="T:System.Data.OleDb.OleDbParameterCollection" /> фиксированный размер. Только для чтения.</summary>
      <returns>Значение <see langword="true" />, если список <see cref="T:System.Data.OleDb.OleDbParameterCollection" /> имеет фиксированный размер. В противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.OleDb.OleDbParameterCollection.IsReadOnly">
      <summary>Возвращает значение, которое определяет, является ли коллекция <see cref="T:System.Data.OleDb.OleDbParameterCollection" /> доступной только для чтения.</summary>
      <returns>Значение <see langword="true" />, если коллекция <see cref="T:System.Data.OleDb.OleDbParameterCollection" /> доступна только для чтения, в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.OleDb.OleDbParameterCollection.IsSynchronized">
      <summary>Возвращает значение, которое определяет, является ли коллекция <see cref="T:System.Data.OleDb.OleDbParameterCollection" /> синхронизированной. Только для чтения.</summary>
      <returns>Значение <see langword="true" />, если коллекция <see cref="T:System.Data.OleDb.OleDbParameterCollection" /> синхронизирована; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.OleDb.OleDbParameterCollection.Item(System.Int32)">
      <summary>Возвращает или задает объект <see cref="T:System.Data.OleDb.OleDbParameter" /> с заданным индексом.</summary>
      <param name="index">Индекс получаемого параметра (отсчет с нуля).</param>
      <returns>Параметр <see cref="T:System.Data.OleDb.OleDbParameter" /> по указанному индексу.</returns>
      <exception cref="T:System.IndexOutOfRangeException">Указанный индекс не существует.</exception>
    </member>
    <member name="P:System.Data.OleDb.OleDbParameterCollection.Item(System.String)">
      <summary>Возвращает или задает объект <see cref="T:System.Data.OleDb.OleDbParameter" /> с заданным именем.</summary>
      <param name="parameterName">Имя получаемого параметра.</param>
      <returns>Параметр <see cref="T:System.Data.OleDb.OleDbParameter" /> с указанным именем.</returns>
      <exception cref="T:System.IndexOutOfRangeException">Указанного имени не существует.</exception>
    </member>
    <member name="M:System.Data.OleDb.OleDbParameterCollection.Remove(System.Data.OleDb.OleDbParameter)">
      <summary>Удаляет объект <see cref="T:System.Data.OleDb.OleDbParameter" /> из коллекции <see cref="T:System.Data.OleDb.OleDbParameterCollection" />.</summary>
      <param name="value">Объект <see cref="T:System.Data.OleDb.OleDbParameter" />, удаляемый из коллекции.</param>
      <exception cref="T:System.InvalidCastException">Параметр не является объектом <see cref="T:System.Data.OleDb.OleDbParameter" />.</exception>
      <exception cref="T:System.SystemException">Параметр отсутствует в коллекции.</exception>
    </member>
    <member name="M:System.Data.OleDb.OleDbParameterCollection.Remove(System.Object)">
      <summary>Удаляет объект <see cref="T:System.Object" /> из коллекции <see cref="T:System.Data.OleDb.OleDbParameterCollection" />.</summary>
      <param name="value">Объект<see cref="T:System.Object" />, удаляемый из коллекции <see cref="T:System.Data.OleDb.OleDbParameterCollection" />.</param>
    </member>
    <member name="M:System.Data.OleDb.OleDbParameterCollection.RemoveAt(System.Int32)">
      <summary>Удаляет объект <see cref="T:System.Data.OleDb.OleDbParameter" /> с указанным индексом из коллекции <see cref="T:System.Data.OleDb.OleDbParameterCollection" />.</summary>
      <param name="index">Индекс (отсчет с нуля) удаляемого объекта <see cref="T:System.Data.OleDb.OleDbParameter" />.</param>
    </member>
    <member name="M:System.Data.OleDb.OleDbParameterCollection.RemoveAt(System.String)">
      <summary>Удаляет объект <see cref="T:System.Data.OleDb.OleDbParameter" /> с указанным именем из коллекции <see cref="T:System.Data.OleDb.OleDbParameterCollection" />.</summary>
      <param name="parameterName">Имя удаляемого объекта <see cref="T:System.Data.OleDb.OleDbParameter" />.</param>
    </member>
    <member name="P:System.Data.OleDb.OleDbParameterCollection.SyncRoot">
      <summary>Получает объект, с помощью которого можно синхронизировать доступ к коллекции <see cref="T:System.Data.OleDb.OleDbParameterCollection" />. Только для чтения.</summary>
      <returns>Объект, который может использоваться для синхронизации доступа к <see cref="T:System.Data.OleDb.OleDbParameterCollection" />.</returns>
    </member>
    <member name="T:System.Data.OleDb.OleDbPermission">
      <summary>Позволяет поставщику данных .NET Framework для OLE DB обеспечить пользователю уровень безопасности, достаточный для доступа к источнику данных OLE DB.</summary>
    </member>
    <member name="M:System.Data.OleDb.OleDbPermission.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.OleDb.OleDbPermission" />.</summary>
    </member>
    <member name="M:System.Data.OleDb.OleDbPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.OleDb.OleDbPermission" />.</summary>
      <param name="state">Одно из значений <see cref="T:System.Security.Permissions.PermissionState" />.</param>
    </member>
    <member name="M:System.Data.OleDb.OleDbPermission.#ctor(System.Security.Permissions.PermissionState,System.Boolean)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.OleDb.OleDbPermission" />.</summary>
      <param name="state">Одно из значений <see cref="T:System.Security.Permissions.PermissionState" />.</param>
      <param name="allowBlankPassword">Указывает, разрешается ли пустой пароль.</param>
    </member>
    <member name="M:System.Data.OleDb.OleDbPermission.Copy">
      <summary>Возвращает объект <see cref="T:System.Data.OleDb.OleDbPermission" /> в качестве <see cref="T:System.Security.IPermission" />.</summary>
      <returns>Копия текущего объекта разрешения.</returns>
    </member>
    <member name="P:System.Data.OleDb.OleDbPermission.Provider">
      <summary>Это свойство промаркировано как устаревшее. Установка этого свойства ни на что не повлияет.</summary>
      <returns>Это свойство промаркировано как устаревшее. Установка этого свойства ни на что не повлияет.</returns>
    </member>
    <member name="T:System.Data.OleDb.OleDbPermissionAttribute">
      <summary>Связывает операцию безопасности с пользовательским атрибутом безопасности.</summary>
    </member>
    <member name="M:System.Data.OleDb.OleDbPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.OleDb.OleDbPermissionAttribute" />.</summary>
      <param name="action">Одно из значений <see cref="T:System.Security.Permissions.SecurityAction" />, представляющих действие, которое может быть выполнено с применением декларативной безопасности.</param>
    </member>
    <member name="M:System.Data.OleDb.OleDbPermissionAttribute.CreatePermission">
      <summary>Возвращает объект <see cref="T:System.Data.OleDb.OleDbPermission" />, который настроен в соответствии со свойствами атрибутов.</summary>
      <returns>Объект <see cref="T:System.Data.OleDb.OleDbPermission" />.</returns>
    </member>
    <member name="P:System.Data.OleDb.OleDbPermissionAttribute.Provider">
      <summary>Возвращает или задает строку со списком поддерживаемых поставщиков, в качестве разделителя используется запятая.</summary>
      <returns>Разделенный запятыми список поставщиков, разрешаемых политикой безопасности.</returns>
    </member>
    <member name="T:System.Data.OleDb.OleDbRowUpdatedEventArgs">
      <summary>Предоставляет данные для события <see cref="E:System.Data.OleDb.OleDbDataAdapter.RowUpdated" />.</summary>
    </member>
    <member name="M:System.Data.OleDb.OleDbRowUpdatedEventArgs.#ctor(System.Data.DataRow,System.Data.IDbComm*******,System.Data.StatementType,System.Data.Common.DataTableMapping)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.OleDb.OleDbRowUpdatedEventArgs" />.</summary>
      <param name="dataRow">Объект <see cref="T:System.Data.DataRow" /> отправлен с помощью метода <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</param>
      <param name="comm*******">Команда <see cref="T:System.Data.IDbComm*******" />, выполняемая при вызове метода <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</param>
      <param name="statementType">Одно из значений <see cref="T:System.Data.StatementType" />, указывающих тип выполненного запроса.</param>
      <param name="tableMapping">Объект <see cref="T:System.Data.Common.DataTableMapping" /> отправлен с помощью метода <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</param>
    </member>
    <member name="P:System.Data.OleDb.OleDbRowUpdatedEventArgs.Comm*******">
      <summary>Получает объект <see cref="T:System.Data.OleDb.OleDbComm*******" />, выполняемый при вызове метода <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</summary>
      <returns>Команда <see cref="T:System.Data.OleDb.OleDbComm*******" />, выполняемая при вызове метода <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</returns>
    </member>
    <member name="T:System.Data.OleDb.OleDbRowUpdatedEventH*******ler">
      <summary>Представляет метод, обрабатывающий событие <see cref="E:System.Data.OleDb.OleDbDataAdapter.RowUpdated" /> для <see cref="T:System.Data.OleDb.OleDbDataAdapter" />.</summary>
      <param name="sender">Источник события.</param>
      <param name="e">Объект класса <see cref="T:System.Data.OleDb.OleDbRowUpdatedEventArgs" />, содержащий данные о событии.</param>
    </member>
    <member name="T:System.Data.OleDb.OleDbRowUpdatingEventArgs">
      <summary>Предоставляет данные для события <see cref="E:System.Data.OleDb.OleDbDataAdapter.RowUpdating" />.</summary>
    </member>
    <member name="M:System.Data.OleDb.OleDbRowUpdatingEventArgs.#ctor(System.Data.DataRow,System.Data.IDbComm*******,System.Data.StatementType,System.Data.Common.DataTableMapping)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.OleDb.OleDbRowUpdatingEventArgs" />.</summary>
      <param name="dataRow">Объект <see cref="T:System.Data.DataRow" /> для метода <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</param>
      <param name="comm*******">
        <see cref="T:System.Data.IDbComm*******" /> для выполнения в методе <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</param>
      <param name="statementType">Одно из значений <see cref="T:System.Data.StatementType" />, указывающих тип выполненного запроса.</param>
      <param name="tableMapping">Объект <see cref="T:System.Data.Common.DataTableMapping" /> отправлен с помощью метода <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</param>
    </member>
    <member name="P:System.Data.OleDb.OleDbRowUpdatingEventArgs.Comm*******">
      <summary>Возвращает или задает команду <see cref="T:System.Data.OleDb.OleDbComm*******" />, которую необходимо выполнить в процессе <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</summary>
      <returns>Команда <see cref="T:System.Data.OleDb.OleDbComm*******" />, которую необходимо выполнить в процессе <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</returns>
    </member>
    <member name="T:System.Data.OleDb.OleDbRowUpdatingEventH*******ler">
      <summary>Представляет метод, обрабатывающий событие <see cref="E:System.Data.OleDb.OleDbDataAdapter.RowUpdating" /> для <see cref="T:System.Data.OleDb.OleDbDataAdapter" />.</summary>
      <param name="sender">Источник события.</param>
      <param name="e">Объект класса <see cref="T:System.Data.OleDb.OleDbRowUpdatingEventArgs" />, содержащий данные о событии.</param>
    </member>
    <member name="T:System.Data.OleDb.OleDbSchemaGuid">
      <summary>Возвращает тип таблицы схемы, указываемой методом <see cref="M:System.Data.OleDb.OleDbConnection.GetOleDbSchemaTable(System.Guid,System.Object[])" />.</summary>
    </member>
    <member name="M:System.Data.OleDb.OleDbSchemaGuid.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.OleDb.OleDbSchemaGuid" />.</summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbSchemaGuid.Assertions">
      <summary>Возвращает утверждения, определенные в каталоге, владельцем которого является указанный пользователь.</summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbSchemaGuid.Catalogs">
      <summary>Возвращает физические атрибуты, связанные с каталогами, доступными из источника данных. Возвращает утверждения, определенные в каталоге, владельцем которого является указанный пользователь.</summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbSchemaGuid.Character_Sets">
      <summary>Возвращает наборы символов, определенные в каталоге, который доступен указанному пользователю.</summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbSchemaGuid.Check_Constraints">
      <summary>Возвращает ограничения проверки, определенные в каталоге, который принадлежит указанному пользователю.</summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbSchemaGuid.Check_Constraints_By_Table">
      <summary>Возвращает ограничения проверки, определенные в каталоге, который принадлежит указанному пользователю.</summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbSchemaGuid.Collations">
      <summary>Возвращает сравнения знаков, определенные в каталоге, который доступен указанному пользователю.</summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbSchemaGuid.Column_Domain_Usage">
      <summary>Возвращает столбцы, определенные в каталоге и зависящие от домена, определенного в каталоге и принадлежащего указанному пользователю.</summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbSchemaGuid.Column_Privileges">
      <summary>Возвращает привилегии для столбцов таблиц, определенные в каталоге и доступные указанному пользователю или предоставленные ему.</summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbSchemaGuid.Columns">
      <summary>Возвращает столбцы таблиц (включая представления), определенные в каталоге, который доступен указанному пользователю.</summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbSchemaGuid.Constraint_Column_Usage">
      <summary>Возвращает столбцы, используемые ссылочными ограничениями, уникальными ограничениями, ограничениями проверки и утверждениями, определенными в каталоге и принадлежащими указанному пользователю.</summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbSchemaGuid.Constraint_Table_Usage">
      <summary>Возвращает таблицы, используемые ссылочными ограничениями, уникальными ограничениями, ограничениями проверки и утверждениями, определенными в каталоге и принадлежащими указанному пользователю.</summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbSchemaGuid.DbInfoKeywords">
      <summary>Возвращает список ключевых слов, специфичных для конкретного поставщика.</summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbSchemaGuid.DbInfoLiterals">
      <summary>Возвращает список литералов, используемых в текстовых командах и специфичных для конкретного поставщика.</summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbSchemaGuid.Foreign_Keys">
      <summary>Возвращает столбцы внешнего ключа, определенные в каталоге данным пользователем.</summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbSchemaGuid.Indexes">
      <summary>Возвращает индексы, определенные в каталоге, который принадлежит указанному пользователю.</summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbSchemaGuid.Key_Column_Usage">
      <summary>Возвращает столбцы, определенные в каталоге, который ограничивается ключами данным пользователем.</summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbSchemaGuid.Primary_Keys">
      <summary>Возвращает столбцы первичного ключа, определенные в каталоге данным пользователем.</summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbSchemaGuid.Procedure_Columns">
      <summary>Возвращает сведения о столбцах наборов строк, возвращаемых процедурами.</summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbSchemaGuid.Procedure_Parameters">
      <summary>Возвращает сведения о параметрах и кодах возврата процедур.</summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbSchemaGuid.Procedures">
      <summary>Возвращает процедуры, определенные в каталоге, который принадлежит указанному пользователю.</summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbSchemaGuid.Provider_Types">
      <summary>Возвращает основные типы данных, поддерживаемые поставщиком данных .NET Framework для OLE DB.</summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbSchemaGuid.Referential_Constraints">
      <summary>Возвращает ссылочные ограничения, определенные в каталоге, который принадлежит указанному пользователю.</summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbSchemaGuid.SchemaGuids">
      <summary>Возвращает список наборов строк схемы, идентифицируемых по их идентификаторам GUID, и указатель на описания столбцов ограничений.</summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbSchemaGuid.Schemata">
      <summary>Возвращает объекты схемы, принадлежащие указанному пользователю.</summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbSchemaGuid.Sql_Languages">
      <summary>Возвращает уровни соответствия, параметры и диалекты, поддерживаемые данными обработки реализации SQL, которые определены в каталоге.</summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbSchemaGuid.Statistics">
      <summary>Возвращает статистические данные, определенные в каталоге, который принадлежит указанному пользователю.</summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbSchemaGuid.Table_Constraints">
      <summary>Возвращает табличные ограничения, определенные в каталоге, который принадлежит указанному пользователю.</summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbSchemaGuid.Table_Privileges">
      <summary>Возвращает привилегии для таблиц, определенных в каталоге и доступных указанному пользователю или предоставленных им.</summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbSchemaGuid.Table_Statistics">
      <summary>Описывает доступный набор статистических данных по таблицам для поставщика.</summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbSchemaGuid.Tables">
      <summary>Возвращает таблицы (включая представления), определенные в каталоге и доступные указанному пользователю.</summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbSchemaGuid.Tables_Info">
      <summary>Возвращает таблицы (включая представления), доступные указанному пользователю.</summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbSchemaGuid.Translations">
      <summary>Возвращает преобразования знаков, определенные в каталоге, который доступен указанному пользователю.</summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbSchemaGuid.Trustee">
      <summary>Определяет доверенные объекты, заданные в источнике данных.</summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbSchemaGuid.Usage_Privileges">
      <summary>Возвращает привилегии USAGE для объектов, определенные в каталоге и доступные указанному пользователю или предоставленные им.</summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbSchemaGuid.View_Column_Usage">
      <summary>Возвращает столбцы, от которых зависят просматриваемые таблицы, определенные в каталоге и принадлежащие данному пользователю.</summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbSchemaGuid.View_Table_Usage">
      <summary>Возвращает таблицы, от которых зависят просматриваемые таблицы, определенные в каталоге и принадлежащие данному пользователю.</summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbSchemaGuid.Views">
      <summary>Возвращает представления, определенные в каталоге, который доступен указанному пользователю.</summary>
    </member>
    <member name="T:System.Data.OleDb.OleDbTransaction">
      <summary>Представляет транзакцию SQL, которую нужно выполнить в источнике данных. Этот класс не наследуется.</summary>
    </member>
    <member name="M:System.Data.OleDb.OleDbTransaction.Begin">
      <summary>Начинает вложенную транзакцию базы данных.</summary>
      <returns>Вложенная транзакция базы данных.</returns>
      <exception cref="T:System.InvalidOperationException">Вложенные транзакции не поддерживаются.</exception>
    </member>
    <member name="M:System.Data.OleDb.OleDbTransaction.Begin(System.Data.IsolationLevel)">
      <summary>Начинает вложенную транзакцию базы данных и указывает уровень изоляции для новой транзакции.</summary>
      <param name="isolevel">Уровень изоляции для данной транзакции.</param>
      <returns>Вложенная транзакция базы данных.</returns>
      <exception cref="T:System.InvalidOperationException">Вложенные транзакции не поддерживаются.</exception>
    </member>
    <member name="M:System.Data.OleDb.OleDbTransaction.Commit">
      <summary>Фиксирует транзакцию базы данных.</summary>
      <exception cref="T:System.Exception">Ошибка при попытке фиксации транзакции.</exception>
      <exception cref="T:System.InvalidOperationException">Транзакция уже зафиксирована, или выполнен откат.  

или - 
Соединение закрыто.</exception>
    </member>
    <member name="P:System.Data.OleDb.OleDbTransaction.Connection">
      <summary>Получает объект <see cref="T:System.Data.OleDb.OleDbConnection" />, связанный с транзакцией, или <see langword="null" />, если транзакция уже недействительна.</summary>
      <returns>Объект <see cref="T:System.Data.OleDb.OleDbConnection" />, связанный с транзакцией.</returns>
    </member>
    <member name="P:System.Data.OleDb.OleDbTransaction.IsolationLevel">
      <summary>Указывает <see cref="T:System.Data.IsolationLevel" /> для этой транзакции.</summary>
      <returns>
        <see cref="T:System.Data.IsolationLevel" /> для этой транзакции. Значение по умолчанию — <see langword="ReadCommitted" />.</returns>
    </member>
    <member name="M:System.Data.OleDb.OleDbTransaction.Rollback">
      <summary>Откатывает транзакцию из состояния ожидания.</summary>
      <exception cref="T:System.Exception">Ошибка при попытке фиксации транзакции.</exception>
      <exception cref="T:System.InvalidOperationException">Транзакция уже зафиксирована, или выполнен откат.  

или - 
Соединение закрыто.</exception>
    </member>
    <member name="T:System.Data.OleDb.OleDbType">
      <summary>Задает тип данных поля или свойства для использования в объекте <see cref="T:System.Data.OleDb.OleDbParameter" />.</summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbType.BigInt">
      <summary>64-разрядное целое число со знаком (DBTYPE_I8). Соответствует <see cref="T:System.Int64" />.</summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbType.Binary">
      <summary>Поток двоичных данных (DBTYPE_BYTES). Соответствует <see cref="T:System.Array" /> типа <see cref="T:System.Byte" />.</summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbType.Boolean">
      <summary>Логическое значение (DBTYPE_BOOL). Соответствует <see cref="T:System.Boolean" />.</summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbType.BSTR">
      <summary>Строка знаков Юникод, заканчивающаяся знаком null (DBTYPE_BSTR). Соответствует <see cref="T:System.String" />.</summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbType.Char">
      <summary>Строка знаков (DBTYPE_STR). Соответствует <see cref="T:System.String" />.</summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbType.Currency">
      <summary>Значение валюты в диапазоне от –2 63 (или –922 337 203 685 477,5808) до 2 63 –1 (или +922 337 203 685 477,5807) с точностью до десятитысячных единицы валюты (DBTYPE_CY). Соответствует <see cref="T:System.Decimal" />.</summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbType.Date">
      <summary>Дата в формате двойного числа с плавающей точкой (DBTYPE_DATE). Целая часть числа равна числу дней, прошедшему с 30 декабря 1899 г., а десятичная часть равна части дня. Соответствует <see cref="T:System.DateTime" />.</summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbType.DBDate">
      <summary>Данные, представляющие дату, в формате ггггммдд (DBTYPE_DBDATE). Соответствует <see cref="T:System.DateTime" />.</summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbType.DBTime">
      <summary>Данные, представляющие время, в формате ччммсс (DBTYPE_DBTIME). Соответствует <see cref="T:System.TimeSpan" />.</summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbType.DBTimeStamp">
      <summary>Данные, представляющие дату и время, в формате ггггммддччммсс (DBTYPE_DBTIMESTAMP). Соответствует <see cref="T:System.DateTime" />.</summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbType.Decimal">
      <summary>Числовое значение с фиксированной точностью и масштабом в диапазоне от –10 38 –1 до 10 38 –1 (DBTYPE_DECIMAL). Соответствует <see cref="T:System.Decimal" />.</summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbType.Double">
      <summary>Число с плавающей запятой в диапазоне от -1,79E +308 до 1,79E +308 (DBTYPE_R8). Соответствует <see cref="T:System.Double" />.</summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbType.Empty">
      <summary>Нет значения (DBTYPE_EMPTY).</summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbType.Error">
      <summary>32-разрядный код ошибки (DBTYPE_ERROR). Соответствует <see cref="T:System.Exception" />.</summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbType.Filetime">
      <summary>64-разрядное целое число без знака, представляющее число интервалов по 100 наносекунд, прошедших с 1 января 1601 г. (DBTYPE_FILETIME). Соответствует <see cref="T:System.DateTime" />.</summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbType.Guid">
      <summary>Глобальный уникальный идентификатор (GUID) (DBTYPE_GUID). Соответствует <see cref="T:System.Guid" />.</summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbType.IDispatch">
      <summary>Указатель на интерфейс <see langword="IDispatch" /> (DBTYPE_IDISPATCH). Соответствует <see cref="T:System.Object" />.</summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbType.Integer">
      <summary>32-разрядное целое число со знаком (DBTYPE_I4). Соответствует <see cref="T:System.Int32" />.</summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbType.IUnknown">
      <summary>Указатель на интерфейс <see langword="IUnknown" /> (DBTYPE_UNKNOWN). Соответствует <see cref="T:System.Object" />.</summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbType.LongVarBinary">
      <summary>Длинное двоичное значение (только <see cref="T:System.Data.OleDb.OleDbParameter" />). Соответствует <see cref="T:System.Array" /> типа <see cref="T:System.Byte" />.</summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbType.LongVarChar">
      <summary>Длинное строковое значение (только <see cref="T:System.Data.OleDb.OleDbParameter" />). Соответствует <see cref="T:System.String" />.</summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbType.LongVarWChar">
      <summary>Длинное значение — строка Юникод, оканчивающаяся знаком null (только <see cref="T:System.Data.OleDb.OleDbParameter" />). Соответствует <see cref="T:System.String" />.</summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbType.Numeric">
      <summary>Точное числовое значение с фиксированной точностью и масштабом (DBTYPE_NUMERIC). Соответствует <see cref="T:System.Decimal" />.</summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbType.PropVariant">
      <summary>PROPVARIANT автоматизации (DBTYPE_PROP_VARIANT). Соответствует <see cref="T:System.Object" />.</summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbType.Single">
      <summary>Число с плавающей запятой в диапазоне от -3,40E +38 до 3,40E +38 (DBTYPE_R4). Соответствует <see cref="T:System.Single" />.</summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbType.SmallInt">
      <summary>16-разрядное целое число со знаком (DBTYPE_I2). Соответствует <see cref="T:System.Int16" />.</summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbType.TinyInt">
      <summary>8-разрядное целое число со знаком (DBTYPE_I1). Соответствует <see cref="T:System.SByte" />.</summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbType.UnsignedBigInt">
      <summary>64-разрядное целое число без знака (DBTYPE_UI8). Соответствует <see cref="T:System.UInt64" />.</summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbType.UnsignedInt">
      <summary>32-разрядное целое число без знака (DBTYPE_UI4). Соответствует <see cref="T:System.UInt32" />.</summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbType.UnsignedSmallInt">
      <summary>16-разрядное целое число без знака (DBTYPE_UI2). Соответствует <see cref="T:System.UInt16" />.</summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbType.UnsignedTinyInt">
      <summary>8-разрядное целое число без знака (DBTYPE_UI1). Соответствует <see cref="T:System.Byte" />.</summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbType.VarBinary">
      <summary>Поток двоичных данных переменной длины (только <see cref="T:System.Data.OleDb.OleDbParameter" />). Соответствует <see cref="T:System.Array" /> типа <see cref="T:System.Byte" />.</summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbType.VarChar">
      <summary>Поток знаков (отличных от знаков Юникода) переменной длины (только <see cref="T:System.Data.OleDb.OleDbParameter" />). Соответствует <see cref="T:System.String" />.</summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbType.Variant">
      <summary>Особый тип данных, который может содержать числовые, строковые, двоичные значения, даты, а также специальные значения Empty и Null (DBTYPE_VARIANT). Если не указан другой тип, предполагается этот тип. Соответствует <see cref="T:System.Object" />.</summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbType.VarNumeric">
      <summary>Числовое значение с переменной длиной (только <see cref="T:System.Data.OleDb.OleDbParameter" />). Соответствует <see cref="T:System.Decimal" />.</summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbType.VarWChar">
      <summary>Поток знаков Юникода переменной длины, заканчивающийся знаком null (только <see cref="T:System.Data.OleDb.OleDbParameter" />). Соответствует <see cref="T:System.String" />.</summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbType.WChar">
      <summary>Поток знаков Юникода, заканчивающийся знаком null (DBTYPE_WSTR). Соответствует <see cref="T:System.String" />.</summary>
    </member>
    <member name="T:System.Data.OperationAbortedException">
      <summary>Это исключение вызывается при прерывании текущей операции пользователем.</summary>
    </member>
    <member name="T:System.Data.ParameterDirection">
      <summary>Указывает тип параметра в запросе к объекту <see cref="T:System.Data.DataSet" />.</summary>
    </member>
    <member name="F:System.Data.ParameterDirection.Input">
      <summary>Параметр является входным.</summary>
    </member>
    <member name="F:System.Data.ParameterDirection.InputOutput">
      <summary>Параметр может быть как входным, так и выходным.</summary>
    </member>
    <member name="F:System.Data.ParameterDirection.Output">
      <summary>Параметр является выходным.</summary>
    </member>
    <member name="F:System.Data.ParameterDirection.ReturnValue">
      <summary>Параметр представляет значение, возвращаемое как результат операции, например хранимой процедуры, встроенной функции или определяемой пользователем функции.</summary>
    </member>
    <member name="T:System.Data.PropertyAttributes">
      <summary>Указывает атрибуты свойства.</summary>
    </member>
    <member name="F:System.Data.PropertyAttributes.NotSupported">
      <summary>Данным поставщиком это свойство не поддерживается.</summary>
    </member>
    <member name="F:System.Data.PropertyAttributes.Optional">
      <summary>Пользователю не требуется задавать значение этого свойства перед инициализацией источника данных.</summary>
    </member>
    <member name="F:System.Data.PropertyAttributes.Read">
      <summary>Пользователь может прочитать значение этого свойства.</summary>
    </member>
    <member name="F:System.Data.PropertyAttributes.Required">
      <summary>Пользователь должен задать значение этого свойства перед инициализацией источника данных.</summary>
    </member>
    <member name="F:System.Data.PropertyAttributes.Write">
      <summary>Пользователь может изменить значение этого свойства.</summary>
    </member>
    <member name="T:System.Data.PropertyCollection">
      <summary>Представляет коллекцию свойств, которые можно добавить в объекты <see cref="T:System.Data.DataColumn" />, <see cref="T:System.Data.DataSet" /> или <see cref="T:System.Data.DataTable" />.</summary>
    </member>
    <member name="M:System.Data.PropertyCollection.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.PropertyCollection" />.</summary>
    </member>
    <member name="M:System.Data.PropertyCollection.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.PropertyCollection" />.</summary>
      <param name="info">Данные, необходимые для сериализации или десериализации объекта.</param>
      <param name="context">Источник и назначение данного сериализованного потока.</param>
    </member>
    <member name="M:System.Data.PropertyCollection.Clone">
      <summary>Создает неполную копию объекта <see cref="T:System.Data.PropertyCollection" />.</summary>
      <returns>Возвращает <see cref="T:System.Object" />, неполную копию объекта <see cref="T:System.Data.PropertyCollection" />.</returns>
    </member>
    <member name="T:System.Data.ReadOnlyException">
      <summary>Представляет исключение, которое выдается при попытке изменить значение столбца, доступное только для чтения.</summary>
    </member>
    <member name="M:System.Data.ReadOnlyException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.ReadOnlyException" />.</summary>
    </member>
    <member name="M:System.Data.ReadOnlyException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.ReadOnlyException" /> со сведениями о сериализации.</summary>
      <param name="info">Данные, необходимые для сериализации или десериализации объекта.</param>
      <param name="context">Описание источника и назначения заданного сериализованного потока.</param>
    </member>
    <member name="M:System.Data.ReadOnlyException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.ReadOnlyException" /> с заданной строкой.</summary>
      <param name="s">Строка, отображаемая при возникновении исключения.</param>
    </member>
    <member name="M:System.Data.ReadOnlyException.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.ReadOnlyException" /> указанным сообщением об ошибке и ссылкой на внутреннее исключение, вызвавшее данное исключение.</summary>
      <param name="message">Сообщение об ошибке, указывающее причину создания исключения.</param>
      <param name="innerException">Исключение, вызвавшее текущее исключение, или пустая ссылка (<see langword="Nothing" /> в Visual Basic), если внутреннее исключение не задано.</param>
    </member>
    <member name="T:System.Data.RowNotInTableException">
      <summary>Представляет исключение, которое выдается при попытке выполнить действие с объектом <see cref="T:System.Data.DataRow" />, который не содержится в объекте <see cref="T:System.Data.DataTable" />.</summary>
    </member>
    <member name="M:System.Data.RowNotInTableException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.RowNotInTableException" />.</summary>
    </member>
    <member name="M:System.Data.RowNotInTableException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.RowNotInTableException" /> со сведениями о сериализации.</summary>
      <param name="info">Данные, необходимые для сериализации или десериализации объекта.</param>
      <param name="context">Описание источника и назначения заданного сериализованного потока.</param>
    </member>
    <member name="M:System.Data.RowNotInTableException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.RowNotInTableException" /> с заданной строкой.</summary>
      <param name="s">Строка, отображаемая при возникновении исключения.</param>
    </member>
    <member name="M:System.Data.RowNotInTableException.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.RowNotInTableException" /> указанным сообщением об ошибке и ссылкой на внутреннее исключение, вызвавшее данное исключение.</summary>
      <param name="message">Сообщение об ошибке, указывающее причину создания исключения.</param>
      <param name="innerException">Исключение, вызвавшее текущее исключение, или пустая ссылка (<see langword="Nothing" /> в Visual Basic), если внутреннее исключение не задано.</param>
    </member>
    <member name="T:System.Data.Rule">
      <summary>Указывает действие, которое должно быть выполнено для обеспечения ограничения <see cref="T:System.Data.ForeignKeyConstraint" />.</summary>
    </member>
    <member name="F:System.Data.Rule.Cascade">
      <summary>Удалить или обновить связанные строки. Это значение по умолчанию.</summary>
    </member>
    <member name="F:System.Data.Rule.None">
      <summary>К связанным строкам действия не применялись.</summary>
    </member>
    <member name="F:System.Data.Rule.SetDefault">
      <summary>Задайте связанным строкам значения, содержащиеся в свойстве <see cref="P:System.Data.DataColumn.DefaultValue" />.</summary>
    </member>
    <member name="F:System.Data.Rule.SetNull">
      <summary>Задайте связанным строкам значение <see langword="DBNull" />.</summary>
    </member>
    <member name="T:System.Data.SchemaSerializationMode">
      <summary>Указывает режим схемы сериализации для типизированного объекта <see cref="T:System.Data.DataSet" />.</summary>
    </member>
    <member name="F:System.Data.SchemaSerializationMode.ExcludeSchema">
      <summary>Пропускает схему сериализации для типизированного объекта <see cref="T:System.Data.DataSet" />.</summary>
    </member>
    <member name="F:System.Data.SchemaSerializationMode.IncludeSchema">
      <summary>Включает схему сериализации для типизированного объекта <see cref="T:System.Data.DataSet" />. По умолчанию.</summary>
    </member>
    <member name="T:System.Data.SchemaType">
      <summary>Указывает, как будут обрабатываться существующие сопоставления схемы при выполнении операции <see cref="M:System.Data.Common.DataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)" />.</summary>
    </member>
    <member name="F:System.Data.SchemaType.Mapped">
      <summary>Все существующие сопоставления таблиц будут применяться к входящей схеме. При конфигурировании <see cref="T:System.Data.DataSet" /> будет использоваться преобразованная схема.</summary>
    </member>
    <member name="F:System.Data.SchemaType.Source">
      <summary>Все сопоставления таблиц в DataAdapter будут игнорироваться. При конфигурировании <see cref="T:System.Data.DataSet" /> будет использоваться непреобразованная входящая схема.</summary>
    </member>
    <member name="T:System.Data.SerializationFormat">
      <summary>Определяет формат сериализации для объекта <see cref="T:System.Data.DataSet" />.</summary>
    </member>
    <member name="F:System.Data.SerializationFormat.Binary">
      <summary>Сериализация в качестве двоичного содержимого. Доступна только в ADO.NET 2.0.</summary>
    </member>
    <member name="F:System.Data.SerializationFormat.Xml">
      <summary>Сериализация в качестве XML-содержимого. По умолчанию.</summary>
    </member>
    <member name="T:System.Data.Sql.SqlDataSourceEnumerator">
      <summary>Предоставляет механизм для перебора всех доступных экземпляров SQL Server в локальной сети.</summary>
    </member>
    <member name="M:System.Data.Sql.SqlDataSourceEnumerator.GetDataSources">
      <summary>Извлекает объект <see cref="T:System.Data.DataTable" />, содержащий информацию обо всех видимых экземплярах SQL Server 2000 или SQL Server 2005.</summary>
      <returns>Объект <see cref="T:System.Data.DataTable" />, в котором содержатся сведения о видимых экземплярах SQL Server.</returns>
    </member>
    <member name="P:System.Data.Sql.SqlDataSourceEnumerator.Instance">
      <summary>Возвращает экземпляр <see cref="T:System.Data.Sql.SqlDataSourceEnumerator" />, который может использоваться для извлечения сведений о доступных экземплярах SQL Server.</summary>
      <returns>Экземпляр класса <see cref="T:System.Data.Sql.SqlDataSourceEnumerator" />, используемый для получения сведений о доступных экземплярах SQL Server.</returns>
    </member>
    <member name="T:System.Data.Sql.SqlNotificationRequest">
      <summary>Представляет запрос уведомления для заданной команды.</summary>
    </member>
    <member name="M:System.Data.Sql.SqlNotificationRequest.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Data.Sql.SqlNotificationRequest" /> со значениями по умолчанию.</summary>
    </member>
    <member name="M:System.Data.Sql.SqlNotificationRequest.#ctor(System.String,System.String,System.Int32)">
      <summary>Создает новый экземпляр класса <see cref="T:System.Data.Sql.SqlNotificationRequest" /> с определенной пользователем строкой, идентифицирующей конкретный запрос уведомления, имя предопределенной службы сервис-брокера SQL Server 2005 и период таймаута в секундах.</summary>
      <param name="userData">Строка, содержащая специфический для приложения идентификатор данного уведомления. Она не используется инфраструктурой уведомлений, но позволяет связывать уведомления с состоянием приложения. Указанное в этом параметре значение включается в сообщение в очереди сервис-брокера.</param>
      <param name="options">Строка, содержащая имя службы сервис-брокера при передаче уведомляющих сообщений; должна включать имя базы данных или GUID экземпляра сервис-брокера, ограничивающего область поиска имени службы определенной базой данных.  
Дополнительные сведения о формате параметра <paramref name="options" /> см. в разделе <see cref="P:System.Data.Sql.SqlNotificationRequest.Options" />.</param>
      <param name="timeout">Время ожидания уведомляющего сообщения в секундах.</param>
      <exception cref="T:System.ArgumentNullException">Значением параметра <paramref name="options" /> является NULL.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Длина параметра <paramref name="options" /> or <paramref name="userData" /> превышает длину <see langword="uint16.MaxValue" />, или значение параметра <paramref name="timeout" /> меньше нуля.</exception>
    </member>
    <member name="P:System.Data.Sql.SqlNotificationRequest.Options">
      <summary>Возвращает или задает имя службы сервис-брокера SQL Server, куда помещаются уведомления.</summary>
      <returns>Значение типа <see langword="string" />, содержащее имя службы сервис-брокера SQL Server 2005, куда помещаются уведомления, а также идентификатор GUID базы данных или экземпляра сервис-брокера, ограничивающий область поиска имени сервера.</returns>
      <exception cref="T:System.ArgumentNullException">Значение равно NULL.</exception>
      <exception cref="T:System.ArgumentException">Значение длиннее, чем <see langword="uint16.MaxValue" />.</exception>
    </member>
    <member name="P:System.Data.Sql.SqlNotificationRequest.Timeout">
      <summary>Возвращает или задает значение, указывающее, как долго SQL Server должен ожидать изменения, прежде чем произойдет таймаут операции.</summary>
      <returns>Целочисленное значение со знаком, указывающее, в секундах, как долго SQL Server должен ожидать изменения, прежде чем произойдет таймаут операции.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение меньше нуля.</exception>
    </member>
    <member name="P:System.Data.Sql.SqlNotificationRequest.UserData">
      <summary>Возвращает или задает специфический для приложения идентификатор данного уведомления.</summary>
      <returns>Значение типа <see langword="string" />, представляющее специфический для приложения идентификатор данного уведомления.</returns>
      <exception cref="T:System.ArgumentException">Значение длиннее, чем <see langword="uint16.MaxValue" />.</exception>
    </member>
    <member name="T:System.Data.SqlClient.ApplicationIntent">
      <summary>Задает значение свойства <see cref="P:System.Data.SqlClient.SqlConnectionStringBuilder.ApplicationIntent" />. Возможными значениями являются <see langword="ReadWrite" /> и <see langword="ReadOnly" />.</summary>
    </member>
    <member name="F:System.Data.SqlClient.ApplicationIntent.ReadOnly">
      <summary>Тип рабочей нагрузки приложения при подключении к серверу: доступен только для чтения.</summary>
    </member>
    <member name="F:System.Data.SqlClient.ApplicationIntent.ReadWrite">
      <summary>Тип рабочей нагрузки приложения при подключении к серверу: доступен для чтения и записи.</summary>
    </member>
    <member name="T:System.Data.SqlClient.OnChangeEventH*******ler">
      <summary>Обрабатывает событие <see cref="E:System.Data.SqlClient.SqlDependency.OnChange" />, генерируемое при получении уведомления для любой команды, связанной с объектом <see cref="T:System.Data.SqlClient.SqlDependency" />.</summary>
      <param name="sender">Источник события.</param>
      <param name="e">Объект <see cref="T:System.Data.SqlClient.SqlNotificationEventArgs" />, содержащий данные события.</param>
    </member>
    <member name="T:System.Data.SqlClient.PoolBlockingPeriod">
      <summary>Указывает значение для свойства <see cref="P:System.Data.SqlClient.SqlConnectionStringBuilder.PoolBlockingPeriod" />.</summary>
    </member>
    <member name="F:System.Data.SqlClient.PoolBlockingPeriod.AlwaysBlock">
      <summary>Период блокировки включен для всех серверов SQL Server, в том числе для серверов Azure SQL Server.</summary>
    </member>
    <member name="F:System.Data.SqlClient.PoolBlockingPeriod.Auto">
      <summary>Период блокировки отключен для серверов Azure SQL Server, но включен для всех остальных серверов SQL Server.</summary>
    </member>
    <member name="F:System.Data.SqlClient.PoolBlockingPeriod.NeverBlock">
      <summary>Период блокировки отключен для всех серверов SQL Server, в том числе для серверов Azure SQL Server.</summary>
    </member>
    <member name="T:System.Data.SqlClient.SortOrder">
      <summary>Задает способ сортировки строк.</summary>
    </member>
    <member name="F:System.Data.SqlClient.SortOrder.Ascending">
      <summary>Строки сортируются в порядке возрастания.</summary>
    </member>
    <member name="F:System.Data.SqlClient.SortOrder.Descending">
      <summary>Строки сортируются в порядке убывания.</summary>
    </member>
    <member name="F:System.Data.SqlClient.SortOrder.Unspecified">
      <summary>По умолчанию. Порядок сортировки не задан.</summary>
    </member>
    <member name="T:System.Data.SqlClient.SqlAuthenticationInitializer">
      <summary>Определяет базовое поведение инициализаторов проверки подлинности, которые могут быть зарегистрированы в файле app.config, и предоставляет основу для производных классов.</summary>
    </member>
    <member name="M:System.Data.SqlClient.SqlAuthenticationInitializer.#ctor">
      <summary>Вызывается из конструкторов в производных классах для инициализации класса <see cref="T:System.Data.SqlClient.SqlAuthenticationInitializer" />.</summary>
    </member>
    <member name="M:System.Data.SqlClient.SqlAuthenticationInitializer.Initialize">
      <summary>При переопределении в производном классе запускает инициализатор проверки подлинности. Конструктор <see cref="M:System.Data.SqlClient.SqlAuthenticationInitializer.#ctor" /> вызывает этот метод во время запуска.</summary>
    </member>
    <member name="T:System.Data.SqlClient.SqlAuthenticationMethod">
      <summary>Описывает различные методы проверки подлинности SQL, которые могут использоваться в клиентском подключении к базе данных SQL Azure. Дополнительные сведения см. в разделе Подключение к базе данных SQL с использованием проверки подлинности Azure Active Directory.</summary>
    </member>
    <member name="F:System.Data.SqlClient.SqlAuthenticationMethod.ActiveDirectoryIntegrated">
      <summary>Метод проверки подлинности использует интегрированные службы Active Directory. Используйте интегрированные службы Active Directory для подключения к базе данных SQL с помощью встроенной проверки подлинности Windows.</summary>
    </member>
    <member name="F:System.Data.SqlClient.SqlAuthenticationMethod.ActiveDirectoryInteractive">
      <summary>Метод проверки подлинности использует интерактивные службы Active Directory. Доступно с версии .NET Framework 4.7.2.</summary>
    </member>
    <member name="F:System.Data.SqlClient.SqlAuthenticationMethod.ActiveDirectoryPassword">
      <summary>Метод проверки подлинности использует пароль Active Directory. Используйте пароль Active Directory для подключения к базе данных SQL с помощью имени и пароля участника-пользователя Azure AD.</summary>
    </member>
    <member name="F:System.Data.SqlClient.SqlAuthenticationMethod.NotSpecified">
      <summary>Этот метод проверки подлинности не поддерживается.</summary>
    </member>
    <member name="F:System.Data.SqlClient.SqlAuthenticationMethod.SqlPassword">
      <summary>Метод проверки подлинности —.пароль SQL.</summary>
    </member>
    <member name="T:System.Data.SqlClient.SqlAuthenticationParameters">
      <summary>Представляет параметры проверки подлинности Active Directory, переданные драйвером поставщикам проверки подлинности.</summary>
    </member>
    <member name="M:System.Data.SqlClient.SqlAuthenticationParameters.#ctor(System.Data.SqlClient.SqlAuthenticationMethod,System.String,System.String,System.String,System.String,System.String,System.String,System.Guid)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.SqlClient.SqlAuthenticationParameters" />, используя указанный метод проверки подлинности, имя сервера, имя базы данных, URI ресурса, URI центра, пользовательский идентификатор и имя для входа, пароль пользователя и идентификатор подключения.</summary>
      <param name="authenticationMethod">Одно из значений перечисления, указывающее метод проверки подлинности.</param>
      <param name="serverName">Имя сервера.</param>
      <param name="databaseName">Имя базы данных.</param>
      <param name="resource">URI ресурса.</param>
      <param name="authority">URI центра.</param>
      <param name="userId">Имя для входа или идентификатор пользователя.</param>
      <param name="password">Пароль пользователя.</param>
      <param name="connectionId">Идентификатор соединения.</param>
    </member>
    <member name="P:System.Data.SqlClient.SqlAuthenticationParameters.AuthenticationMethod">
      <summary>Получает метод проверки подлинности.</summary>
      <returns>Метод проверки подлинности.</returns>
    </member>
    <member name="P:System.Data.SqlClient.SqlAuthenticationParameters.Authority">
      <summary>Получает URI центра.</summary>
      <returns>URI центра.</returns>
    </member>
    <member name="P:System.Data.SqlClient.SqlAuthenticationParameters.ConnectionId">
      <summary>Получает идентификатор соединения.</summary>
      <returns>Идентификатор соединения.</returns>
    </member>
    <member name="P:System.Data.SqlClient.SqlAuthenticationParameters.DatabaseName">
      <summary>Получает имя базы данных.</summary>
      <returns>Имя базы данных.</returns>
    </member>
    <member name="P:System.Data.SqlClient.SqlAuthenticationParameters.Password">
      <summary>Получает пароль пользователя.</summary>
      <returns>Пароль пользователя.</returns>
    </member>
    <member name="P:System.Data.SqlClient.SqlAuthenticationParameters.Resource">
      <summary>Получает URI ресурса.</summary>
      <returns>URI ресурса.</returns>
    </member>
    <member name="P:System.Data.SqlClient.SqlAuthenticationParameters.ServerName">
      <summary>Получает имя сервера.</summary>
      <returns>Имя сервера.</returns>
    </member>
    <member name="P:System.Data.SqlClient.SqlAuthenticationParameters.UserId">
      <summary>Получает имя для входа или идентификатор пользователя.</summary>
      <returns>Имя для входа или идентификатор пользователя.</returns>
    </member>
    <member name="T:System.Data.SqlClient.SqlAuthenticationProvider">
      <summary>Определяет основное поведение поставщиков проверки подлинности и предоставляет базовый класс для производных классов.</summary>
    </member>
    <member name="M:System.Data.SqlClient.SqlAuthenticationProvider.#ctor">
      <summary>Вызывается из конструкторов в производных классах для инициализации класса <see cref="T:System.Data.SqlClient.SqlAuthenticationProvider" />.</summary>
    </member>
    <member name="M:System.Data.SqlClient.SqlAuthenticationProvider.AcquireTokenAsync(System.Data.SqlClient.SqlAuthenticationParameters)">
      <summary>Получает токен безопасности из центра.</summary>
      <param name="parameters">Параметры проверки подлинности Active Directory, которые драйвер передает поставщикам проверки подлинности.</param>
      <returns>Представляет асинхронную операцию, которая возвращает маркер проверки подлинности AD.</returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlAuthenticationProvider.BeforeLoad(System.Data.SqlClient.SqlAuthenticationMethod)">
      <summary>Этот метод вызывается непосредственно перед добавлением поставщика в реестр драйверов SQL.</summary>
      <param name="authenticationMethod">Метод проверки подлинности.</param>
    </member>
    <member name="M:System.Data.SqlClient.SqlAuthenticationProvider.BeforeUnload(System.Data.SqlClient.SqlAuthenticationMethod)">
      <summary>Этот метод вызывается непосредственно перед удалением поставщика из реестра драйверов SQL.</summary>
      <param name="authenticationMethod">Метод проверки подлинности.</param>
    </member>
    <member name="M:System.Data.SqlClient.SqlAuthenticationProvider.GetProvider(System.Data.SqlClient.SqlAuthenticationMethod)">
      <summary>Получает поставщик проверки подлинности по методу.</summary>
      <param name="authenticationMethod">Метод проверки подлинности.</param>
      <returns>Поставщик проверки подлинности или <see langword="null" />, если не найдено.</returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlAuthenticationProvider.IsSupported(System.Data.SqlClient.SqlAuthenticationMethod)">
      <summary>Указывает, поддерживается ли заданный метод проверки подлинности.</summary>
      <param name="authenticationMethod">Метод проверки подлинности.</param>
      <returns>
        <see langword="true" />, если заданный метод проверки подлинности поддерживается, в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlAuthenticationProvider.SetProvider(System.Data.SqlClient.SqlAuthenticationMethod,System.Data.SqlClient.SqlAuthenticationProvider)">
      <summary>Задает поставщик проверки подлинности по методу.</summary>
      <param name="authenticationMethod">Метод проверки подлинности.</param>
      <param name="provider">Поставщик проверки подлинности.</param>
      <returns>
        <see langword="true" />, если операция выполнена успешно, в противном случае — <see langword="false" /> (например, если существующий поставщик запрещает переопределение).</returns>
    </member>
    <member name="T:System.Data.SqlClient.SqlAuthenticationToken">
      <summary>Представляет маркер проверки подлинности Active Directory.</summary>
    </member>
    <member name="M:System.Data.SqlClient.SqlAuthenticationToken.#ctor(System.String,System.DateTimeOffset)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.SqlClient.SqlAuthenticationToken" />.</summary>
      <param name="accessToken">Маркер доступа.</param>
      <param name="expiresOn">Время завершения действия маркера.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="accessToken" /> имеет значение <see langword="null" /> или является пустым.</exception>
    </member>
    <member name="P:System.Data.SqlClient.SqlAuthenticationToken.AccessToken">
      <summary>Получает строку маркера.</summary>
      <returns>Строка маркера.</returns>
    </member>
    <member name="P:System.Data.SqlClient.SqlAuthenticationToken.ExpiresOn">
      <summary>Получает время завершения действия маркера.</summary>
      <returns>Время завершения действия маркера.</returns>
    </member>
    <member name="T:System.Data.SqlClient.SqlBulkCopy">
      <summary>Обеспечивает эффективную массовую загрузку таблицы SQL Server данными из другого источника.</summary>
    </member>
    <member name="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.SqlClient.SqlBulkCopy" />, используя указанный открытый экземпляр <see cref="T:System.Data.SqlClient.SqlConnection" />.</summary>
      <param name="connection">Уже открытый экземпляр <see cref="T:System.Data.SqlClient.SqlConnection" />, который будет использоваться для выполнения операции массового копирования. Если строка подключения не использует <see langword="Integrated Security = true" />, можно использовать <see cref="T:System.Data.SqlClient.SqlCredential" /> для более безопасной передачи идентификатора пользователя и пароля, чем при указании идентификатора пользователя и пароля в строке подключения в виде текста.</param>
    </member>
    <member name="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlBulkCopyOptions,System.Data.SqlClient.SqlTransaction)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.SqlClient.SqlBulkCopy" />, используя указанный открытый экземпляр <see cref="T:System.Data.SqlClient.SqlConnection" />. Экземпляр <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> работает в соответствии со значениями, заданными в параметре <paramref name="copyOptions" />. Если предоставлено ненулевое значение <see cref="T:System.Data.SqlClient.SqlTransaction" />, операция копирования будет выполнена в этой транзакции.</summary>
      <param name="connection">Уже открытый экземпляр <see cref="T:System.Data.SqlClient.SqlConnection" />, который будет использоваться для выполнения массового копирования. Если строка подключения не использует <see langword="Integrated Security = true" />, можно использовать <see cref="T:System.Data.SqlClient.SqlCredential" /> для более безопасной передачи идентификатора пользователя и пароля, чем при указании идентификатора пользователя и пароля в строке подключения в виде текста.</param>
      <param name="copyOptions">Комбинация значений из перечисления <see cref="T:System.Data.SqlClient.SqlBulkCopyOptions" />, определяющая, какие строки из источника данных будут скопированы в конечную таблицу.</param>
      <param name="externalTransaction">Существующий экземпляр <see cref="T:System.Data.SqlClient.SqlTransaction" />, в рамках которого будет выполняться массовое копирование.</param>
    </member>
    <member name="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.String)">
      <summary>Инициализирует и открывает новый экземпляр класса <see cref="T:System.Data.SqlClient.SqlConnection" /> в зависимости от предоставленного параметра <paramref name="connectionString" />. Конструктор использует <see cref="T:System.Data.SqlClient.SqlConnection" /> для инициализации нового экземпляра класса <see cref="T:System.Data.SqlClient.SqlBulkCopy" />.</summary>
      <param name="connectionString">Строка, определяющая подключение, которое будет открыто для использования экземпляром <see cref="T:System.Data.SqlClient.SqlBulkCopy" />. Если строка подключения не использует <see langword="Integrated Security = true" />, можно использовать <see cref="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection)" />, <see cref="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlBulkCopyOptions,System.Data.SqlClient.SqlTransaction)" /> или <see cref="T:System.Data.SqlClient.SqlCredential" /> для более безопасной передачи идентификатора пользователя и пароля, чем при их указании в строке подключения в виде текста.</param>
    </member>
    <member name="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.String,System.Data.SqlClient.SqlBulkCopyOptions)">
      <summary>Инициализирует и открывает новый экземпляр класса <see cref="T:System.Data.SqlClient.SqlConnection" /> в зависимости от предоставленного параметра <paramref name="connectionString" />. Конструктор использует этот <see cref="T:System.Data.SqlClient.SqlConnection" /> для инициализации нового экземпляра класса <see cref="T:System.Data.SqlClient.SqlBulkCopy" />. Экземпляр <see cref="T:System.Data.SqlClient.SqlConnection" /> работает в соответствии со значениями, заданными в параметре <paramref name="copyOptions" />.</summary>
      <param name="connectionString">Строка, определяющая подключение, которое будет открыто для использования экземпляром <see cref="T:System.Data.SqlClient.SqlBulkCopy" />. Если строка подключения не использует <see langword="Integrated Security = true" />, можно использовать <see cref="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection)" />, <see cref="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlBulkCopyOptions,System.Data.SqlClient.SqlTransaction)" /> или <see cref="T:System.Data.SqlClient.SqlCredential" /> для более безопасной передачи идентификатора пользователя и пароля, чем при их указании в строке подключения в виде текста.</param>
      <param name="copyOptions">Комбинация значений из перечисления <see cref="T:System.Data.SqlClient.SqlBulkCopyOptions" />, определяющая, какие строки из источника данных будут скопированы в конечную таблицу.</param>
    </member>
    <member name="P:System.Data.SqlClient.SqlBulkCopy.BatchSize">
      <summary>Количество строк в каждом пакете. В конце каждого пакета строки, содержащиеся в пакете, отправляются на сервер.</summary>
      <returns>Целочисленное значение свойства <see cref="P:System.Data.SqlClient.SqlBulkCopy.BatchSize" /> или нуль, если значение не задано.</returns>
    </member>
    <member name="P:System.Data.SqlClient.SqlBulkCopy.BulkCopyTimeout">
      <summary>Число секунд, отводимых для завершения операции.</summary>
      <returns>Целочисленное значение свойства <see cref="P:System.Data.SqlClient.SqlBulkCopy.BulkCopyTimeout" />. По умолчанию используется значение 30 секунд. Значение 0 означает отсутствие ограничений. Операция массового копирования будет находиться в состоянии ожидания бесконечно долго.</returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlBulkCopy.Close">
      <summary>Закрывает экземпляр <see cref="T:System.Data.SqlClient.SqlBulkCopy" />.</summary>
    </member>
    <member name="P:System.Data.SqlClient.SqlBulkCopy.ColumnMappings">
      <summary>Возвращает коллекцию элементов <see cref="T:System.Data.SqlClient.SqlBulkCopyColumnMapping" />. Сопоставления столбцов определяют связи между столбцами в источнике данных и столбцами в месте назначения.</summary>
      <returns>Коллекция сопоставлений столбцов. По умолчанию является пустой коллекцией.</returns>
    </member>
    <member name="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName">
      <summary>Имя целевой таблицы на сервере.</summary>
      <returns>Строковое значение свойства <see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> или значение NULL, если значение не указано.</returns>
    </member>
    <member name="P:System.Data.SqlClient.SqlBulkCopy.EnableStreaming">
      <summary>Включает или отключает объект <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> для потоковой передачи данных из объекта <see cref="T:System.Data.IDataReader" />.</summary>
      <returns>
        <see langword="true" />, если объект <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> может осуществлять потоковую передачу данных из объекта <see cref="T:System.Data.IDataReader" />; в противном случае — значение false. Значение по умолчанию — <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.SqlClient.SqlBulkCopy.NotifyAfter">
      <summary>Определяет количество строк, обрабатываемых перед созданием события уведомления.</summary>
      <returns>Целочисленное значение свойства <see cref="P:System.Data.SqlClient.SqlBulkCopy.NotifyAfter" /> или ноль, если свойство не задано.</returns>
    </member>
    <member name="E:System.Data.SqlClient.SqlBulkCopy.SqlRowsCopied">
      <summary>Происходит после каждой обработки количества строк, указанного свойством <see cref="P:System.Data.SqlClient.SqlBulkCopy.NotifyAfter" />.</summary>
    </member>
    <member name="M:System.Data.SqlClient.SqlBulkCopy.System#IDisposable#Dispose">
      <summary>Освобождает все ресурсы, используемые текущим экземпляром класса <see cref="T:System.Data.SqlClient.SqlBulkCopy" />.</summary>
    </member>
    <member name="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.Common.DbDataReader)">
      <summary>Копирует все строки из предоставленного массива <see cref="T:System.Data.Common.DbDataReader" /> в целевую таблицу, заданную свойством <see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> объекта <see cref="T:System.Data.SqlClient.SqlBulkCopy" />.</summary>
      <param name="reader">Объект <see cref="T:System.Data.Common.DbDataReader" />, строки которого будут скопированы в целевую таблицу.</param>
    </member>
    <member name="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataRow[])">
      <summary>Копирует все строки из предоставленного массива <see cref="T:System.Data.DataRow" /> в целевую таблицу, заданную свойством <see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> объекта <see cref="T:System.Data.SqlClient.SqlBulkCopy" />.</summary>
      <param name="rows">Массив объектов <see cref="T:System.Data.DataRow" />, который будет скопирован в целевую таблицу.</param>
    </member>
    <member name="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable)">
      <summary>Копирует все строки в предоставленном <see cref="T:System.Data.DataTable" /> в целевую таблицу, заданную свойством <see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> объекта <see cref="T:System.Data.SqlClient.SqlBulkCopy" />.</summary>
      <param name="table">Объект <see cref="T:System.Data.DataTable" />, строки которого будут скопированы в целевую таблицу.</param>
    </member>
    <member name="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable,System.Data.DataRowState)">
      <summary>Копирует только те строки, которые соответствуют предоставленному состоянию строки в предоставленной таблице <see cref="T:System.Data.DataTable" />, в целевую таблицу, заданную свойством <see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> объекта <see cref="T:System.Data.SqlClient.SqlBulkCopy" />.</summary>
      <param name="table">Объект <see cref="T:System.Data.DataTable" />, строки которого будут скопированы в целевую таблицу.</param>
      <param name="rowState">Значение из перечисления <see cref="T:System.Data.DataRowState" />. В целевую таблицу копируются только строки, соответствующие состоянию строки.</param>
    </member>
    <member name="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.IDataReader)">
      <summary>Копирует все строки в предоставленном <see cref="T:System.Data.IDataReader" /> в целевую таблицу, заданную свойством <see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> объекта <see cref="T:System.Data.SqlClient.SqlBulkCopy" />.</summary>
      <param name="reader">Объект <see cref="T:System.Data.IDataReader" />, строки которого будут скопированы в целевую таблицу.</param>
    </member>
    <member name="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.Common.DbDataReader)">
      <summary>Асинхронная версия объекта <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.Common.DbDataReader)" />, который копирует все строки из предоставленного массива <see cref="T:System.Data.Common.DbDataReader" /> в целевую таблицу, заданную свойством <see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> объекта <see cref="T:System.Data.SqlClient.SqlBulkCopy" />.</summary>
      <param name="reader">Объект <see cref="T:System.Data.Common.DbDataReader" />, строки которого будут скопированы в целевую таблицу.</param>
      <returns>Задача, представляющая асинхронную операцию.</returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.Common.DbDataReader,System.Threading.CancellationToken)">
      <summary>Асинхронная версия объекта <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.Common.DbDataReader)" />, который копирует все строки из предоставленного массива <see cref="T:System.Data.Common.DbDataReader" /> в целевую таблицу, заданную свойством <see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> объекта <see cref="T:System.Data.SqlClient.SqlBulkCopy" />.</summary>
      <param name="reader">Объект <see cref="T:System.Data.Common.DbDataReader" />, строки которого будут скопированы в целевую таблицу.</param>
      <param name="cancellationToken">Инструкция отмены. Если значение этого параметра равно <see cref="P:System.Threading.CancellationToken.None" />, то этот метод эквивалентен методу <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.Common.DbDataReader)" />.</param>
      <returns>Возвращает <see cref="T:System.Threading.Tasks.Task" />.</returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])">
      <summary>Асинхронная версия объекта <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataRow[])" />, который копирует все строки из предоставленного массива <see cref="T:System.Data.DataRow" /> в целевую таблицу, заданную свойством <see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> объекта <see cref="T:System.Data.SqlClient.SqlBulkCopy" />.</summary>
      <param name="rows">Массив объектов <see cref="T:System.Data.DataRow" />, который будет скопирован в целевую таблицу.</param>
      <returns>Задача, представляющая асинхронную операцию.</returns>
      <exception cref="T:System.InvalidOperationException">Вызов <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])" /> несколько раз для одного и того же экземпляра до завершения задачи.  
Вызов <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])" /> и <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataRow[])" /> для одного и того же экземпляра до завершения задачи.  
Подключение разрывается или закрыто во время выполнения <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])" />.  
Возвращается в объекте задачи, объект <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> был закрыт во время выполнения метода.  
Возвращается в объекте задачи, истекло время ожидания пула подключений.  
Возвращается в объекте задачи, объект <see cref="T:System.Data.SqlClient.SqlConnection" /> закрыт до выполнения метода.  
 <see langword="Context Connection=true" /> задается в строке подключения.</exception>
      <exception cref="T:System.Data.SqlClient.SqlException">Возвращается в объекте задачи, любая ошибка, возвращенная SQL Server, которая произошла при открытии соединения.</exception>
    </member>
    <member name="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[],System.Threading.CancellationToken)">
      <summary>Асинхронная версия объекта <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataRow[])" />, который копирует все строки из предоставленного массива <see cref="T:System.Data.DataRow" /> в целевую таблицу, заданную свойством <see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> объекта <see cref="T:System.Data.SqlClient.SqlBulkCopy" />.  
Токен отмены можно использовать для запроса отказа от операции до истечения времени ожидания команды.  Сведения об исключениях передаются в возвращенном объекте Task.</summary>
      <param name="rows">Массив объектов <see cref="T:System.Data.DataRow" />, который будет скопирован в целевую таблицу.</param>
      <param name="cancellationToken">Инструкция отмены. Если значение этого параметра равно <see cref="P:System.Threading.CancellationToken.None" />, то этот метод эквивалентен методу <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" />.</param>
      <returns>Задача, представляющая асинхронную операцию.</returns>
      <exception cref="T:System.InvalidOperationException">Вызов <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])" /> несколько раз для одного и того же экземпляра до завершения задачи.  
Вызов <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])" /> и <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataRow[])" /> для одного и того же экземпляра до завершения задачи.  
Подключение разрывается или закрыто во время выполнения <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])" />.  
Возвращается в объекте задачи, объект <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> был закрыт во время выполнения метода.  
Возвращается в объекте задачи, истекло время ожидания пула подключений.  
Возвращается в объекте задачи, объект <see cref="T:System.Data.SqlClient.SqlConnection" /> закрыт до выполнения метода.  
 <see langword="Context Connection=true" /> задается в строке подключения.</exception>
      <exception cref="T:System.Data.SqlClient.SqlException">Возвращается в объекте задачи, любая ошибка, возвращенная SQL Server, которая произошла при открытии соединения.</exception>
    </member>
    <member name="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)">
      <summary>Асинхронная версия объекта <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable)" />, которая копирует все строки в предоставленном <see cref="T:System.Data.DataTable" /> в целевую таблицу, заданную свойством <see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> объекта <see cref="T:System.Data.SqlClient.SqlBulkCopy" />.</summary>
      <param name="table">Объект <see cref="T:System.Data.DataTable" />, строки которого будут скопированы в целевую таблицу.</param>
      <returns>Задача, представляющая асинхронную операцию.</returns>
      <exception cref="T:System.InvalidOperationException">Вызов <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" /> несколько раз для одного и того же экземпляра до завершения задачи.  
Вызов <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" /> и <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable)" /> для одного и того же экземпляра до завершения задачи.  
Подключение разрывается или закрыто во время выполнения <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" />.  
Возвращается в объекте задачи, объект <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> был закрыт во время выполнения метода.  
Возвращается в объекте задачи, истекло время ожидания пула подключений.  
Возвращается в объекте задачи, объект <see cref="T:System.Data.SqlClient.SqlConnection" /> закрыт до выполнения метода.  
 <see langword="Context Connection=true" /> задается в строке подключения.</exception>
      <exception cref="T:System.Data.SqlClient.SqlException">Возвращается в объекте задачи, любая ошибка, возвращенная SQL Server, которая произошла при открытии соединения.</exception>
    </member>
    <member name="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)">
      <summary>Асинхронная версия объекта <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable,System.Data.DataRowState)" />, копирующего только те строки, которые соответствуют состоянию предоставленных строк в предоставленном <see cref="T:System.Data.DataTable" /> для целевой таблицы, заданной свойством <see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> объекта <see cref="T:System.Data.SqlClient.SqlBulkCopy" />.</summary>
      <param name="table">Объект <see cref="T:System.Data.DataTable" />, строки которого будут скопированы в целевую таблицу.</param>
      <param name="rowState">Значение из перечисления <see cref="T:System.Data.DataRowState" />. В целевую таблицу копируются только строки, соответствующие состоянию строки.</param>
      <returns>Задача, представляющая асинхронную операцию.</returns>
      <exception cref="T:System.InvalidOperationException">Вызов <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)" /> несколько раз для одного и того же экземпляра до завершения задачи.  
Вызов <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)" /> и <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable,System.Data.DataRowState)" /> для одного и того же экземпляра до завершения задачи.  
Подключение разрывается или закрыто во время выполнения <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)" />.  
Возвращается в объекте задачи, объект <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> был закрыт во время выполнения метода.  
Возвращается в объекте задачи, истекло время ожидания пула подключений.  
Возвращается в объекте задачи, объект <see cref="T:System.Data.SqlClient.SqlConnection" /> закрыт до выполнения метода.  
 <see langword="Context Connection=true" /> задается в строке подключения.</exception>
      <exception cref="T:System.Data.SqlClient.SqlException">Возвращается в объекте задачи, любая ошибка, возвращенная SQL Server, которая произошла при открытии соединения.</exception>
    </member>
    <member name="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState,System.Threading.CancellationToken)">
      <summary>Асинхронная версия объекта <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable,System.Data.DataRowState)" />, копирующего только те строки, которые соответствуют состоянию предоставленных строк в предоставленном <see cref="T:System.Data.DataTable" /> для целевой таблицы, заданной свойством <see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> объекта <see cref="T:System.Data.SqlClient.SqlBulkCopy" />.  
Токен отмены можно использовать для запроса отказа от операции до истечения времени ожидания команды.  Сведения об исключениях передаются в возвращенном объекте Task.</summary>
      <param name="table">Объект <see cref="T:System.Data.DataTable" />, строки которого будут скопированы в целевую таблицу.</param>
      <param name="rowState">Значение из перечисления <see cref="T:System.Data.DataRowState" />. В целевую таблицу копируются только строки, соответствующие состоянию строк.</param>
      <param name="cancellationToken">Инструкция отмены. Если значение этого параметра равно <see cref="P:System.Threading.CancellationToken.None" />, то этот метод эквивалентен методу <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" />.</param>
      <returns>Задача, представляющая асинхронную операцию.</returns>
      <exception cref="T:System.InvalidOperationException">Вызов <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)" /> несколько раз для одного и того же экземпляра до завершения задачи.  
Вызов <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)" /> и <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable,System.Data.DataRowState)" /> для одного и того же экземпляра до завершения задачи.  
Подключение разрывается или закрыто во время выполнения <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)" />.  
Возвращается в объекте задачи, объект <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> был закрыт во время выполнения метода.  
Возвращается в объекте задачи, истекло время ожидания пула подключений.  
Возвращается в объекте задачи, объект <see cref="T:System.Data.SqlClient.SqlConnection" /> закрыт до выполнения метода.  
 <see langword="Context Connection=true" /> задается в строке подключения.</exception>
      <exception cref="T:System.Data.SqlClient.SqlException">Возвращается в объекте задачи, любая ошибка, возвращенная SQL Server, которая произошла при открытии соединения.</exception>
    </member>
    <member name="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Threading.CancellationToken)">
      <summary>Асинхронная версия объекта <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable)" />, которая копирует все строки в предоставленном <see cref="T:System.Data.DataTable" /> в целевую таблицу, заданную свойством <see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> объекта <see cref="T:System.Data.SqlClient.SqlBulkCopy" />.  
Токен отмены можно использовать для запроса отказа от операции до истечения времени ожидания команды.  Сведения об исключениях передаются в возвращенном объекте Task.</summary>
      <param name="table">Объект <see cref="T:System.Data.DataTable" />, строки которого будут скопированы в целевую таблицу.</param>
      <param name="cancellationToken">Инструкция отмены. Если значение этого параметра равно <see cref="P:System.Threading.CancellationToken.None" />, то этот метод эквивалентен методу <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" />.</param>
      <returns>Задача, представляющая асинхронную операцию.</returns>
      <exception cref="T:System.InvalidOperationException">Вызов <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" /> несколько раз для одного и того же экземпляра до завершения задачи.  
Вызов <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" /> и <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable)" /> для одного и того же экземпляра до завершения задачи.  
Подключение разрывается или закрыто во время выполнения <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" />.  
Возвращается в объекте задачи, объект <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> был закрыт во время выполнения метода.  
Возвращается в объекте задачи, истекло время ожидания пула подключений.  
Возвращается в объекте задачи, объект <see cref="T:System.Data.SqlClient.SqlConnection" /> закрыт до выполнения метода.  
 <see langword="Context Connection=true" /> задается в строке подключения.</exception>
      <exception cref="T:System.Data.SqlClient.SqlException">Возвращается в объекте задачи, любая ошибка, возвращенная SQL Server, которая произошла при открытии соединения.</exception>
    </member>
    <member name="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)">
      <summary>Асинхронная версия объекта <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.IDataReader)" />, которая копирует все строки в предоставленном <see cref="T:System.Data.IDataReader" /> в целевую таблицу, заданную свойством <see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> объекта <see cref="T:System.Data.SqlClient.SqlBulkCopy" />.</summary>
      <param name="reader">Объект <see cref="T:System.Data.IDataReader" />, строки которого будут скопированы в целевую таблицу.</param>
      <returns>Задача, представляющая асинхронную операцию.</returns>
      <exception cref="T:System.InvalidOperationException">Вызов <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)" /> несколько раз для одного и того же экземпляра до завершения задачи.  
Вызов <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)" /> и <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.IDataReader)" /> для одного и того же экземпляра до завершения задачи.  
Подключение разрывается или закрыто во время выполнения <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)" />.  
Возвращается в объекте задачи, объект <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> был закрыт во время выполнения метода.  
Возвращается в объекте задачи, истекло время ожидания пула подключений.  
Возвращается в объекте задачи, объект <see cref="T:System.Data.SqlClient.SqlConnection" /> закрыт до выполнения метода.  
Объект <see cref="T:System.Data.IDataReader" /> был закрыт до возвращения выполненной задачи <see cref="T:System.Threading.Tasks.Task" />.  
Связанное подключение <see cref="T:System.Data.IDataReader" /> было закрыто до возвращения выполненной задачи <see cref="T:System.Threading.Tasks.Task" />.  
 <see langword="Context Connection=true" /> задается в строке подключения.</exception>
      <exception cref="T:System.Data.SqlClient.SqlException">Возвращается в объекте задачи, любая ошибка, возвращенная SQL Server, которая произошла при открытии соединения.</exception>
    </member>
    <member name="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader,System.Threading.CancellationToken)">
      <summary>Асинхронная версия объекта <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.IDataReader)" />, которая копирует все строки в предоставленном <see cref="T:System.Data.IDataReader" /> в целевую таблицу, заданную свойством <see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> объекта <see cref="T:System.Data.SqlClient.SqlBulkCopy" />.  
Токен отмены можно использовать для запроса отказа от операции до истечения времени ожидания команды.  Сведения об исключениях передаются в возвращенном объекте Task.</summary>
      <param name="reader">Объект <see cref="T:System.Data.IDataReader" />, строки которого будут скопированы в целевую таблицу.</param>
      <param name="cancellationToken">Инструкция отмены. Если значение этого параметра равно <see cref="P:System.Threading.CancellationToken.None" />, то этот метод эквивалентен методу <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" />.</param>
      <returns>Задача, представляющая асинхронную операцию.</returns>
      <exception cref="T:System.InvalidOperationException">Вызов <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)" /> несколько раз для одного и того же экземпляра до завершения задачи.  
Вызов <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)" /> и <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.IDataReader)" /> для одного и того же экземпляра до завершения задачи.  
Подключение разрывается или закрыто во время выполнения <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)" />.  
Возвращается в объекте задачи, объект <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> был закрыт во время выполнения метода.  
Возвращается в объекте задачи, истекло время ожидания пула подключений.  
Возвращается в объекте задачи, объект <see cref="T:System.Data.SqlClient.SqlConnection" /> закрыт до выполнения метода.  
Объект <see cref="T:System.Data.IDataReader" /> был закрыт до возвращения выполненной задачи <see cref="T:System.Threading.Tasks.Task" />.  
Связанное подключение <see cref="T:System.Data.IDataReader" /> было закрыто до возвращения выполненной задачи <see cref="T:System.Threading.Tasks.Task" />.  
 <see langword="Context Connection=true" /> задается в строке подключения.</exception>
      <exception cref="T:System.Data.SqlClient.SqlException">Возвращается в объекте задачи, любая ошибка, возвращенная SQL Server, которая произошла при открытии соединения.</exception>
    </member>
    <member name="T:System.Data.SqlClient.SqlBulkCopyColumnMapping">
      <summary>Определяет соответствие между столбцом в источнике данных экземпляра <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> и столбцом в таблице назначения данного экземпляра.</summary>
    </member>
    <member name="M:System.Data.SqlClient.SqlBulkCopyColumnMapping.#ctor">
      <summary>Используемый по умолчанию конструктор, инициализирующий объект <see cref="T:System.Data.SqlClient.SqlBulkCopyColumnMapping" />.</summary>
    </member>
    <member name="M:System.Data.SqlClient.SqlBulkCopyColumnMapping.#ctor(System.Int32,System.Int32)">
      <summary>Создает новое сопоставление столбцов, используя порядковые номера для ссылки на столбцы источника и назначения.</summary>
      <param name="sourceColumnOrdinal">Порядковый номер исходного столбца в источнике данных.</param>
      <param name="destinationOrdinal">Порядковый номер целевого столбца в таблице назначения.</param>
    </member>
    <member name="M:System.Data.SqlClient.SqlBulkCopyColumnMapping.#ctor(System.Int32,System.String)">
      <summary>Создает новое сопоставление столбцов, используя порядковый номер исходного столбца и имя столбца назначения.</summary>
      <param name="sourceColumnOrdinal">Порядковый номер исходного столбца в источнике данных.</param>
      <param name="destinationColumn">Имя целевого столбца в таблице назначения.</param>
    </member>
    <member name="M:System.Data.SqlClient.SqlBulkCopyColumnMapping.#ctor(System.String,System.Int32)">
      <summary>Создает новое сопоставление столбцов, используя имя исходного столбца и порядковый номер столбца назначения.</summary>
      <param name="sourceColumn">Имя исходного столбца в источнике данных.</param>
      <param name="destinationOrdinal">Порядковый номер целевого столбца в таблице назначения.</param>
    </member>
    <member name="M:System.Data.SqlClient.SqlBulkCopyColumnMapping.#ctor(System.String,System.String)">
      <summary>Создает новое сопоставление столбцов, используя имена столбцов источника и назначения.</summary>
      <param name="sourceColumn">Имя исходного столбца в источнике данных.</param>
      <param name="destinationColumn">Имя целевого столбца в таблице назначения.</param>
    </member>
    <member name="P:System.Data.SqlClient.SqlBulkCopyColumnMapping.DestinationColumn">
      <summary>Имя сопоставляемого столбца в целевой таблице базы данных.</summary>
      <returns>Строковое значение свойства <see cref="P:System.Data.SqlClient.SqlBulkCopyColumnMapping.DestinationColumn" />.</returns>
    </member>
    <member name="P:System.Data.SqlClient.SqlBulkCopyColumnMapping.DestinationOrdinal">
      <summary>Порядковый номер целевого столбца в таблице назначения.</summary>
      <returns>Целочисленное значение свойства <see cref="P:System.Data.SqlClient.SqlBulkCopyColumnMapping.DestinationOrdinal" /> или -1, если его значение не задано.</returns>
    </member>
    <member name="P:System.Data.SqlClient.SqlBulkCopyColumnMapping.SourceColumn">
      <summary>Имя сопоставляемого столбца в источнике данных.</summary>
      <returns>Строковое значение свойства <see cref="P:System.Data.SqlClient.SqlBulkCopyColumnMapping.SourceColumn" />.</returns>
    </member>
    <member name="P:System.Data.SqlClient.SqlBulkCopyColumnMapping.SourceOrdinal">
      <summary>Порядковый номер исходного столбца в источнике данных.</summary>
      <returns>Целочисленное значение свойства <see cref="P:System.Data.SqlClient.SqlBulkCopyColumnMapping.SourceOrdinal" />.</returns>
    </member>
    <member name="T:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection">
      <summary>Коллекция объектов <see cref="T:System.Data.SqlClient.SqlBulkCopyColumnMapping" />, наследующих от <see cref="T:System.Collections.CollectionBase" />.</summary>
    </member>
    <member name="M:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Add(System.Data.SqlClient.SqlBulkCopyColumnMapping)">
      <summary>Добавляет заданное сопоставление в <see cref="T:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection" />.</summary>
      <param name="bulkCopyColumnMapping">Объект <see cref="T:System.Data.SqlClient.SqlBulkCopyColumnMapping" /> добавляемого в коллекцию сопоставления.</param>
      <returns>Объект <see cref="T:System.Data.SqlClient.SqlBulkCopyColumnMapping" />.</returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Add(System.Int32,System.Int32)">
      <summary>Создает новый <see cref="T:System.Data.SqlClient.SqlBulkCopyColumnMapping" /> и добавляет его в коллекцию, используя порядковые номера исходного столбца и столбца назначения.</summary>
      <param name="sourceColumnIndex">Порядковый номер исходного столбца в источнике данных.</param>
      <param name="destinationColumnIndex">Порядковый номер целевого столбца в таблице назначения.</param>
      <returns>Сопоставление столбцов.</returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Add(System.Int32,System.String)">
      <summary>Создает новый <see cref="T:System.Data.SqlClient.SqlBulkCopyColumnMapping" /> и добавляет его в коллекцию, используя порядковый номер исходного столбца и строку для столбца назначения.</summary>
      <param name="sourceColumnIndex">Порядковый номер исходного столбца в источнике данных.</param>
      <param name="destinationColumn">Имя целевого столбца в таблице назначения.</param>
      <returns>Сопоставление столбцов.</returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Add(System.String,System.Int32)">
      <summary>Создает новый <see cref="T:System.Data.SqlClient.SqlBulkCopyColumnMapping" /> и добавляет его в коллекцию, используя имя исходного столбца и порядковый номер столбца назначения.</summary>
      <param name="sourceColumn">Имя исходного столбца в источнике данных.</param>
      <param name="destinationColumnIndex">Порядковый номер целевого столбца в таблице назначения.</param>
      <returns>Сопоставление столбцов.</returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Add(System.String,System.String)">
      <summary>Создает новый <see cref="T:System.Data.SqlClient.SqlBulkCopyColumnMapping" /> и добавляет его в коллекцию, используя имена исходного столбца и столбца назначения.</summary>
      <param name="sourceColumn">Имя исходного столбца в источнике данных.</param>
      <param name="destinationColumn">Имя целевого столбца в таблице назначения.</param>
      <returns>Сопоставление столбцов.</returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Clear">
      <summary>Удаляет содержимое коллекции.</summary>
    </member>
    <member name="M:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Contains(System.Data.SqlClient.SqlBulkCopyColumnMapping)">
      <summary>Получает значение, указывающее, существует ли конкретный объект <see cref="T:System.Data.SqlClient.SqlBulkCopyColumnMapping" /> в коллекции.</summary>
      <param name="value">Допустимый объект <see cref="T:System.Data.SqlClient.SqlBulkCopyColumnMapping" />.</param>
      <returns>
        <see langword="true" />, если указанное сопоставление присутствует в коллекции; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.CopyTo(System.Data.SqlClient.SqlBulkCopyColumnMapping[],System.Int32)">
      <summary>Копирует элементы коллекции <see cref="T:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection" /> в массив элементов <see cref="T:System.Data.SqlClient.SqlBulkCopyColumnMapping" /> начиная с определенного индекса.</summary>
      <param name="array">Одномерный массив <see cref="T:System.Data.SqlClient.SqlBulkCopyColumnMapping" />, в который копируются элементы целевые элементы из <see cref="T:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection" />. Индекс в массиве должен начинаться с нуля.</param>
      <param name="index">Отсчитываемый от нуля индекс в массиве <paramref name="array" />, указывающий начало копирования.</param>
    </member>
    <member name="M:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.IndexOf(System.Data.SqlClient.SqlBulkCopyColumnMapping)">
      <summary>Возвращает индекс указанного объекта <see cref="T:System.Data.SqlClient.SqlBulkCopyColumnMapping" />.</summary>
      <param name="value">Искомый объект <see cref="T:System.Data.SqlClient.SqlBulkCopyColumnMapping" />.</param>
      <returns>Индекс (с нуля) сопоставления столбцов или -1, если данное сопоставление столбцов не найдено в коллекции.</returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Insert(System.Int32,System.Data.SqlClient.SqlBulkCopyColumnMapping)">
      <summary>Вставляет новый объект <see cref="T:System.Data.SqlClient.SqlBulkCopyColumnMapping" /> по указанному индексу.</summary>
      <param name="index">Целочисленное значение расположения в <see cref="T:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection" />, по которому вставляется новый <see cref="T:System.Data.SqlClient.SqlBulkCopyColumnMapping" />.</param>
      <param name="value">Объект, который необходимо вставить в коллекцию <see cref="T:System.Data.SqlClient.SqlBulkCopyColumnMapping" />.</param>
    </member>
    <member name="P:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Item(System.Int32)">
      <summary>Возвращает объект <see cref="T:System.Data.SqlClient.SqlBulkCopyColumnMapping" /> по указанному индексу.</summary>
      <param name="index">Отсчитываемый от нуля индекс объекта <see cref="T:System.Data.SqlClient.SqlBulkCopyColumnMapping" />, который требуется найти.</param>
      <returns>Объект <see cref="T:System.Data.SqlClient.SqlBulkCopyColumnMapping" />.</returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Remove(System.Data.SqlClient.SqlBulkCopyColumnMapping)">
      <summary>Удаляет заданный элемент <see cref="T:System.Data.SqlClient.SqlBulkCopyColumnMapping" /> из <see cref="T:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection" />.</summary>
      <param name="value">Объект <see cref="T:System.Data.SqlClient.SqlBulkCopyColumnMapping" />, удаляемый из коллекции.</param>
    </member>
    <member name="M:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.RemoveAt(System.Int32)">
      <summary>Удаляет из коллекции сопоставление с заданным индексом.</summary>
      <param name="index">Начинающийся с нуля индекс объекта <see cref="T:System.Data.SqlClient.SqlBulkCopyColumnMapping" />, удаляемого из коллекции.</param>
    </member>
    <member name="T:System.Data.SqlClient.SqlBulkCopyOptions">
      <summary>Побитовый флаг, который определяет один или несколько параметров для использования с экземпляром <see cref="T:System.Data.SqlClient.SqlBulkCopy" />.</summary>
    </member>
    <member name="F:System.Data.SqlClient.SqlBulkCopyOptions.AllowEncryptedValueModifications">
      <summary>Если параметр AllowEncryptedValueModifications задан, можно осуществлять массовое копирование зашифрованных данных между таблицами или базами данных без расшифровки данных. Как правило, приложению нужно выбирать данные из зашифрованных столбцов одной таблицы без расшифровки данных (приложение должно подключиться к базе данных с ключевым словом, задающим отключение параметра шифрования столбца), а затем использовать эту возможность для массовой вставки данных, которые остаются зашифрованными. Дополнительные сведения см. в разделе Всегда зашифровано.  
Будьте внимательны при указании параметра AllowEncryptedValueModifications: это может привести к повреждению базы данных, так как драйвер не проверяет, действительно ли данные зашифрованы и зашифрованы ли они правильно, с использованием того же типа шифрования, алгоритма и ключа, что и в целевом столбце.</summary>
    </member>
    <member name="F:System.Data.SqlClient.SqlBulkCopyOptions.CheckConstraints">
      <summary>Проверьте ограничения при вставке данных. По умолчанию ограничения не проверяются.</summary>
    </member>
    <member name="F:System.Data.SqlClient.SqlBulkCopyOptions.Default">
      <summary>Для всех параметров используйте значения по умолчанию.</summary>
    </member>
    <member name="F:System.Data.SqlClient.SqlBulkCopyOptions.FireTriggers">
      <summary>Если указано, заставьте сервер запускать триггеры вставки для строк, вставляемых в базу данных сервера.</summary>
    </member>
    <member name="F:System.Data.SqlClient.SqlBulkCopyOptions.KeepIdentity">
      <summary>Сохраните исходные значения  идентификаторов. Если не указаны, значения идентификаторов назначаются целевым объектом.</summary>
    </member>
    <member name="F:System.Data.SqlClient.SqlBulkCopyOptions.KeepNulls">
      <summary>Сохраните значения NULL в целевой таблице независимо от параметров значений по умолчанию. Если не указано, значения NULL заменяются значениями по умолчанию там, где это применимо.</summary>
    </member>
    <member name="F:System.Data.SqlClient.SqlBulkCopyOptions.TableLock">
      <summary>Получите блокировку массовых обновлений в течение выполнения операции массового копирования. Если не указано, используются блокировки строк.</summary>
    </member>
    <member name="F:System.Data.SqlClient.SqlBulkCopyOptions.UseInternalTransaction">
      <summary>Если указано, каждый пакет операции массового копирования будет выполняться в рамках транзакции. Если указать этот параметр, а также предоставить объект <see cref="T:System.Data.SqlClient.SqlTransaction" /> в конструктор, возникнет <see cref="T:System.ArgumentException" />.</summary>
    </member>
    <member name="T:System.Data.SqlClient.SqlClientFactory">
      <summary>Представляет набор методов для создания экземпляров классов источников данных, реализованных поставщиком <see cref="N:System.Data.SqlClient" />.</summary>
    </member>
    <member name="P:System.Data.SqlClient.SqlClientFactory.CanCreateDataSourceEnumerator">
      <summary>Вызывает значение, показывающее, можно ли создать <see cref="T:System.Data.Sql.SqlDataSourceEnumerator" />.</summary>
      <returns>
        <see langword="true" /> Если <see cref="T:System.Data.Sql.SqlDataSourceEnumerator" /> может быть создан; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlClientFactory.CreateComm*******">
      <summary>Возвращает строго типизированный экземпляр <see cref="T:System.Data.Common.DbComm*******" />.</summary>
      <returns>Новый строго типизированный экземпляр <see cref="T:System.Data.Common.DbComm*******" />.</returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlClientFactory.CreateComm*******Builder">
      <summary>Возвращает строго типизированный экземпляр <see cref="T:System.Data.Common.DbComm*******Builder" />.</summary>
      <returns>Новый строго типизированный экземпляр <see cref="T:System.Data.Common.DbComm*******Builder" />.</returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlClientFactory.CreateConnection">
      <summary>Возвращает строго типизированный экземпляр <see cref="T:System.Data.Common.DbConnection" />.</summary>
      <returns>Новый строго типизированный экземпляр <see cref="T:System.Data.Common.DbConnection" />.</returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlClientFactory.CreateConnectionStringBuilder">
      <summary>Возвращает строго типизированный экземпляр <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</summary>
      <returns>Новый строго типизированный экземпляр <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlClientFactory.CreateDataAdapter">
      <summary>Возвращает строго типизированный экземпляр <see cref="T:System.Data.Common.DbDataAdapter" />.</summary>
      <returns>Новый строго типизированный экземпляр <see cref="T:System.Data.Common.DbDataAdapter" />.</returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlClientFactory.CreateDataSourceEnumerator">
      <summary>Возвращает новый объект <see cref="T:System.Data.Sql.SqlDataSourceEnumerator" />.</summary>
      <returns>Новый перечислитель источника данных.</returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlClientFactory.CreateParameter">
      <summary>Возвращает строго типизированный экземпляр <see cref="T:System.Data.Common.DbParameter" />.</summary>
      <returns>Новый строго типизированный экземпляр <see cref="T:System.Data.Common.DbParameter" />.</returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlClientFactory.CreatePermission(System.Security.Permissions.PermissionState)">
      <summary>Возвращает новый объект <see cref="T:System.Security.CodeAccessPermission" />.</summary>
      <param name="state">Элемент перечисления <see cref="T:System.Security.Permissions.PermissionState" />.</param>
      <returns>Строго типизированный экземпляр <see cref="T:System.Security.CodeAccessPermission" />.</returns>
    </member>
    <member name="F:System.Data.SqlClient.SqlClientFactory.Instance">
      <summary>Получает экземпляр объекта <see cref="T:System.Data.SqlClient.SqlClientFactory" />. Это может использоваться для извлечения строго типизированных объектов данных.</summary>
    </member>
    <member name="M:System.Data.SqlClient.SqlClientFactory.System#IServiceProvider#GetService(System.Type)">
      <summary>Описание этого члена см. в разделе <see cref="M:System.IServiceProvider.GetService(System.Type)" />.</summary>
      <param name="serviceType">Объект, определяющий тип объекта службы, который необходимо получить.</param>
      <returns>Объект службы.</returns>
    </member>
    <member name="T:System.Data.SqlClient.SqlClientLogger">
      <summary>Представляет средство ведения журнала клиента SQL.</summary>
    </member>
    <member name="M:System.Data.SqlClient.SqlClientLogger.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.SqlClient.SqlClientLogger" />.</summary>
    </member>
    <member name="P:System.Data.SqlClient.SqlClientLogger.IsLoggingEnabled">
      <summary>Получает значение, указывающее, включена ли трассировка встроенных средств диагностики.</summary>
      <returns>Значение <see langword="true" />, если трассировка встроенных средств диагностики включена; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlClientLogger.LogAssert(System.Boolean,System.String,System.String,System.String)">
      <summary>Регистрирует указанное сообщение, если <paramref name="value" /> — <see langword="false" />.</summary>
      <param name="value">Значение <see langword="false" /> для записи сообщения в журнал; в противном случае — <see langword="true" />.</param>
      <param name="type">Тип, который записывается в журнал.</param>
      <param name="method">Метод ведения журнала.</param>
      <param name="message">Сообщение для записи.</param>
      <returns>Значение <see langword="true" />, если сообщение не регистрируется; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlClientLogger.LogError(System.String,System.String,System.String)">
      <summary>Записывает в журнал ошибку с помощью заданного метода для типа текущего экземпляра.</summary>
      <param name="type">Тип, который записывается в журнал.</param>
      <param name="method">Метод ведения журнала.</param>
      <param name="message">Сообщение для записи.</param>
    </member>
    <member name="M:System.Data.SqlClient.SqlClientLogger.LogInfo(System.String,System.String,System.String)">
      <summary>Записывает сведения в журнал с использованием заданного метода для типа текущего экземпляра.</summary>
      <param name="type">Тип, который записывается в журнал.</param>
      <param name="method">Метод ведения журнала.</param>
      <param name="message">Сообщение для записи.</param>
    </member>
    <member name="T:System.Data.SqlClient.SqlClientMetaDataCollectionNames">
      <summary>Предоставляет список констант для использования с методом GetSchema в целях извлечения коллекций метаданных.</summary>
    </member>
    <member name="F:System.Data.SqlClient.SqlClientMetaDataCollectionNames.Columns">
      <summary>Константа для использования с методом GetSchema, представляющая коллекцию Columns.</summary>
    </member>
    <member name="F:System.Data.SqlClient.SqlClientMetaDataCollectionNames.Databases">
      <summary>Константа для использования с методом GetSchema, представляющая коллекцию Databases.</summary>
    </member>
    <member name="F:System.Data.SqlClient.SqlClientMetaDataCollectionNames.ForeignKeys">
      <summary>Константа для использования с методом GetSchema, представляющая коллекцию ForeignKeys.</summary>
    </member>
    <member name="F:System.Data.SqlClient.SqlClientMetaDataCollectionNames.IndexColumns">
      <summary>Константа для использования с методом GetSchema, представляющая коллекцию IndexColumns.</summary>
    </member>
    <member name="F:System.Data.SqlClient.SqlClientMetaDataCollectionNames.Indexes">
      <summary>Константа для использования с методом GetSchema, представляющая коллекцию Indexes.</summary>
    </member>
    <member name="F:System.Data.SqlClient.SqlClientMetaDataCollectionNames.Parameters">
      <summary>Константа для использования с методом GetSchema, представляющая коллекцию Parameters.</summary>
    </member>
    <member name="F:System.Data.SqlClient.SqlClientMetaDataCollectionNames.ProcedureColumns">
      <summary>Константа для использования с методом GetSchema, представляющая коллекцию ProcedureColumns.</summary>
    </member>
    <member name="F:System.Data.SqlClient.SqlClientMetaDataCollectionNames.Procedures">
      <summary>Константа для использования с методом GetSchema, представляющая коллекцию Procedures.</summary>
    </member>
    <member name="F:System.Data.SqlClient.SqlClientMetaDataCollectionNames.Tables">
      <summary>Константа для использования с методом GetSchema, представляющая коллекцию Tables.</summary>
    </member>
    <member name="F:System.Data.SqlClient.SqlClientMetaDataCollectionNames.UserDefinedTypes">
      <summary>Константа для использования с методом GetSchema, представляющая коллекцию UserDefinedTypes.</summary>
    </member>
    <member name="F:System.Data.SqlClient.SqlClientMetaDataCollectionNames.Users">
      <summary>Константа для использования с методом GetSchema, представляющая коллекцию Users.</summary>
    </member>
    <member name="F:System.Data.SqlClient.SqlClientMetaDataCollectionNames.ViewColumns">
      <summary>Константа для использования с методом GetSchema, представляющая коллекцию ViewColumns.</summary>
    </member>
    <member name="F:System.Data.SqlClient.SqlClientMetaDataCollectionNames.Views">
      <summary>Константа для использования с методом GetSchema, представляющая коллекцию Views.</summary>
    </member>
    <member name="T:System.Data.SqlClient.SqlClientPermission">
      <summary>Позволяет поставщику данных платформы .NET Framework для SQL Server убедиться, что пользователь обладает уровнем безопасности, достаточным для доступа к источнику данных.</summary>
    </member>
    <member name="M:System.Data.SqlClient.SqlClientPermission.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.SqlClient.SqlClientPermission" />.</summary>
    </member>
    <member name="M:System.Data.SqlClient.SqlClientPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.SqlClient.SqlClientPermission" />.</summary>
      <param name="state">Одно из значений перечисления <see cref="T:System.Security.Permissions.PermissionState" />.</param>
    </member>
    <member name="M:System.Data.SqlClient.SqlClientPermission.#ctor(System.Security.Permissions.PermissionState,System.Boolean)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.SqlClient.SqlClientPermission" />.</summary>
      <param name="state">Одно из значений перечисления <see cref="T:System.Security.Permissions.PermissionState" />.</param>
      <param name="allowBlankPassword">Указывает, разрешается ли пустой пароль.</param>
    </member>
    <member name="M:System.Data.SqlClient.SqlClientPermission.Add(System.String,System.String,System.Data.KeyRestrictionBehavior)">
      <summary>Добавляет новую строку подключения и набор запрещенных ключевых слов в объект <see cref="T:System.Data.SqlClient.SqlClientPermission" />.</summary>
      <param name="connectionString">Строка подключения.</param>
      <param name="restrictions">Ключевые ограничения.</param>
      <param name="behavior">Одно из значений <see cref="T:System.Data.KeyRestrictionBehavior" />.</param>
    </member>
    <member name="M:System.Data.SqlClient.SqlClientPermission.Copy">
      <summary>Возвращает объект <see cref="T:System.Data.SqlClient.SqlClientPermission" /> в качестве <see cref="T:System.Security.IPermission" />.</summary>
      <returns>Копия текущего объекта разрешения.</returns>
    </member>
    <member name="T:System.Data.SqlClient.SqlClientPermissionAttribute">
      <summary>Связывает операцию безопасности с пользовательским атрибутом безопасности.</summary>
    </member>
    <member name="M:System.Data.SqlClient.SqlClientPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.SqlClient.SqlClientPermissionAttribute" />.</summary>
      <param name="action">Одно из значений <see cref="T:System.Security.Permissions.SecurityAction" />, представляющих действие, которое может быть выполнено с применением декларативной безопасности.</param>
    </member>
    <member name="M:System.Data.SqlClient.SqlClientPermissionAttribute.CreatePermission">
      <summary>Возвращает объект <see cref="T:System.Data.SqlClient.SqlClientPermission" />, который настроен в соответствии со свойствами атрибутов.</summary>
      <returns>Объект <see cref="T:System.Data.SqlClient.SqlClientPermission" />.</returns>
    </member>
    <member name="T:System.Data.SqlClient.SqlColumnEncryptionCertificateStoreProvider">
      <summary>Реализация поставщика хранилища ключей для хранилища сертификатов Windows. Этот класс позволяет использовать сертификаты, находящиеся в хранилище сертификатов Windows, в качестве главных ключей столбца. Дополнительные сведения см. в разделе Always Encrypted.</summary>
    </member>
    <member name="M:System.Data.SqlClient.SqlColumnEncryptionCertificateStoreProvider.#ctor">
      <summary>Поставщик хранилища ключей для хранилища сертификатов Windows.</summary>
    </member>
    <member name="M:System.Data.SqlClient.SqlColumnEncryptionCertificateStoreProvider.DecryptColumnEncryptionKey(System.String,System.String,System.Byte[])">
      <summary>Расшифровывает указанное зашифрованное значение ключа шифрования столбца. Зашифрованное значение должно быть зашифровано с помощью сертификата по указанному пути к ключу и с помощью указанного алгоритма. Формат пути к ключу должен быть следующим: Local Machine/My/&lt;отпечаток_сертификата&gt; или Current User/My/&lt;отпечаток_сертификата&gt;.</summary>
      <param name="masterKeyPath">Путь к главному ключу.</param>
      <param name="encryptionAlgorithm">Алгоритм шифрования. В настоящее время единственным допустимым значением является RSA_OAEP.</param>
      <param name="encryptedColumnEncryptionKey">Зашифрованный ключ шифрования столбца.</param>
      <returns>Возвращает <see cref="T:System.Byte" />.Расшифрованный ключ шифрования столбца.</returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlColumnEncryptionCertificateStoreProvider.EncryptColumnEncryptionKey(System.String,System.String,System.Byte[])">
      <summary>Шифрует ключ шифрования столбца с помощью сертификата по указанному пути ключа и с помощью указанного алгоритма. Формат пути к ключу должен быть следующим: Local Machine/My/&lt;отпечаток_сертификата&gt; или Current User/My/&lt;отпечаток_сертификата&gt;.</summary>
      <param name="masterKeyPath">Путь к главному ключу.</param>
      <param name="encryptionAlgorithm">Алгоритм шифрования. В настоящее время единственным допустимым значением является RSA_OAEP.</param>
      <param name="columnEncryptionKey">Зашифрованный ключ шифрования столбца.</param>
      <returns>Возвращает <see cref="T:System.Byte" />.Зашифрованный ключ шифрования столбца.</returns>
    </member>
    <member name="F:System.Data.SqlClient.SqlColumnEncryptionCertificateStoreProvider.ProviderName">
      <summary>Имя поставщика.</summary>
    </member>
    <member name="M:System.Data.SqlClient.SqlColumnEncryptionCertificateStoreProvider.SignColumnMasterKeyMetadata(System.String,System.Boolean)">
      <summary>Создает цифровую подпись метаданных главного ключа столбца, используя главный ключ столбца, на который ссылается параметр <paramref name="masterKeyPath" />.</summary>
      <param name="masterKeyPath">Путь к главному ключу столбца.</param>
      <param name="allowEnclaveComputations">Значение <see langword="true" />, если главный ключ столбца поддерживает анклавные вычисления, иначе значение <see langword="false" />.</param>
      <returns>Подпись метаданных главного ключа столбца.</returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlColumnEncryptionCertificateStoreProvider.VerifyColumnMasterKeyMetadata(System.String,System.Boolean,System.Byte[])">
      <summary>Эта функция должна реализовываться соответствующими поставщиками хранилищ ключей. Эта функция должна использовать асимметричный ключ, который задается по пути к ключу, и подтверждать метаданные главного ключа (masterKeyPath, allowEnclaveComputations, providerName).</summary>
      <param name="masterKeyPath">Полный путь к асимметричному ключу. Формат пути зависит от поставщика хранилища ключей.</param>
      <param name="allowEnclaveComputations">Логическое значение, указывающее, может ли этот ключ передаваться в безопасный анклав.</param>
      <param name="signature">Подпись метаданных главного ключа.</param>
      <returns>Логическое значение, указывающее, могут ли быть подтверждены метаданные ключа на основе предоставленной подписи.</returns>
    </member>
    <member name="T:System.Data.SqlClient.SqlColumnEncryptionCngProvider">
      <summary>Реализация поставщика хранилища CMK для использования Microsoft Cryptography API: Next Generation (CNG) с режимом Always Encrypted.</summary>
    </member>
    <member name="M:System.Data.SqlClient.SqlColumnEncryptionCngProvider.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.SqlClient.SqlColumnEncryptionCngProvider" />.</summary>
    </member>
    <member name="M:System.Data.SqlClient.SqlColumnEncryptionCngProvider.DecryptColumnEncryptionKey(System.String,System.String,System.Byte[])">
      <summary>Расшифровывает данное зашифрованное значение, используя асимметричный ключ, заданный путем к ключу, и указанный алгоритм. Ключ должен иметь путь в формате [имя_поставщика]/KeyIdentifier и быть асимметричным, хранящимся в указанном поставщике хранилища ключей CNG. Допустимым алгоритмом, используемым для шифрования и расшифровки CEK, является "RSA_OAEP".</summary>
      <param name="masterKeyPath">Путь к главному ключу.</param>
      <param name="encryptionAlgorithm">Алгоритм шифрования.</param>
      <param name="encryptedColumnEncryptionKey">Зашифрованный ключ шифрования столбца.</param>
      <returns>Расшифрованный ключ шифрования столбца.</returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlColumnEncryptionCngProvider.EncryptColumnEncryptionKey(System.String,System.String,System.Byte[])">
      <summary>Шифрует конкретный ключ шифрования столбца в обычном тексте с помощью указанного алгоритма и асимметричного ключа, указанного в пути к ключу. Ключ должен иметь путь в формате [имя_поставщика]/KeyIdentifier и быть асимметричным, хранящимся в указанном поставщике хранилища ключей CNG. Допустимым алгоритмом, используемым для шифрования и расшифровки CEK, является "RSA_OAEP".</summary>
      <param name="masterKeyPath">Путь к главному ключу.</param>
      <param name="encryptionAlgorithm">Алгоритм шифрования.</param>
      <param name="columnEncryptionKey">Зашифрованный ключ шифрования столбца.</param>
      <returns>Зашифрованный ключ шифрования столбца.</returns>
    </member>
    <member name="F:System.Data.SqlClient.SqlColumnEncryptionCngProvider.ProviderName">
      <summary>Постоянная строка для имени поставщика MSSQL_CNG_STORE.</summary>
    </member>
    <member name="M:System.Data.SqlClient.SqlColumnEncryptionCngProvider.SignColumnMasterKeyMetadata(System.String,System.Boolean)">
      <summary>Вызывает исключение <see cref="T:System.NotSupportedException" /> во всех случаях.</summary>
      <param name="masterKeyPath">Путь к главному ключу столбца. Формат пути зависит от поставщика хранилища ключей.</param>
      <param name="allowEnclaveComputations">Значение <see langword="true" />, если главный ключ столбца поддерживает анклавные вычисления, иначе значение <see langword="false" />.</param>
      <returns>Подпись метаданных главного ключа столбца.</returns>
      <exception cref="T:System.NotSupportedException">Во всех случаях.</exception>
    </member>
    <member name="M:System.Data.SqlClient.SqlColumnEncryptionCngProvider.VerifyColumnMasterKeyMetadata(System.String,System.Boolean,System.Byte[])">
      <summary>Эта функция должна реализовываться соответствующими поставщиками хранилищ ключей. Эта функция должна использовать асимметричный ключ, который задается по пути к ключу, и подтверждать метаданные главного ключа (masterKeyPath, allowEnclaveComputations, providerName).</summary>
      <param name="masterKeyPath">Полный путь к асимметричному ключу. Формат пути зависит от поставщика хранилища ключей.</param>
      <param name="allowEnclaveComputations">Логическое значение, указывающее, может ли этот ключ передаваться в безопасный анклав.</param>
      <param name="signature">Подпись метаданных главного ключа.</param>
      <returns>Логическое значение, указывающее, могут ли быть подтверждены метаданные ключа на основе предоставленной подписи.</returns>
    </member>
    <member name="T:System.Data.SqlClient.SqlColumnEncryptionCspProvider">
      <summary>Реализация поставщика хранилища CMK для использования поставщиков служб шифрования (CSP) на основе Microsoft CAPI в режиме Always Encrypted.</summary>
    </member>
    <member name="M:System.Data.SqlClient.SqlColumnEncryptionCspProvider.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.SqlClient.SqlColumnEncryptionCspProvider" />.</summary>
    </member>
    <member name="M:System.Data.SqlClient.SqlColumnEncryptionCspProvider.DecryptColumnEncryptionKey(System.String,System.String,System.Byte[])">
      <summary>Расшифровывает данное зашифрованное значение, используя асимметричный ключ, заданный путем к ключу, и алгоритм. Ключ должен иметь путь в формате [имя_поставщика]/KeyIdentifier и быть асимметричным, хранящимся в указанном поставщике CSP. Допустимым алгоритмом, используемым для шифрования и расшифровки CEK, является "RSA_OAEP".</summary>
      <param name="masterKeyPath">Путь к главному ключу.</param>
      <param name="encryptionAlgorithm">Алгоритм шифрования.</param>
      <param name="encryptedColumnEncryptionKey">Зашифрованный ключ шифрования столбца.</param>
      <returns>Расшифрованный ключ шифрования столбца.</returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlColumnEncryptionCspProvider.EncryptColumnEncryptionKey(System.String,System.String,System.Byte[])">
      <summary>Шифрует конкретный ключ шифрования столбца в обычном тексте с помощью указанного алгоритма и асимметричного ключа, указанного в пути к ключу. Ключ должен иметь путь в формате [имя_поставщика]/KeyIdentifier и быть асимметричным, хранящимся в указанном поставщике CSP. Допустимым алгоритмом, используемым для шифрования и расшифровки CEK, является "RSA_OAEP".</summary>
      <param name="masterKeyPath">Путь к главному ключу.</param>
      <param name="encryptionAlgorithm">Алгоритм шифрования.</param>
      <param name="columnEncryptionKey">Зашифрованный ключ шифрования столбца.</param>
      <returns>Зашифрованный ключ шифрования столбца.</returns>
    </member>
    <member name="F:System.Data.SqlClient.SqlColumnEncryptionCspProvider.ProviderName">
      <summary>Постоянная строка для имени поставщика MSSQL_CSP_PROVIDER.</summary>
    </member>
    <member name="M:System.Data.SqlClient.SqlColumnEncryptionCspProvider.SignColumnMasterKeyMetadata(System.String,System.Boolean)">
      <summary>Вызывает исключение <see cref="T:System.NotSupportedException" /> во всех случаях.</summary>
      <param name="masterKeyPath">Путь к главному ключу столбца. Формат пути зависит от поставщика хранилища ключей.</param>
      <param name="allowEnclaveComputations">Значение <see langword="true" />, если главный ключ столбца поддерживает анклавные вычисления, иначе значение <see langword="false" />.</param>
      <returns>Подпись метаданных главного ключа столбца.</returns>
      <exception cref="T:System.NotSupportedException">Во всех случаях.</exception>
    </member>
    <member name="M:System.Data.SqlClient.SqlColumnEncryptionCspProvider.VerifyColumnMasterKeyMetadata(System.String,System.Boolean,System.Byte[])">
      <summary>Эта функция должна реализовываться соответствующими поставщиками хранилищ ключей. Эта функция должна использовать асимметричный ключ, который задается как путь к ключу, и подписывать метаданные главного ключа (masterKeyPath, allowEnclaveComputations, providerName).</summary>
      <param name="masterKeyPath">Полный путь к асимметричному ключу. Формат пути зависит от поставщика хранилища ключей.</param>
      <param name="allowEnclaveComputations">Логическое значение, указывающее, можно ли отправлять этот ключ в безопасный анклав.</param>
      <param name="signature">Подпись метаданных главного ключа.</param>
      <returns>Логическое значение, указывающее, могут ли быть подтверждены метаданные ключа на основе предоставленной подписи.</returns>
    </member>
    <member name="T:System.Data.SqlClient.SqlColumnEncryptionEnclaveProvider">
      <summary>Базовый класс, определяющий интерфейс поставщиков анклавов для технологии Always Encrypted.</summary>
    </member>
    <member name="M:System.Data.SqlClient.SqlColumnEncryptionEnclaveProvider.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.SqlClient.SqlColumnEncryptionEnclaveProvider" />.</summary>
    </member>
    <member name="M:System.Data.SqlClient.SqlColumnEncryptionEnclaveProvider.CreateEnclaveSession(System.Byte[],System.Security.Cryptography.ECDiffieHellmanCng,System.String,System.String,System.Data.SqlClient.SqlEnclaveSession@,System.Int64@)">
      <summary>При переопределении в производном классе выполняет аттестацию анклава, создает симметричный ключ для сеанса, создает сеанс анклава и сохраняет сведения о сеансе в кэше.</summary>
      <param name="enclaveAttestationInfo">Сведения, которые поставщик использует для аттестации анклава и создания симметричного ключа для сеанса. Формат этих сведений зависит от используемого протокола аттестации анклава.</param>
      <param name="clientDiffieHellmanKey">Объект алгоритма Диффи — Хеллмана, инкапсулирующий пару ключей на стороне клиента.</param>
      <param name="attestationUrl">Конечная точка службы, осуществляющей аттестацию анклава.</param>
      <param name="servername">Имя экземпляра SQL Server, содержащего анклав.</param>
      <param name="sqlEnclaveSession">Запрошенный сеанс анклава или <see langword="null" />, если поставщик не реализует кэширование сеансов.</param>
      <param name="counter">Счетчик, который поставщик анклава должен увеличивать каждый раз, когда SqlClient извлекает сеанс из кэша. Цель этого поля — предотвращать атаки с повторением файлов.</param>
    </member>
    <member name="M:System.Data.SqlClient.SqlColumnEncryptionEnclaveProvider.GetAttestationParameters">
      <summary>Получает сведения, которые SqlClient впоследствии использует для запуска процесса аттестации анклава и установления безопасного сеанса с анклавом.</summary>
      <returns>Сведения, которые SqlClient впоследствии использует для запуска процесса аттестации анклава и установления безопасного сеанса с анклавом.</returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlColumnEncryptionEnclaveProvider.GetEnclaveSession(System.String,System.String,System.Data.SqlClient.SqlEnclaveSession@,System.Int64@)">
      <summary>При переопределении в производном классе находит сведения о существующем сеансе анклава в кэше сеансов. Если поставщик анклава не реализует кэширование сеансов анклава, этот метод должен возвращать в параметре <paramref name="sqlEnclaveSession" /> значение <see langword="null" />.</summary>
      <param name="serverName">Имя экземпляра SQL Server, содержащего анклав.</param>
      <param name="attestationUrl">Конечная точка службы аттестации, с которой SqlClient связывается для аттестации анклава.</param>
      <param name="sqlEnclaveSession">При возвращении методом значений — запрошенный сеанс анклава или <see langword="null" />, если поставщик не реализует кэширование сеансов. Этот параметр обрабатывается как неинициализированный.</param>
      <param name="counter">Счетчик, который поставщик анклава должен увеличивать каждый раз, когда SqlClient извлекает сеанс из кэша. Цель этого поля — предотвращать атаки с повторением файлов.</param>
    </member>
    <member name="M:System.Data.SqlClient.SqlColumnEncryptionEnclaveProvider.InvalidateEnclaveSession(System.String,System.String,System.Data.SqlClient.SqlEnclaveSession)">
      <summary>При переопределении в производном классе находит и исключает сеанс анклава в кэше, если поставщик реализует кэширование сеансов.</summary>
      <param name="serverName">Имя экземпляра SQL Server, содержащего анклав.</param>
      <param name="enclaveAttestationUrl">Конечная точка службы аттестации, с которой SqlClient связывается для аттестации анклава.</param>
      <param name="enclaveSession">Сеанс, который нужно аннулировать.</param>
    </member>
    <member name="T:System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider">
      <summary>Базовый класс для всех поставщиков хранилища ключей. Настраиваемый поставщик должен наследовать от этого класса и переопределить свои функции-члены, а затем зарегистрируйте его с помощью SqlConnection.RegisterColumnEncryptionKeyStoreProviders(). Дополнительные сведения см. в разделе Always Encrypted.</summary>
    </member>
    <member name="M:System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider.#ctor">
      <summary>Инициализирует новый экземпляр класса SqlColumnEncryptionKeyStoreProviderClass.</summary>
    </member>
    <member name="M:System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider.DecryptColumnEncryptionKey(System.String,System.String,System.Byte[])">
      <summary>Расшифровывает указанное зашифрованное значение ключа шифрования столбца. Зашифрованное значение должно быть зашифровано с помощью главного ключа столбца с указанным путем к ключу и с помощью указанного алгоритма.</summary>
      <param name="masterKeyPath">Путь к главному ключу.</param>
      <param name="encryptionAlgorithm">Алгоритм шифрования.</param>
      <param name="encryptedColumnEncryptionKey">Зашифрованный ключ шифрования столбца.</param>
      <returns>Возвращает <see cref="T:System.Byte" />.Расшифрованный ключ шифрования столбца.</returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider.EncryptColumnEncryptionKey(System.String,System.String,System.Byte[])">
      <summary>Шифрует ключ шифрования столбца с помощью главного ключа столбца по указанному пути ключа и с помощью указанного алгоритма.</summary>
      <param name="masterKeyPath">Путь к главному ключу.</param>
      <param name="encryptionAlgorithm">Алгоритм шифрования.</param>
      <param name="columnEncryptionKey">Зашифрованный ключ шифрования столбца.</param>
      <returns>Возвращает <see cref="T:System.Byte" />.Зашифрованный ключ шифрования столбца.</returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider.SignColumnMasterKeyMetadata(System.String,System.Boolean)">
      <summary>При реализации в производном классе выполняет цифровую подпись метаданных главного ключа столбца, используя главный ключ столбца, на который ссылается параметр <paramref name="masterKeyPath" />. Входные значения, используемые для создания подписи должны задаваться значениями параметров <paramref name="masterKeyPath" /> и <paramref name="allowEnclaveComputations" />.</summary>
      <param name="masterKeyPath">Путь к главному ключу столбца.</param>
      <param name="allowEnclaveComputations">Значение <see langword="true" />, если главный ключ столбца поддерживает анклавные вычисления, иначе значение <see langword="false" />.</param>
      <returns>Подпись метаданных главного ключа столбца.</returns>
      <exception cref="T:System.NotImplementedException">Во всех случаях.</exception>
    </member>
    <member name="M:System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider.VerifyColumnMasterKeyMetadata(System.String,System.Boolean,System.Byte[])">
      <summary>При реализации в производном классе этот метод должен проверять действительность указанной подписи для главного ключа столбца с указанным путем к ключу и заданным поведением анклава. Реализация по умолчанию вызывает исключение NotImplementedException.</summary>
      <param name="masterKeyPath">Путь к главному ключу столбца.</param>
      <param name="allowEnclaveComputations">Указывает, поддерживает ли главный ключ столбца анклавные вычисления.</param>
      <param name="signature">Подпись метаданных главного ключа столбца.</param>
      <returns>При реализации в производном классе этот метод должен возвращать значение true, если указанная подпись является действительной, или false в противном случае. Реализация по умолчанию вызывает исключение NotImplementedException.</returns>
    </member>
    <member name="T:System.Data.SqlClient.SqlComm*******">
      <summary>Представляет инструкцию Transact-SQL или хранимую процедуру, выполняемую над базой данных SQL Server. Этот класс не наследуется.</summary>
    </member>
    <member name="M:System.Data.SqlClient.SqlComm*******.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.SqlClient.SqlComm*******" />.</summary>
    </member>
    <member name="M:System.Data.SqlClient.SqlComm*******.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.SqlClient.SqlComm*******" /> текстом запроса.</summary>
      <param name="cmdText">Текст запроса.</param>
    </member>
    <member name="M:System.Data.SqlClient.SqlComm*******.#ctor(System.String,System.Data.SqlClient.SqlConnection)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.SqlClient.SqlComm*******" /> текстом запроса и подключением <see cref="T:System.Data.SqlClient.SqlConnection" />.</summary>
      <param name="cmdText">Текст запроса.</param>
      <param name="connection">Объект <see cref="T:System.Data.SqlClient.SqlConnection" />, представляющий подключение к экземпляру SQL Server.</param>
    </member>
    <member name="M:System.Data.SqlClient.SqlComm*******.#ctor(System.String,System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlTransaction)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.SqlClient.SqlComm*******" /> текстом запроса, подключением <see cref="T:System.Data.SqlClient.SqlConnection" /> и транзакцией <see cref="T:System.Data.SqlClient.SqlTransaction" />.</summary>
      <param name="cmdText">Текст запроса.</param>
      <param name="connection">Объект <see cref="T:System.Data.SqlClient.SqlConnection" />, представляющий подключение к экземпляру SQL Server.</param>
      <param name="transaction">
        <see cref="T:System.Data.SqlClient.SqlTransaction" />, в которой выполняется <see cref="T:System.Data.SqlClient.SqlComm*******" />.</param>
    </member>
    <member name="M:System.Data.SqlClient.SqlComm*******.#ctor(System.String,System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlTransaction,System.Data.SqlClient.SqlComm*******ColumnEncryptionSetting)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.SqlClient.SqlComm*******" /> с заданными текстом команды, подключением, транзакцией и параметром шифрования.</summary>
      <param name="cmdText">Текст запроса.</param>
      <param name="connection">Объект <see cref="T:System.Data.SqlClient.SqlConnection" />, представляющий подключение к экземпляру SQL Server.</param>
      <param name="transaction">
        <see cref="T:System.Data.SqlClient.SqlTransaction" />, в которой выполняется <see cref="T:System.Data.SqlClient.SqlComm*******" />.</param>
      <param name="columnEncryptionSetting">Настройка шифрования. Дополнительные сведения см. в разделе Всегда зашифровано.</param>
    </member>
    <member name="M:System.Data.SqlClient.SqlComm*******.BeginExecuteNonQuery">
      <summary>Инициирует асинхронное выполнение инструкции Transact-SQL или хранимой процедуры, определенной в данном объекте <see cref="T:System.Data.SqlClient.SqlComm*******" />.</summary>
      <returns>Объект <see cref="T:System.IAsyncResult" />, который может использоваться для запроса или ожидания результатов или для того и другого; это значение требуется также при вызове метода <see cref="M:System.Data.SqlClient.SqlComm*******.EndExecuteNonQuery(System.IAsyncResult)" />, возвращающего количество задействованных строк.</returns>
      <exception cref="T:System.InvalidCastException">При присвоении <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> значения <see cref="T:System.IO.Stream" /> использовался тип <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />, отличный от Binary или VarBinary. Дополнительные сведения о потоковой передаче см. в разделе Поддержка потоковой передачи SqlClient.  
При присвоении <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> значения <see cref="T:System.IO.TextReader" /> использовался тип <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />, отличный от Char, NChar, NVarChar, VarChar или Xml.  
При присвоении <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> значения <see cref="T:System.Xml.XmlReader" /> использовался тип <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />, отличный от Xml.</exception>
      <exception cref="T:System.Data.SqlClient.SqlException">Любая ошибка, произошедшая во время выполнения текста команды.  
Во время операции потоковой передачи истекло время ожидания. Дополнительные сведения о потоковой передаче см. в разделе Поддержка потоковой передачи SqlClient.</exception>
      <exception cref="T:System.InvalidOperationException">Пара имя — значение (Asynchronous Processing=true) не была указана в строке подключения, определяющей подключение для этого <see cref="T:System.Data.SqlClient.SqlComm*******" />.  
Подключение <see cref="T:System.Data.SqlClient.SqlConnection" />, закрытое или удаленное во время операции потоковой передачи. Дополнительные сведения о потоковой передаче см. в разделе Поддержка потоковой передачи SqlClient.</exception>
      <exception cref="T:System.IO.IOException">Во время операции потоковой передачи возникла ошибка в объекте <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> или <see cref="T:System.IO.TextReader" />.  Дополнительные сведения о потоковой передаче см. в разделе Поддержка потоковой передачи SqlClient.</exception>
      <exception cref="T:System.ObjectDisposedException">Объект <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> или <see cref="T:System.IO.TextReader" /> был закрыт во время операции потоковой передачи.  Дополнительные сведения о потоковой передаче см. в разделе Поддержка потоковой передачи SqlClient.</exception>
    </member>
    <member name="M:System.Data.SqlClient.SqlComm*******.BeginExecuteNonQuery(System.AsyncCallback,System.Object)">
      <summary>Инициализирует асинхронное выполнение инструкции Transact-SQL или хранимой процедуры, определенной в данном объекте <see cref="T:System.Data.SqlClient.SqlComm*******" />, получая процедуру обратного вызова и данные о состоянии.</summary>
      <param name="callback">Делегат <see cref="T:System.AsyncCallback" />, вызываемый по завершении выполнения команды. Передайте значение <see langword="null" /> (<see langword="Nothing" /> в Microsoft Visual Basic), чтобы указать, что обратный вызов не требуется.</param>
      <param name="stateObject">Определяемый пользователем объект состояния, передаваемый процедуре обратного вызова. Извлечение этого объекта в процедуре обратного вызова осуществляется посредством свойства <see cref="P:System.IAsyncResult.AsyncState" />.</param>
      <returns>Объект <see cref="T:System.IAsyncResult" />, который может использоваться для запроса или ожидания результатов или для того и другого; это значение требуется также при вызове метода <see cref="M:System.Data.SqlClient.SqlComm*******.EndExecuteNonQuery(System.IAsyncResult)" />, возвращающего количество задействованных строк.</returns>
      <exception cref="T:System.InvalidCastException">При присвоении <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> значения <see cref="T:System.IO.Stream" /> использовался тип <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />, отличный от Binary или VarBinary. Дополнительные сведения о потоковой передаче см. в разделе Поддержка потоковой передачи SqlClient.  
При присвоении <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> значения <see cref="T:System.IO.TextReader" /> использовался тип <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />, отличный от Char, NChar, NVarChar, VarChar или Xml.  
При присвоении <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> значения <see cref="T:System.Xml.XmlReader" /> использовался тип <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />, отличный от Xml.</exception>
      <exception cref="T:System.Data.SqlClient.SqlException">Любая ошибка, произошедшая во время выполнения текста команды.  
Во время операции потоковой передачи истекло время ожидания. Дополнительные сведения о потоковой передаче см. в разделе Поддержка потоковой передачи SqlClient.</exception>
      <exception cref="T:System.InvalidOperationException">Пара имя — значение (Asynchronous Processing=true) не была указана в строке подключения, определяющей подключение для этого <see cref="T:System.Data.SqlClient.SqlComm*******" />.  
Подключение <see cref="T:System.Data.SqlClient.SqlConnection" />, закрытое или удаленное во время операции потоковой передачи. Дополнительные сведения о потоковой передаче см. в разделе Поддержка потоковой передачи SqlClient.</exception>
      <exception cref="T:System.IO.IOException">Во время операции потоковой передачи возникла ошибка в объекте <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> или <see cref="T:System.IO.TextReader" />.  Дополнительные сведения о потоковой передаче см. в разделе Поддержка потоковой передачи SqlClient.</exception>
      <exception cref="T:System.ObjectDisposedException">Объект <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> или <see cref="T:System.IO.TextReader" /> был закрыт во время операции потоковой передачи.  Дополнительные сведения о потоковой передаче см. в разделе Поддержка потоковой передачи SqlClient.</exception>
    </member>
    <member name="M:System.Data.SqlClient.SqlComm*******.BeginExecuteReader">
      <summary>Инициирует асинхронное выполнение инструкции или хранимой процедуры Transact-SQL, описанной в данном объекте <see cref="T:System.Data.SqlClient.SqlComm*******" />, и получает от сервера один или несколько результирующих наборов.</summary>
      <returns>Объект <see cref="T:System.IAsyncResult" />, который может использоваться для запроса, ожидания результатов или для того и другого. Это значение требуется также при вызове метода <see cref="M:System.Data.SqlClient.SqlComm*******.EndExecuteReader(System.IAsyncResult)" />, возвращающего экземпляр <see cref="T:System.Data.SqlClient.SqlDataReader" />, который может использоваться для извлечения возвращенных строк.</returns>
      <exception cref="T:System.InvalidCastException">При присвоении <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> значения <see cref="T:System.IO.Stream" /> использовался тип <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />, отличный от Binary или VarBinary. Дополнительные сведения о потоковой передаче см. в разделе Поддержка потоковой передачи SqlClient.  
При присвоении <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> значения <see cref="T:System.IO.TextReader" /> использовался тип <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />, отличный от Char, NChar, NVarChar, VarChar или Xml.  
При присвоении <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> значения <see cref="T:System.Xml.XmlReader" /> использовался тип <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />, отличный от Xml.</exception>
      <exception cref="T:System.Data.SqlClient.SqlException">Любая ошибка, произошедшая во время выполнения текста команды.  
Во время операции потоковой передачи истекло время ожидания. Дополнительные сведения о потоковой передаче см. в разделе Поддержка потоковой передачи SqlClient.</exception>
      <exception cref="T:System.InvalidOperationException">Пара имя — значение (Asynchronous Processing=true) не была указана в строке подключения, определяющей подключение для этого <see cref="T:System.Data.SqlClient.SqlComm*******" />.  
Подключение <see cref="T:System.Data.SqlClient.SqlConnection" />, закрытое или удаленное во время операции потоковой передачи. Дополнительные сведения о потоковой передаче см. в разделе Поддержка потоковой передачи SqlClient.</exception>
      <exception cref="T:System.IO.IOException">Во время операции потоковой передачи возникла ошибка в объекте <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> или <see cref="T:System.IO.TextReader" />.  Дополнительные сведения о потоковой передаче см. в разделе Поддержка потоковой передачи SqlClient.</exception>
      <exception cref="T:System.ObjectDisposedException">Объект <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> или <see cref="T:System.IO.TextReader" /> был закрыт во время операции потоковой передачи.  Дополнительные сведения о потоковой передаче см. в разделе Поддержка потоковой передачи SqlClient.</exception>
    </member>
    <member name="M:System.Data.SqlClient.SqlComm*******.BeginExecuteReader(System.AsyncCallback,System.Object)">
      <summary>Инициализирует асинхронное выполнение инструкции Transact-SQL или хранимой процедуры, определенной в данном объекте <see cref="T:System.Data.SqlClient.SqlComm*******" />, и получает от сервера один или более результирующих наборов при наличии процедуры обратного вызова и сведений о состоянии.</summary>
      <param name="callback">Делегат <see cref="T:System.AsyncCallback" />, вызываемый по завершении выполнения команды. Передайте значение <see langword="null" /> (<see langword="Nothing" /> в Microsoft Visual Basic), чтобы указать, что обратный вызов не требуется.</param>
      <param name="stateObject">Определяемый пользователем объект состояния, передаваемый процедуре обратного вызова. Извлечение этого объекта в процедуре обратного вызова осуществляется посредством свойства <see cref="P:System.IAsyncResult.AsyncState" />.</param>
      <returns>Объект <see cref="T:System.IAsyncResult" />, который может использоваться для запроса или ожидания результатов или для того и другого; это значение требуется также при вызове метода <see cref="M:System.Data.SqlClient.SqlComm*******.EndExecuteReader(System.IAsyncResult)" />, возвращающего экземпляр <see cref="T:System.Data.SqlClient.SqlDataReader" />, который может использоваться для извлечения возвращенных строк.</returns>
      <exception cref="T:System.InvalidCastException">При присвоении <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> значения <see cref="T:System.IO.Stream" /> использовался тип <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />, отличный от Binary или VarBinary. Дополнительные сведения о потоковой передаче см. в разделе Поддержка потоковой передачи SqlClient.  
При присвоении <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> значения <see cref="T:System.IO.TextReader" /> использовался тип <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />, отличный от Char, NChar, NVarChar, VarChar или Xml.  
При присвоении <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> значения <see cref="T:System.Xml.XmlReader" /> использовался тип <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />, отличный от Xml.</exception>
      <exception cref="T:System.Data.SqlClient.SqlException">Любая ошибка, произошедшая во время выполнения текста команды.  
Во время операции потоковой передачи истекло время ожидания. Дополнительные сведения о потоковой передаче см. в разделе Поддержка потоковой передачи SqlClient.</exception>
      <exception cref="T:System.InvalidOperationException">Пара имя — значение (Asynchronous Processing=true) не была указана в строке подключения, определяющей подключение для этого <see cref="T:System.Data.SqlClient.SqlComm*******" />.  
Подключение <see cref="T:System.Data.SqlClient.SqlConnection" />, закрытое или удаленное во время операции потоковой передачи. Дополнительные сведения о потоковой передаче см. в разделе Поддержка потоковой передачи SqlClient.</exception>
      <exception cref="T:System.IO.IOException">Во время операции потоковой передачи возникла ошибка в объекте <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> или <see cref="T:System.IO.TextReader" />.  Дополнительные сведения о потоковой передаче см. в разделе Поддержка потоковой передачи SqlClient.</exception>
      <exception cref="T:System.ObjectDisposedException">Объект <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> или <see cref="T:System.IO.TextReader" /> был закрыт во время операции потоковой передачи.  Дополнительные сведения о потоковой передаче см. в разделе Поддержка потоковой передачи SqlClient.</exception>
    </member>
    <member name="M:System.Data.SqlClient.SqlComm*******.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.Comm*******Behavior)">
      <summary>Инициирует асинхронное выполнение инструкции Transact-SQL или хранимой процедуры, определенной в данном объекте <see cref="T:System.Data.SqlClient.SqlComm*******" />, используя одно из значений <see langword="Comm*******Behavior" />, и получает от сервера один или более результирующих наборов; принимает процедуру обратного вызова и информацию о состоянии.</summary>
      <param name="callback">Делегат <see cref="T:System.AsyncCallback" />, вызываемый по завершении выполнения команды. Передайте значение <see langword="null" /> (<see langword="Nothing" /> в Microsoft Visual Basic), чтобы указать, что обратный вызов не требуется.</param>
      <param name="stateObject">Определяемый пользователем объект состояния, передаваемый процедуре обратного вызова. Извлечение этого объекта в процедуре обратного вызова осуществляется посредством свойства <see cref="P:System.IAsyncResult.AsyncState" />.</param>
      <param name="behavior">Одно из значений <see cref="T:System.Data.Comm*******Behavior" />, определяющее параметры выполнения инструкции и извлечения данных.</param>
      <returns>Объект <see cref="T:System.IAsyncResult" />, который может использоваться для запроса или ожидания результатов или для того и другого; это значение требуется также при вызове метода <see cref="M:System.Data.SqlClient.SqlComm*******.EndExecuteReader(System.IAsyncResult)" />, возвращающего экземпляр <see cref="T:System.Data.SqlClient.SqlDataReader" />, который может использоваться для извлечения возвращенных строк.</returns>
      <exception cref="T:System.InvalidCastException">При присвоении <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> значения <see cref="T:System.IO.Stream" /> использовался тип <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />, отличный от Binary или VarBinary. Дополнительные сведения о потоковой передаче см. в разделе Поддержка потоковой передачи SqlClient.  
При присвоении <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> значения <see cref="T:System.IO.TextReader" /> использовался тип <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />, отличный от Char, NChar, NVarChar, VarChar или Xml.  
При присвоении <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> значения <see cref="T:System.Xml.XmlReader" /> использовался тип <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />, отличный от Xml.</exception>
      <exception cref="T:System.Data.SqlClient.SqlException">Любая ошибка, произошедшая во время выполнения текста команды.  
Во время операции потоковой передачи истекло время ожидания. Дополнительные сведения о потоковой передаче см. в разделе Поддержка потоковой передачи SqlClient.</exception>
      <exception cref="T:System.InvalidOperationException">Пара имя — значение (Asynchronous Processing=true) не была указана в строке подключения, определяющей подключение для этого <see cref="T:System.Data.SqlClient.SqlComm*******" />.  
Подключение <see cref="T:System.Data.SqlClient.SqlConnection" />, закрытое или удаленное во время операции потоковой передачи. Дополнительные сведения о потоковой передаче см. в разделе Поддержка потоковой передачи SqlClient.</exception>
      <exception cref="T:System.IO.IOException">Во время операции потоковой передачи возникла ошибка в объекте <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> или <see cref="T:System.IO.TextReader" />.  Дополнительные сведения о потоковой передаче см. в разделе Поддержка потоковой передачи SqlClient.</exception>
      <exception cref="T:System.ObjectDisposedException">Объект <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> или <see cref="T:System.IO.TextReader" /> был закрыт во время операции потоковой передачи.  Дополнительные сведения о потоковой передаче см. в разделе Поддержка потоковой передачи SqlClient.</exception>
    </member>
    <member name="M:System.Data.SqlClient.SqlComm*******.BeginExecuteReader(System.Data.Comm*******Behavior)">
      <summary>Инициализирует асинхронное выполнение инструкции или хранимой процедуры Transact-SQL, описанной в данном объекте <see cref="T:System.Data.SqlClient.SqlComm*******" />, с использованием одного из значений <see cref="T:System.Data.Comm*******Behavior" />.</summary>
      <param name="behavior">Одно из значений <see cref="T:System.Data.Comm*******Behavior" />, определяющее параметры выполнения инструкции и извлечения данных.</param>
      <returns>Объект <see cref="T:System.IAsyncResult" />, который может использоваться для запроса или ожидания результатов или для того и другого. Это значение требуется также при вызове метода <see cref="M:System.Data.SqlClient.SqlComm*******.EndExecuteReader(System.IAsyncResult)" />, возвращающего экземпляр <see cref="T:System.Data.SqlClient.SqlDataReader" />, который может использоваться для извлечения возвращенных строк.</returns>
      <exception cref="T:System.InvalidCastException">При присвоении <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> значения <see cref="T:System.IO.Stream" /> использовался тип <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />, отличный от Binary или VarBinary. Дополнительные сведения о потоковой передаче см. в разделе Поддержка потоковой передачи SqlClient.  
При присвоении <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> значения <see cref="T:System.IO.TextReader" /> использовался тип <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />, отличный от Char, NChar, NVarChar, VarChar или Xml.  
При присвоении <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> значения <see cref="T:System.Xml.XmlReader" /> использовался тип <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />, отличный от Xml.</exception>
      <exception cref="T:System.Data.SqlClient.SqlException">Любая ошибка, произошедшая во время выполнения текста команды.  
Во время операции потоковой передачи истекло время ожидания. Дополнительные сведения о потоковой передаче см. в разделе Поддержка потоковой передачи SqlClient.</exception>
      <exception cref="T:System.InvalidOperationException">Пара имя — значение (Asynchronous Processing=true) не была указана в строке подключения, определяющей подключение для этого <see cref="T:System.Data.SqlClient.SqlComm*******" />.  
Подключение <see cref="T:System.Data.SqlClient.SqlConnection" />, закрытое или удаленное во время операции потоковой передачи. Дополнительные сведения о потоковой передаче см. в разделе Поддержка потоковой передачи SqlClient.</exception>
      <exception cref="T:System.IO.IOException">Во время операции потоковой передачи возникла ошибка в объекте <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> или <see cref="T:System.IO.TextReader" />.  Дополнительные сведения о потоковой передаче см. в разделе Поддержка потоковой передачи SqlClient.</exception>
      <exception cref="T:System.ObjectDisposedException">Объект <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> или <see cref="T:System.IO.TextReader" /> был закрыт во время операции потоковой передачи.  Дополнительные сведения о потоковой передаче см. в разделе Поддержка потоковой передачи SqlClient.</exception>
    </member>
    <member name="M:System.Data.SqlClient.SqlComm*******.BeginExecuteXmlReader">
      <summary>Инициирует асинхронное выполнение инструкции Transact-SQL или хранимой процедуры, определенной в данном объекте <see cref="T:System.Data.SqlClient.SqlComm*******" />, и возвращает результаты в виде объекта <see cref="T:System.Xml.XmlReader" />.</summary>
      <returns>Объект <see cref="T:System.IAsyncResult" />, который может использоваться для запроса или ожидания результатов или для того и другого; это значение требуется также при вызове метода <see langword="EndExecuteXmlReader" />, возвращающего одно XML-значение.</returns>
      <exception cref="T:System.InvalidCastException">При присвоении <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> значения <see cref="T:System.IO.Stream" /> использовался тип <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />, отличный от Binary или VarBinary. Дополнительные сведения о потоковой передаче см. в разделе Поддержка потоковой передачи SqlClient.  
При присвоении <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> значения <see cref="T:System.IO.TextReader" /> использовался тип <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />, отличный от Char, NChar, NVarChar, VarChar или Xml.  
При присвоении <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> значения <see cref="T:System.Xml.XmlReader" /> использовался тип <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />, отличный от Xml.</exception>
      <exception cref="T:System.Data.SqlClient.SqlException">Любая ошибка, произошедшая во время выполнения текста команды.  
Во время операции потоковой передачи истекло время ожидания. Дополнительные сведения о потоковой передаче см. в разделе Поддержка потоковой передачи SqlClient.</exception>
      <exception cref="T:System.InvalidOperationException">Пара имя — значение (Asynchronous Processing=true) не была указана в строке подключения, определяющей подключение для этого <see cref="T:System.Data.SqlClient.SqlComm*******" />.  
Подключение <see cref="T:System.Data.SqlClient.SqlConnection" />, закрытое или удаленное во время операции потоковой передачи. Дополнительные сведения о потоковой передаче см. в разделе Поддержка потоковой передачи SqlClient.</exception>
      <exception cref="T:System.IO.IOException">Во время операции потоковой передачи возникла ошибка в объекте <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> или <see cref="T:System.IO.TextReader" />.  Дополнительные сведения о потоковой передаче см. в разделе Поддержка потоковой передачи SqlClient.</exception>
      <exception cref="T:System.ObjectDisposedException">Объект <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> или <see cref="T:System.IO.TextReader" /> был закрыт во время операции потоковой передачи.  Дополнительные сведения о потоковой передаче см. в разделе Поддержка потоковой передачи SqlClient.</exception>
    </member>
    <member name="M:System.Data.SqlClient.SqlComm*******.BeginExecuteXmlReader(System.AsyncCallback,System.Object)">
      <summary>Инициирует асинхронное выполнение инструкции Transact-SQL или хранимой процедуры, определенной в данном объекте <see cref="T:System.Data.SqlClient.SqlComm*******" />, и возвращает результаты в виде объекта <see cref="T:System.Xml.XmlReader" />, используя процедуру обратного вызова.</summary>
      <param name="callback">Делегат <see cref="T:System.AsyncCallback" />, вызываемый по завершении выполнения команды. Передайте значение <see langword="null" /> (<see langword="Nothing" /> в Microsoft Visual Basic), чтобы указать, что обратный вызов не требуется.</param>
      <param name="stateObject">Определяемый пользователем объект состояния, передаваемый процедуре обратного вызова. Извлечение этого объекта в процедуре обратного вызова осуществляется посредством свойства <see cref="P:System.IAsyncResult.AsyncState" />.</param>
      <returns>Объект <see cref="T:System.IAsyncResult" />, который может использоваться для запроса или ожидания результатов или для того и другого; это значение требуется также при вызове метода <see cref="M:System.Data.SqlClient.SqlComm*******.EndExecuteXmlReader(System.IAsyncResult)" />, возвращающего результаты выполнения команды в виде XML.</returns>
      <exception cref="T:System.InvalidCastException">При присвоении <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> значения <see cref="T:System.IO.Stream" /> использовался тип <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />, отличный от Binary или VarBinary. Дополнительные сведения о потоковой передаче см. в разделе Поддержка потоковой передачи SqlClient.  
При присвоении <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> значения <see cref="T:System.IO.TextReader" /> использовался тип <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />, отличный от Char, NChar, NVarChar, VarChar или Xml.  
При присвоении <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> значения <see cref="T:System.Xml.XmlReader" /> использовался тип <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />, отличный от Xml.</exception>
      <exception cref="T:System.Data.SqlClient.SqlException">Любая ошибка, произошедшая во время выполнения текста команды.  
Во время операции потоковой передачи истекло время ожидания. Дополнительные сведения о потоковой передаче см. в разделе Поддержка потоковой передачи SqlClient.</exception>
      <exception cref="T:System.InvalidOperationException">Пара имя — значение (Asynchronous Processing=true) не была указана в строке подключения, определяющей подключение для этого <see cref="T:System.Data.SqlClient.SqlComm*******" />.  
Подключение <see cref="T:System.Data.SqlClient.SqlConnection" />, закрытое или удаленное во время операции потоковой передачи. Дополнительные сведения о потоковой передаче см. в разделе Поддержка потоковой передачи SqlClient.</exception>
      <exception cref="T:System.IO.IOException">Во время операции потоковой передачи возникла ошибка в объекте <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> или <see cref="T:System.IO.TextReader" />.  Дополнительные сведения о потоковой передаче см. в разделе Поддержка потоковой передачи SqlClient.</exception>
      <exception cref="T:System.ObjectDisposedException">Объект <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> или <see cref="T:System.IO.TextReader" /> был закрыт во время операции потоковой передачи.  Дополнительные сведения о потоковой передаче см. в разделе Поддержка потоковой передачи SqlClient.</exception>
    </member>
    <member name="M:System.Data.SqlClient.SqlComm*******.Cancel">
      <summary>Пытается отменить выполнение <see cref="T:System.Data.SqlClient.SqlComm*******" />.</summary>
    </member>
    <member name="M:System.Data.SqlClient.SqlComm*******.Clone">
      <summary>Создает новый объект <see cref="T:System.Data.SqlClient.SqlComm*******" />, являющийся копией текущего экземпляра.</summary>
      <returns>Новый объект <see cref="T:System.Data.SqlClient.SqlComm*******" />, являющийся копией этого экземпляра.</returns>
    </member>
    <member name="P:System.Data.SqlClient.SqlComm*******.ColumnEncryptionSetting">
      <summary>Возвращает или задает параметр шифрования столбца для этой команды.</summary>
      <returns>Параметр шифрования столбца для этой команды.</returns>
    </member>
    <member name="P:System.Data.SqlClient.SqlComm*******.Comm*******Text">
      <summary>Возвращает или задает инструкцию Transact-SQL, имя таблицы или хранимую процедуру, выполняемую для источника данных.</summary>
      <returns>Выполняемые инструкция Transact-SQL или хранимая процедура. Значение по умолчанию - пустая строка.</returns>
    </member>
    <member name="P:System.Data.SqlClient.SqlComm*******.Comm*******Timeout">
      <summary>Возвращает или задает время ожидания перед завершением попытки выполнить команду и созданием ошибки.</summary>
      <returns>Время в секундах, в течение которого должно происходить ожидание выполнения команды. По умолчанию используется значение 30 секунд.</returns>
    </member>
    <member name="P:System.Data.SqlClient.SqlComm*******.Comm*******Type">
      <summary>Возвращает или задает значение, определяющее, как будет интерпретироваться свойство <see cref="P:System.Data.SqlClient.SqlComm*******.Comm*******Text" />.</summary>
      <returns>Одно из значений <see cref="T:System.Data.Comm*******Type" />. Значение по умолчанию — <see langword="Text" />.</returns>
      <exception cref="T:System.ArgumentException">Значение не является допустимым объектом <see cref="T:System.Data.Comm*******Type" />.</exception>
    </member>
    <member name="P:System.Data.SqlClient.SqlComm*******.Connection">
      <summary>Возвращает или задает объект <see cref="T:System.Data.SqlClient.SqlConnection" />, используемый этим экземпляром класса <see cref="T:System.Data.SqlClient.SqlComm*******" />.</summary>
      <returns>Подключение к источнику данных. Значение по умолчанию — <see langword="null" />.</returns>
      <exception cref="T:System.InvalidOperationException">Свойство <see cref="P:System.Data.SqlClient.SqlComm*******.Connection" /> было изменено во время включения команды в список транзакции.</exception>
    </member>
    <member name="M:System.Data.SqlClient.SqlComm*******.CreateParameter">
      <summary>Создает новый экземпляр объекта <see cref="T:System.Data.SqlClient.SqlParameter" />.</summary>
      <returns>Объект <see cref="T:System.Data.SqlClient.SqlParameter" />.</returns>
    </member>
    <member name="P:System.Data.SqlClient.SqlComm*******.DesignTimeVisible">
      <summary>Возвращает или задает значение, указывающее, будет ли объект команды видимым в элементе управления Windows Forms Designer.</summary>
      <returns>Значение, указывающее, будет ли объект команды видимым в элементе управления. Значение по умолчанию — <see langword="true" />.</returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlComm*******.EndExecuteNonQuery(System.IAsyncResult)">
      <summary>Завершает асинхронное выполнение инструкции Transact-SQL.</summary>
      <param name="asyncResult">Объект <see cref="T:System.IAsyncResult" />, возвращенный из вызова <see cref="M:System.Data.SqlClient.SqlComm*******.BeginExecuteNonQuery" />.</param>
      <returns>Количество задействованных строк (аналогично <see cref="M:System.Data.SqlClient.SqlComm*******.ExecuteNonQuery" />).</returns>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="asyncResult" /> имеет значение NULL (<see langword="Nothing" /> в Microsoft Visual Basic).</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Data.SqlClient.SqlComm*******.EndExecuteNonQuery(System.IAsyncResult)" /> вызывался более одного раза для одиночного выполнения команды, или неправильно подобран метод для его метода выполнения (например, код вызвал <see cref="M:System.Data.SqlClient.SqlComm*******.EndExecuteNonQuery(System.IAsyncResult)" /> для завершения выполнения вызова в <see cref="M:System.Data.SqlClient.SqlComm*******.BeginExecuteXmlReader" />.</exception>
      <exception cref="T:System.Data.SqlClient.SqlException">Время, указанное в <see cref="P:System.Data.SqlClient.SqlComm*******.Comm*******Timeout" />, истекло, а асинхронная операция, указанная с <see cref="Overload:System.Data.SqlClient.SqlComm*******.BeginExecuteNonQuery" />, не завершена.  
В некоторых ситуациях для <see cref="T:System.IAsyncResult" /> может быть ошибочно задано значение <see langword="IsCompleted" />. Если это произошло и вызывается <see cref="M:System.Data.SqlClient.SqlComm*******.EndExecuteNonQuery(System.IAsyncResult)" />, метод EndExecuteNonQuery может вызвать ошибку SqlException, если время, указанное в <see cref="P:System.Data.SqlClient.SqlComm*******.Comm*******Timeout" />, истекло, а асинхронная операция, указанная с <see cref="Overload:System.Data.SqlClient.SqlComm*******.BeginExecuteNonQuery" />, не завершена. Чтобы исправить эту ситуацию, следует увеличить значение Comm*******Timeout или уменьшить объем обработки, выполняемой асинхронной операцией.</exception>
    </member>
    <member name="M:System.Data.SqlClient.SqlComm*******.EndExecuteReader(System.IAsyncResult)">
      <summary>Завершает асинхронное выполнение инструкции Transact-SQL, возвращающей запрошенный <see cref="T:System.Data.SqlClient.SqlDataReader" />.</summary>
      <param name="asyncResult">Объект <see cref="T:System.IAsyncResult" />, возвращенный из вызова <see cref="M:System.Data.SqlClient.SqlComm*******.BeginExecuteReader" />.</param>
      <returns>Объект <see cref="T:System.Data.SqlClient.SqlDataReader" />, который может использоваться для извлечения запрошенных строк.</returns>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="asyncResult" /> имеет значение NULL (<see langword="Nothing" /> в Microsoft Visual Basic).</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Data.SqlClient.SqlComm*******.EndExecuteReader(System.IAsyncResult)" /> вызывался более одного раза для одиночного выполнения команды, или неправильно подобран метод для его метода выполнения (например, код вызвал <see cref="M:System.Data.SqlClient.SqlComm*******.EndExecuteReader(System.IAsyncResult)" /> для завершения выполнения вызова в <see cref="M:System.Data.SqlClient.SqlComm*******.BeginExecuteXmlReader" />).</exception>
    </member>
    <member name="M:System.Data.SqlClient.SqlComm*******.EndExecuteXmlReader(System.IAsyncResult)">
      <summary>Завершает асинхронное выполнение инструкции Transact-SQL, возвращающей запрошенные данные в виде XML.</summary>
      <param name="asyncResult">Объект <see cref="T:System.IAsyncResult" />, возвращенный из вызова <see cref="M:System.Data.SqlClient.SqlComm*******.BeginExecuteXmlReader" />.</param>
      <returns>Объект <see cref="T:System.Xml.XmlReader" />, который может использоваться для получения получившихся XML-данных.</returns>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="asyncResult" /> имеет значение NULL (<see langword="Nothing" /> в Microsoft Visual Basic).</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Data.SqlClient.SqlComm*******.EndExecuteXmlReader(System.IAsyncResult)" /> вызывался более одного раза для одиночного выполнения команды, или неправильно подобран метод для его метода выполнения (например, код вызвал <see cref="M:System.Data.SqlClient.SqlComm*******.EndExecuteXmlReader(System.IAsyncResult)" /> для завершения выполнения вызова в <see cref="M:System.Data.SqlClient.SqlComm*******.BeginExecuteNonQuery" />).</exception>
    </member>
    <member name="M:System.Data.SqlClient.SqlComm*******.ExecuteNonQuery">
      <summary>Выполняет для подключения инструкцию Transact-SQL и возвращает количество задействованных в инструкции строк.</summary>
      <returns>Число обработанных строк.</returns>
      <exception cref="T:System.InvalidCastException">При присвоении <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> значения <see cref="T:System.IO.Stream" /> использовался тип <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />, отличный от Binary или VarBinary. Дополнительные сведения о потоковой передаче см. в разделе Поддержка потоковой передачи SqlClient.  
При присвоении <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> значения <see cref="T:System.IO.TextReader" /> использовался тип <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />, отличный от Char, NChar, NVarChar, VarChar или Xml.  
При присвоении <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> значения <see cref="T:System.Xml.XmlReader" /> использовался тип <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />, отличный от Xml.</exception>
      <exception cref="T:System.Data.SqlClient.SqlException">Возникло исключение при выполнении команды в заблокированной строке. Это исключение не создается при использовании платформы Microsoft .NET Framework версии 1.0.  
Во время операции потоковой передачи истекло время ожидания. Дополнительные сведения о потоковой передаче см. в разделе Поддержка потоковой передачи SqlClient.</exception>
      <exception cref="T:System.IO.IOException">Во время операции потоковой передачи возникла ошибка в объекте <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> или <see cref="T:System.IO.TextReader" />.  Дополнительные сведения о потоковой передаче см. в разделе Поддержка потоковой передачи SqlClient.</exception>
      <exception cref="T:System.InvalidOperationException">Подключение <see cref="T:System.Data.SqlClient.SqlConnection" />, закрытое или удаленное во время операции потоковой передачи. Дополнительные сведения о потоковой передаче см. в разделе Поддержка потоковой передачи SqlClient.</exception>
      <exception cref="T:System.ObjectDisposedException">Объект <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> или <see cref="T:System.IO.TextReader" /> был закрыт во время операции потоковой передачи.  Дополнительные сведения о потоковой передаче см. в разделе Поддержка потоковой передачи SqlClient.</exception>
    </member>
    <member name="M:System.Data.SqlClient.SqlComm*******.ExecuteNonQueryAsync(System.Threading.CancellationToken)">
      <summary>Асинхронная версия <see cref="M:System.Data.SqlClient.SqlComm*******.ExecuteNonQuery" />, которая выполняет инструкцию Transact-SQL для подключения и возвращает количество затронутых строк. Токен отмены можно использовать для запроса отказа от операции до истечения времени ожидания команды.  Сведения об исключениях передаются в возвращенном объекте Task.</summary>
      <param name="cancellationToken">Инструкция отмены.</param>
      <returns>Задача, представляющая асинхронную операцию.</returns>
      <exception cref="T:System.InvalidCastException">При присвоении <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> значения <see cref="T:System.IO.Stream" /> использовался тип <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />, отличный от Binary или VarBinary. Дополнительные сведения о потоковой передаче см. в разделе Поддержка потоковой передачи SqlClient.  
При присвоении <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> значения <see cref="T:System.IO.TextReader" /> использовался тип <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />, отличный от Char, NChar, NVarChar, VarChar или Xml.  
При присвоении <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> значения <see cref="T:System.Xml.XmlReader" /> использовался тип <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />, отличный от Xml.</exception>
      <exception cref="T:System.InvalidOperationException">Вызов <see cref="M:System.Data.SqlClient.SqlComm*******.ExecuteNonQueryAsync(System.Threading.CancellationToken)" /> более одного раза для того же экземпляра до завершения задачи.  
Подключение <see cref="T:System.Data.SqlClient.SqlConnection" />, закрытое или удаленное во время операции потоковой передачи. Дополнительные сведения о потоковой передаче см. в разделе Поддержка потоковой передачи SqlClient.  
 <see langword="Context Connection=true" /> задается в строке подключения.</exception>
      <exception cref="T:System.Data.SqlClient.SqlException">SQL Server вернул ошибку во время выполнения текста команды.  
Во время операции потоковой передачи истекло время ожидания. Дополнительные сведения о потоковой передаче см. в разделе Поддержка потоковой передачи SqlClient.</exception>
      <exception cref="T:System.IO.IOException">Во время операции потоковой передачи возникла ошибка в объекте <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> или <see cref="T:System.IO.TextReader" />.  Дополнительные сведения о потоковой передаче см. в разделе Поддержка потоковой передачи SqlClient.</exception>
      <exception cref="T:System.ObjectDisposedException">Объект <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> или <see cref="T:System.IO.TextReader" /> был закрыт во время операции потоковой передачи.  Дополнительные сведения о потоковой передаче см. в разделе Поддержка потоковой передачи SqlClient.</exception>
    </member>
    <member name="M:System.Data.SqlClient.SqlComm*******.ExecuteReader">
      <summary>Отправляет <see cref="P:System.Data.SqlClient.SqlComm*******.Comm*******Text" /> в <see cref="P:System.Data.SqlClient.SqlComm*******.Connection" /> и строит <see cref="T:System.Data.SqlClient.SqlDataReader" />.</summary>
      <returns>Объект <see cref="T:System.Data.SqlClient.SqlDataReader" />.</returns>
      <exception cref="T:System.InvalidCastException">При присвоении <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> значения <see cref="T:System.IO.Stream" /> использовался тип <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />, отличный от Binary или VarBinary. Дополнительные сведения о потоковой передаче см. в разделе Поддержка потоковой передачи SqlClient.  
При присвоении <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> значения <see cref="T:System.IO.TextReader" /> использовался тип <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />, отличный от Char, NChar, NVarChar, VarChar или Xml.  
При присвоении <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> значения <see cref="T:System.Xml.XmlReader" /> использовался тип <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />, отличный от Xml.</exception>
      <exception cref="T:System.Data.SqlClient.SqlException">Возникло исключение при выполнении команды в заблокированной строке. Это исключение не создается при использовании платформы Microsoft .NET Framework версии 1.0.  
Во время операции потоковой передачи истекло время ожидания. Дополнительные сведения о потоковой передаче см. в разделе Поддержка потоковой передачи SqlClient.</exception>
      <exception cref="T:System.InvalidOperationException">Подключение закрыто. Для <see cref="M:System.Data.SqlClient.SqlComm*******.ExecuteReader" /> требуется открытое подключение <see cref="T:System.Data.SqlClient.SqlConnection" />.  
Подключение <see cref="T:System.Data.SqlClient.SqlConnection" />, закрытое или удаленное во время операции потоковой передачи. Дополнительные сведения о потоковой передаче см. в разделе Поддержка потоковой передачи SqlClient.</exception>
      <exception cref="T:System.IO.IOException">Во время операции потоковой передачи возникла ошибка в объекте <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> или <see cref="T:System.IO.TextReader" />.  Дополнительные сведения о потоковой передаче см. в разделе Поддержка потоковой передачи SqlClient.</exception>
      <exception cref="T:System.ObjectDisposedException">Объект <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> или <see cref="T:System.IO.TextReader" /> был закрыт во время операции потоковой передачи.  Дополнительные сведения о потоковой передаче см. в разделе Поддержка потоковой передачи SqlClient.</exception>
    </member>
    <member name="M:System.Data.SqlClient.SqlComm*******.ExecuteReader(System.Data.Comm*******Behavior)">
      <summary>Отправляет <see cref="P:System.Data.SqlClient.SqlComm*******.Comm*******Text" /> в <see cref="P:System.Data.SqlClient.SqlComm*******.Connection" /> и формирует <see cref="T:System.Data.SqlClient.SqlDataReader" /> с помощью одного из значений <see cref="T:System.Data.Comm*******Behavior" />.</summary>
      <param name="behavior">Одно из значений <see cref="T:System.Data.Comm*******Behavior" />.</param>
      <returns>Объект <see cref="T:System.Data.SqlClient.SqlDataReader" />.</returns>
      <exception cref="T:System.InvalidCastException">При присвоении <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> значения <see cref="T:System.IO.Stream" /> использовался тип <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />, отличный от Binary или VarBinary. Дополнительные сведения о потоковой передаче см. в разделе Поддержка потоковой передачи SqlClient.  
При присвоении <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> значения <see cref="T:System.IO.TextReader" /> использовался тип <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />, отличный от Char, NChar, NVarChar, VarChar или Xml.  
При присвоении <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> значения <see cref="T:System.Xml.XmlReader" /> использовался тип <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />, отличный от Xml.</exception>
      <exception cref="T:System.Data.SqlClient.SqlException">Во время операции потоковой передачи истекло время ожидания. Дополнительные сведения о потоковой передаче см. в разделе Поддержка потоковой передачи SqlClient.</exception>
      <exception cref="T:System.IO.IOException">Во время операции потоковой передачи возникла ошибка в объекте <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> или <see cref="T:System.IO.TextReader" />.  Дополнительные сведения о потоковой передаче см. в разделе Поддержка потоковой передачи SqlClient.</exception>
      <exception cref="T:System.InvalidOperationException">Подключение <see cref="T:System.Data.SqlClient.SqlConnection" />, закрытое или удаленное во время операции потоковой передачи. Дополнительные сведения о потоковой передаче см. в разделе Поддержка потоковой передачи SqlClient.</exception>
      <exception cref="T:System.ObjectDisposedException">Объект <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> или <see cref="T:System.IO.TextReader" /> был закрыт во время операции потоковой передачи.  Дополнительные сведения о потоковой передаче см. в разделе Поддержка потоковой передачи SqlClient.</exception>
    </member>
    <member name="M:System.Data.SqlClient.SqlComm*******.ExecuteReaderAsync">
      <summary>Асинхронная версия <see cref="M:System.Data.SqlClient.SqlComm*******.ExecuteReader" />, которая отправляет <see cref="P:System.Data.SqlClient.SqlComm*******.Comm*******Text" /> в <see cref="P:System.Data.SqlClient.SqlComm*******.Connection" /> и создает <see cref="T:System.Data.SqlClient.SqlDataReader" />. Сведения об исключениях передаются в возвращенном объекте Task.</summary>
      <returns>Задача, представляющая асинхронную операцию.</returns>
      <exception cref="T:System.InvalidCastException">При присвоении <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> значения <see cref="T:System.IO.Stream" /> использовался тип <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />, отличный от Binary или VarBinary. Дополнительные сведения о потоковой передаче см. в разделе Поддержка потоковой передачи SqlClient.  
При присвоении <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> значения <see cref="T:System.IO.TextReader" /> использовался тип <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />, отличный от Char, NChar, NVarChar, VarChar или Xml.  
При присвоении <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> значения <see cref="T:System.Xml.XmlReader" /> использовался тип <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />, отличный от Xml.</exception>
      <exception cref="T:System.ArgumentException">Недопустимое значение <see cref="T:System.Data.Comm*******Behavior" />.</exception>
      <exception cref="T:System.InvalidOperationException">Вызов <see cref="M:System.Data.SqlClient.SqlComm*******.ExecuteReaderAsync" /> более одного раза для того же экземпляра до завершения задачи.  
Подключение <see cref="T:System.Data.SqlClient.SqlConnection" />, закрытое или удаленное во время операции потоковой передачи. Дополнительные сведения о потоковой передаче см. в разделе Поддержка потоковой передачи SqlClient.  
 <see langword="Context Connection=true" /> задается в строке подключения.</exception>
      <exception cref="T:System.Data.SqlClient.SqlException">SQL Server вернул ошибку во время выполнения текста команды.  
Во время операции потоковой передачи истекло время ожидания. Дополнительные сведения о потоковой передаче см. в разделе Поддержка потоковой передачи SqlClient.</exception>
      <exception cref="T:System.IO.IOException">Во время операции потоковой передачи возникла ошибка в объекте <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> или <see cref="T:System.IO.TextReader" />.  Дополнительные сведения о потоковой передаче см. в разделе Поддержка потоковой передачи SqlClient.</exception>
      <exception cref="T:System.ObjectDisposedException">Объект <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> или <see cref="T:System.IO.TextReader" /> был закрыт во время операции потоковой передачи.  Дополнительные сведения о потоковой передаче см. в разделе Поддержка потоковой передачи SqlClient.</exception>
    </member>
    <member name="M:System.Data.SqlClient.SqlComm*******.ExecuteReaderAsync(System.Data.Comm*******Behavior)">
      <summary>Асинхронная версия <see cref="M:System.Data.SqlClient.SqlComm*******.ExecuteReader(System.Data.Comm*******Behavior)" />, которая отправляет <see cref="P:System.Data.SqlClient.SqlComm*******.Comm*******Text" /> в <see cref="P:System.Data.SqlClient.SqlComm*******.Connection" /> и создает <see cref="T:System.Data.SqlClient.SqlDataReader" />. Сведения об исключениях передаются в возвращенном объекте Task.</summary>
      <param name="behavior">Параметры для завершения инструкции и извлечения данных.  Если задано значение <see langword="Default" />, метод <see cref="M:System.Data.SqlClient.SqlDataReader.ReadAsync(System.Threading.CancellationToken)" /> считывает всю строку перед возвращением объекта Task.</param>
      <returns>Задача, представляющая асинхронную операцию.</returns>
      <exception cref="T:System.InvalidCastException">При присвоении <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> значения <see cref="T:System.IO.Stream" /> использовался тип <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />, отличный от Binary или VarBinary. Дополнительные сведения о потоковой передаче см. в разделе Поддержка потоковой передачи SqlClient.  
При присвоении <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> значения <see cref="T:System.IO.TextReader" /> использовался тип <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />, отличный от Char, NChar, NVarChar, VarChar или Xml.  
При присвоении <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> значения <see cref="T:System.Xml.XmlReader" /> использовался тип <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />, отличный от Xml.</exception>
      <exception cref="T:System.ArgumentException">Недопустимое значение <see cref="T:System.Data.Comm*******Behavior" />.</exception>
      <exception cref="T:System.InvalidOperationException">Вызов <see cref="M:System.Data.SqlClient.SqlComm*******.ExecuteReaderAsync(System.Data.Comm*******Behavior)" /> более одного раза для того же экземпляра до завершения задачи.  
Подключение <see cref="T:System.Data.SqlClient.SqlConnection" />, закрытое или удаленное во время операции потоковой передачи. Дополнительные сведения о потоковой передаче см. в разделе Поддержка потоковой передачи SqlClient.  
 <see langword="Context Connection=true" /> задается в строке подключения.</exception>
      <exception cref="T:System.Data.SqlClient.SqlException">SQL Server вернул ошибку во время выполнения текста команды.  
Во время операции потоковой передачи истекло время ожидания. Дополнительные сведения о потоковой передаче см. в разделе Поддержка потоковой передачи SqlClient.</exception>
      <exception cref="T:System.IO.IOException">Во время операции потоковой передачи возникла ошибка в объекте <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> или <see cref="T:System.IO.TextReader" />.  Дополнительные сведения о потоковой передаче см. в разделе Поддержка потоковой передачи SqlClient.</exception>
      <exception cref="T:System.ObjectDisposedException">Объект <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> или <see cref="T:System.IO.TextReader" /> был закрыт во время операции потоковой передачи.  Дополнительные сведения о потоковой передаче см. в разделе Поддержка потоковой передачи SqlClient.</exception>
    </member>
    <member name="M:System.Data.SqlClient.SqlComm*******.ExecuteReaderAsync(System.Data.Comm*******Behavior,System.Threading.CancellationToken)">
      <summary>Асинхронная версия <see cref="M:System.Data.SqlClient.SqlComm*******.ExecuteReader(System.Data.Comm*******Behavior)" />, которая отправляет <see cref="P:System.Data.SqlClient.SqlComm*******.Comm*******Text" /> в <see cref="P:System.Data.SqlClient.SqlComm*******.Connection" /> и создает <see cref="T:System.Data.SqlClient.SqlDataReader" />.  
Токен отмены можно использовать для запроса отказа от операции до истечения времени ожидания команды.  Сведения об исключениях передаются в возвращенном объекте Task.</summary>
      <param name="behavior">Параметры для завершения инструкции и извлечения данных.  Если задано значение <see langword="Default" />, метод <see cref="M:System.Data.SqlClient.SqlDataReader.ReadAsync(System.Threading.CancellationToken)" /> считывает всю строку перед возвращением выполненной задачи.</param>
      <param name="cancellationToken">Инструкция отмены.</param>
      <returns>Задача, представляющая асинхронную операцию.</returns>
      <exception cref="T:System.InvalidCastException">При присвоении <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> значения <see cref="T:System.IO.Stream" /> использовался тип <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />, отличный от Binary или VarBinary. Дополнительные сведения о потоковой передаче см. в разделе Поддержка потоковой передачи SqlClient.  
При присвоении <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> значения <see cref="T:System.IO.TextReader" /> использовался тип <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />, отличный от Char, NChar, NVarChar, VarChar или Xml.  
При присвоении <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> значения <see cref="T:System.Xml.XmlReader" /> использовался тип <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />, отличный от Xml.</exception>
      <exception cref="T:System.ArgumentException">Недопустимое значение <see cref="T:System.Data.Comm*******Behavior" />.</exception>
      <exception cref="T:System.InvalidOperationException">Вызов <see cref="M:System.Data.SqlClient.SqlComm*******.ExecuteReaderAsync(System.Data.Comm*******Behavior,System.Threading.CancellationToken)" /> более одного раза для того же экземпляра до завершения задачи.  
Подключение <see cref="T:System.Data.SqlClient.SqlConnection" />, закрытое или удаленное во время операции потоковой передачи. Дополнительные сведения о потоковой передаче см. в разделе Поддержка потоковой передачи SqlClient.  
 <see langword="Context Connection=true" /> задается в строке подключения.</exception>
      <exception cref="T:System.Data.SqlClient.SqlException">SQL Server вернул ошибку во время выполнения текста команды.  
Во время операции потоковой передачи истекло время ожидания. Дополнительные сведения о потоковой передаче см. в разделе Поддержка потоковой передачи SqlClient.</exception>
      <exception cref="T:System.IO.IOException">Во время операции потоковой передачи возникла ошибка в объекте <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> или <see cref="T:System.IO.TextReader" />.  Дополнительные сведения о потоковой передаче см. в разделе Поддержка потоковой передачи SqlClient.</exception>
      <exception cref="T:System.ObjectDisposedException">Объект <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> или <see cref="T:System.IO.TextReader" /> был закрыт во время операции потоковой передачи.  Дополнительные сведения о потоковой передаче см. в разделе Поддержка потоковой передачи SqlClient.</exception>
    </member>
    <member name="M:System.Data.SqlClient.SqlComm*******.ExecuteReaderAsync(System.Threading.CancellationToken)">
      <summary>Асинхронная версия <see cref="M:System.Data.SqlClient.SqlComm*******.ExecuteReader" />, которая отправляет <see cref="P:System.Data.SqlClient.SqlComm*******.Comm*******Text" /> в <see cref="P:System.Data.SqlClient.SqlComm*******.Connection" /> и создает <see cref="T:System.Data.SqlClient.SqlDataReader" />.  
Токен отмены можно использовать для запроса отказа от операции до истечения времени ожидания команды.  Сведения об исключениях передаются в возвращенном объекте Task.</summary>
      <param name="cancellationToken">Инструкция отмены.</param>
      <returns>Задача, представляющая асинхронную операцию.</returns>
      <exception cref="T:System.InvalidCastException">При присвоении <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> значения <see cref="T:System.IO.Stream" /> использовался тип <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />, отличный от Binary или VarBinary. Дополнительные сведения о потоковой передаче см. в разделе Поддержка потоковой передачи SqlClient.  
При присвоении <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> значения <see cref="T:System.IO.TextReader" /> использовался тип <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />, отличный от Char, NChar, NVarChar, VarChar или Xml.  
При присвоении <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> значения <see cref="T:System.Xml.XmlReader" /> использовался тип <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />, отличный от Xml.</exception>
      <exception cref="T:System.ArgumentException">Недопустимое значение <see cref="T:System.Data.Comm*******Behavior" />.</exception>
      <exception cref="T:System.InvalidOperationException">Вызов <see cref="M:System.Data.SqlClient.SqlComm*******.ExecuteReaderAsync(System.Data.Comm*******Behavior,System.Threading.CancellationToken)" /> более одного раза для того же экземпляра до завершения задачи.  
Подключение <see cref="T:System.Data.SqlClient.SqlConnection" />, закрытое или удаленное во время операции потоковой передачи. Дополнительные сведения о потоковой передаче см. в разделе Поддержка потоковой передачи SqlClient.  
 <see langword="Context Connection=true" /> задается в строке подключения.</exception>
      <exception cref="T:System.Data.SqlClient.SqlException">SQL Server вернул ошибку во время выполнения текста команды.  
Во время операции потоковой передачи истекло время ожидания. Дополнительные сведения о потоковой передаче см. в разделе Поддержка потоковой передачи SqlClient.</exception>
      <exception cref="T:System.IO.IOException">Во время операции потоковой передачи возникла ошибка в объекте <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> или <see cref="T:System.IO.TextReader" />.  Дополнительные сведения о потоковой передаче см. в разделе Поддержка потоковой передачи SqlClient.</exception>
      <exception cref="T:System.ObjectDisposedException">Объект <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> или <see cref="T:System.IO.TextReader" /> был закрыт во время операции потоковой передачи.  Дополнительные сведения о потоковой передаче см. в разделе Поддержка потоковой передачи SqlClient.</exception>
    </member>
    <member name="M:System.Data.SqlClient.SqlComm*******.ExecuteScalar">
      <summary>Выполняет запрос и возвращает первый столбец первой строки результирующего набора, возвращаемого запросом. Дополнительные столбцы или строки не обрабатываются.</summary>
      <returns>Первый столбец первой строки набора результатов или пустая ссылка (<see langword="Nothing" /> в Visual Basic), если набор результатов пуст. Возвращает не более 2033 символов.</returns>
      <exception cref="T:System.InvalidCastException">При присвоении <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> значения <see cref="T:System.IO.Stream" /> использовался тип <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />, отличный от Binary или VarBinary. Дополнительные сведения о потоковой передаче см. в разделе Поддержка потоковой передачи SqlClient.  
При присвоении <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> значения <see cref="T:System.IO.TextReader" /> использовался тип <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />, отличный от Char, NChar, NVarChar, VarChar или Xml.  
При присвоении <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> значения <see cref="T:System.Xml.XmlReader" /> использовался тип <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />, отличный от Xml.</exception>
      <exception cref="T:System.Data.SqlClient.SqlException">Возникло исключение при выполнении команды в заблокированной строке. Это исключение не создается при использовании платформы Microsoft .NET Framework версии 1.0.  
Во время операции потоковой передачи истекло время ожидания. Дополнительные сведения о потоковой передаче см. в разделе Поддержка потоковой передачи SqlClient.</exception>
      <exception cref="T:System.InvalidOperationException">Подключение <see cref="T:System.Data.SqlClient.SqlConnection" />, закрытое или удаленное во время операции потоковой передачи. Дополнительные сведения о потоковой передаче см. в разделе Поддержка потоковой передачи SqlClient.</exception>
      <exception cref="T:System.IO.IOException">Во время операции потоковой передачи возникла ошибка в объекте <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> или <see cref="T:System.IO.TextReader" />.  Дополнительные сведения о потоковой передаче см. в разделе Поддержка потоковой передачи SqlClient.</exception>
      <exception cref="T:System.ObjectDisposedException">Объект <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> или <see cref="T:System.IO.TextReader" /> был закрыт во время операции потоковой передачи.  Дополнительные сведения о потоковой передаче см. в разделе Поддержка потоковой передачи SqlClient.</exception>
    </member>
    <member name="M:System.Data.SqlClient.SqlComm*******.ExecuteScalarAsync(System.Threading.CancellationToken)">
      <summary>Асинхронная версия метода <see cref="M:System.Data.SqlClient.SqlComm*******.ExecuteScalar" />, которая выполняет запрос асинхронно и возвращает первый столбец первой строки в наборе результатов, возвращаемых запросом. Дополнительные столбцы или строки не обрабатываются.  
Токен отмены можно использовать для запроса отказа от операции до истечения времени ожидания команды. Сведения об исключениях передаются в возвращенном объекте Task.</summary>
      <param name="cancellationToken">Инструкция отмены.</param>
      <returns>Задача, представляющая асинхронную операцию.</returns>
      <exception cref="T:System.InvalidCastException">При присвоении <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> значения <see cref="T:System.IO.Stream" /> использовался тип <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />, отличный от Binary или VarBinary. Дополнительные сведения о потоковой передаче см. в разделе Поддержка потоковой передачи SqlClient.  
При присвоении <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> значения <see cref="T:System.IO.TextReader" /> использовался тип <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />, отличный от Char, NChar, NVarChar, VarChar или Xml.  
При присвоении <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> значения <see cref="T:System.Xml.XmlReader" /> использовался тип <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />, отличный от Xml.</exception>
      <exception cref="T:System.InvalidOperationException">Вызов <see cref="M:System.Data.SqlClient.SqlComm*******.ExecuteScalarAsync(System.Threading.CancellationToken)" /> более одного раза для того же экземпляра до завершения задачи.  
Подключение <see cref="T:System.Data.SqlClient.SqlConnection" />, закрытое или удаленное во время операции потоковой передачи. Дополнительные сведения о потоковой передаче см. в разделе Поддержка потоковой передачи SqlClient.  
 <see langword="Context Connection=true" /> задается в строке подключения.</exception>
      <exception cref="T:System.Data.SqlClient.SqlException">SQL Server вернул ошибку во время выполнения текста команды.  
Во время операции потоковой передачи истекло время ожидания. Дополнительные сведения о потоковой передаче см. в разделе Поддержка потоковой передачи SqlClient.</exception>
      <exception cref="T:System.IO.IOException">Во время операции потоковой передачи возникла ошибка в объекте <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> или <see cref="T:System.IO.TextReader" />.  Дополнительные сведения о потоковой передаче см. в разделе Поддержка потоковой передачи SqlClient.</exception>
      <exception cref="T:System.ObjectDisposedException">Объект <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> или <see cref="T:System.IO.TextReader" /> был закрыт во время операции потоковой передачи.  Дополнительные сведения о потоковой передаче см. в разделе Поддержка потоковой передачи SqlClient.</exception>
    </member>
    <member name="M:System.Data.SqlClient.SqlComm*******.ExecuteXmlReader">
      <summary>Отправляет <see cref="P:System.Data.SqlClient.SqlComm*******.Comm*******Text" /> в <see cref="P:System.Data.SqlClient.SqlComm*******.Connection" /> и строит объект <see cref="T:System.Xml.XmlReader" />.</summary>
      <returns>Объект <see cref="T:System.Xml.XmlReader" />.</returns>
      <exception cref="T:System.InvalidCastException">При присвоении <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> значения <see cref="T:System.IO.Stream" /> использовался тип <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />, отличный от Binary или VarBinary. Дополнительные сведения о потоковой передаче см. в разделе Поддержка потоковой передачи SqlClient.  
При присвоении <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> значения <see cref="T:System.IO.TextReader" /> использовался тип <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />, отличный от Char, NChar, NVarChar, VarChar или Xml.  
При присвоении <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> значения <see cref="T:System.Xml.XmlReader" /> использовался тип <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />, отличный от Xml.</exception>
      <exception cref="T:System.Data.SqlClient.SqlException">Возникло исключение при выполнении команды в заблокированной строке. Это исключение не создается при использовании платформы Microsoft .NET Framework версии 1.0.  
Во время операции потоковой передачи истекло время ожидания. Дополнительные сведения о потоковой передаче см. в разделе Поддержка потоковой передачи SqlClient.</exception>
      <exception cref="T:System.InvalidOperationException">Подключение <see cref="T:System.Data.SqlClient.SqlConnection" />, закрытое или удаленное во время операции потоковой передачи. Дополнительные сведения о потоковой передаче см. в разделе Поддержка потоковой передачи SqlClient.</exception>
      <exception cref="T:System.IO.IOException">Во время операции потоковой передачи возникла ошибка в объекте <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> или <see cref="T:System.IO.TextReader" />.  Дополнительные сведения о потоковой передаче см. в разделе Поддержка потоковой передачи SqlClient.</exception>
      <exception cref="T:System.ObjectDisposedException">Объект <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> или <see cref="T:System.IO.TextReader" /> был закрыт во время операции потоковой передачи.  Дополнительные сведения о потоковой передаче см. в разделе Поддержка потоковой передачи SqlClient.</exception>
    </member>
    <member name="M:System.Data.SqlClient.SqlComm*******.ExecuteXmlReaderAsync">
      <summary>Асинхронная версия <see cref="M:System.Data.SqlClient.SqlComm*******.ExecuteXmlReader" />, которая отправляет <see cref="P:System.Data.SqlClient.SqlComm*******.Comm*******Text" /> в <see cref="P:System.Data.SqlClient.SqlComm*******.Connection" /> и создает объект <see cref="T:System.Xml.XmlReader" />.  
Сведения об исключениях передаются в возвращенном объекте Task.</summary>
      <returns>Задача, представляющая асинхронную операцию.</returns>
      <exception cref="T:System.InvalidCastException">При присвоении <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> значения <see cref="T:System.IO.Stream" /> использовался тип <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />, отличный от Binary или VarBinary. Дополнительные сведения о потоковой передаче см. в разделе Поддержка потоковой передачи SqlClient.  
При присвоении <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> значения <see cref="T:System.IO.TextReader" /> использовался тип <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />, отличный от Char, NChar, NVarChar, VarChar или Xml.  
При присвоении <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> значения <see cref="T:System.Xml.XmlReader" /> использовался тип <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />, отличный от Xml.</exception>
      <exception cref="T:System.InvalidOperationException">Вызов <see cref="M:System.Data.SqlClient.SqlComm*******.ExecuteScalarAsync(System.Threading.CancellationToken)" /> более одного раза для того же экземпляра до завершения задачи.  
Подключение <see cref="T:System.Data.SqlClient.SqlConnection" />, закрытое или удаленное во время операции потоковой передачи. Дополнительные сведения о потоковой передаче см. в разделе Поддержка потоковой передачи SqlClient.  
 <see langword="Context Connection=true" /> задается в строке подключения.</exception>
      <exception cref="T:System.Data.SqlClient.SqlException">SQL Server вернул ошибку во время выполнения текста команды.  
Во время операции потоковой передачи истекло время ожидания. Дополнительные сведения о потоковой передаче см. в разделе Поддержка потоковой передачи SqlClient.</exception>
      <exception cref="T:System.IO.IOException">Во время операции потоковой передачи возникла ошибка в объекте <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> или <see cref="T:System.IO.TextReader" />.  Дополнительные сведения о потоковой передаче см. в разделе Поддержка потоковой передачи SqlClient.</exception>
      <exception cref="T:System.ObjectDisposedException">Объект <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> или <see cref="T:System.IO.TextReader" /> был закрыт во время операции потоковой передачи.  Дополнительные сведения о потоковой передаче см. в разделе Поддержка потоковой передачи SqlClient.</exception>
    </member>
    <member name="M:System.Data.SqlClient.SqlComm*******.ExecuteXmlReaderAsync(System.Threading.CancellationToken)">
      <summary>Асинхронная версия <see cref="M:System.Data.SqlClient.SqlComm*******.ExecuteXmlReader" />, которая отправляет <see cref="P:System.Data.SqlClient.SqlComm*******.Comm*******Text" /> в <see cref="P:System.Data.SqlClient.SqlComm*******.Connection" /> и создает объект <see cref="T:System.Xml.XmlReader" />.  
Токен отмены можно использовать для запроса отказа от операции до истечения времени ожидания команды.  Сведения об исключениях передаются в возвращенном объекте Task.</summary>
      <param name="cancellationToken">Инструкция отмены.</param>
      <returns>Задача, представляющая асинхронную операцию.</returns>
      <exception cref="T:System.InvalidCastException">При присвоении <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> значения <see cref="T:System.IO.Stream" /> использовался тип <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />, отличный от Binary или VarBinary. Дополнительные сведения о потоковой передаче см. в разделе Поддержка потоковой передачи SqlClient.  
При присвоении <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> значения <see cref="T:System.IO.TextReader" /> использовался тип <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />, отличный от Char, NChar, NVarChar, VarChar или Xml.  
При присвоении <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> значения <see cref="T:System.Xml.XmlReader" /> использовался тип <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />, отличный от Xml.</exception>
      <exception cref="T:System.InvalidOperationException">Вызов <see cref="M:System.Data.SqlClient.SqlComm*******.ExecuteScalarAsync(System.Threading.CancellationToken)" /> более одного раза для того же экземпляра до завершения задачи.  
Подключение <see cref="T:System.Data.SqlClient.SqlConnection" />, закрытое или удаленное во время операции потоковой передачи. Дополнительные сведения о потоковой передаче см. в разделе Поддержка потоковой передачи SqlClient.  
 <see langword="Context Connection=true" /> задается в строке подключения.</exception>
      <exception cref="T:System.Data.SqlClient.SqlException">SQL Server вернул ошибку во время выполнения текста команды.  
Во время операции потоковой передачи истекло время ожидания. Дополнительные сведения о потоковой передаче см. в разделе Поддержка потоковой передачи SqlClient.</exception>
      <exception cref="T:System.IO.IOException">Во время операции потоковой передачи возникла ошибка в объекте <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> или <see cref="T:System.IO.TextReader" />.  Дополнительные сведения о потоковой передаче см. в разделе Поддержка потоковой передачи SqlClient.</exception>
      <exception cref="T:System.ObjectDisposedException">Объект <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> или <see cref="T:System.IO.TextReader" /> был закрыт во время операции потоковой передачи.  Дополнительные сведения о потоковой передаче см. в разделе Поддержка потоковой передачи SqlClient.</exception>
    </member>
    <member name="P:System.Data.SqlClient.SqlComm*******.Notification">
      <summary>Получает или задает значение, указывающее объект <see cref="T:System.Data.Sql.SqlNotificationRequest" />, связанный с данной командой.</summary>
      <returns>При задании значения null (по умолчанию) уведомления запрашивать не следует.</returns>
    </member>
    <member name="P:System.Data.SqlClient.SqlComm*******.NotificationAutoEnlist">
      <summary>Возвращает или задает значение, указывающее, должно ли приложение автоматически получать уведомления о запросах от общего объекта <see cref="T:System.Data.SqlClient.SqlDependency" />.</summary>
      <returns>
        <see langword="true" /> Если приложение должно автоматически получать уведомления о запросах. в противном случае <see langword="false" />. Значение по умолчанию — <see langword="true" />.</returns>
    </member>
    <member name="P:System.Data.SqlClient.SqlComm*******.Parameters">
      <summary>Возвращает набор <see cref="T:System.Data.SqlClient.SqlParameterCollection" />.</summary>
      <returns>Параметры инструкции Transact-SQL или хранимой процедуры. По умолчанию является пустой коллекцией.</returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlComm*******.Prepare">
      <summary>Создает подготовленную версию команды на экземпляре SQL Server.</summary>
    </member>
    <member name="M:System.Data.SqlClient.SqlComm*******.ResetComm*******Timeout">
      <summary>Восстанавливает значение по умолчанию свойства <see cref="P:System.Data.SqlClient.SqlComm*******.Comm*******Timeout" />.</summary>
    </member>
    <member name="E:System.Data.SqlClient.SqlComm*******.StatementCompleted">
      <summary>Генерируется по завершении выполнения инструкции Transact-SQL.</summary>
    </member>
    <member name="M:System.Data.SqlClient.SqlComm*******.System#ICloneable#Clone">
      <summary>Создает новый объект <see cref="T:System.Data.SqlClient.SqlComm*******" />, являющийся копией текущего экземпляра.</summary>
      <returns>Новый объект <see cref="T:System.Data.SqlClient.SqlComm*******" />, являющийся копией этого экземпляра.</returns>
    </member>
    <member name="P:System.Data.SqlClient.SqlComm*******.Transaction">
      <summary>Возвращает или задает транзакцию <see cref="T:System.Data.SqlClient.SqlTransaction" />, в которой выполняется команда <see cref="T:System.Data.SqlClient.SqlComm*******" />.</summary>
      <returns>
        <see cref="T:System.Data.SqlClient.SqlTransaction" />. Значение по умолчанию — <see langword="null" />.</returns>
    </member>
    <member name="P:System.Data.SqlClient.SqlComm*******.UpdatedRowSource">
      <summary>Возвращает или задает способ применения результатов команды к объекту <see cref="T:System.Data.DataRow" /> при использовании метода Update объекта <see cref="T:System.Data.Common.DbDataAdapter" />.</summary>
      <returns>Одно из значений <see cref="T:System.Data.UpdateRowSource" />.</returns>
    </member>
    <member name="T:System.Data.SqlClient.SqlComm*******Builder">
      <summary>Автоматически создает однотабличные команды, используемые для согласования изменений, внесенных в <see cref="T:System.Data.DataSet" />, со связанной базой данных SQL Server. Этот класс не наследуется.</summary>
    </member>
    <member name="M:System.Data.SqlClient.SqlComm*******Builder.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.SqlClient.SqlComm*******Builder" />.</summary>
    </member>
    <member name="M:System.Data.SqlClient.SqlComm*******Builder.#ctor(System.Data.SqlClient.SqlDataAdapter)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.SqlClient.SqlComm*******Builder" /> вместе со связанным объектом <see cref="T:System.Data.SqlClient.SqlDataAdapter" />.</summary>
      <param name="adapter">Имя <see cref="T:System.Data.SqlClient.SqlDataAdapter" />.</param>
    </member>
    <member name="P:System.Data.SqlClient.SqlComm*******Builder.CatalogLocation">
      <summary>Возвращает или задает <see cref="T:System.Data.Common.CatalogLocation" /> для экземпляра класса <see cref="T:System.Data.SqlClient.SqlComm*******Builder" />.</summary>
      <returns>Объект <see cref="T:System.Data.Common.CatalogLocation" />.</returns>
    </member>
    <member name="P:System.Data.SqlClient.SqlComm*******Builder.CatalogSeparator">
      <summary>Возвращает или задает строку, которую можно использовать в качестве разделителя каталогов, для экземпляра класса <see cref="T:System.Data.SqlClient.SqlComm*******Builder" />.</summary>
      <returns>Строка, указывающая разделитель каталогов, который используется в экземпляре класса <see cref="T:System.Data.SqlClient.SqlComm*******Builder" />.</returns>
    </member>
    <member name="P:System.Data.SqlClient.SqlComm*******Builder.DataAdapter">
      <summary>Возвращает или задает объект <see cref="T:System.Data.SqlClient.SqlDataAdapter" />, для которого автоматически создаются инструкции Transact-SQL.</summary>
      <returns>Объект <see cref="T:System.Data.SqlClient.SqlDataAdapter" />.</returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlComm*******Builder.DeriveParameters(System.Data.SqlClient.SqlComm*******)">
      <summary>Извлекает сведения о параметрах из хранимой процедуры, указанной в объекте <see cref="T:System.Data.SqlClient.SqlComm*******" />, и включает их в коллекцию параметров <see cref="P:System.Data.SqlClient.SqlComm*******.Parameters" /> указанного объекта <see cref="T:System.Data.SqlClient.SqlComm*******" />.</summary>
      <param name="comm*******">Объект <see cref="T:System.Data.SqlClient.SqlComm*******" /> ссылается на хранимую процедуру, из которой необходимо извлечь сведения о параметрах. Извлеченные параметры добавляются в коллекцию параметров <see cref="P:System.Data.SqlClient.SqlComm*******.Parameters" /> объекта <see cref="T:System.Data.SqlClient.SqlComm*******" />.</param>
      <exception cref="T:System.InvalidOperationException">Текст команды не является допустимым именем хранимой процедуры.</exception>
    </member>
    <member name="M:System.Data.SqlClient.SqlComm*******Builder.GetDeleteComm*******">
      <summary>Получает автоматически созданный объект <see cref="T:System.Data.SqlClient.SqlComm*******" />, который требуется для выполнения операций удаления в базе данных.</summary>
      <returns>Автоматически созданный объект <see cref="T:System.Data.SqlClient.SqlComm*******" />, необходимый для выполнения операций удаления.</returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlComm*******Builder.GetDeleteComm*******(System.Boolean)">
      <summary>Получает автоматически созданный объект <see cref="T:System.Data.SqlClient.SqlComm*******" />, который требуется для выполнения операций удаления в базе данных.</summary>
      <param name="useColumnsForParameterNames">Если значением является <see langword="true" />, создаются имена параметров, совпадающие с именами столбцов, если это возможно. Если значение равно <see langword="false" />, создаются @p1, @p2 и т. д.</param>
      <returns>Автоматически созданный объект <see cref="T:System.Data.SqlClient.SqlComm*******" /> позволяет выполнять операции удаления.</returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlComm*******Builder.GetInsertComm*******">
      <summary>Получает автоматически созданный объект <see cref="T:System.Data.SqlClient.SqlComm*******" />, который требуется для выполнения операций вставки в базу данных.</summary>
      <returns>Автоматически созданный объект <see cref="T:System.Data.SqlClient.SqlComm*******" />, необходимый для выполнения операций вставки.</returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlComm*******Builder.GetInsertComm*******(System.Boolean)">
      <summary>Получает автоматически созданный объект <see cref="T:System.Data.SqlClient.SqlComm*******" />, который требуется для выполнения операций вставки в базе данных.</summary>
      <param name="useColumnsForParameterNames">Если значением является <see langword="true" />, создаются имена параметров, совпадающие с именами столбцов, если это возможно. Если значение равно <see langword="false" />, создаются @p1, @p2 и т. д.</param>
      <returns>Автоматически созданный объект <see cref="T:System.Data.SqlClient.SqlComm*******" />, необходимый для выполнения операции вставки.</returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlComm*******Builder.GetUpdateComm*******">
      <summary>Получает автоматически созданный объект <see cref="T:System.Data.SqlClient.SqlComm*******" />, который требуется для выполнения обновлений базы данных.</summary>
      <returns>Автоматически созданный объект <see cref="T:System.Data.SqlClient.SqlComm*******" />, необходимый для выполнения операции обновления.</returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlComm*******Builder.GetUpdateComm*******(System.Boolean)">
      <summary>Получает автоматически созданный объект <see cref="T:System.Data.SqlClient.SqlComm*******" />, который требуется для выполнения обновлений базы данных.</summary>
      <param name="useColumnsForParameterNames">Если значением является <see langword="true" />, создаются имена параметров, совпадающие с именами столбцов, если это возможно. Если значение равно <see langword="false" />, создаются @p1, @p2 и т. д.</param>
      <returns>Автоматически созданный объект <see cref="T:System.Data.SqlClient.SqlComm*******" />, необходимый для выполнения операций обновления.</returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlComm*******Builder.QuoteIdentifier(System.String)">
      <summary>При заданном идентификаторе без кавычек в каталоге, набранном в правильном регистре, возвращает заключенный в кавычки идентификатор в корректной форме. При этом корректно исключаются встроенные в идентификатор кавычки.</summary>
      <param name="unquotedIdentifier">Исходный идентификатор без кавычек.</param>
      <returns>Версия идентификатора, заключенного кавычки. Кавычки, внедренные в идентификатор, корректно исключаются.</returns>
    </member>
    <member name="P:System.Data.SqlClient.SqlComm*******Builder.QuotePrefix">
      <summary>Получает или задает начальный символ или символы, используемые для указания объектов базы данных SQL Server (например, таблиц или столбцов), имена которых содержат такие символы, как пробелы или зарезервированные токены.</summary>
      <returns>Используемый начальный символ или символы. Значение по умолчанию - пустая строка.</returns>
      <exception cref="T:System.InvalidOperationException">Это свойство не может быть изменено после создания команды INSERT, UPDATE или DELETE.</exception>
    </member>
    <member name="P:System.Data.SqlClient.SqlComm*******Builder.QuoteSuffix">
      <summary>Получает или задает конечный символ или символы, используемые для указания объектов базы данных SQL Server (например, таблиц или столбцов), имена которых содержат такие символы, как пробелы или зарезервированные токены.</summary>
      <returns>Используемый конечный символ или символы. Значение по умолчанию - пустая строка.</returns>
      <exception cref="T:System.InvalidOperationException">Это свойство не может быть изменено после создания команды INSERT, UPDATE или DELETE.</exception>
    </member>
    <member name="P:System.Data.SqlClient.SqlComm*******Builder.SchemaSeparator">
      <summary>Возвращает или задает символ, который используется в качестве разделителя между идентификатором схемы и остальными идентификаторами.</summary>
      <returns>Символ, который необходимо использовать в схеме в качестве разделителя.</returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlComm*******Builder.UnquoteIdentifier(System.String)">
      <summary>При заданном идентификаторе без кавычек в каталоге, набранном в правильном регистре, возвращает заключенный в кавычки идентификатор в корректной форме. При этом все кавычки, внедренные в идентификатор, корректно сохраняются.</summary>
      <param name="quotedIdentifier">Идентификатор, из которого будут удалены внедренные кавычки.</param>
      <returns>Идентификатор без кавычек, в котором встроенные кавычки корректно сохранены.</returns>
    </member>
    <member name="T:System.Data.SqlClient.SqlComm*******ColumnEncryptionSetting">
      <summary>Определяет способ отправки и получения данных при чтении и записи зашифрованных столбцов. В зависимости от конкретного запроса влияние на производительность может быть уменьшено за счет обхода обработки драйвером данных в режиме Always Encrypted при использовании незашифрованных столбцов. Обратите внимание, что эти параметры нельзя использовать для обхода шифрования и получения доступа к данным в виде обычного текста. Дополнительные сведения см. в разделе Always Encrypted (ядро СУБД).</summary>
    </member>
    <member name="F:System.Data.SqlClient.SqlComm*******ColumnEncryptionSetting.Disabled">
      <summary>Отменяет режим "Всегда зашифрованы" для запроса.</summary>
    </member>
    <member name="F:System.Data.SqlClient.SqlComm*******ColumnEncryptionSetting.Enabled">
      <summary>Разрешает режим "Всегда зашифрованы" для запроса.</summary>
    </member>
    <member name="F:System.Data.SqlClient.SqlComm*******ColumnEncryptionSetting.ResultSetOnly">
      <summary>Указывает, что только результаты выполнения команды должны обрабатываться в драйвере в режиме "Всегда зашифрованы". Используйте это значение, если команда не имеет параметров, требующих шифрования.</summary>
    </member>
    <member name="F:System.Data.SqlClient.SqlComm*******ColumnEncryptionSetting.UseConnectionSetting">
      <summary>Указывает, что команда должна использовать по умолчанию параметр "Всегда зашифрованы" в строке подключения.</summary>
    </member>
    <member name="T:System.Data.SqlClient.SqlConnection">
      <summary>Представляет подключение к базе данных SQL Server. Этот класс не наследуется.</summary>
    </member>
    <member name="M:System.Data.SqlClient.SqlConnection.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.SqlClient.SqlConnection" />.</summary>
    </member>
    <member name="M:System.Data.SqlClient.SqlConnection.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.SqlClient.SqlConnection" /> после получения строки, содержащей строку соединения.</summary>
      <param name="connectionString">Подключение, которое используется для открытия базы данных SQL Server.</param>
    </member>
    <member name="M:System.Data.SqlClient.SqlConnection.#ctor(System.String,System.Data.SqlClient.SqlCredential)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.SqlClient.SqlConnection" />, используя строку подключения, в которой не используется <see langword="Integrated Security = true" />, и объект <see cref="T:System.Data.SqlClient.SqlCredential" />, содержащий идентификатор пользователя и пароль.</summary>
      <param name="connectionString">Строка подключения, которая не использует какое-либо из следующих ключевых слов строки подключения: <see langword="Integrated Security = true" />, <see langword="UserId" /> или <see langword="Password" />, или не использует <see langword="ContextConnection = true" />.</param>
      <param name="credential">Объект <see cref="T:System.Data.SqlClient.SqlCredential" />. Если <paramref name="credential" /> имеет значение NULL, то <see cref="M:System.Data.SqlClient.SqlConnection.#ctor(System.String,System.Data.SqlClient.SqlCredential)" /> функционально эквивалентен <see cref="M:System.Data.SqlClient.SqlConnection.#ctor(System.String)" />.</param>
    </member>
    <member name="P:System.Data.SqlClient.SqlConnection.AccessToken">
      <summary>Возвращает или задает токен доступа для подключения.</summary>
      <returns>Токен доступа для подключения.</returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlConnection.BeginTransaction">
      <summary>Начинает транзакцию базы данных.</summary>
      <returns>Объект, представляющий новую транзакцию.</returns>
      <exception cref="T:System.Data.SqlClient.SqlException">Параллельные транзакции не разрешены при использовании режима MARS.</exception>
      <exception cref="T:System.InvalidOperationException">Параллельные транзакции не поддерживаются.</exception>
    </member>
    <member name="M:System.Data.SqlClient.SqlConnection.BeginTransaction(System.Data.IsolationLevel)">
      <summary>Начинает транзакцию базы данных с указанным уровнем изоляции.</summary>
      <param name="iso">Уровень изоляции, с которым должна выполняться транзакция.</param>
      <returns>Объект, представляющий новую транзакцию.</returns>
      <exception cref="T:System.Data.SqlClient.SqlException">Параллельные транзакции не разрешены при использовании режима MARS.</exception>
      <exception cref="T:System.InvalidOperationException">Параллельные транзакции не поддерживаются.</exception>
    </member>
    <member name="M:System.Data.SqlClient.SqlConnection.BeginTransaction(System.Data.IsolationLevel,System.String)">
      <summary>Начинает транзакцию базы данных с указанным уровнем изоляции и именем транзакции.</summary>
      <param name="iso">Уровень изоляции, с которым должна выполняться транзакция.</param>
      <param name="transactionName">Имя транзакции.</param>
      <returns>Объект, представляющий новую транзакцию.</returns>
      <exception cref="T:System.Data.SqlClient.SqlException">Параллельные транзакции не разрешены при использовании режима MARS.</exception>
      <exception cref="T:System.InvalidOperationException">Параллельные транзакции не поддерживаются.</exception>
    </member>
    <member name="M:System.Data.SqlClient.SqlConnection.BeginTransaction(System.String)">
      <summary>Начинает транзакцию базы данных с указанным уровнем изоляции.</summary>
      <param name="transactionName">Имя транзакции.</param>
      <returns>Объект, представляющий новую транзакцию.</returns>
      <exception cref="T:System.Data.SqlClient.SqlException">Параллельные транзакции не разрешены при использовании режима MARS.</exception>
      <exception cref="T:System.InvalidOperationException">Параллельные транзакции не поддерживаются.</exception>
    </member>
    <member name="M:System.Data.SqlClient.SqlConnection.ChangeDatabase(System.String)">
      <summary>Осуществляет смену текущей базы данных для открытого соединения <see cref="T:System.Data.SqlClient.SqlConnection" />.</summary>
      <param name="database">Имя базы данных, предназначенной для использования вместо текущей базы данных.</param>
      <exception cref="T:System.ArgumentException">Недопустимое имя базы данных.</exception>
      <exception cref="T:System.InvalidOperationException">Соединение не открыто.</exception>
      <exception cref="T:System.Data.SqlClient.SqlException">Невозможно изменить базу данных.</exception>
    </member>
    <member name="M:System.Data.SqlClient.SqlConnection.ChangePassword(System.String,System.Data.SqlClient.SqlCredential,System.Security.SecureString)">
      <summary>Изменяет пароль SQL Server для пользователя, указанного в объекте <see cref="T:System.Data.SqlClient.SqlCredential" />.</summary>
      <param name="connectionString">Строка подключения, содержащая достаточно информации для подключения к серверу. Строка подключения не должна использовать любое из следующих ключевых слов строки подключения: <see langword="Integrated Security = true" />, <see langword="UserId" />, <see langword="Password" /> или <see langword="ContextConnection = true" />.</param>
      <param name="credential">Объект <see cref="T:System.Data.SqlClient.SqlCredential" />.</param>
      <param name="newSecurePassword">Новый пароль.<paramref name="newSecurePassword" /> должен быть доступен только для чтения. Пароль должен также соответствовать установленной на сервере политике безопасности паролей, (например, минимальной длине и требованиям к использованию определенных символов).</param>
      <exception cref="T:System.ArgumentException">Строка подключения содержит любое сочетание <see langword="UserId" />, <see langword="Password" /> и <see langword="Integrated Security=true" />.
-или- 
Строка подключения содержит <see langword="Context Connection=true" />.  
-или-
Длина <paramref name="newSecurePassword" /> (или <paramref name="newPassword" />) больше 128 символов.
-или-
<paramref name="newSecurePassword" /> (или <paramref name="newPassword" />) доступен не только для чтения.
-или-
<paramref name="newSecurePassword" /> (или <paramref name="newPassword" />) является пустой строкой.</exception>
      <exception cref="T:System.ArgumentNullException">Один из параметров (<paramref name="connectionString" />, <paramref name="credential" /> или <paramref name="newSecurePassword" />) имеет значение NULL.</exception>
    </member>
    <member name="M:System.Data.SqlClient.SqlConnection.ChangePassword(System.String,System.String)">
      <summary>Заменяет пароль SQL Server для пользователя, указанного в строке подключения, заданным новым паролем.</summary>
      <param name="connectionString">Строка подключения, содержащая достаточно информации для подключения к требуемому серверу. В строке подключения должны быть заданы идентификатор пользователя и его текущий пароль.</param>
      <param name="newPassword">Новый пароль. Новый пароль должен соответствовать установленной на сервере политике безопасности паролей, включая минимальную длину, требования к использованию определенных знаков и т. д.</param>
      <exception cref="T:System.ArgumentException">Строка подключения содержит параметр, позволяющий использовать встроенную систему безопасности.  
Или 
Длина параметра <paramref name="newPassword" /> превышает 128 символов.</exception>
      <exception cref="T:System.ArgumentNullException">Либо параметр <paramref name="connectionString" />, либо <paramref name="newPassword" /> имеет значение NULL.</exception>
    </member>
    <member name="M:System.Data.SqlClient.SqlConnection.ClearAllPools">
      <summary>Очищает пул подключений.</summary>
    </member>
    <member name="M:System.Data.SqlClient.SqlConnection.ClearPool(System.Data.SqlClient.SqlConnection)">
      <summary>Очищает пул подключений, связанный с заданным подключением.</summary>
      <param name="connection">Подключение <see cref="T:System.Data.SqlClient.SqlConnection" />, которое требуется удалить из пула.</param>
    </member>
    <member name="P:System.Data.SqlClient.SqlConnection.ClientConnectionId">
      <summary>Идентификатор соединения последней попытки подключения, независимо от того, успешно ли выполнена попытка или завершилась ошибкой.</summary>
      <returns>Идентификатор соединения последней попытки соединения.</returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlConnection.Close">
      <summary>Закрывает соединение с базой данных. Рекомендуется использовать этот метод для закрытия любого открытого подключения.</summary>
      <exception cref="T:System.Data.SqlClient.SqlException">При открытии подключения произошла ошибка на уровне подключения.</exception>
    </member>
    <member name="P:System.Data.SqlClient.SqlConnection.ColumnEncryptionKeyCacheTtl">
      <summary>Возвращает или задает срок жизни для записей ключей шифрования столбцов в кэше ключей шифрования столбцов для функции Always Encrypted. Значение по умолчанию — 2 часа. 0 означает отсутствие кэширования.</summary>
      <returns>Интервал времени.</returns>
    </member>
    <member name="P:System.Data.SqlClient.SqlConnection.ColumnEncryptionQueryMetadataCacheEnabled">
      <summary>Возвращает или задает значение, которое указывает, включено ли кэширование метаданных запроса (True) или нет (False) для параметризованных запросов к базам данных с поддержкой функции Always Encrypted. Значение по умолчанию — true.</summary>
      <returns>Возвращает значение True, если кэширование метаданных запроса включено; в противном случае — значение False. Значение True — это значение по умолчанию.</returns>
    </member>
    <member name="P:System.Data.SqlClient.SqlConnection.ColumnEncryptionTrustedMasterKeyPaths">
      <summary>Позволяет задать список доверенных путей к разделам для сервера базы данных. Если при обработке запроса приложения драйвер получает путь к разделу, которого нет в списке, запрос завершится ошибкой. Это свойство обеспечивает дополнительную защиту от атак на систему безопасности, которые подразумевают предоставление скомпрометированным сервером SQL Server неверных путей к разделам, что может привести к утечке учетных данных хранилища ключей.</summary>
      <returns>Список доверенных путей к главным ключам для шифрования столбца.</returns>
    </member>
    <member name="P:System.Data.SqlClient.SqlConnection.ConnectionString">
      <summary>Получает или задает строку, используемую для открытия базы данных SQL Server.</summary>
      <returns>Строка подключения, включающая имя источника базы данных и другие параметры, необходимые для установки исходного подключения. Значение по умолчанию - пустая строка.</returns>
      <exception cref="T:System.ArgumentException">Передан недопустимый аргумент строки подключения, или не задан обязательный аргумент строки подключения.</exception>
    </member>
    <member name="P:System.Data.SqlClient.SqlConnection.ConnectionTimeout">
      <summary>Получает время ожидания при попытке установки подключения, по истечении которого попытка подключения завершается и создается ошибка.</summary>
      <returns>Время (в секундах), в течение которого должно производиться ожидание открытия соединения. Значение по умолчанию - 15 секунды.</returns>
      <exception cref="T:System.ArgumentException">Заданное значение меньше 0.</exception>
    </member>
    <member name="M:System.Data.SqlClient.SqlConnection.CreateComm*******">
      <summary>Создает и возвращает объект <see cref="T:System.Data.SqlClient.SqlComm*******" />, связанный с <see cref="T:System.Data.SqlClient.SqlConnection" />.</summary>
      <returns>Объект <see cref="T:System.Data.SqlClient.SqlComm*******" />.</returns>
    </member>
    <member name="P:System.Data.SqlClient.SqlConnection.Credential">
      <summary>Возвращает или задает объект <see cref="T:System.Data.SqlClient.SqlCredential" /> для этого подключения.</summary>
      <returns>Объект <see cref="T:System.Data.SqlClient.SqlCredential" /> для этого подключения.</returns>
    </member>
    <member name="P:System.Data.SqlClient.SqlConnection.Database">
      <summary>Получает имя текущей базы данных или базы данных, которая будет использоваться после открытия подключения.</summary>
      <returns>Имя текущей базы данных или базы данных, которая будет использоваться после открытия подключения. Значение по умолчанию - пустая строка.</returns>
    </member>
    <member name="P:System.Data.SqlClient.SqlConnection.DataSource">
      <summary>Получает имя экземпляра SQL Server, к которому осуществляется подключение.</summary>
      <returns>Имя экземпляра SQL Server, к которому осуществляется подключение. Значение по умолчанию - пустая строка.</returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlConnection.EnlistDistributedTransaction(System.EnterpriseServices.ITransaction)">
      <summary>Выполняет присоединение указанной транзакции как распределенной транзакции.</summary>
      <param name="transaction">Ссылка на существующий объект <see cref="T:System.EnterpriseServices.ITransaction" />, к которому выполняется присоединение.</param>
    </member>
    <member name="M:System.Data.SqlClient.SqlConnection.EnlistTransaction(System.Transactions.Transaction)">
      <summary>Выполняет присоединение указанной транзакции как распределенной транзакции.</summary>
      <param name="transaction">Ссылка на существующий объект <see cref="T:System.Transactions.Transaction" />, к которому выполняется присоединение.</param>
    </member>
    <member name="P:System.Data.SqlClient.SqlConnection.FireInfoMessageEventOnUserErrors">
      <summary>Возвращает или задает свойство <see cref="P:System.Data.SqlClient.SqlConnection.FireInfoMessageEventOnUserErrors" />.</summary>
      <returns>Значение <see langword="true" />, если свойство <see cref="P:System.Data.SqlClient.SqlConnection.FireInfoMessageEventOnUserErrors" /> задано. В противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlConnection.GetSchema">
      <summary>Возвращает сведения о схеме для источника данных этого объекта <see cref="T:System.Data.SqlClient.SqlConnection" />. Дополнительные сведения о схеме см. в разделе Коллекции схемы SQL Server.</summary>
      <returns>Объект <see cref="T:System.Data.DataTable" />, содержащий сведения о схеме.</returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlConnection.GetSchema(System.String)">
      <summary>Возвращает сведения о схеме для источника данных этого объекта <see cref="T:System.Data.SqlClient.SqlConnection" />, используя указанную строку в качестве имени схемы.</summary>
      <param name="collectionName">Определяет имя схемы, которая должна быть возвращена.</param>
      <returns>Объект <see cref="T:System.Data.DataTable" />, содержащий сведения о схеме.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="collectionName" /> задается как значение NULL.</exception>
    </member>
    <member name="M:System.Data.SqlClient.SqlConnection.GetSchema(System.String,System.String[])">
      <summary>Возвращает сведения о схеме для источника данных этого объекта <see cref="T:System.Data.SqlClient.SqlConnection" />, используя указанную строку в качестве имени схемы и указанный массив строк для значений ограничений.</summary>
      <param name="collectionName">Определяет имя схемы, которая должна быть возвращена.</param>
      <param name="restrictionValues">Набор значений ограничений для запрошенной схемы.</param>
      <returns>Объект <see cref="T:System.Data.DataTable" />, содержащий сведения о схеме.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="collectionName" /> задается как значение NULL.</exception>
    </member>
    <member name="E:System.Data.SqlClient.SqlConnection.InfoMessage">
      <summary>Возникает, когда SQL Server возвращает предупреждение или информационное сообщение.</summary>
    </member>
    <member name="M:System.Data.SqlClient.SqlConnection.Open">
      <summary>Открывает подключение к базе данных со значениями свойств, определяемыми объектом <see cref="P:System.Data.SqlClient.SqlConnection.ConnectionString" />.</summary>
      <exception cref="T:System.InvalidOperationException">Невозможно открыть подключение без указания источника данных или сервера.  
или 
Подключение уже открыто.</exception>
      <exception cref="T:System.Data.SqlClient.SqlException">При открытии подключения произошла ошибка на уровне подключения. Если свойство <see cref="P:System.Data.SqlClient.SqlException.Number" /> содержит значение 18 487 или 18 488, это означает, что действие указанного пароля истекло или что пароль должен быть сброшен. Дополнительные сведения см. в описании метода <see cref="M:System.Data.SqlClient.SqlConnection.ChangePassword(System.String,System.String)" />.  
Тег <see langword="&lt;system.data.localdb&gt;" /> в файле app.config имеет недопустимые или неизвестные элементы.</exception>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">В разделе <see langword="&lt;localdbinstances&gt;" /> присутствуют две записи с одинаковым именем.</exception>
    </member>
    <member name="M:System.Data.SqlClient.SqlConnection.OpenAsync(System.Threading.CancellationToken)">
      <summary>Асинхронная версия <see cref="M:System.Data.SqlClient.SqlConnection.Open" />, которая открывает соединение с базой данных с параметрами свойства, указанными в строке <see cref="P:System.Data.SqlClient.SqlConnection.ConnectionString" />. Чтобы запросить отмену операции до истечения времени ожидания соединения, можно использовать токен отмены.  Исключения будут распространяться с помощью возвращаемой задачи. Если время ожидания соединения истекло без успешного подключения, возвращаемая задача будет помечена как сбойная с исключением. Реализация возвращает задачу без блокировки вызывающего потока как для соединений, помещенных в пул, так и соединений вне пула.</summary>
      <param name="cancellationToken">Инструкция отмены.</param>
      <returns>Задача, представляющая асинхронную операцию.</returns>
      <exception cref="T:System.InvalidOperationException">Вызов <see cref="M:System.Data.SqlClient.SqlConnection.OpenAsync(System.Threading.CancellationToken)" /> более одного раза для того же экземпляра до завершения задачи.  
 <see langword="Context Connection=true" /> задается в строке подключения.  
Подключение не было доступно из пула подключений до истечения времени ожидания подключения.</exception>
      <exception cref="T:System.Data.SqlClient.SqlException">Ошибка, возвращенная SQL Server, которая произошла при открытии соединения.</exception>
    </member>
    <member name="P:System.Data.SqlClient.SqlConnection.PacketSize">
      <summary>Получает размер сетевых пакетов (в байтах), используемых при взаимодействии с экземпляром SQL Server.</summary>
      <returns>Размер сетевых пакетов (в байтах). Значение по умолчанию — 8000.</returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlConnection.RegisterColumnEncryptionKeyStoreProviders(System.Collections.Generic.IDictionary{System.String,System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider})">
      <summary>Регистрирует поставщиков хранилища ключей шифрования столбцов.</summary>
      <param name="customProviders">Настраиваемые поставщики</param>
    </member>
    <member name="M:System.Data.SqlClient.SqlConnection.ResetStatistics">
      <summary>Если сбор статистики разрешен, все значения сбрасываются в нуль.</summary>
    </member>
    <member name="M:System.Data.SqlClient.SqlConnection.RetrieveStatistics">
      <summary>Возвращает коллекцию пар имя-значение статистических данных на момент вызова метода.</summary>
      <returns>Возвращает ссылку типа <see cref="T:System.Collections.IDictionary" /> элементов <see cref="T:System.Collections.DictionaryEntry" />.</returns>
    </member>
    <member name="P:System.Data.SqlClient.SqlConnection.ServerVersion">
      <summary>Получает строку, содержащую версию экземпляра SQL Server, к которому подключается клиент.</summary>
      <returns>Версия экземпляра SQL Server.</returns>
      <exception cref="T:System.InvalidOperationException">Соединение закрыто.  
 <see cref="P:System.Data.SqlClient.SqlConnection.ServerVersion" /> был вызван, когда возвращаемая задача не была завершена, и не было открыто соединение после вызова <see cref="M:System.Data.SqlClient.SqlConnection.OpenAsync(System.Threading.CancellationToken)" />.</exception>
    </member>
    <member name="P:System.Data.SqlClient.SqlConnection.State">
      <summary>Отображает состояние <see cref="T:System.Data.SqlClient.SqlConnection" /> во время последней сетевой операции, выполненной по подключению.</summary>
      <returns>Перечисление <see cref="T:System.Data.ConnectionState" />.</returns>
    </member>
    <member name="P:System.Data.SqlClient.SqlConnection.StatisticsEnabled">
      <summary>Когда задано значение <see langword="true" />, разрешает сбор статистических сведений для текущего подключения.</summary>
      <returns>Возвращает значение <see langword="true" />, если сбор статистики разрешен. В противном случае возвращает значение <see langword="false" />. Значение по умолчанию — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlConnection.System#ICloneable#Clone">
      <summary>Создает новый объект, являющийся копией текущего экземпляра.</summary>
      <returns>Новый объект, являющийся копией этого экземпляра.</returns>
    </member>
    <member name="P:System.Data.SqlClient.SqlConnection.WorkstationId">
      <summary>Получает строку, определяющую клиента базы данных.</summary>
      <returns>Строка, определяющая клиента базы данных. Если не задана, то имя клиентского компьютера. Если ни одно из значений не определено, значением является пустая строка.</returns>
    </member>
    <member name="T:System.Data.SqlClient.SqlConnectionColumnEncryptionSetting">
      <summary>Указывает, что функция "Всегда зашифровано" включена в подключении. Обратите внимание, что эти параметры нельзя использовать для обхода шифрования и получения доступа к данным в виде обычного текста. Дополнительные сведения см. в разделе Always Encrypted (ядро СУБД).</summary>
    </member>
    <member name="F:System.Data.SqlClient.SqlConnectionColumnEncryptionSetting.Disabled">
      <summary>Указывает, что подключение не использует функцию "Всегда зашифровано". Следует использовать, если нет отправляемых через подключение запросов, которые получают доступ к зашифрованным столбцам.</summary>
    </member>
    <member name="F:System.Data.SqlClient.SqlConnectionColumnEncryptionSetting.Enabled">
      <summary>Включает функцию "Всегда зашифровано" для подключения. Параметры запроса, которые соответствуют зашифрованным столбцам, будут прозрачно зашифрованы, а результаты запроса из зашифрованных столбцов будут прозрачно расшифрованы.</summary>
    </member>
    <member name="T:System.Data.SqlClient.SqlConnectionStringBuilder">
      <summary>Удобное средство, с помощью которого можно создавать используемые классом <see cref="T:System.Data.SqlClient.SqlConnection" /> строки соединений и управлять их содержимым.</summary>
    </member>
    <member name="M:System.Data.SqlClient.SqlConnectionStringBuilder.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.SqlClient.SqlConnectionStringBuilder" />.</summary>
    </member>
    <member name="M:System.Data.SqlClient.SqlConnectionStringBuilder.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.SqlClient.SqlConnectionStringBuilder" />. Предоставленная строка подключения содержит данные для сведений о внутреннем подключении экземпляра.</summary>
      <param name="connectionString">Основа для сведений о внутреннем подключении объекта. Разбито на пары имя-значение. Недопустимое имя ключа вызывает исключение <see cref="T:System.Collections.Generic.KeyNotFoundException" />.</param>
      <exception cref="T:System.Collections.Generic.KeyNotFoundException">Недопустимое имя ключа в строке подключения.</exception>
      <exception cref="T:System.FormatException">Недопустимое значение в строке подключения (в данном случае ожидаемое логическое или числовое значение не было передано).</exception>
      <exception cref="T:System.ArgumentException">Поставлено недопустимое значение <paramref name="connectionString" />.</exception>
    </member>
    <member name="P:System.Data.SqlClient.SqlConnectionStringBuilder.ApplicationIntent">
      <summary>Объявляет тип рабочей нагрузки приложения при подключении к базе данных в группе доступности SQL Server. Значение этого свойства можно задать при помощи <see cref="T:System.Data.SqlClient.ApplicationIntent" />. Дополнительные сведения о поддержке SqlClient для групп доступности Always On см. в разделе Поддержка SqlClient для высокого уровня доступности и аварийного восстановления.</summary>
      <returns>Возвращает текущее значение свойства (значение типа <see cref="T:System.Data.SqlClient.ApplicationIntent" />).</returns>
    </member>
    <member name="P:System.Data.SqlClient.SqlConnectionStringBuilder.ApplicationName">
      <summary>Возвращает или задает имя приложения, связанного со строкой подключения.</summary>
      <returns>Имя приложения или «.NET SqlClient Data Provider», если имя не указано.</returns>
      <exception cref="T:System.ArgumentNullException">Чтобы задать значение NULL, используйте <see cref="F:System.DBNull.Value" />.</exception>
    </member>
    <member name="P:System.Data.SqlClient.SqlConnectionStringBuilder.AsynchronousProcessing">
      <summary>Возвращает или задает логическое значение, указывающее, допускается ли асинхронная обработка соединением, созданным с использованием данной строки подключения.</summary>
      <returns>Значение свойства <see cref="P:System.Data.SqlClient.SqlConnectionStringBuilder.AsynchronousProcessing" /> или <see langword="false" />, если значение не указано.</returns>
    </member>
    <member name="P:System.Data.SqlClient.SqlConnectionStringBuilder.AttachDBFilename">
      <summary>Возвращает или задает строку, содержащую имя первичного файла данных. Оно включает полный путь к подключаемой базе данных.</summary>
      <returns>Значение свойства <see langword="AttachDBFilename" /> или <see langword="String.Empty" />, если значение не указано.</returns>
      <exception cref="T:System.ArgumentNullException">Чтобы задать значение NULL, используйте <see cref="F:System.DBNull.Value" />.</exception>
    </member>
    <member name="P:System.Data.SqlClient.SqlConnectionStringBuilder.Authentication">
      <summary>Возвращает способ проверки подлинности строки подключения.</summary>
      <returns>Способ проверки подлинности строки подключения.</returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlConnectionStringBuilder.Clear">
      <summary>Удаляет содержимое экземпляра <see cref="T:System.Data.SqlClient.SqlConnectionStringBuilder" />.</summary>
    </member>
    <member name="P:System.Data.SqlClient.SqlConnectionStringBuilder.ColumnEncryptionSetting">
      <summary>Получает или задает параметры шифрования столбца для построителя строк подключения.</summary>
      <returns>Параметры шифрования столбца для построителя строки подключения.</returns>
    </member>
    <member name="P:System.Data.SqlClient.SqlConnectionStringBuilder.ConnectionReset">
      <summary>Является устаревшей. Возвращает или задает логическое значение, указывающее, следует ли сбрасывать соединение при извлечении его из пула.</summary>
      <returns>Значение свойства <see cref="P:System.Data.SqlClient.SqlConnectionStringBuilder.ConnectionReset" /> или true, если значение не указано.</returns>
    </member>
    <member name="P:System.Data.SqlClient.SqlConnectionStringBuilder.ConnectRetryCount">
      <summary>Количество повторных попыток подключения после обнаружения простоя при сбое подключения. Это должно быть целое число в диапазоне от 0 до 255. Значение по умолчанию — 1. Задайте значение 0, чтобы запретить повторное подключение при сбое подключения. Будет создано <see cref="T:System.ArgumentException" />, если заданное значение окажется вне допустимого диапазона.</summary>
      <returns>Количество повторных попыток подключения после обнаружения простоя при сбое подключения.</returns>
    </member>
    <member name="P:System.Data.SqlClient.SqlConnectionStringBuilder.ConnectRetryInterval">
      <summary>Количество времени (в секундах) между попытками повторного подключения после идентификации сбоя неактивного подключения. Это должно быть целое число в диапазоне от 1 до 60. По умолчанию используется значение 10 секунд. Будет вызван <see cref="T:System.ArgumentException" />, если будет задано значение вне допустимого диапазона.</summary>
      <returns>Количество времени (в секундах) между попытками повторного подключения после идентификации сбоя неактивного подключения.</returns>
    </member>
    <member name="P:System.Data.SqlClient.SqlConnectionStringBuilder.ConnectTimeout">
      <summary>Получает или задает продолжительность времени ожидания подключения к серверу (в секундах) перед прекращением попытки подключения и созданием ошибки.</summary>
      <returns>Значение свойства <see cref="P:System.Data.SqlClient.SqlConnectionStringBuilder.ConnectTimeout" /> или 15 секунд, если значение не указано.</returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlConnectionStringBuilder.ContainsKey(System.String)">
      <summary>Определяет, содержит ли объект <see cref="T:System.Data.SqlClient.SqlConnectionStringBuilder" /> указанный ключ.</summary>
      <param name="keyword">Ключ, который требуется найти в <see cref="T:System.Data.SqlClient.SqlConnectionStringBuilder" />.</param>
      <returns>Значение true, если объект <see cref="T:System.Data.SqlClient.SqlConnectionStringBuilder" /> содержит элемент, который имеет заданный ключ. В противном случае — значение false.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="keyword" /> имеет значение NULL (<see langword="Nothing" /> в Visual Basic).</exception>
    </member>
    <member name="P:System.Data.SqlClient.SqlConnectionStringBuilder.ContextConnection">
      <summary>Возвращает или задает значение, указывающее, какое следует установить соединение с SQL Server: клиент-серверное или внутрипроцессное.</summary>
      <returns>Значение свойства <see cref="P:System.Data.SqlClient.SqlConnectionStringBuilder.ContextConnection" /> или <see langword="False" />, если значение не указано.</returns>
    </member>
    <member name="P:System.Data.SqlClient.SqlConnectionStringBuilder.CurrentLanguage">
      <summary>Возвращает или задает имя записи языка SQL Server.</summary>
      <returns>Значение свойства <see cref="P:System.Data.SqlClient.SqlConnectionStringBuilder.CurrentLanguage" /> или <see langword="String.Empty" />, если значение не указано.</returns>
      <exception cref="T:System.ArgumentNullException">Чтобы задать значение NULL, используйте <see cref="F:System.DBNull.Value" />.</exception>
    </member>
    <member name="P:System.Data.SqlClient.SqlConnectionStringBuilder.DataSource">
      <summary>Возвращает или задает имя или сетевой адрес экземпляра SQL Server, с которым устанавливается соединение.</summary>
      <returns>Значение свойства <see cref="P:System.Data.SqlClient.SqlConnectionStringBuilder.DataSource" /> или <see langword="String.Empty" />, если значение не указано.</returns>
      <exception cref="T:System.ArgumentNullException">Чтобы задать значение NULL, используйте <see cref="F:System.DBNull.Value" />.</exception>
    </member>
    <member name="P:System.Data.SqlClient.SqlConnectionStringBuilder.EnclaveAttestationUrl">
      <summary>Получает или устанавливает URL-адрес для аттестации анклава, который используется с постоянным шифрованием на основе анклава.</summary>
      <returns>URL-адрес для аттестации анклава.</returns>
    </member>
    <member name="P:System.Data.SqlClient.SqlConnectionStringBuilder.Encrypt">
      <summary>Возвращает или задает логическое значение, указывающее, использует ли SQL Server шифрование SSL для всех данных, передаваемых между клиентом и сервером, если на сервере установлен сертификат.</summary>
      <returns>Значение свойства <see cref="P:System.Data.SqlClient.SqlConnectionStringBuilder.Encrypt" /> или <see langword="false" />, если значение не указано.</returns>
    </member>
    <member name="P:System.Data.SqlClient.SqlConnectionStringBuilder.Enlist">
      <summary>Возвращает или задает логическое значение, которое определяет, добавляет ли автоматически процесс SQL Server, обслуживающий пул, соединение в контекст текущей транзакции создающего ее потока.</summary>
      <returns>Значение свойства <see cref="P:System.Data.SqlClient.SqlConnectionStringBuilder.Enlist" /> или <see langword="true" />, если значение не указано.</returns>
    </member>
    <member name="P:System.Data.SqlClient.SqlConnectionStringBuilder.FailoverPartner">
      <summary>Возвращает или задает имя или адрес сервера-участника, к которому осуществляется подключение, если сервер-источник недоступен.</summary>
      <returns>Значение свойства <see cref="P:System.Data.SqlClient.SqlConnectionStringBuilder.FailoverPartner" /> или <see langword="String.Empty" />, если значение не указано.</returns>
      <exception cref="T:System.ArgumentNullException">Чтобы задать значение NULL, используйте <see cref="F:System.DBNull.Value" />.</exception>
    </member>
    <member name="P:System.Data.SqlClient.SqlConnectionStringBuilder.InitialCatalog">
      <summary>Возвращает или задает имя базы данных, связанной с подключением.</summary>
      <returns>Значение свойства <see cref="P:System.Data.SqlClient.SqlConnectionStringBuilder.InitialCatalog" /> или <see langword="String.Empty" />, если значение не указано.</returns>
      <exception cref="T:System.ArgumentNullException">Чтобы задать значение NULL, используйте <see cref="F:System.DBNull.Value" />.</exception>
    </member>
    <member name="P:System.Data.SqlClient.SqlConnectionStringBuilder.IntegratedSecurity">
      <summary>Возвращает или задает логическое значение, определяющее способ проверки подлинности: либо при подключении указаны идентификатор пользователя и пароль (значение <see langword="false" />), либо использованы учетные данные текущей учетной записи Windows (значение <see langword="true" />).</summary>
      <returns>Значение свойства <see cref="P:System.Data.SqlClient.SqlConnectionStringBuilder.IntegratedSecurity" /> или <see langword="false" />, если значение не указано.</returns>
    </member>
    <member name="P:System.Data.SqlClient.SqlConnectionStringBuilder.IsFixedSize">
      <summary>Возвращает значение, показывающее, имеет ли объект <see cref="T:System.Data.SqlClient.SqlConnectionStringBuilder" /> фиксированный размер.</summary>
      <returns>Значение <see langword="true" /> в любом случае, так как объект <see cref="T:System.Data.SqlClient.SqlConnectionStringBuilder" /> предоставляет набор пар "ключ-значение" фиксированного размера.</returns>
    </member>
    <member name="P:System.Data.SqlClient.SqlConnectionStringBuilder.Item(System.String)">
      <summary>Возвращает или задает значение, связанное с указанным ключом. В языке C# это свойство является индексатором.</summary>
      <param name="keyword">Ключ возвращаемого или задаваемого элемента.</param>
      <returns>Значение, связанное с указанным ключом.</returns>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="keyword" /> является неопределенной ссылкой (<see langword="Nothing" /> в Visual Basic).</exception>
      <exception cref="T:System.Collections.Generic.KeyNotFoundException">Попытка добавить ключ, не существующий в списке доступных ключей.</exception>
      <exception cref="T:System.FormatException">Недопустимое значение в строке подключения (в данном случае ожидаемое логическое или числовое значение не было передано).</exception>
    </member>
    <member name="P:System.Data.SqlClient.SqlConnectionStringBuilder.Keys">
      <summary>Возвращает коллекцию <see cref="T:System.Collections.ICollection" />, которая содержит ключи из <see cref="T:System.Data.SqlClient.SqlConnectionStringBuilder" />.</summary>
      <returns>Коллекция <see cref="T:System.Collections.ICollection" />, которая содержит ключи из <see cref="T:System.Data.SqlClient.SqlConnectionStringBuilder" />.</returns>
    </member>
    <member name="P:System.Data.SqlClient.SqlConnectionStringBuilder.LoadBalanceTimeout">
      <summary>Возвращает или задает минимальное время ожидания в секундах перед уничтожением соединения, находящегося в пуле.</summary>
      <returns>Значение свойства <see cref="P:System.Data.SqlClient.SqlConnectionStringBuilder.LoadBalanceTimeout" /> или 0, если значение не указано.</returns>
    </member>
    <member name="P:System.Data.SqlClient.SqlConnectionStringBuilder.MaxPoolSize">
      <summary>Возвращает или задает максимальное количество соединений в пуле для данной строки подключения.</summary>
      <returns>Значение свойства <see cref="P:System.Data.SqlClient.SqlConnectionStringBuilder.MaxPoolSize" /> или 100, если значение не указано.</returns>
    </member>
    <member name="P:System.Data.SqlClient.SqlConnectionStringBuilder.MinPoolSize">
      <summary>Возвращает или задает минимальное количество подключений в пуле для данной строки подключения.</summary>
      <returns>Значение свойства <see cref="P:System.Data.SqlClient.SqlConnectionStringBuilder.MinPoolSize" /> или 0, если значение не указано.</returns>
    </member>
    <member name="P:System.Data.SqlClient.SqlConnectionStringBuilder.MultipleActiveResultSets">
      <summary>Если указано значение true, приложение может поддерживать несколько активных наборов результатов (режим MARS). Если указано значение false, приложение должно обработать или отменить все наборы результатов из одного пакета, прежде чем выполнять любой другой пакет для данного подключения.  
Дополнительные сведения см. в разделе Несколько активных результирующих наборов (MARS).</summary>
      <returns>Значение свойства <see cref="P:System.Data.SqlClient.SqlConnectionStringBuilder.MultipleActiveResultSets" /> или <see langword="false" />, если значение не указано.</returns>
    </member>
    <member name="P:System.Data.SqlClient.SqlConnectionStringBuilder.MultiSubnetFailover">
      <summary>Если приложение подключается к группе доступности AlwaysOn в другой подсети, при задании MultiSubnetFailover=true обеспечивается более быстрое обнаружение и подключение к доступному (в данный момент) серверу. Дополнительные сведения о поддержке SqlClient для групп доступности Always On см. в разделе Поддержка SqlClient для высокого уровня доступности и аварийного восстановления.</summary>
      <returns>Возвращает <see cref="T:System.Boolean" />, указывающее текущее значение свойства.</returns>
    </member>
    <member name="P:System.Data.SqlClient.SqlConnectionStringBuilder.NetworkLibrary">
      <summary>Возвращает или задает строку, которая содержит имя сетевой библиотеки, используемой для установления подключения с SQL Server.</summary>
      <returns>Значение свойства <see cref="P:System.Data.SqlClient.SqlConnectionStringBuilder.NetworkLibrary" /> или <see langword="String.Empty" />, если значение не указано.</returns>
      <exception cref="T:System.ArgumentNullException">Чтобы задать значение NULL, используйте <see cref="F:System.DBNull.Value" />.</exception>
    </member>
    <member name="P:System.Data.SqlClient.SqlConnectionStringBuilder.PacketSize">
      <summary>Возвращает или задает размер сетевых пакетов (в байтах), используемых при взаимодействии с экземпляром SQL Server.</summary>
      <returns>Значение свойства <see cref="P:System.Data.SqlClient.SqlConnectionStringBuilder.PacketSize" /> или 8000, если значение не указано.</returns>
    </member>
    <member name="P:System.Data.SqlClient.SqlConnectionStringBuilder.Password">
      <summary>Возвращает или задает пароль для учетной записи SQL Server.</summary>
      <returns>Значение свойства <see cref="P:System.Data.SqlClient.SqlConnectionStringBuilder.Password" /> или <see langword="String.Empty" />, если значение не указано.</returns>
      <exception cref="T:System.ArgumentNullException">Для пароля было задано значение NULL, что неверно.  Образец исходного кода см. далее.</exception>
    </member>
    <member name="P:System.Data.SqlClient.SqlConnectionStringBuilder.PersistSecurityInfo">
      <summary>Возвращает или задает логическое значение, которое определяет, возвращаются ли сведения, связанные с безопасностью (такие как пароль), как часть подключения, если оно открыто или когда-либо находилось в открытом состоянии.</summary>
      <returns>Значение свойства <see cref="P:System.Data.SqlClient.SqlConnectionStringBuilder.PersistSecurityInfo" /> или <see langword="false" />, если значение не указано.</returns>
    </member>
    <member name="P:System.Data.SqlClient.SqlConnectionStringBuilder.PoolBlockingPeriod">
      <summary>Поведение периода блокировки для пула подключений.</summary>
      <returns>Доступные параметры периода блокировки.</returns>
    </member>
    <member name="P:System.Data.SqlClient.SqlConnectionStringBuilder.Pooling">
      <summary>Возвращает или задает логическое значение, которое определяет, будет ли соединение добавлено в пул или каждое соединение будет явно открываться каждый раз, когда поступает запрос на соединение.</summary>
      <returns>Значение свойства <see cref="P:System.Data.SqlClient.SqlConnectionStringBuilder.Pooling" /> или <see langword="true" />, если значение не указано.</returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlConnectionStringBuilder.Remove(System.String)">
      <summary>Удаляет из экземпляра <see cref="T:System.Data.SqlClient.SqlConnectionStringBuilder" /> запись с указанным ключом.</summary>
      <param name="keyword">Ключ пары «ключ-значение», удаляемой из строки подключения в этом объекте <see cref="T:System.Data.SqlClient.SqlConnectionStringBuilder" />.</param>
      <returns>Значение <see langword="true" />, если ключ был указан в строке подключения и был удален. Значение <see langword="false" />, если такого ключа не было.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="keyword" /> имеет значение NULL (<see langword="Nothing" /> в Visual Basic).</exception>
    </member>
    <member name="P:System.Data.SqlClient.SqlConnectionStringBuilder.Replication">
      <summary>Возвращает или задает логическое значение, указывающее, можно ли с помощью этого соединения выполнять репликацию.</summary>
      <returns>Значение свойства <see cref="P:System.Data.SqlClient.SqlConnectionStringBuilder.Replication" /> или false, если значение не указано.</returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlConnectionStringBuilder.ShouldSerialize(System.String)">
      <summary>Указывает, существует ли заданный ключ в этом экземпляре <see cref="T:System.Data.SqlClient.SqlConnectionStringBuilder" />.</summary>
      <param name="keyword">Ключ, который требуется найти в <see cref="T:System.Data.SqlClient.SqlConnectionStringBuilder" />.</param>
      <returns>Значение <see langword="true" />, если <see cref="T:System.Data.SqlClient.SqlConnectionStringBuilder" /> содержит запись с указанным ключом; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.SqlClient.SqlConnectionStringBuilder.TransactionBinding">
      <summary>Возвращает или задает строковое значение, указывающее, как соединение поддерживает связь с прикрепленной транзакцией <see langword="System.Transactions" />.</summary>
      <returns>Значение свойства <see cref="P:System.Data.SqlClient.SqlConnectionStringBuilder.TransactionBinding" /> или <see langword="String.Empty" />, если значение не указано.</returns>
    </member>
    <member name="P:System.Data.SqlClient.SqlConnectionStringBuilder.TransparentNetworkIPResolution">
      <summary>Если этому ключу присвоено значение <see langword="true" />, приложение должно получить все IP-адреса для определенной записи DNS, а затем попытаться подключиться по первому адресу в списке. Если подключение не устанавливается в течение 0,5 секунды, приложение попытается параллельно подключиться по другим адресам. При получении первого ответа приложение устанавливает подключение по соответствующему IP-адресу.</summary>
      <returns>Логическое значение.</returns>
    </member>
    <member name="P:System.Data.SqlClient.SqlConnectionStringBuilder.TrustServerCertificate">
      <summary>Возвращает или задает значение, указывающее, будет ли шифроваться канал, если обход цепочки сертификатов для проверки доверия не выполняется.</summary>
      <returns>Объект <see langword="Boolean" />. Допустимые значения: <see langword="true" />, <see langword="false" />, <see langword="yes" /> и <see langword="no" />.</returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlConnectionStringBuilder.TryGetValue(System.String,System.Object@)">
      <summary>Получает значение, соответствующее заданному ключу, из данного объекта <see cref="T:System.Data.SqlClient.SqlConnectionStringBuilder" />.</summary>
      <param name="keyword">Ключ искомого элемента.</param>
      <param name="value">Значение, соответствующее <paramref name="keyword" />.</param>
      <returns>Значение <see langword="true" />, если значение <paramref name="keyword" /> найдено в строке подключения. В противном случае — значение <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="keyword" /> содержит значение NULL (<see langword="Nothing" /> в Visual Basic).</exception>
    </member>
    <member name="P:System.Data.SqlClient.SqlConnectionStringBuilder.TypeSystemVersion">
      <summary>Возвращает или задает строковое значение, определяющее систему типов, ожидаемую приложением.</summary>
      <returns>В следующей таблице описаны возможные значения свойства <see cref="P:System.Data.SqlClient.SqlConnectionStringBuilder.TypeSystemVersion" />. 
  Значение 
  Описание 
  SQL Server 2005 
  Используется система типов SQL Server 2005. Для текущей версии ADO.NET никакое преобразование не выполняется.  
  SQL Server 2008 
  Используется система типов SQL Server 2008.  
  Последняя версия 
  Используется последняя версия, с которой может работать эта пара клиент-сервер. При обновлении клиентского и серверного компонентов она автоматически обновляется.</returns>
    </member>
    <member name="P:System.Data.SqlClient.SqlConnectionStringBuilder.UserID">
      <summary>Возвращает или задает идентификатор пользователя, который должен использоваться при подключении к SQL Server.</summary>
      <returns>Значение свойства <see cref="P:System.Data.SqlClient.SqlConnectionStringBuilder.UserID" /> или <see langword="String.Empty" />, если значение не указано.</returns>
      <exception cref="T:System.ArgumentNullException">Чтобы задать значение NULL, используйте <see cref="F:System.DBNull.Value" />.</exception>
    </member>
    <member name="P:System.Data.SqlClient.SqlConnectionStringBuilder.UserInstance">
      <summary>Возвращает или задает значение, указывающее, следует ли перенаправлять подключение от используемого по умолчанию экземпляра SQL Server Express к запущенному исполняющей средой экземпляру, который выполняется с учетной записью вызывающего кода.</summary>
      <returns>Значение свойства <see cref="P:System.Data.SqlClient.SqlConnectionStringBuilder.UserInstance" /> или <see langword="False" />, если значение не указано.</returns>
      <exception cref="T:System.ArgumentNullException">Чтобы задать значение NULL, используйте <see cref="F:System.DBNull.Value" />.</exception>
    </member>
    <member name="P:System.Data.SqlClient.SqlConnectionStringBuilder.Values">
      <summary>Возвращает коллекцию <see cref="T:System.Collections.ICollection" />, которая содержит значения в <see cref="T:System.Data.SqlClient.SqlConnectionStringBuilder" />.</summary>
      <returns>Коллекция <see cref="T:System.Collections.ICollection" />, которая содержит значения из <see cref="T:System.Data.SqlClient.SqlConnectionStringBuilder" />.</returns>
    </member>
    <member name="P:System.Data.SqlClient.SqlConnectionStringBuilder.WorkstationID">
      <summary>Возвращает или задает имя рабочей станции, подключающейся к SQL Server.</summary>
      <returns>Значение свойства <see cref="P:System.Data.SqlClient.SqlConnectionStringBuilder.WorkstationID" /> или <see langword="String.Empty" />, если значение не указано.</returns>
      <exception cref="T:System.ArgumentNullException">Чтобы задать значение NULL, используйте <see cref="F:System.DBNull.Value" />.</exception>
    </member>
    <member name="T:System.Data.SqlClient.SqlCredential">
      <summary>
        <see cref="T:System.Data.SqlClient.SqlCredential" /> обеспечивает более безопасный способ указания пароля для попытки входа с использованием проверки подлинности SQL Server.  
<see cref="T:System.Data.SqlClient.SqlCredential" /> состоит из идентификатора пользователя и пароля, используемых для проверки подлинности SQL Server. Пароль в объекте <see cref="T:System.Data.SqlClient.SqlCredential" /> имеет тип <see cref="T:System.Security.SecureString" />.  
<see cref="T:System.Data.SqlClient.SqlCredential" /> не может быть унаследован.  
Проверка подлинности Windows (<see langword="Integrated Security = true" />) остается самым безопасным способом доступа к базе данных SQL Server.</summary>
    </member>
    <member name="M:System.Data.SqlClient.SqlCredential.#ctor(System.String,System.Security.SecureString)">
      <summary>Создает объект типа <see cref="T:System.Data.SqlClient.SqlCredential" />.</summary>
      <param name="userId">Идентификатор пользователя.</param>
      <param name="password">Пароль; значение <see cref="T:System.Security.SecureString" />, помеченное как доступное только для чтения.  Передача параметра чтения/записи <see cref="T:System.Security.SecureString" /> создает <see cref="T:System.ArgumentException" />.</param>
    </member>
    <member name="P:System.Data.SqlClient.SqlCredential.Password">
      <summary>Получает компонент пароля объекта <see cref="T:System.Data.SqlClient.SqlCredential" />.</summary>
      <returns>Компонент пароля объекта <see cref="T:System.Data.SqlClient.SqlCredential" /> объекта.</returns>
    </member>
    <member name="P:System.Data.SqlClient.SqlCredential.UserId">
      <summary>Получает компонент ИД пользователя объекта <see cref="T:System.Data.SqlClient.SqlCredential" />.</summary>
      <returns>Компонент идентификатора пользователя объекта <see cref="T:System.Data.SqlClient.SqlCredential" /> объекта.</returns>
    </member>
    <member name="T:System.Data.SqlClient.SqlDataAdapter">
      <summary>Представляет набор команд данных и подключение к базе данных, которые используются для заполнения <see cref="T:System.Data.DataSet" /> и обновления базы данных SQL Server. Этот класс не наследуется.</summary>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataAdapter.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.SqlClient.SqlDataAdapter" />.</summary>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataAdapter.#ctor(System.Data.SqlClient.SqlComm*******)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.SqlClient.SqlDataAdapter" /> с помощью указанной команды <see cref="T:System.Data.SqlClient.SqlComm*******" /> в качестве свойства <see cref="P:System.Data.SqlClient.SqlDataAdapter.SelectComm*******" />.</summary>
      <param name="selectComm*******">Объект <see cref="T:System.Data.SqlClient.SqlComm*******" />, содержащий инструкцию Transact-SQL SELECT или хранимую процедуру, задаваемый в свойстве <see cref="P:System.Data.SqlClient.SqlDataAdapter.SelectComm*******" /> объекта <see cref="T:System.Data.SqlClient.SqlDataAdapter" />.</param>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataAdapter.#ctor(System.String,System.Data.SqlClient.SqlConnection)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.SqlClient.SqlDataAdapter" /> с помощью <see cref="P:System.Data.SqlClient.SqlDataAdapter.SelectComm*******" /> и объекта <see cref="T:System.Data.SqlClient.SqlConnection" />.</summary>
      <param name="selectComm*******Text">Объект <see cref="T:System.String" />, содержащий инструкцию Transact-SQL SELECT или хранимую процедуру для использования в свойстве <see cref="P:System.Data.SqlClient.SqlDataAdapter.SelectComm*******" /> объекта <see cref="T:System.Data.SqlClient.SqlDataAdapter" />.</param>
      <param name="selectConnection">
        <see cref="T:System.Data.SqlClient.SqlConnection" />, предоставляющее подключение. Если строка подключения не использует <see langword="Integrated Security = true" />, можно использовать <see cref="T:System.Data.SqlClient.SqlCredential" /> для более безопасной передачи идентификатора пользователя и пароля, чем при указании идентификатора пользователя и пароля в строке подключения в виде текста.</param>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataAdapter.#ctor(System.String,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.SqlClient.SqlDataAdapter" /> с помощью <see cref="P:System.Data.SqlClient.SqlDataAdapter.SelectComm*******" /> и строки подключения.</summary>
      <param name="selectComm*******Text">Объект <see cref="T:System.String" />, содержащий инструкцию Transact-SQL SELECT или хранимую процедуру для использования в свойстве <see cref="P:System.Data.SqlClient.SqlDataAdapter.SelectComm*******" /> объекта <see cref="T:System.Data.SqlClient.SqlDataAdapter" />.</param>
      <param name="selectConnectionString">Строка подключения. Если в строке подключения не используется <see langword="Integrated Security = true" />, можно использовать <see cref="M:System.Data.SqlClient.SqlDataAdapter.#ctor(System.String,System.Data.SqlClient.SqlConnection)" /> и <see cref="T:System.Data.SqlClient.SqlCredential" /> для передачи идентификатора пользователя и пароля с большей безопасностью, чем при указании идентификатора пользователя и пароля в виде текста в строке подключения.</param>
    </member>
    <member name="P:System.Data.SqlClient.SqlDataAdapter.DeleteComm*******">
      <summary>Возвращает или задает инструкцию Transact-SQL или хранимую процедуру, используемую для удаления записей из набора данных.</summary>
      <returns>
        <see cref="T:System.Data.SqlClient.SqlComm*******" /> используется в процессе <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> для удаления записей, соответствующих удаленным строкам в <see cref="T:System.Data.DataSet" />, из базы данных.</returns>
    </member>
    <member name="P:System.Data.SqlClient.SqlDataAdapter.InsertComm*******">
      <summary>Возвращает или задает инструкцию Transact-SQL или хранимую процедуру, используемую для вставки новых записей в источник данных.</summary>
      <returns>
        <see cref="T:System.Data.SqlClient.SqlComm*******" /> используется в процессе <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> для вставки записей, соответствующих новым строкам в <see cref="T:System.Data.DataSet" />, в базу данных.</returns>
    </member>
    <member name="E:System.Data.SqlClient.SqlDataAdapter.RowUpdated">
      <summary>Происходит во время <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> после выполнения команды для источника данных. Сделана попытка обновления, поэтому создается событие.</summary>
    </member>
    <member name="E:System.Data.SqlClient.SqlDataAdapter.RowUpdating">
      <summary>Происходит во время <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> перед выполнением команды в отношении источника данных. Сделана попытка обновления, поэтому создается событие.</summary>
    </member>
    <member name="P:System.Data.SqlClient.SqlDataAdapter.SelectComm*******">
      <summary>Возвращает или задает инструкцию Transact-SQL или хранимую процедуру, используемую для выбора записей из источника данных.</summary>
      <returns>
        <see cref="T:System.Data.SqlClient.SqlComm*******" />, используемый во время выполнения <see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" /> для выбора записей из базы данных для помещения в <see cref="T:System.Data.DataSet" />.</returns>
    </member>
    <member name="P:System.Data.SqlClient.SqlDataAdapter.System#Data#IDbDataAdapter#DeleteComm*******">
      <summary>Описание этого члена см. в разделе <see cref="P:System.Data.IDbDataAdapter.DeleteComm*******" />.</summary>
      <returns>
        <see cref="T:System.Data.IDbComm*******" /> — используется при <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> для удаления записей в источнике данных для удаленных строк в наборе данных.</returns>
    </member>
    <member name="P:System.Data.SqlClient.SqlDataAdapter.System#Data#IDbDataAdapter#InsertComm*******">
      <summary>Описание этого члена см. в разделе <see cref="P:System.Data.IDbDataAdapter.InsertComm*******" />.</summary>
      <returns>Интерфейс <see cref="T:System.Data.IDbComm*******" />, используемый во время применения метода <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> для вставки записей в источник данных, соответствующих новым строкам в наборе данных.</returns>
    </member>
    <member name="P:System.Data.SqlClient.SqlDataAdapter.System#Data#IDbDataAdapter#SelectComm*******">
      <summary>Описание этого члена см. в разделе <see cref="P:System.Data.IDbDataAdapter.SelectComm*******" />.</summary>
      <returns>Интерфейс <see cref="T:System.Data.IDbComm*******" />, используемый во время применения метода <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> для выбора записей из источника данных для размещения в наборе данных.</returns>
    </member>
    <member name="P:System.Data.SqlClient.SqlDataAdapter.System#Data#IDbDataAdapter#UpdateComm*******">
      <summary>Описание этого члена см. в разделе <see cref="P:System.Data.IDbDataAdapter.UpdateComm*******" />.</summary>
      <returns>Интерфейс <see cref="T:System.Data.IDbComm*******" />, используемый во время применения метода <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> для обновления записей в источнике данных, соответствующих измененным строкам в наборе данных.</returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataAdapter.System#ICloneable#Clone">
      <summary>Описание этого члена см. в разделе <see cref="M:System.ICloneable.Clone" />.</summary>
      <returns>Новый объект, который является копией текущего экземпляра.</returns>
    </member>
    <member name="P:System.Data.SqlClient.SqlDataAdapter.UpdateBatchSize">
      <summary>Возвращает или задает число строк, обработанных при каждом обращении к серверу.</summary>
      <returns>Количество строк, которые необходимо обработать с помощью одного пакета.  
  Значение 
  Действие 
  0 
  Размер пакета не ограничен. 

  1 
  Отключает пакетное обновление.  

  &gt;1 
  Изменения отправляются с помощью пакетов, единовременное количество операций в которых определяется свойством <see cref="P:System.Data.SqlClient.SqlDataAdapter.UpdateBatchSize" />.  

   

 Если для этого параметра значение, отличное от 1, все команды, связанные с <see cref="T:System.Data.SqlClient.SqlDataAdapter" /> обязательно иметь их UpdatedRowSource свойство значение <see langword="None" /> или <see langword="OutputParameters" />. В противном случае возникает исключение.</returns>
    </member>
    <member name="P:System.Data.SqlClient.SqlDataAdapter.UpdateComm*******">
      <summary>Возвращает или задает инструкцию Transact-SQL или хранимую процедуру, используемую для обновления записей в источнике данных.</summary>
      <returns>
        <see cref="T:System.Data.SqlClient.SqlComm*******" /> используется в процессе <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> для обновления записей в базе данных, соответствующих измененным строкам в <see cref="T:System.Data.DataSet" />.</returns>
    </member>
    <member name="T:System.Data.SqlClient.SqlDataReader">
      <summary>Предоставляет способ чтения потока строк последовательного доступа из базы данных SQL Server. Этот класс не наследуется.</summary>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.Close">
      <summary>Закрывает объект <see cref="T:System.Data.SqlClient.SqlDataReader" />.</summary>
    </member>
    <member name="P:System.Data.SqlClient.SqlDataReader.Connection">
      <summary>Возвращает ключ <see cref="T:System.Data.SqlClient.SqlConnection" />, ассоциированный с экземпляром <see cref="T:System.Data.SqlClient.SqlDataReader" />.</summary>
      <returns>Объект <see cref="T:System.Data.SqlClient.SqlConnection" />, связанный с объектом <see cref="T:System.Data.SqlClient.SqlDataReader" />.</returns>
    </member>
    <member name="P:System.Data.SqlClient.SqlDataReader.Depth">
      <summary>Возвращает значение, указывающее глубину вложенности для текущей строки.</summary>
      <returns>Глубина вложенности для текущей строки.</returns>
    </member>
    <member name="P:System.Data.SqlClient.SqlDataReader.FieldCount">
      <summary>Возвращает число столбцов в текущей строке.</summary>
      <returns>0, если не находится внутри допустимого набора записей; в противном случае — число столбцов в текущей строке. Значение по умолчанию — -1.</returns>
      <exception cref="T:System.NotSupportedException">Текущее подключение к экземпляру SQL Server отсутствует.</exception>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetBoolean(System.Int32)">
      <summary>Возвращает значение указанного столбца в виде логического значения.</summary>
      <param name="i">Порядковый номер столбца (от нуля).</param>
      <returns>Значение столбца.</returns>
      <exception cref="T:System.InvalidCastException">Указанное приведение недопустимо.</exception>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetByte(System.Int32)">
      <summary>Возвращает значение указанного столбца в виде байта.</summary>
      <param name="i">Порядковый номер столбца (от нуля).</param>
      <returns>Значение заданного столбца в виде байта.</returns>
      <exception cref="T:System.InvalidCastException">Указанное приведение недопустимо.</exception>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
      <summary>Считывает поток байтов из заданного смещения столбца в буфер в виде массива, начиная с заданного смещения буфера.</summary>
      <param name="i">Порядковый номер столбца (от нуля).</param>
      <param name="dataIndex">Индекс в поле, с которого начинается операция считывания.</param>
      <param name="buffer">Буфер, в который считывается поток байтов.</param>
      <param name="bufferIndex">Индекс в <paramref name="buffer" />, с которого должна начинаться операция записи.</param>
      <param name="length">Максимальная длина для копирования в буфер.</param>
      <returns>Число фактически считанных байтов.</returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetChar(System.Int32)">
      <summary>Возвращает значение указанного столбца в виде одного символа.</summary>
      <param name="i">Порядковый номер столбца (от нуля).</param>
      <returns>Значение указанного столбца.</returns>
      <exception cref="T:System.InvalidCastException">Указанное приведение недопустимо.</exception>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
      <summary>Считывает поток символов из заданного смещения столбца в буфер в виде массива, начиная с заданного смещения буфера.</summary>
      <param name="i">Порядковый номер столбца (от нуля).</param>
      <param name="dataIndex">Индекс в поле, с которого начинается операция считывания.</param>
      <param name="buffer">Буфер, в который считывается поток байтов.</param>
      <param name="bufferIndex">Индекс в <paramref name="buffer" />, с которого должна начинаться операция записи.</param>
      <param name="length">Максимальная длина для копирования в буфер.</param>
      <returns>Число фактически считанных символов.</returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetDataTypeName(System.Int32)">
      <summary>Получает строку, представляющую тип данных в указанном столбце.</summary>
      <param name="i">Порядковый номер (с нуля) искомого столбца.</param>
      <returns>Строка, представляющая тип данных указанного столбца.</returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetDateTime(System.Int32)">
      <summary>Возвращает значение указанного столбца в виде объекта <see cref="T:System.DateTime" />.</summary>
      <param name="i">Порядковый номер столбца (от нуля).</param>
      <returns>Значение указанного столбца.</returns>
      <exception cref="T:System.InvalidCastException">Указанное приведение недопустимо.</exception>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetDateTimeOffset(System.Int32)">
      <summary>Возвращает значение указанного столбца как объект <see cref="T:System.DateTimeOffset" />.</summary>
      <param name="i">Порядковый номер столбца (от нуля).</param>
      <returns>Значение указанного столбца.</returns>
      <exception cref="T:System.InvalidCastException">Указанное приведение недопустимо.</exception>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetDecimal(System.Int32)">
      <summary>Возвращает значение указанного столбца в виде объекта <see cref="T:System.Decimal" />.</summary>
      <param name="i">Порядковый номер столбца (от нуля).</param>
      <returns>Значение указанного столбца.</returns>
      <exception cref="T:System.InvalidCastException">Указанное приведение недопустимо.</exception>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetDouble(System.Int32)">
      <summary>Возвращает значение заданного столбца в виде числа с плавающей запятой двойной точности.</summary>
      <param name="i">Порядковый номер столбца (от нуля).</param>
      <returns>Значение указанного столбца.</returns>
      <exception cref="T:System.InvalidCastException">Указанное приведение недопустимо.</exception>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetEnumerator">
      <summary>Возвращает объект <see cref="T:System.Collections.IEnumerator" />, осуществляющий перебор <see cref="T:System.Data.SqlClient.SqlDataReader" />.</summary>
      <returns>Интерфейс <see cref="T:System.Collections.IEnumerator" /> для <see cref="T:System.Data.SqlClient.SqlDataReader" />.</returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetFieldType(System.Int32)">
      <summary>Возвращает тип <see cref="T:System.Type" />, который является типом данных объекта.</summary>
      <param name="i">Порядковый номер столбца (от нуля).</param>
      <returns>Тип данных объекта (<see cref="T:System.Type" />). Если тип отсутствует в клиенте, в случае, когда из базы данных возвращен пользовательский тип, GetFieldType возвращает NULL.</returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetFieldValue``1(System.Int32)">
      <summary>Синхронно получает значение заданного столбца в виде типа. <see cref="M:System.Data.SqlClient.SqlDataReader.GetFieldValueAsync``1(System.Int32,System.Threading.CancellationToken)" /> — асинхронная версия этого метода.</summary>
      <param name="i">Получаемый столбец.</param>
      <typeparam name="T">Тип возвращаемого значения.</typeparam>
      <returns>Объект возвращаемого типа.</returns>
      <exception cref="T:System.InvalidOperationException">Соединение разъединяется или закрывается во время извлечения данных.  
Объект <see cref="T:System.Data.SqlClient.SqlDataReader" /> закрыт во время извлечения данных.  
Не существует данных, готовых для чтения (например, первый объект <see cref="M:System.Data.SqlClient.SqlDataReader.Read" /> не был вызван или вернул значение false).  
Сделана попытка чтения ранее считанного столбца в последовательном режиме.  
Выполнялась асинхронная операция. Относится ко всем методам Get* при работе в последовательном режиме, так как они могут вызываться при чтении потока.</exception>
      <exception cref="T:System.IndexOutOfRangeException">Попытка чтения столбца, который не существует.</exception>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">Значение столбца было NULL (<see cref="M:System.Data.SqlClient.SqlDataReader.IsDBNull(System.Int32)" /> == <see langword="true" />) при извлечении типа, не являющегося типом SQL.</exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="T" /> не соответствует типу, возвращаемому SQL Server, или не может быть приведено.</exception>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetFieldValueAsync``1(System.Int32,System.Threading.CancellationToken)">
      <summary>Асинхронно получает значение заданного столбца в виде типа. <see cref="M:System.Data.SqlClient.SqlDataReader.GetFieldValue``1(System.Int32)" /> — синхронная версия этого метода.</summary>
      <param name="i">Получаемый столбец.</param>
      <param name="cancellationToken">Инструкция отмены, распространяющая уведомление о том, что операции должны быть отменены. Не гарантирует отмену. Параметр <see langword="CancellationToken.None" /> делает этот метод равным методу <see cref="M:System.Data.SqlClient.SqlDataReader.IsDBNull(System.Int32)" />. Возвращаемая задача должна быть помечена как отмененная.</param>
      <typeparam name="T">Тип возвращаемого значения.</typeparam>
      <returns>Объект возвращаемого типа.</returns>
      <exception cref="T:System.InvalidOperationException">Соединение разъединяется или закрывается во время извлечения данных.  
Объект <see cref="T:System.Data.SqlClient.SqlDataReader" /> закрыт во время извлечения данных.  
Не существует данных, готовых для чтения (например, первый объект <see cref="M:System.Data.SqlClient.SqlDataReader.Read" /> не был вызван или вернул значение false).  
Сделана попытка чтения ранее считанного столбца в последовательном режиме.  
Выполнялась асинхронная операция. Относится ко всем методам Get* при работе в последовательном режиме, так как они могут вызываться при чтении потока.  
 <see langword="Context Connection=true" /> задается в строке подключения.</exception>
      <exception cref="T:System.IndexOutOfRangeException">Попытка чтения столбца, который не существует.</exception>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">Значение столбца было NULL (<see cref="M:System.Data.SqlClient.SqlDataReader.IsDBNull(System.Int32)" /> == <see langword="true" />) при извлечении типа, не являющегося типом SQL.</exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="T" /> не соответствует типу, возвращаемому SQL Server, или не может быть приведено.</exception>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetFloat(System.Int32)">
      <summary>Возвращает значение заданного столбца в виде числа с плавающей запятой одинарной точности.</summary>
      <param name="i">Порядковый номер столбца (от нуля).</param>
      <returns>Значение указанного столбца.</returns>
      <exception cref="T:System.InvalidCastException">Указанное приведение недопустимо.</exception>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetGuid(System.Int32)">
      <summary>Возвращает значение заданного столбца в виде глобального уникального идентификатора (GUID).</summary>
      <param name="i">Порядковый номер столбца (от нуля).</param>
      <returns>Значение указанного столбца.</returns>
      <exception cref="T:System.InvalidCastException">Указанное приведение недопустимо.</exception>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetInt16(System.Int32)">
      <summary>Получает значение заданного столбца в виде 16-битового целого числа со знаком.</summary>
      <param name="i">Порядковый номер столбца (от нуля).</param>
      <returns>Значение указанного столбца.</returns>
      <exception cref="T:System.InvalidCastException">Указанное приведение недопустимо.</exception>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetInt32(System.Int32)">
      <summary>Возвращает значение указанного столбца в виде 32-разрядного целого числа со знаком.</summary>
      <param name="i">Порядковый номер столбца (от нуля).</param>
      <returns>Значение указанного столбца.</returns>
      <exception cref="T:System.InvalidCastException">Указанное приведение недопустимо.</exception>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetInt64(System.Int32)">
      <summary>Возвращает значение указанного столбца в виде 64-разрядного целого числа со знаком.</summary>
      <param name="i">Порядковый номер столбца (от нуля).</param>
      <returns>Значение указанного столбца.</returns>
      <exception cref="T:System.InvalidCastException">Указанное приведение недопустимо.</exception>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetName(System.Int32)">
      <summary>Возвращает имя заданного столбца.</summary>
      <param name="i">Порядковый номер столбца (от нуля).</param>
      <returns>Имя заданного столбца.</returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetOrdinal(System.String)">
      <summary>Возвращает порядковый номер столбца при наличии заданного имени столбца.</summary>
      <param name="name">Имя столбца.</param>
      <returns>Порядковый номер столбца (от нуля).</returns>
      <exception cref="T:System.IndexOutOfRangeException">Заданное имя недопустимо для имени столбца.</exception>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetProviderSpecificFieldType(System.Int32)">
      <summary>Возвращает <see langword="Object" />, который представляет собой конкретный тип поля базового поставщика.</summary>
      <param name="i">
        <see cref="T:System.Int32" />, представляющий порядковый номер столбца.</param>
      <returns>Возвращает <see cref="T:System.Object" />, который представляет собой конкретный тип поля базового поставщика.</returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetProviderSpecificValue(System.Int32)">
      <summary>Возвращает <see langword="Object" />, который представляет собой значение типа, специфического для поставщика.</summary>
      <param name="i">
        <see cref="T:System.Int32" />, представляющий порядковый номер столбца.</param>
      <returns>
        <see cref="T:System.Object" />, который представляет собой значение типа, специфического для поставщика.</returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetProviderSpecificValues(System.Object[])">
      <summary>Возвращает массив объектов, которые представляют собой значения типа, специфического для базового поставщика.</summary>
      <param name="values">Массив объектов <see cref="T:System.Object" />, в который копируются значения столбца.</param>
      <returns>Массив объектов, которые представляют собой значения типа, специфического для поставщика.</returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetSchemaTable">
      <summary>Возвращает объект <see cref="T:System.Data.DataTable" />, описывающий метаданные столбцов модуля чтения данных <see cref="T:System.Data.SqlClient.SqlDataReader" />.</summary>
      <returns>Объект <see cref="T:System.Data.DataTable" />, описывающий метаданные столбцов.</returns>
      <exception cref="T:System.InvalidOperationException">Объект <see cref="T:System.Data.SqlClient.SqlDataReader" /> закрыт.</exception>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetSqlBinary(System.Int32)">
      <summary>Возвращает значение заданного столбца в виде объекта <see cref="T:System.Data.SqlTypes.SqlBinary" />.</summary>
      <param name="i">Порядковый номер столбца (от нуля).</param>
      <returns>Значение столбца, выраженное как <see cref="T:System.Data.SqlTypes.SqlBinary" />.</returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetSqlBoolean(System.Int32)">
      <summary>Возвращает значение заданного столбца в виде объекта <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <param name="i">Порядковый номер столбца (от нуля).</param>
      <returns>Значение столбца.</returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetSqlByte(System.Int32)">
      <summary>Возвращает значение заданного столбца в виде объекта <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="i">Порядковый номер столбца (от нуля).</param>
      <returns>Значение столбца, выраженное как <see cref="T:System.Data.SqlTypes.SqlByte" />.</returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetSqlBytes(System.Int32)">
      <summary>Возвращает значение заданного столбца в виде объекта <see cref="T:System.Data.SqlTypes.SqlBytes" />.</summary>
      <param name="i">Порядковый номер столбца (от нуля).</param>
      <returns>Значение столбца, выраженное как <see cref="T:System.Data.SqlTypes.SqlBytes" />.</returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetSqlChars(System.Int32)">
      <summary>Возвращает значение заданного столбца в виде объекта <see cref="T:System.Data.SqlTypes.SqlChars" />.</summary>
      <param name="i">Порядковый номер столбца (от нуля).</param>
      <returns>Значение столбца, выраженное как <see cref="T:System.Data.SqlTypes.SqlChars" />.</returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetSqlDateTime(System.Int32)">
      <summary>Возвращает значение заданного столбца в виде объекта <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</summary>
      <param name="i">Порядковый номер столбца (от нуля).</param>
      <returns>Значение столбца, выраженное как <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetSqlDecimal(System.Int32)">
      <summary>Возвращает значение заданного столбца в виде объекта <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <param name="i">Порядковый номер столбца (от нуля).</param>
      <returns>Значение столбца, выраженное как <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetSqlDouble(System.Int32)">
      <summary>Возвращает значение заданного столбца в виде объекта <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <param name="i">Порядковый номер столбца (от нуля).</param>
      <returns>Значение столбца, выраженное как <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetSqlGuid(System.Int32)">
      <summary>Возвращает значение заданного столбца в виде объекта <see cref="T:System.Data.SqlTypes.SqlGuid" />.</summary>
      <param name="i">Порядковый номер столбца (от нуля).</param>
      <returns>Значение столбца, выраженное как <see cref="T:System.Data.SqlTypes.SqlGuid" />.</returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetSqlInt16(System.Int32)">
      <summary>Возвращает значение заданного столбца в виде объекта <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="i">Порядковый номер столбца (от нуля).</param>
      <returns>Значение столбца, выраженное как <see cref="T:System.Data.SqlTypes.SqlInt16" />.</returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetSqlInt32(System.Int32)">
      <summary>Возвращает значение заданного столбца в виде объекта <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <param name="i">Порядковый номер столбца (от нуля).</param>
      <returns>Значение столбца, выраженное как <see cref="T:System.Data.SqlTypes.SqlInt32" />.</returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetSqlInt64(System.Int32)">
      <summary>Возвращает значение заданного столбца в виде объекта <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="i">Порядковый номер столбца (от нуля).</param>
      <returns>Значение столбца, выраженное как <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetSqlMoney(System.Int32)">
      <summary>Возвращает значение заданного столбца в виде объекта <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <param name="i">Порядковый номер столбца (от нуля).</param>
      <returns>Значение столбца, выраженное как <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetSqlSingle(System.Int32)">
      <summary>Возвращает значение заданного столбца в виде объекта <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <param name="i">Порядковый номер столбца (от нуля).</param>
      <returns>Значение столбца, выраженное как <see cref="T:System.Data.SqlTypes.SqlSingle" />.</returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetSqlString(System.Int32)">
      <summary>Возвращает значение заданного столбца в виде объекта <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <param name="i">Порядковый номер столбца (от нуля).</param>
      <returns>Значение столбца, выраженное как <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetSqlValue(System.Int32)">
      <summary>Возвращает значение данных в заданном столбце как тип SQL Server.</summary>
      <param name="i">Порядковый номер столбца (от нуля).</param>
      <returns>Значение столбца, выраженное как <see cref="T:System.Data.SqlDbType" />.</returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetSqlValues(System.Object[])">
      <summary>Заполняет массив значений типа <see cref="T:System.Object" />, содержащий значения для всех столбцов в записи, выраженные как типы SQL Server.</summary>
      <param name="values">Массив объектов <see cref="T:System.Object" />, в который копируются значения. Значения столбцов выражаются как типы SQL Server.</param>
      <returns>Целое число, указывающее количество скопированных столбцов.</returns>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="values" /> имеет значение null.</exception>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetSqlXml(System.Int32)">
      <summary>Возвращает значение заданного столбца в виде XML.</summary>
      <param name="i">Порядковый номер столбца (от нуля).</param>
      <returns>Значение <see cref="T:System.Data.SqlTypes.SqlXml" />, содержащее XML из соответствующего поля.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Переданный индекс находился вне диапазона от 0 до <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</exception>
      <exception cref="T:System.InvalidOperationException">Предпринята попытка чтения столбцов закрытого объекта <see cref="T:System.Data.SqlClient.SqlDataReader" /> или получения доступа к ним.</exception>
      <exception cref="T:System.InvalidCastException">Извлеченные данные несовместимы с типом<see cref="T:System.Data.SqlTypes.SqlXml" />.</exception>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetStream(System.Int32)">
      <summary>Извлекает типы данных binary, image, varbinary, UDT и variant как <see cref="T:System.IO.Stream" />.</summary>
      <param name="i">Порядковый номер столбца (от нуля).</param>
      <returns>Объект потока.</returns>
      <exception cref="T:System.InvalidOperationException">Соединение разъединяется или закрывается во время извлечения данных.  
Объект <see cref="T:System.Data.SqlClient.SqlDataReader" /> закрыт во время извлечения данных.  
Не существует данных, готовых для чтения (например, первый объект <see cref="M:System.Data.SqlClient.SqlDataReader.Read" /> не был вызван или вернул значение false).  
Сделана попытка чтения ранее считанного столбца в последовательном режиме.  
Выполнялась асинхронная операция. Относится ко всем методам Get* при работе в последовательном режиме, так как они могут вызываться при чтении потока.</exception>
      <exception cref="T:System.IndexOutOfRangeException">Попытка чтения столбца, который не существует.</exception>
      <exception cref="T:System.InvalidCastException">Возвращаемый тип не был одним из указанных ниже типов: 
– binary 
– image 
– varbinary 
– udt</exception>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetString(System.Int32)">
      <summary>Возвращает значение заданного столбца в виде строки.</summary>
      <param name="i">Порядковый номер столбца (от нуля).</param>
      <returns>Значение указанного столбца.</returns>
      <exception cref="T:System.InvalidCastException">Указанное приведение недопустимо.</exception>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetTextReader(System.Int32)">
      <summary>Извлекает типы данных Char, NChar, NText, NVarChar, text, varChar и Variant как <see cref="T:System.IO.TextReader" />.</summary>
      <param name="i">Получаемый столбец.</param>
      <returns>Возвращаемый объект.</returns>
      <exception cref="T:System.InvalidOperationException">Соединение разъединяется или закрывается во время извлечения данных.  
Объект <see cref="T:System.Data.SqlClient.SqlDataReader" /> закрыт во время извлечения данных.  
Не существует данных, готовых для чтения (например, первый объект <see cref="M:System.Data.SqlClient.SqlDataReader.Read" /> не был вызван или вернул значение false).  
Сделана попытка чтения ранее считанного столбца в последовательном режиме.  
Выполнялась асинхронная операция. Относится ко всем методам Get* при работе в последовательном режиме, так как они могут вызываться при чтении потока.</exception>
      <exception cref="T:System.IndexOutOfRangeException">Попытка чтения столбца, который не существует.</exception>
      <exception cref="T:System.InvalidCastException">Возвращаемый тип не был одним из указанных ниже типов: 
– char 
– nchar 
– ntext 
– nvarchar 
– text 
– varchar</exception>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetTimeSpan(System.Int32)">
      <summary>Возвращает значение указанного столбца как объект <see cref="T:System.TimeSpan" />.</summary>
      <param name="i">Порядковый номер столбца (от нуля).</param>
      <returns>Значение указанного столбца.</returns>
      <exception cref="T:System.InvalidCastException">Указанное приведение недопустимо.</exception>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetValue(System.Int32)">
      <summary>Возвращает значение заданного столбца в его исходном формате.</summary>
      <param name="i">Порядковый номер столбца (от нуля).</param>
      <returns>Этот метод возвращает объекты <see cref="T:System.DBNull" /> для столбцов базы данных со значениями NULL.</returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetValues(System.Object[])">
      <summary>Заполняет массив объектов значениями столбцов текущей строки.</summary>
      <param name="values">Массив объектов <see cref="T:System.Object" />, в который необходимо скопировать столбцы атрибутов.</param>
      <returns>Число экземпляров <see cref="T:System.Object" /> в массиве.</returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetXmlReader(System.Int32)">
      <summary>Извлекает данные типа XML как <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="i">Значение указанного столбца.</param>
      <returns>Возвращаемый объект.</returns>
      <exception cref="T:System.InvalidOperationException">Соединение разъединяется или закрывается во время извлечения данных.  
Объект <see cref="T:System.Data.SqlClient.SqlDataReader" /> закрыт во время извлечения данных.  
Не существует данных, готовых для чтения (например, первый объект <see cref="M:System.Data.SqlClient.SqlDataReader.Read" /> не был вызван или вернул значение false).  
Попытка чтения ранее считанного столбца в последовательном режиме.  
Выполнялась асинхронная операция. Относится ко всем методам Get* при работе в последовательном режиме, так как они могут вызываться при чтении потока.</exception>
      <exception cref="T:System.IndexOutOfRangeException">Попытка чтения столбца, который не существует.</exception>
      <exception cref="T:System.InvalidCastException">Возвращенный тип не был типом XML.</exception>
    </member>
    <member name="P:System.Data.SqlClient.SqlDataReader.HasRows">
      <summary>Получает значение, указывающее, содержит ли объект <see cref="T:System.Data.SqlClient.SqlDataReader" /> одну или несколько строк.</summary>
      <returns>Значение <see langword="true" />, если объект <see cref="T:System.Data.SqlClient.SqlDataReader" /> содержит одну или несколько строк; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.SqlClient.SqlDataReader.IsClosed">
      <summary>Извлекает логическое значение, указывающее, закрыт ли заданный экземпляр <see cref="T:System.Data.SqlClient.SqlDataReader" />.</summary>
      <returns>
        <see langword="true" />, если указанный экземпляр <see cref="T:System.Data.SqlClient.SqlDataReader" /> закрыт; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.IsComm*******Behavior(System.Data.Comm*******Behavior)">
      <summary>Определяет, соответствует ли заданный <see cref="T:System.Data.Comm*******Behavior" /> аналогичному объекту для <see cref="T:System.Data.SqlClient.SqlDataReader" /> .</summary>
      <param name="condition">Перечисление <see cref="T:System.Data.Comm*******Behavior" />.</param>
      <returns>
        <see langword="true" />, если для <see cref="T:System.Data.Comm*******Behavior" /> задано значение true; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.IsDBNull(System.Int32)">
      <summary>Получает значение, указывающее, содержит ли столбец несуществующие или пропущенные значения.</summary>
      <param name="i">Порядковый номер столбца (от нуля).</param>
      <returns>Значение <see langword="true" />, если значение указанного столбца эквивалентно <see cref="T:System.DBNull" />; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.IsDBNullAsync(System.Int32,System.Threading.CancellationToken)">
      <summary>Асинхронная версия метода <see cref="M:System.Data.SqlClient.SqlDataReader.IsDBNull(System.Int32)" />, который получает значение, указывающее, содержит ли столбец несуществующие или отсутствующие значения.  
Токен отмены можно использовать для запроса отказа от операции до истечения времени ожидания команды. Сведения об исключениях передаются в возвращенном объекте Task.</summary>
      <param name="i">Извлекаемый столбец (отсчитываемый с нуля).</param>
      <param name="cancellationToken">Инструкция отмены, распространяющая уведомление о том, что операции должны быть отменены. Не гарантирует отмену. Параметр <see langword="CancellationToken.None" /> делает этот метод равным методу <see cref="M:System.Data.SqlClient.SqlDataReader.IsDBNull(System.Int32)" />. Возвращаемая задача должна быть помечена как отмененная.</param>
      <returns>Значение <see langword="true" />, если значение указанного столбца эквивалентно <see langword="DBNull" />; в обратном случае — значение <see langword="false" />.</returns>
      <exception cref="T:System.InvalidOperationException">Соединение разъединяется или закрывается во время извлечения данных.  
Объект <see cref="T:System.Data.SqlClient.SqlDataReader" /> закрыт во время извлечения данных.  
Не существует данных, готовых для чтения (например, первый объект <see cref="M:System.Data.SqlClient.SqlDataReader.Read" /> не был вызван или вернул значение false).  
Попытка чтения ранее считанного столбца в последовательном режиме.  
Выполнялась асинхронная операция. Относится ко всем методам Get* при работе в последовательном режиме, так как они могут вызываться при чтении потока.  
 <see langword="Context Connection=true" /> задается в строке подключения.</exception>
      <exception cref="T:System.IndexOutOfRangeException">Попытка чтения столбца, который не существует.</exception>
    </member>
    <member name="P:System.Data.SqlClient.SqlDataReader.Item(System.Int32)">
      <summary>Возвращает значение указанного столбца в собственном формате при наличии заданного порядкового номера столбца.</summary>
      <param name="i">Порядковый номер столбца (от нуля).</param>
      <returns>Значение заданного столбца в собственном формате.</returns>
      <exception cref="T:System.IndexOutOfRangeException">Переданный индекс находился вне диапазона от 0 до значения <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
    </member>
    <member name="P:System.Data.SqlClient.SqlDataReader.Item(System.String)">
      <summary>Возвращает значение заданного столбца в собственном формате при наличии заданного имени столбца.</summary>
      <param name="name">Имя столбца.</param>
      <returns>Значение заданного столбца в собственном формате.</returns>
      <exception cref="T:System.IndexOutOfRangeException">Столбец с указанным именем не найден.</exception>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.NextResult">
      <summary>При чтении результатов пакетных SQL-транзакций перемещает средство чтения данных на следующий результат.</summary>
      <returns>Значение <see langword="true" />, если имеются и другие наборы результатов; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.NextResultAsync(System.Threading.CancellationToken)">
      <summary>Асинхронная версия метода <see cref="M:System.Data.SqlClient.SqlDataReader.NextResult" />, который перемещает средство чтения данных к следующему результату при чтении результатов из пакета инструкций Transact-SQL.  
Токен отмены можно использовать для запроса отказа от операции до истечения времени ожидания команды.  Сведения об исключениях передаются в возвращенном объекте Task.</summary>
      <param name="cancellationToken">Инструкция отмены.</param>
      <returns>Задача, представляющая асинхронную операцию.</returns>
      <exception cref="T:System.InvalidOperationException">Вызов <see cref="M:System.Data.SqlClient.SqlDataReader.NextResultAsync(System.Threading.CancellationToken)" /> более одного раза для того же экземпляра до завершения задачи.  
 <see langword="Context Connection=true" /> задается в строке подключения.</exception>
      <exception cref="T:System.Data.SqlClient.SqlException">SQL Server вернул ошибку во время выполнения текста команды.</exception>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.Read">
      <summary>Перемещает <see cref="T:System.Data.SqlClient.SqlDataReader" /> к следующей записи.</summary>
      <returns>Значение <see langword="true" />, если имеются другие строки; в противном случае — значение <see langword="false" />.</returns>
      <exception cref="T:System.Data.SqlClient.SqlException">SQL Server вернул ошибку во время выполнения текста команды.</exception>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.ReadAsync(System.Threading.CancellationToken)">
      <summary>Асинхронная версия <see cref="M:System.Data.SqlClient.SqlDataReader.Read" />, которая перемещает <see cref="T:System.Data.SqlClient.SqlDataReader" /> к следующей записи.  
Токен отмены можно использовать для запроса отказа от операции до истечения времени ожидания команды. Сведения об исключениях передаются в возвращенном объекте Task.</summary>
      <param name="cancellationToken">Инструкция отмены.</param>
      <returns>Задача, представляющая асинхронную операцию.</returns>
      <exception cref="T:System.InvalidOperationException">Вызов <see cref="M:System.Data.SqlClient.SqlDataReader.ReadAsync(System.Threading.CancellationToken)" /> более одного раза для того же экземпляра до завершения задачи.  
 <see langword="Context Connection=true" /> задается в строке подключения.</exception>
      <exception cref="T:System.Data.SqlClient.SqlException">SQL Server вернул ошибку во время выполнения текста команды.</exception>
    </member>
    <member name="P:System.Data.SqlClient.SqlDataReader.RecordsAffected">
      <summary>Возвращает число измененных, вставленных или удаленных строк при выполнении SQL-транзакций.</summary>
      <returns>Число измененных, вставленных или удаленных строк. Значение 0, если строки не были затронуты или инструкция завершилась ошибкой. Значение -1 для инструкций SELECT.</returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.System#Data#IDataRecord#GetData(System.Int32)">
      <summary>Возвращает <see cref="T:System.Data.IDataReader" /> для указанного порядкового номера столбца.</summary>
      <param name="i">Порядковый номер столбца.</param>
      <returns>Экземпляр <see cref="T:System.Data.IDataReader" /> для заданного порядкового номера столбца.</returns>
    </member>
    <member name="P:System.Data.SqlClient.SqlDataReader.VisibleFieldCount">
      <summary>Возвращает число не скрытых полей в <see cref="T:System.Data.SqlClient.SqlDataReader" />.</summary>
      <returns>Число не скрытых полей.</returns>
    </member>
    <member name="T:System.Data.SqlClient.SQLDebugging">
      <summary>Включено для поддержки отладки приложений. Не предназначено для непосредственного использования.</summary>
    </member>
    <member name="M:System.Data.SqlClient.SQLDebugging.#ctor">
      <summary>Включено для поддержки отладки приложений. Не предназначено для непосредственного использования.</summary>
    </member>
    <member name="T:System.Data.SqlClient.SqlDependency">
      <summary>Объект <see cref="T:System.Data.SqlClient.SqlDependency" /> представляет зависимость уведомления о запросе между приложением и экземпляром SQL Server. Приложение может создавать объект <see cref="T:System.Data.SqlClient.SqlDependency" /> и регистрироваться для получения уведомлений через обработчик событий <see cref="T:System.Data.SqlClient.OnChangeEventH*******ler" />.</summary>
    </member>
    <member name="M:System.Data.SqlClient.SqlDependency.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Data.SqlClient.SqlDependency" />, используя значения по умолчанию.</summary>
    </member>
    <member name="M:System.Data.SqlClient.SqlDependency.#ctor(System.Data.SqlClient.SqlComm*******)">
      <summary>Создает новый экземпляр класса <see cref="T:System.Data.SqlClient.SqlDependency" /> и связывает его с параметром <see cref="T:System.Data.SqlClient.SqlComm*******" />.</summary>
      <param name="comm*******">Объект <see cref="T:System.Data.SqlClient.SqlComm*******" />, который необходимо связать с данным объектом <see cref="T:System.Data.SqlClient.SqlDependency" />. Конструктор создаст объект <see cref="T:System.Data.Sql.SqlNotificationRequest" /> и свяжет его с этой командой.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="comm*******" /> имеет значение NULL.</exception>
      <exception cref="T:System.InvalidOperationException">Объект <see cref="T:System.Data.SqlClient.SqlComm*******" /> уже имеет объект <see cref="T:System.Data.Sql.SqlNotificationRequest" />, связанный с его свойством <see cref="P:System.Data.SqlClient.SqlComm*******.Notification" />, и этот объект <see cref="T:System.Data.Sql.SqlNotificationRequest" /> не связан с данной зависимостью.</exception>
    </member>
    <member name="M:System.Data.SqlClient.SqlDependency.#ctor(System.Data.SqlClient.SqlComm*******,System.String,System.Int32)">
      <summary>Создает новый экземпляр класса <see cref="T:System.Data.SqlClient.SqlDependency" /> и связывает его с параметром <see cref="T:System.Data.SqlClient.SqlComm*******" />, а также задает параметры уведомления и таймаут.</summary>
      <param name="comm*******">Объект <see cref="T:System.Data.SqlClient.SqlComm*******" />, который необходимо связать с данным объектом <see cref="T:System.Data.SqlClient.SqlDependency" />. Конструктор создает объект <see cref="T:System.Data.Sql.SqlNotificationRequest" /> и связывает его с этой командой.</param>
      <param name="options">Параметры запроса уведомления, которые должны использоваться данной зависимостью. Значение <see langword="null" />, чтобы использовать службу по умолчанию.</param>
      <param name="timeout">Время ожидания уведомляющего сообщения в секундах. Значением по умолчанию является 0, указывающее, что следует использовать время ожидания, установленное на сервере.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="comm*******" /> имеет значение NULL.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение таймаута меньше нуля.</exception>
      <exception cref="T:System.InvalidOperationException">Объект <see cref="T:System.Data.SqlClient.SqlComm*******" /> уже имеет объект <see cref="T:System.Data.Sql.SqlNotificationRequest" />, связанный с его свойством <see cref="P:System.Data.SqlClient.SqlComm*******.Notification" />, и этот объект <see cref="T:System.Data.Sql.SqlNotificationRequest" /> не связан с данной зависимостью.  
Предпринята попытка создать экземпляр SqlDependency в SQLCLR.</exception>
    </member>
    <member name="M:System.Data.SqlClient.SqlDependency.AddComm*******Dependency(System.Data.SqlClient.SqlComm*******)">
      <summary>Связывает объект <see cref="T:System.Data.SqlClient.SqlComm*******" /> с этим экземпляром <see cref="T:System.Data.SqlClient.SqlDependency" />.</summary>
      <param name="comm*******">Объект <see cref="T:System.Data.SqlClient.SqlComm*******" />, содержащий инструкцию, для которой возможно уведомление.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="comm*******" /> имеет значение null.</exception>
      <exception cref="T:System.InvalidOperationException">Объект <see cref="T:System.Data.SqlClient.SqlComm*******" /> уже имеет объект <see cref="T:System.Data.Sql.SqlNotificationRequest" />, связанный с его свойством <see cref="P:System.Data.SqlClient.SqlComm*******.Notification" />, и этот объект <see cref="T:System.Data.Sql.SqlNotificationRequest" /> не связан с данной зависимостью.</exception>
    </member>
    <member name="P:System.Data.SqlClient.SqlDependency.HasChanges">
      <summary>Возвращает значение, указывающее, изменился ли какой-либо из результирующих наборов, связанных с данной зависимостью.</summary>
      <returns>Логическое значение, указывающее, изменился ли какой-либо из результирующих наборов.</returns>
    </member>
    <member name="P:System.Data.SqlClient.SqlDependency.Id">
      <summary>Возвращает значение, являющееся уникальным идентификатором данного экземпляра класса <see cref="T:System.Data.SqlClient.SqlDependency" />.</summary>
      <returns>Строковое представление GUID, генерируемого для каждого экземпляра класса <see cref="T:System.Data.SqlClient.SqlDependency" />.</returns>
    </member>
    <member name="E:System.Data.SqlClient.SqlDependency.OnChange">
      <summary>Генерируется при получении уведомления для любой команды, связанной с данным объектом <see cref="T:System.Data.SqlClient.SqlDependency" />.</summary>
    </member>
    <member name="M:System.Data.SqlClient.SqlDependency.Start(System.String)">
      <summary>Запускает прослушиватель для получения уведомлений об изменении зависимости от экземпляра SQL Server, заданного в строке подключения.</summary>
      <param name="connectionString">Строка подключения для экземпляра SQL Server, от которого необходимо получать уведомления об изменении зависимости.</param>
      <returns>Значение <see langword="true" />, если прослушиватель инициализирован успешно; значение <see langword="false" />, если совместимый прослушиватель уже существует.</returns>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="connectionString" /> имеет значение NULL.</exception>
      <exception cref="T:System.InvalidOperationException">Параметр <paramref name="connectionString" /> такой же, как в предыдущем вызове этого метода, но параметры различны.  
Этот метод вызывается из CLR.</exception>
      <exception cref="T:System.Security.SecurityException">Вызывающий код не имеет разрешения на управление доступом для кода (CAS), возвращенного <see cref="T:System.Data.SqlClient.SqlClientPermission" />.</exception>
      <exception cref="T:System.Data.SqlClient.SqlException">Следующий вызов этого метода выполнен с эквивалентным параметром <paramref name="connectionString" />, содержащим другое имя пользователя, или пользователь не является используемым по умолчанию в той же схеме.  
Кроме того, любые базовые исключения SqlClient.</exception>
    </member>
    <member name="M:System.Data.SqlClient.SqlDependency.Start(System.String,System.String)">
      <summary>Запускает прослушиватель для получения уведомлений об изменении зависимости от экземпляра SQL Server, заданного в строке подключения, с использованием заданной очереди сервис-брокера SQL Server.</summary>
      <param name="connectionString">Строка подключения для экземпляра SQL Server, от которого необходимо получать уведомления об изменении зависимости.</param>
      <param name="queue">Будет использоваться существующая очередь сервис-брокера SQL Server. Если значение <see langword="null" />, используется очередь по умолчанию.</param>
      <returns>Значение <see langword="true" />, если прослушиватель инициализирован успешно; значение <see langword="false" />, если совместимый прослушиватель уже существует.</returns>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="connectionString" /> имеет значение NULL.</exception>
      <exception cref="T:System.InvalidOperationException">Параметр <paramref name="connectionString" /> такой же, как в предыдущем вызове этого метода, но параметры различны.  
Этот метод вызывается из CLR.</exception>
      <exception cref="T:System.Security.SecurityException">Вызывающий код не имеет разрешения на управление доступом для кода (CAS), возвращенного <see cref="T:System.Data.SqlClient.SqlClientPermission" />.</exception>
      <exception cref="T:System.Data.SqlClient.SqlException">Следующий вызов этого метода выполнен с эквивалентным параметром <paramref name="connectionString" />, содержащим другое имя пользователя, или пользователь не является используемым по умолчанию в той же схеме.  
Кроме того, любые базовые исключения SqlClient.</exception>
    </member>
    <member name="M:System.Data.SqlClient.SqlDependency.Stop(System.String)">
      <summary>Останавливает прослушиватель для подключения, заданного в предыдущем вызове <see cref="Overload:System.Data.SqlClient.SqlDependency.Start" />.</summary>
      <param name="connectionString">Строка подключения для экземпляра SQL Server, использовавшегося в предыдущем вызове <see cref="M:System.Data.SqlClient.SqlDependency.Start(System.String)" />.</param>
      <returns>Значение <see langword="true" />, если прослушиватель был полностью остановлен; значение <see langword="false" />, если домен <see cref="T:System.AppDomain" /> был отсоединен от прослушивателя, но имеется еще хотя бы один домен <see cref="T:System.AppDomain" />, использующий этот же прослушиватель.</returns>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="connectionString" /> имеет значение NULL.</exception>
      <exception cref="T:System.InvalidOperationException">Этот метод вызывается из SQLCLR.</exception>
      <exception cref="T:System.Security.SecurityException">Вызывающий код не имеет разрешения на управление доступом для кода (CAS), возвращенного <see cref="T:System.Data.SqlClient.SqlClientPermission" />.</exception>
      <exception cref="T:System.Data.SqlClient.SqlException">Произошло базовое исключение SqlClient.</exception>
    </member>
    <member name="M:System.Data.SqlClient.SqlDependency.Stop(System.String,System.String)">
      <summary>Останавливает прослушиватель для подключения, заданного в предыдущем вызове <see cref="Overload:System.Data.SqlClient.SqlDependency.Start" />.</summary>
      <param name="connectionString">Строка подключения для экземпляра SQL Server, использовавшегося в предыдущем вызове <see cref="M:System.Data.SqlClient.SqlDependency.Start(System.String,System.String)" />.</param>
      <param name="queue">Очередь сервис-брокера SQL Server, использовавшаяся в предыдущем вызове <see cref="M:System.Data.SqlClient.SqlDependency.Start(System.String,System.String)" />.</param>
      <returns>Значение <see langword="true" />, если прослушиватель был полностью остановлен; значение <see langword="false" />, если домен <see cref="T:System.AppDomain" /> был отсоединен от прослушивателя, но имеется еще хотя бы один домен <see cref="T:System.AppDomain" />, использующий этот же прослушиватель.</returns>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="connectionString" /> имеет значение NULL.</exception>
      <exception cref="T:System.InvalidOperationException">Этот метод вызывается из SQLCLR.</exception>
      <exception cref="T:System.Security.SecurityException">Вызывающий код не имеет разрешения на управление доступом для кода (CAS), возвращенного <see cref="T:System.Data.SqlClient.SqlClientPermission" />.</exception>
      <exception cref="T:System.Data.SqlClient.SqlException">Кроме того, произошло базовое исключение SqlClient.</exception>
    </member>
    <member name="T:System.Data.SqlClient.SqlEnclaveAttestationParameters">
      <summary>Инкапсулирует сведения, которые SqlClient отправляет в SQL Server, чтобы инициировать процесс аттестации и создания безопасного сеанса с анклавом для вычислений в столбцах, защищенных с помощью Always Encrypted.</summary>
    </member>
    <member name="M:System.Data.SqlClient.SqlEnclaveAttestationParameters.#ctor(System.Int32,System.Byte[],System.Security.Cryptography.ECDiffieHellmanCng)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.SqlClient.SqlEnclaveAttestationParameters" />.</summary>
      <param name="protocol">Протокол аттестации анклава.</param>
      <param name="input">Входные данные протокола аттестации анклава.</param>
      <param name="clientDiffieHellmanKey">Алгоритм Диффи — Хеллмана, инкапсулирующий пару ключей на стороне клиента.</param>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="clientDiffieHellmanKey" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="P:System.Data.SqlClient.SqlEnclaveAttestationParameters.ClientDiffieHellmanKey">
      <summary>Получает алгоритм Диффи — Хеллмана, который инкапсулирует пару ключей, используемых SqlClient для установления безопасного сеанса с анклавом.</summary>
      <returns>Алгоритм Диффи — Хеллмана.</returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlEnclaveAttestationParameters.GetInput">
      <summary>Получает сведения, используемые для запуска процесса аттестации анклава. Формат и содержимое этих сведений зависит от используемого протокола аттестации.</summary>
      <returns>Сведения, используемые SQL Server для выполнения протокола аттестации, который задается с помощью EnclaveAttestationProtocols.</returns>
    </member>
    <member name="P:System.Data.SqlClient.SqlEnclaveAttestationParameters.Protocol">
      <summary>Получает идентификатор протокола аттестации анклава.</summary>
      <returns>Идентификатор протокола аттестации анклава.</returns>
    </member>
    <member name="T:System.Data.SqlClient.SqlEnclaveSession">
      <summary>Инкапсулирует состояние безопасного сеанса между SqlClient и анклавом в SQL Server, который может использоваться для вычислений в зашифрованных столбцах, защищенных с помощью Always Encrypted.</summary>
    </member>
    <member name="M:System.Data.SqlClient.SqlEnclaveSession.#ctor(System.Byte[],System.Int64)">
      <summary>Создает новый экземпляр класса <see cref="T:System.Data.SqlClient.SqlEnclaveSession" />.</summary>
      <param name="sessionKey">Симметричный ключ, используемый для шифрования всех сведений, отправляемых с помощью этого сеанса.</param>
      <param name="sessionId">Идентификатор сеанса.</param>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="sessionKey" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="sessionKey" /> имеет нулевую длину.</exception>
    </member>
    <member name="M:System.Data.SqlClient.SqlEnclaveSession.GetSessionKey">
      <summary>Получает симметричный ключ, который используется SqlClient для шифрования всех данных, передаваемых в анклав с использованием сеанса.</summary>
      <returns>Симметричный ключ.</returns>
    </member>
    <member name="P:System.Data.SqlClient.SqlEnclaveSession.SessionId">
      <summary>Получает идентификатор сеанса.</summary>
      <returns>Идентификатор сеанса.</returns>
    </member>
    <member name="T:System.Data.SqlClient.SqlError">
      <summary>Собирает сведения, относящиеся к предупреждению или ошибке, возвращаемой сервером SQL Server.</summary>
    </member>
    <member name="P:System.Data.SqlClient.SqlError.Class">
      <summary>Возвращает степень серьезности ошибки, возвращаемой SQL Server.</summary>
      <returns>Значение от 1 до 25, указывающее степень серьезности ошибки. Значение по умолчанию — 0.</returns>
    </member>
    <member name="P:System.Data.SqlClient.SqlError.LineNumber">
      <summary>Возвращает номер содержащей ошибку строки в пакете команд Transact-SQL или хранимой процедуре.</summary>
      <returns>Номер содержащей ошибку строки в пакете команд Transact-SQL или хранимой процедуре.</returns>
    </member>
    <member name="P:System.Data.SqlClient.SqlError.Message">
      <summary>Возвращает текст, описывающий ошибку.</summary>
      <returns>Текст описания ошибки. Дополнительные сведения об ошибках SQL Server см. в разделе события ядра базы данных и ошибки.</returns>
    </member>
    <member name="P:System.Data.SqlClient.SqlError.Number">
      <summary>Возвращает число, определяющее тип ошибки.</summary>
      <returns>Число, определяющее тип ошибки.</returns>
    </member>
    <member name="P:System.Data.SqlClient.SqlError.Procedure">
      <summary>Возвращает имя вызвавшей ошибку хранимой процедуры или удаленного вызова процедур (RPC).</summary>
      <returns>Имя хранимой процедуры или RPC. Дополнительные сведения об ошибках SQL Server см. в разделе события ядра базы данных и ошибки.</returns>
    </member>
    <member name="P:System.Data.SqlClient.SqlError.Server">
      <summary>Возвращает имя вызвавшего ошибку экземпляра SQL Server.</summary>
      <returns>Имя экземпляра SQL Server.</returns>
    </member>
    <member name="P:System.Data.SqlClient.SqlError.Source">
      <summary>Возвращает имя вызвавшего ошибку поставщика.</summary>
      <returns>Имя вызвавшего ошибку поставщика.</returns>
    </member>
    <member name="P:System.Data.SqlClient.SqlError.State">
      <summary>Некоторые сообщения об ошибках могут вызываться в нескольких точках в коде для ядра СУБД. Например, ошибка 1105 может возникнуть из-за различных условий. При каждом определенном условии, которое вызывает ошибку, присваивается уникальный код состояния.</summary>
      <returns>Код состояния.</returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlError.ToString">
      <summary>Возвращает полный текст сообщения об ошибке.</summary>
      <returns>Полный текст сообщения об ошибке.</returns>
    </member>
    <member name="T:System.Data.SqlClient.SqlErrorCollection">
      <summary>Собирает все ошибки, созданные поставщиком данных .NET Framework для SQL Server. Этот класс не наследуется.</summary>
    </member>
    <member name="M:System.Data.SqlClient.SqlErrorCollection.CopyTo(System.Array,System.Int32)">
      <summary>Копирует элементы коллекции <see cref="T:System.Data.SqlClient.SqlErrorCollection" /> в массив <see cref="T:System.Array" /> начиная с заданного индекса.</summary>
      <param name="array">
        <see cref="T:System.Array" />, в который будут копироваться элементы.</param>
      <param name="index">Индекс, начиная с которого происходит копирование в параметр <paramref name="array" />.</param>
      <exception cref="T:System.ArgumentException">Сумма <paramref name="index" /> и количества элементов в коллекции <see cref="T:System.Data.SqlClient.SqlErrorCollection" /> превышает <see cref="P:System.Array.Length" /> массива <see cref="T:System.Array" />.</exception>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="array" /> — <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Индекс <paramref name="index" /> является недопустимым для массива <paramref name="array" />.</exception>
    </member>
    <member name="M:System.Data.SqlClient.SqlErrorCollection.CopyTo(System.Data.SqlClient.SqlError[],System.Int32)">
      <summary>Копирует элементы коллекции <see cref="T:System.Data.SqlClient.SqlErrorCollection" /> в коллекцию <see cref="T:System.Data.SqlClient.SqlErrorCollection" /> начиная с заданного индекса.</summary>
      <param name="array">
        <see cref="T:System.Data.SqlClient.SqlErrorCollection" />, куда будут копироваться элементы.</param>
      <param name="index">Индекс, начиная с которого происходит копирование в параметр <paramref name="array" />.</param>
      <exception cref="T:System.ArgumentException">Сумма индекса <paramref name="index" /> и числа элементов в коллекции <see cref="T:System.Data.SqlClient.SqlErrorCollection" /> больше длины коллекции <see cref="T:System.Data.SqlClient.SqlErrorCollection" /> .</exception>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="array" /> — <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Индекс <paramref name="index" /> является недопустимым для массива <paramref name="array" />.</exception>
    </member>
    <member name="P:System.Data.SqlClient.SqlErrorCollection.Count">
      <summary>Получает число ошибок в коллекции.</summary>
      <returns>Общее число ошибок в коллекции.</returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlErrorCollection.GetEnumerator">
      <summary>Возвращает перечислитель, осуществляющий перебор элементов списка <see cref="T:System.Data.SqlClient.SqlErrorCollection" />.</summary>
      <returns>Интерфейс <see cref="T:System.Collections.IEnumerator" /> для <see cref="T:System.Data.SqlClient.SqlErrorCollection" />.</returns>
    </member>
    <member name="P:System.Data.SqlClient.SqlErrorCollection.Item(System.Int32)">
      <summary>Возвращает ошибку с указанным индексом.</summary>
      <param name="index">Начинающийся с нуля индекс извлекаемой ошибки.</param>
      <returns>
        <see cref="T:System.Data.SqlClient.SqlError" />, который содержит ошибку по указанному индексу.</returns>
      <exception cref="T:System.IndexOutOfRangeException">Параметр индекса находится за границами массива.</exception>
    </member>
    <member name="P:System.Data.SqlClient.SqlErrorCollection.System#Collections#ICollection#IsSynchronized">
      <summary>Описание этого члена см. в разделе <see cref="P:System.Collections.ICollection.IsSynchronized" />.</summary>
      <returns>
        <see langword="true" />, если доступ к классу <see cref="T:System.Collections.ICollection" /> является синхронизированным (потокобезопасным); в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.SqlClient.SqlErrorCollection.System#Collections#ICollection#SyncRoot">
      <summary>Описание этого члена см. в разделе <see cref="P:System.Collections.ICollection.SyncRoot" />.</summary>
      <returns>Объект, который может использоваться для синхронизации доступа к <see cref="T:System.Collections.ICollection" />.</returns>
    </member>
    <member name="T:System.Data.SqlClient.SqlException">
      <summary>Исключение, которое возникает, когда SQL Server возвращает предупреждение или ошибку. Этот класс не наследуется.</summary>
    </member>
    <member name="P:System.Data.SqlClient.SqlException.Class">
      <summary>Получает уровень важности ошибки от поставщика данных платформы .NET Framework для SQL Server.</summary>
      <returns>Значение от 1 до 25, указывающее степень серьезности ошибки.</returns>
    </member>
    <member name="P:System.Data.SqlClient.SqlException.ClientConnectionId">
      <summary>Представляет идентификатор клиентского соединения. Дополнительные сведения см. в разделе Трассировка данных в ADO.NET.</summary>
      <returns>Идентификатор клиентского соединения.</returns>
    </member>
    <member name="P:System.Data.SqlClient.SqlException.Errors">
      <summary>Получает коллекцию из одного или нескольких объектов <see cref="T:System.Data.SqlClient.SqlError" />, которые предоставляют детальные сведения об исключениях, создаваемых поставщиком данных платформой .NET Framework для SQL Server.</summary>
      <returns>Накопленные экземпляры класса <see cref="T:System.Data.SqlClient.SqlError" />.</returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Заполняет объект <see cref="T:System.Runtime.Serialization.SerializationInfo" /> сведениями об исключении.</summary>
      <param name="si">Объект <see cref="T:System.Runtime.Serialization.SerializationInfo" />, хранящий сериализованные данные объекта, относящиеся к выдаваемому исключению.</param>
      <param name="context">Объект <see cref="T:System.Runtime.Serialization.StreamingContext" />, содержащий контекстные сведения об источнике или назначении.</param>
      <exception cref="T:System.ArgumentNullException">Значением параметра <paramref name="si" /> является пустая ссылка (<see langword="Nothing" /> в Visual Basic).</exception>
    </member>
    <member name="P:System.Data.SqlClient.SqlException.LineNumber">
      <summary>Возвращает номер вызвавшей ошибку строки пакета команд Transact-SQL или хранимой процедуры.</summary>
      <returns>Номер вызвавшей ошибку строки пакета команд Transact-SQL или хранимой процедуры.</returns>
    </member>
    <member name="P:System.Data.SqlClient.SqlException.Number">
      <summary>Возвращает число, определяющее тип ошибки.</summary>
      <returns>Число, определяющее тип ошибки.</returns>
    </member>
    <member name="P:System.Data.SqlClient.SqlException.Procedure">
      <summary>Возвращает имя вызвавшей ошибку хранимой процедуры или удаленного вызова процедур (RPC).</summary>
      <returns>Имя хранимой процедуры или RPC.</returns>
    </member>
    <member name="P:System.Data.SqlClient.SqlException.Server">
      <summary>Возвращает имя компьютера, на котором выполняется вызвавший ошибку экземпляр SQL Server.</summary>
      <returns>Имя компьютера, на котором выполняется экземпляр SQL Server.</returns>
    </member>
    <member name="P:System.Data.SqlClient.SqlException.Source">
      <summary>Возвращает имя вызвавшего ошибку поставщика.</summary>
      <returns>Имя вызвавшего ошибку поставщика.</returns>
    </member>
    <member name="P:System.Data.SqlClient.SqlException.State">
      <summary>Получает от SQL Server числовой код ошибки, предоставляющий ошибку, предупреждение или сообщение о том, что данные не обнаружены. Дополнительные сведения о расшифровке этих значений см. в статье События и ошибки ядра СУБД.</summary>
      <returns>Число, представляющее код ошибки.</returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlException.ToString">
      <summary>Возвращает строку, представляющую текущий объект <see cref="T:System.Data.SqlClient.SqlException" /> и содержащую идентификатор клиентского соединения (дополнительные сведения см. в разделе <see cref="P:System.Data.SqlClient.SqlException.ClientConnectionId" />).</summary>
      <returns>Строка, представляющая текущий объект <see cref="T:System.Data.SqlClient.SqlException" />.<see cref="T:System.String" />.</returns>
    </member>
    <member name="T:System.Data.SqlClient.SqlInfoMessageEventArgs">
      <summary>Предоставляет данные для события <see cref="E:System.Data.SqlClient.SqlConnection.InfoMessage" />.</summary>
    </member>
    <member name="P:System.Data.SqlClient.SqlInfoMessageEventArgs.Errors">
      <summary>Возвращает коллекцию предупреждений, отправленных сервером.</summary>
      <returns>Коллекция предупреждений, отправленных сервером.</returns>
    </member>
    <member name="P:System.Data.SqlClient.SqlInfoMessageEventArgs.Message">
      <summary>Возвращает полный текст ошибки, отправленной из базы данных.</summary>
      <returns>Полный текст ошибки.</returns>
    </member>
    <member name="P:System.Data.SqlClient.SqlInfoMessageEventArgs.Source">
      <summary>Получает имя объекта, вызвавшего ошибку.</summary>
      <returns>Имя объекта, вызвавшего ошибку.</returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlInfoMessageEventArgs.ToString">
      <summary>Извлекает строковое представление события <see cref="E:System.Data.SqlClient.SqlConnection.InfoMessage" />.</summary>
      <returns>Строка, представляющая событие <see cref="E:System.Data.SqlClient.SqlConnection.InfoMessage" />.</returns>
    </member>
    <member name="T:System.Data.SqlClient.SqlInfoMessageEventH*******ler">
      <summary>Представляет метод, обрабатывающий событие <see cref="E:System.Data.SqlClient.SqlConnection.InfoMessage" /> объекта <see cref="T:System.Data.SqlClient.SqlConnection" />.</summary>
      <param name="sender">Источник события.</param>
      <param name="e">Объект <see cref="T:System.Data.SqlClient.SqlInfoMessageEventArgs" />, содержащий данные события.</param>
    </member>
    <member name="T:System.Data.SqlClient.SqlNotificationEventArgs">
      <summary>Представляет набор аргументов, передаваемых обработчику событий уведомления.</summary>
    </member>
    <member name="M:System.Data.SqlClient.SqlNotificationEventArgs.#ctor(System.Data.SqlClient.SqlNotificationType,System.Data.SqlClient.SqlNotificationInfo,System.Data.SqlClient.SqlNotificationSource)">
      <summary>Создает новый экземпляр объекта <see cref="T:System.Data.SqlClient.SqlNotificationEventArgs" />.</summary>
      <param name="type">Значение <see cref="T:System.Data.SqlClient.SqlNotificationType" />, указывающее причину, по которой сгенерировано данное уведомление: реальное изменение или подписка.</param>
      <param name="info">Значение <see cref="T:System.Data.SqlClient.SqlNotificationInfo" />, указывающее причину, по которой сгенерировано данное уведомление. Это может быть реальное изменение данных в хранилище или тот факт, что уведомление стало недействительным (например, из-за таймаута).</param>
      <param name="source">Значение <see cref="T:System.Data.SqlClient.SqlNotificationSource" />, указывающее источник, сгенерировавший данное уведомление.</param>
    </member>
    <member name="P:System.Data.SqlClient.SqlNotificationEventArgs.Info">
      <summary>Получает значение, показывающее причину события уведомления, например изменение строки в базе данных или усечение таблицы.</summary>
      <returns>Причина события уведомления.</returns>
    </member>
    <member name="P:System.Data.SqlClient.SqlNotificationEventArgs.Source">
      <summary>Получает значение, которое указывает источник, создавший уведомление, например изменение данных запроса или состояние базы данных.</summary>
      <returns>Источник уведомления.</returns>
    </member>
    <member name="P:System.Data.SqlClient.SqlNotificationEventArgs.Type">
      <summary>Возвращает или задает, указывающее причину, по которой сгенерировано данное уведомление: реальное изменение или подписка.</summary>
      <returns>Значение, показывающее, создано ли уведомление изменением или подпиской.</returns>
    </member>
    <member name="T:System.Data.SqlClient.SqlNotificationInfo">
      <summary>Это перечисление предоставляет дополнительную информацию о различных уведомлениях, которые могут быть получены обработчиком события зависимости.</summary>
    </member>
    <member name="F:System.Data.SqlClient.SqlNotificationInfo.AlreadyChanged">
      <summary>Объект <see langword="SqlDependency" /> уже получал уведомления, и новые команды не могут быть в него добавлены.</summary>
    </member>
    <member name="F:System.Data.SqlClient.SqlNotificationInfo.Alter">
      <summary>Изменился базовый серверный объект, связанный с запросом.</summary>
    </member>
    <member name="F:System.Data.SqlClient.SqlNotificationInfo.Delete">
      <summary>Данные изменены инструкцией DELETE.</summary>
    </member>
    <member name="F:System.Data.SqlClient.SqlNotificationInfo.Drop">
      <summary>Удален базовый серверный объект, связанный с запросом.</summary>
    </member>
    <member name="F:System.Data.SqlClient.SqlNotificationInfo.Error">
      <summary>Произошла внутренняя ошибка сервера.</summary>
    </member>
    <member name="F:System.Data.SqlClient.SqlNotificationInfo.Expired">
      <summary>Объект <see langword="SqlDependency" /> устарел.</summary>
    </member>
    <member name="F:System.Data.SqlClient.SqlNotificationInfo.Insert">
      <summary>Данные изменены инструкцией INSERT.</summary>
    </member>
    <member name="F:System.Data.SqlClient.SqlNotificationInfo.Invalid">
      <summary>Задана инструкция, для которой не могут генерироваться уведомления (например, UPDATE).</summary>
    </member>
    <member name="F:System.Data.SqlClient.SqlNotificationInfo.Isolation">
      <summary>Инструкция выполнена с недопустимым уровнем изоляции (например, изоляцией снимка).</summary>
    </member>
    <member name="F:System.Data.SqlClient.SqlNotificationInfo.Merge">
      <summary>Используется, чтобы различить причину отправки уведомления о запросе на стороне сервера.</summary>
    </member>
    <member name="F:System.Data.SqlClient.SqlNotificationInfo.Options">
      <summary>Параметр SET не задан необходимым образом во время подписки.</summary>
    </member>
    <member name="F:System.Data.SqlClient.SqlNotificationInfo.PreviousFire">
      <summary>Предыдущая инструкция вызвала генерацию уведомлений о запросе для текущей транзакции.</summary>
    </member>
    <member name="F:System.Data.SqlClient.SqlNotificationInfo.Query">
      <summary>Задана инструкция SELECT, для которой не могут генерироваться уведомления.</summary>
    </member>
    <member name="F:System.Data.SqlClient.SqlNotificationInfo.Resource">
      <summary>Генерируется в результате загрузки серверных ресурсов.</summary>
    </member>
    <member name="F:System.Data.SqlClient.SqlNotificationInfo.Restart">
      <summary>Сервер перезапущен (при перезапуске рассылаются уведомления).</summary>
    </member>
    <member name="F:System.Data.SqlClient.SqlNotificationInfo.TemplateLimit">
      <summary>Запрос подписки вызывает превышение максимального допустимого лимита количества шаблонов для одной из целевых таблиц.</summary>
    </member>
    <member name="F:System.Data.SqlClient.SqlNotificationInfo.Truncate">
      <summary>Усечены одна или несколько таблиц.</summary>
    </member>
    <member name="F:System.Data.SqlClient.SqlNotificationInfo.Unknown">
      <summary>Используется, когда отправленный сервером информационный параметр не распознан клиентом.</summary>
    </member>
    <member name="F:System.Data.SqlClient.SqlNotificationInfo.Update">
      <summary>Данные изменены инструкцией UPDATE.</summary>
    </member>
    <member name="T:System.Data.SqlClient.SqlNotificationSource">
      <summary>Указывает источник уведомления, полученного обработчиком события зависимости.</summary>
    </member>
    <member name="F:System.Data.SqlClient.SqlNotificationSource.Client">
      <summary>Получено уведомление, инициированное клиентом, такое как клиентский таймаут, или уведомление о попытке добавления команды в зависимость, которая уже действует.</summary>
    </member>
    <member name="F:System.Data.SqlClient.SqlNotificationSource.Data">
      <summary>Данные изменились, например, выполнена операция вставки, обновления, удаления или усечения.</summary>
    </member>
    <member name="F:System.Data.SqlClient.SqlNotificationSource.Database">
      <summary>Состояние базы данных изменилось, например, связанная с запросом база данных удалена или отсоединена.</summary>
    </member>
    <member name="F:System.Data.SqlClient.SqlNotificationSource.Environment">
      <summary>Среда выполнения не совместима с уведомлениями; например, задан уровень изоляции снимка или несовместим один или более параметров SET.</summary>
    </member>
    <member name="F:System.Data.SqlClient.SqlNotificationSource.Execution">
      <summary>При выполнении произошла ошибка во время выполнения.</summary>
    </member>
    <member name="F:System.Data.SqlClient.SqlNotificationSource.Object">
      <summary>Объект базы данных изменился; например, связанный с запросом объект удален или изменен.</summary>
    </member>
    <member name="F:System.Data.SqlClient.SqlNotificationSource.Owner">
      <summary>Только для внутреннего использования, а не для непосредственного использования в коде.</summary>
    </member>
    <member name="F:System.Data.SqlClient.SqlNotificationSource.Statement">
      <summary>Инструкция Transact-SQL не поддерживает уведомления; например, выполняется инструкция SELECT, для которой не могут генерироваться уведомления, или инструкция, отличная от SELECT.</summary>
    </member>
    <member name="F:System.Data.SqlClient.SqlNotificationSource.System">
      <summary>Произошло событие, связанное с системой. Например, произошла внутренняя ошибка, перезапущен сервере или интенсивное использование ресурса привело к недействительности.</summary>
    </member>
    <member name="F:System.Data.SqlClient.SqlNotificationSource.Timeout">
      <summary>Истекло время ожидания подписки.</summary>
    </member>
    <member name="F:System.Data.SqlClient.SqlNotificationSource.Unknown">
      <summary>Используется, когда отправленный сервером параметр источника не распознан клиентом.</summary>
    </member>
    <member name="T:System.Data.SqlClient.SqlNotificationType">
      <summary>Определяет разные типы уведомлений, которые могут быть получены обработчиком события <see cref="T:System.Data.SqlClient.OnChangeEventH*******ler" /> в параметре <see cref="T:System.Data.SqlClient.SqlNotificationEventArgs" />.</summary>
    </member>
    <member name="F:System.Data.SqlClient.SqlNotificationType.Change">
      <summary>Изменились данные на отслеживаемом сервере. Используйте элемент <see cref="T:System.Data.SqlClient.SqlNotificationInfo" /> для получения подробных сведений об изменении.</summary>
    </member>
    <member name="F:System.Data.SqlClient.SqlNotificationType.Subscribe">
      <summary>Не удалось создать подписку на уведомление. Для определения причины неудачи используйте входящий в состав объекта <see cref="T:System.Data.SqlClient.SqlNotificationEventArgs" /> элемент <see cref="T:System.Data.SqlClient.SqlNotificationInfo" />.</summary>
    </member>
    <member name="F:System.Data.SqlClient.SqlNotificationType.Unknown">
      <summary>Используется, когда отправленный сервером параметр типа не распознан клиентом.</summary>
    </member>
    <member name="T:System.Data.SqlClient.SqlParameter">
      <summary>Представляет параметр для объекта <see cref="T:System.Data.SqlClient.SqlComm*******" /> и (необязательно) его сопоставление со столбцами <see cref="T:System.Data.DataSet" />. Этот класс не наследуется. Дополнительные сведения о параметрах см. в разделе Настройка параметров и типов данных параметров.</summary>
    </member>
    <member name="M:System.Data.SqlClient.SqlParameter.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.SqlClient.SqlParameter" />.</summary>
    </member>
    <member name="M:System.Data.SqlClient.SqlParameter.#ctor(System.String,System.Data.SqlDbType)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.SqlClient.SqlParameter" />, использующий имя параметра и тип данных.</summary>
      <param name="parameterName">Имя сопоставляемого параметра.</param>
      <param name="dbType">Одно из значений <see cref="T:System.Data.SqlDbType" />.</param>
      <exception cref="T:System.ArgumentException">Значение, передаваемое в параметре <paramref name="dbType" />, имеет недопустимый тип внутренних данных.</exception>
    </member>
    <member name="M:System.Data.SqlClient.SqlParameter.#ctor(System.String,System.Data.SqlDbType,System.Int32)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.SqlClient.SqlParameter" />, использующий имя параметра, <see cref="T:System.Data.SqlDbType" /> и размер.</summary>
      <param name="parameterName">Имя сопоставляемого параметра.</param>
      <param name="dbType">Одно из значений <see cref="T:System.Data.SqlDbType" />.</param>
      <param name="size">Длина параметра.</param>
      <exception cref="T:System.ArgumentException">Значение, передаваемое в параметре <paramref name="dbType" />, имеет недопустимый тип внутренних данных.</exception>
    </member>
    <member name="M:System.Data.SqlClient.SqlParameter.#ctor(System.String,System.Data.SqlDbType,System.Int32,System.Data.ParameterDirection,System.Boolean,System.Byte,System.Byte,System.String,System.Data.DataRowVersion,System.Object)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.SqlClient.SqlParameter" />, использующий имя параметра, тип, размер, направление <see cref="T:System.Data.ParameterDirection" />, точность, масштаб, исходный столбец, версию <see cref="T:System.Data.DataRowVersion" /> и значение параметра.</summary>
      <param name="parameterName">Имя сопоставляемого параметра.</param>
      <param name="dbType">Одно из значений <see cref="T:System.Data.SqlDbType" />.</param>
      <param name="size">Длина параметра.</param>
      <param name="direction">Одно из значений <see cref="T:System.Data.ParameterDirection" />.</param>
      <param name="isNullable">Значение <see langword="true" />, если поле допускает значение NULL, значение <see langword="false" /> — в противном случае.</param>
      <param name="precision">Общее число разрядов слева и справа от десятичной запятой, до которого вычисляется значения <see cref="P:System.Data.SqlClient.SqlParameter.Value" />.</param>
      <param name="scale">Общее число десятичных разрядов, до которого вычисляется значение <see cref="P:System.Data.SqlClient.SqlParameter.Value" />.</param>
      <param name="sourceColumn">Имя исходного столбца (<see cref="P:System.Data.SqlClient.SqlParameter.SourceColumn" />), если этот параметр <see cref="T:System.Data.SqlClient.SqlParameter" /> используется при вызове <see cref="Overload:System.Data.Common.DbDataAdapter.Update" />.</param>
      <param name="sourceVersion">Одно из значений <see cref="T:System.Data.DataRowVersion" />.</param>
      <param name="value">Объект <see cref="T:System.Object" />, который является значением <see cref="T:System.Data.SqlClient.SqlParameter" />.</param>
      <exception cref="T:System.ArgumentException">Значение, передаваемое в параметре <paramref name="dbType" />, имеет недопустимый тип внутренних данных.</exception>
    </member>
    <member name="M:System.Data.SqlClient.SqlParameter.#ctor(System.String,System.Data.SqlDbType,System.Int32,System.Data.ParameterDirection,System.Byte,System.Byte,System.String,System.Data.DataRowVersion,System.Boolean,System.Object,System.String,System.String,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.SqlClient.SqlParameter" />, использующий имя параметра, тип параметра, длину параметра, направление, точность, масштаб, имя исходного столбца, одно из значений <see cref="T:System.Data.DataRowVersion" />, логическое значение для сопоставления исходных столбцов, значение для <see langword="SqlParameter" />, имя базы данных, в которой находится коллекция схем для данного экземпляра XML, реляционную схему-владельца, в которой находится коллекция схем для данного экземпляра XML, и имя коллекции схем для этого параметра.</summary>
      <param name="parameterName">Имя сопоставляемого параметра.</param>
      <param name="dbType">Одно из значений <see cref="T:System.Data.SqlDbType" />.</param>
      <param name="size">Длина параметра.</param>
      <param name="direction">Одно из значений <see cref="T:System.Data.ParameterDirection" />.</param>
      <param name="precision">Общее число разрядов слева и справа от десятичной запятой, до которого вычисляется значения <see cref="P:System.Data.SqlClient.SqlParameter.Value" />.</param>
      <param name="scale">Общее число десятичных разрядов, до которого вычисляется значение <see cref="P:System.Data.SqlClient.SqlParameter.Value" />.</param>
      <param name="sourceColumn">Имя исходного столбца (<see cref="P:System.Data.SqlClient.SqlParameter.SourceColumn" />), если этот параметр <see cref="T:System.Data.SqlClient.SqlParameter" /> используется при вызове <see cref="Overload:System.Data.Common.DbDataAdapter.Update" />.</param>
      <param name="sourceVersion">Одно из значений <see cref="T:System.Data.DataRowVersion" />.</param>
      <param name="sourceColumnNullMapping">
        <see langword="true" />, если исходный столбец допускает значение NULL, <see langword="false" /> — в противном случае.</param>
      <param name="value">Объект <see cref="T:System.Object" />, который является значением <see cref="T:System.Data.SqlClient.SqlParameter" />.</param>
      <param name="xmlSchemaCollectionDatabase">Имя базы данных, в которой находится коллекция схем для данного экземпляра XML.</param>
      <param name="xmlSchemaCollectionOwningSchema">Реляционная схема-владелец, в которой находится коллекция схем для данного экземпляра XML.</param>
      <param name="xmlSchemaCollectionName">Имя коллекции схем для данного параметра.</param>
    </member>
    <member name="M:System.Data.SqlClient.SqlParameter.#ctor(System.String,System.Data.SqlDbType,System.Int32,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.SqlClient.SqlParameter" />, использующий имя параметра, <see cref="T:System.Data.SqlDbType" />, размер и имя исходного столбца.</summary>
      <param name="parameterName">Имя сопоставляемого параметра.</param>
      <param name="dbType">Одно из значений <see cref="T:System.Data.SqlDbType" />.</param>
      <param name="size">Длина параметра.</param>
      <param name="sourceColumn">Имя исходного столбца (<see cref="P:System.Data.SqlClient.SqlParameter.SourceColumn" />), если этот <see cref="T:System.Data.SqlClient.SqlParameter" /> используется при вызове <see cref="Overload:System.Data.Common.DbDataAdapter.Update" />.</param>
      <exception cref="T:System.ArgumentException">Значение, передаваемое в параметре <paramref name="dbType" />, имеет недопустимый тип внутренних данных.</exception>
    </member>
    <member name="M:System.Data.SqlClient.SqlParameter.#ctor(System.String,System.Object)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.SqlClient.SqlParameter" />, использующий имя параметра и значение нового объекта <see cref="T:System.Data.SqlClient.SqlParameter" />.</summary>
      <param name="parameterName">Имя сопоставляемого параметра.</param>
      <param name="value">Объект <see cref="T:System.Object" />, который является значением <see cref="T:System.Data.SqlClient.SqlParameter" />.</param>
    </member>
    <member name="P:System.Data.SqlClient.SqlParameter.CompareInfo">
      <summary>Получает или задает объект <see cref="T:System.Globalization.CompareInfo" />, который определяет порядок сравнения строк для этого параметра.</summary>
      <returns>Объект <see cref="T:System.Globalization.CompareInfo" />, который определяет сравнение строк для этого параметра.</returns>
    </member>
    <member name="P:System.Data.SqlClient.SqlParameter.DbType">
      <summary>Возвращает или устанавливает тип <see cref="T:System.Data.SqlDbType" /> параметра.</summary>
      <returns>Одно из значений <see cref="T:System.Data.SqlDbType" />. Значение по умолчанию — <see langword="NVarChar" />.</returns>
    </member>
    <member name="P:System.Data.SqlClient.SqlParameter.Direction">
      <summary>Возвращает или задает значение, указывающее, является ли параметр только входным, только выходным, двунаправленным или параметром, возвращаемым хранимой процедурой.</summary>
      <returns>Одно из значений <see cref="T:System.Data.ParameterDirection" />. Значение по умолчанию — <see langword="Input" />.</returns>
      <exception cref="T:System.ArgumentException">Для свойства не задано одно из допустимых значений типа <see cref="T:System.Data.ParameterDirection" />.</exception>
    </member>
    <member name="P:System.Data.SqlClient.SqlParameter.ForceColumnEncryption">
      <summary>Обеспечивает шифрование параметра при использовании функции Always Encrypted. Если SQL Server сообщает драйверу, что параметр шифровать не нужно, запрос, использующий этот параметр, завершится ошибкой. Это свойство обеспечивает дополнительную защиту от атак на систему безопасности, которые подразумевают предоставление скомпрометированным сервером SQL Server неверных метаданных шифрования клиенту, что может привести к раскрытию данных.</summary>
      <returns>Значение <see langword="true" />, если для параметра задано принудительное шифрование столбца; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.SqlClient.SqlParameter.IsNullable">
      <summary>Возвращает или задает значение, указывающее, принимает ли этот параметр значения NULL. <see cref="P:System.Data.SqlClient.SqlParameter.IsNullable" /> не используется для проверки значения параметра и не препятствует отправке или получению значения NULL при выполнении команды.</summary>
      <returns>
        <see langword="true" />, если допускаются значения null. В противном случае — <see langword="false" />. Значение по умолчанию — <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.SqlClient.SqlParameter.LocaleId">
      <summary>Получает или задает идентификатор языкового стандарта, определяющий соглашения и язык для конкретного региона.</summary>
      <returns>Идентификатор языкового стандарта, связанный с параметром.</returns>
    </member>
    <member name="P:System.Data.SqlClient.SqlParameter.Offset">
      <summary>Получает или задает смещение для свойства <see cref="P:System.Data.SqlClient.SqlParameter.Value" />.</summary>
      <returns>Смещение к <see cref="P:System.Data.SqlClient.SqlParameter.Value" />. Значение по умолчанию — 0.</returns>
    </member>
    <member name="P:System.Data.SqlClient.SqlParameter.ParameterName">
      <summary>Возвращает или задает имя таблицы для объекта <see cref="T:System.Data.SqlClient.SqlParameter" />.</summary>
      <returns>Имя <see cref="T:System.Data.SqlClient.SqlParameter" />. Значение по умолчанию - пустая строка.</returns>
    </member>
    <member name="P:System.Data.SqlClient.SqlParameter.Precision">
      <summary>Возвращает или задает максимальное число разрядов, используемых для представления свойства <see cref="P:System.Data.SqlClient.SqlParameter.Value" />.</summary>
      <returns>Максимальное число разрядов, используемых для представления свойства <see cref="P:System.Data.SqlClient.SqlParameter.Value" />. Значение по умолчанию — 0. Оно указывает, что точность значения <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> задает поставщик данных.</returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlParameter.ResetDbType">
      <summary>Сбрасывает тип, связанный с параметром <see cref="T:System.Data.SqlClient.SqlParameter" />.</summary>
    </member>
    <member name="M:System.Data.SqlClient.SqlParameter.ResetSqlDbType">
      <summary>Сбрасывает тип, связанный с параметром <see cref="T:System.Data.SqlClient.SqlParameter" />.</summary>
    </member>
    <member name="P:System.Data.SqlClient.SqlParameter.Scale">
      <summary>Возвращает или задает число десятичных разрядов, до которых вычисляется значение <see cref="P:System.Data.SqlClient.SqlParameter.Value" />.</summary>
      <returns>Число десятичных разрядов, до которых вычисляется значение <see cref="P:System.Data.SqlClient.SqlParameter.Value" />. Значение по умолчанию — 0.</returns>
    </member>
    <member name="P:System.Data.SqlClient.SqlParameter.Size">
      <summary>Возвращает или задает максимальную длину данных (в байтах) в столбце.</summary>
      <returns>Максимальная длина данных (в байтах) в столбце. Значение по умолчанию определяется исходя из значения параметра.</returns>
    </member>
    <member name="P:System.Data.SqlClient.SqlParameter.SourceColumn">
      <summary>Получает или задает имя исходного столбца, сопоставленного <see cref="T:System.Data.DataSet" /> и используемого для загрузки или возвращения значения <see cref="P:System.Data.SqlClient.SqlParameter.Value" />.</summary>
      <returns>Имя исходного столбца, сопоставленного <see cref="T:System.Data.DataSet" />. Значение по умолчанию - пустая строка.</returns>
    </member>
    <member name="P:System.Data.SqlClient.SqlParameter.SourceColumnNullMapping">
      <summary>Возвращает или задает значение, показывающее, допускает ли исходный столбец значение NULL. Это позволяет <see cref="T:System.Data.SqlClient.SqlComm*******Builder" /> правильно создавать инструкции Update для столбцов со значением NULL.</summary>
      <returns>Значение <see langword="true" />, если исходный столбец допускает значение NULL; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.SqlClient.SqlParameter.SourceVersion">
      <summary>Возвращает или задает значение <see cref="T:System.Data.DataRowVersion" /> при загрузке <see cref="P:System.Data.SqlClient.SqlParameter.Value" />.</summary>
      <returns>Одно из значений <see cref="T:System.Data.DataRowVersion" />. Значение по умолчанию — <see langword="Current" />.</returns>
    </member>
    <member name="P:System.Data.SqlClient.SqlParameter.SqlDbType">
      <summary>Возвращает или устанавливает тип <see cref="T:System.Data.SqlDbType" /> параметра.</summary>
      <returns>Одно из значений <see cref="T:System.Data.SqlDbType" />. Значение по умолчанию — <see langword="NVarChar" />.</returns>
    </member>
    <member name="P:System.Data.SqlClient.SqlParameter.SqlValue">
      <summary>Возвращает или задает значение параметра как тип SQL.</summary>
      <returns>Объект <see cref="T:System.Object" />, который является значением параметра, использующего типы SQL. Значение по умолчанию — null.</returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlParameter.System#ICloneable#Clone">
      <summary>Описание этого члена см. в разделе <see cref="M:System.ICloneable.Clone" />.</summary>
      <returns>Новый объект <see cref="T:System.Object" />, который является копией данного экземпляра.</returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlParameter.ToString">
      <summary>Возвращает строку, содержащую имя <see cref="P:System.Data.SqlClient.SqlParameter.ParameterName" />.</summary>
      <returns>Строка, содержащая имя <see cref="P:System.Data.SqlClient.SqlParameter.ParameterName" />.</returns>
    </member>
    <member name="P:System.Data.SqlClient.SqlParameter.TypeName">
      <summary>Возвращает или задает имя типа для возвращающего табличное значение параметра.</summary>
      <returns>Имя типа для возвращающего табличное значение параметра.</returns>
    </member>
    <member name="P:System.Data.SqlClient.SqlParameter.UdtTypeName">
      <summary>Возвращает или задает объект <see langword="string" />, представляющий определяемый пользователем тип в качестве параметра.</summary>
      <returns>Объект <see langword="string" />, представляющий полное имя определяемого пользователем типа в базе данных.</returns>
    </member>
    <member name="P:System.Data.SqlClient.SqlParameter.Value">
      <summary>Возвращает или задает значение параметра.</summary>
      <returns>Объект <see cref="T:System.Object" />, который является значением параметра. Значение по умолчанию — null.</returns>
    </member>
    <member name="P:System.Data.SqlClient.SqlParameter.XmlSchemaCollectionDatabase">
      <summary>Возвращает имя базы данных, в которой находится коллекция схем для данного экземпляра XML.</summary>
      <returns>Имя базы данных, в которой находится коллекция схем для данного экземпляра XML.</returns>
    </member>
    <member name="P:System.Data.SqlClient.SqlParameter.XmlSchemaCollectionName">
      <summary>Возвращает имя коллекции схем для данного экземпляра XML.</summary>
      <returns>Имя коллекции схем для данного экземпляра XML.</returns>
    </member>
    <member name="P:System.Data.SqlClient.SqlParameter.XmlSchemaCollectionOwningSchema">
      <summary>Реляционная схема-владелец, в которой находится коллекция схем для данного экземпляра XML.</summary>
      <returns>Реляционная схема-владелец для данного экземпляра XML.</returns>
    </member>
    <member name="T:System.Data.SqlClient.SqlParameterCollection">
      <summary>Представляет коллекцию параметров, относящихся к <see cref="T:System.Data.SqlClient.SqlComm*******" />, а также соответствующие им сопоставления со столбцами в <see cref="T:System.Data.DataSet" />. Этот класс не наследуется.</summary>
    </member>
    <member name="M:System.Data.SqlClient.SqlParameterCollection.Add(System.Data.SqlClient.SqlParameter)">
      <summary>Добавляет указанный объект <see cref="T:System.Data.SqlClient.SqlParameter" /> в коллекцию <see cref="T:System.Data.SqlClient.SqlParameterCollection" />.</summary>
      <param name="value">Параметр <see cref="T:System.Data.SqlClient.SqlParameter" /> для добавления в коллекцию.</param>
      <returns>Новый объект <see cref="T:System.Data.SqlClient.SqlParameter" />.</returns>
      <exception cref="T:System.ArgumentException">
        <see cref="T:System.Data.SqlClient.SqlParameter" />, заданный в параметре <paramref name="value" />, уже добавлен в эту или другую коллекцию <see cref="T:System.Data.SqlClient.SqlParameterCollection" />.</exception>
      <exception cref="T:System.InvalidCastException">Передан параметр, отличный от объекта <see cref="T:System.Data.SqlClient.SqlParameter" />.</exception>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="value" /> имеет значение null.</exception>
    </member>
    <member name="M:System.Data.SqlClient.SqlParameterCollection.Add(System.Object)">
      <summary>Добавляет указанный объект <see cref="T:System.Data.SqlClient.SqlParameter" /> в коллекцию <see cref="T:System.Data.SqlClient.SqlParameterCollection" />.</summary>
      <param name="value">Объект <see cref="T:System.Object" />.</param>
      <returns>Индекс нового объекта <see cref="T:System.Data.SqlClient.SqlParameter" />.</returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlParameterCollection.Add(System.String,System.Data.SqlDbType)">
      <summary>Добавляет объект <see cref="T:System.Data.SqlClient.SqlParameter" /> в коллекцию <see cref="T:System.Data.SqlClient.SqlParameterCollection" /> в соответствии с заданным именем и типом данных параметра.</summary>
      <param name="parameterName">Имя параметра.</param>
      <param name="sqlDbType">Одно из значений <see cref="T:System.Data.SqlDbType" />.</param>
      <returns>Новый объект <see cref="T:System.Data.SqlClient.SqlParameter" />.</returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlParameterCollection.Add(System.String,System.Data.SqlDbType,System.Int32)">
      <summary>Добавляет <see cref="T:System.Data.SqlClient.SqlParameter" /> в <see cref="T:System.Data.SqlClient.SqlParameterCollection" />, задавая указанные имя параметра, <see cref="T:System.Data.SqlDbType" /> и размер.</summary>
      <param name="parameterName">Имя параметра.</param>
      <param name="sqlDbType">
        <see cref="T:System.Data.SqlDbType" /> из <see cref="T:System.Data.SqlClient.SqlParameter" /> для добавления в коллекцию.</param>
      <param name="size">Размер <see cref="T:System.Int32" />.</param>
      <returns>Новый объект <see cref="T:System.Data.SqlClient.SqlParameter" />.</returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlParameterCollection.Add(System.String,System.Data.SqlDbType,System.Int32,System.String)">
      <summary>Добавляет объект <see cref="T:System.Data.SqlClient.SqlParameter" /> в коллекцию <see cref="T:System.Data.SqlClient.SqlParameterCollection" /> в соответствии с заданным именем параметра, типом данных и длиной столбца.</summary>
      <param name="parameterName">Имя параметра.</param>
      <param name="sqlDbType">Одно из значений <see cref="T:System.Data.SqlDbType" />.</param>
      <param name="size">Длина столбца.</param>
      <param name="sourceColumn">Имя исходного столбца (<see cref="P:System.Data.SqlClient.SqlParameter.SourceColumn" />), если этот <see cref="T:System.Data.SqlClient.SqlParameter" /> используется при вызове <see cref="Overload:System.Data.Common.DbDataAdapter.Update" />.</param>
      <returns>Новый объект <see cref="T:System.Data.SqlClient.SqlParameter" />.</returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlParameterCollection.Add(System.String,System.Object)">
      <summary>Добавляет указанный объект <see cref="T:System.Data.SqlClient.SqlParameter" /> в коллекцию <see cref="T:System.Data.SqlClient.SqlParameterCollection" />.</summary>
      <param name="parameterName">Имя объекта <see cref="T:System.Data.SqlClient.SqlParameter" />, добавляемого коллекцию.</param>
      <param name="value">Объект <see cref="T:System.Object" />.</param>
      <returns>Новый объект <see cref="T:System.Data.SqlClient.SqlParameter" />.  
Следует соблюдать осторожность при использовании перегруженной версии метода <see langword="SqlParameterCollection.Add" /> для задания целочисленных значений параметров. Поскольку данная перегруженная версия принимает параметр <paramref name="value" /> типа <see cref="T:System.Object" />, необходимо преобразовать целочисленное значение в тип <see cref="T:System.Object" />, когда значение равно нулю, как показано в следующем примере на C#.  
parameters.Add("@pname", Convert.ToInt32(0));  
Если такое преобразование не выполнено, компилятор предполагает, что осуществляется попытка вызова перегруженной версии <see langword="SqlParameterCollection.Add" /> (<see langword="string" />, <see langword="SqlDbType" />).</returns>
      <exception cref="T:System.ArgumentException">
        <see cref="T:System.Data.SqlClient.SqlParameter" />, заданный в параметре <paramref name="value" />, уже добавлен в эту или другую коллекцию <see cref="T:System.Data.SqlClient.SqlParameterCollection" />.</exception>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="value" /> имеет значение null.</exception>
    </member>
    <member name="M:System.Data.SqlClient.SqlParameterCollection.AddRange(System.Array)">
      <summary>Добавляет массив значений в конец коллекции <see cref="T:System.Data.SqlClient.SqlParameterCollection" />.</summary>
      <param name="values">Добавляемые значения <see cref="T:System.Array" />.</param>
    </member>
    <member name="M:System.Data.SqlClient.SqlParameterCollection.AddRange(System.Data.SqlClient.SqlParameter[])">
      <summary>Добавляет массив значений <see cref="T:System.Data.SqlClient.SqlParameter" /> в конец коллекции <see cref="T:System.Data.SqlClient.SqlParameterCollection" />.</summary>
      <param name="values">Добавляемые значения <see cref="T:System.Data.SqlClient.SqlParameter" />.</param>
    </member>
    <member name="M:System.Data.SqlClient.SqlParameterCollection.AddWithValue(System.String,System.Object)">
      <summary>Добавляет значение в конец коллекции <see cref="T:System.Data.SqlClient.SqlParameterCollection" />.</summary>
      <param name="parameterName">Имя параметра.</param>
      <param name="value">Добавляемое значение. Используйте <see cref="F:System.DBNull.Value" /> вместо null для указания значения null.</param>
      <returns>Объект <see cref="T:System.Data.SqlClient.SqlParameter" />.</returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlParameterCollection.Clear">
      <summary>Удаляет все объекты <see cref="T:System.Data.SqlClient.SqlParameter" /> из коллекции <see cref="T:System.Data.SqlClient.SqlParameterCollection" />.</summary>
    </member>
    <member name="M:System.Data.SqlClient.SqlParameterCollection.Contains(System.Data.SqlClient.SqlParameter)">
      <summary>Определяет, находится ли заданный объект <see cref="T:System.Data.SqlClient.SqlParameter" /> в этой коллекции <see cref="T:System.Data.SqlClient.SqlParameterCollection" />.</summary>
      <param name="value">Значение <see cref="T:System.Data.SqlClient.SqlParameter" />.</param>
      <returns>Значение <see langword="true" />, если <see cref="T:System.Data.SqlClient.SqlParameterCollection" /> содержит значение; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlParameterCollection.Contains(System.Object)">
      <summary>Определяет, находится ли заданный объект <see cref="T:System.Object" /> в этой коллекции <see cref="T:System.Data.SqlClient.SqlParameterCollection" />.</summary>
      <param name="value">Значение <see cref="T:System.Object" />.</param>
      <returns>Значение <see langword="true" />, если <see cref="T:System.Data.SqlClient.SqlParameterCollection" /> содержит значение; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlParameterCollection.Contains(System.String)">
      <summary>Определяет, находится ли заданное имя параметра в этой коллекции <see cref="T:System.Data.SqlClient.SqlParameterCollection" />.</summary>
      <param name="value">Значение <see cref="T:System.String" />.</param>
      <returns>Значение <see langword="true" />, если <see cref="T:System.Data.SqlClient.SqlParameterCollection" /> содержит значение; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlParameterCollection.CopyTo(System.Array,System.Int32)">
      <summary>Копирует все элементы текущей коллекции <see cref="T:System.Data.SqlClient.SqlParameterCollection" /> в указанный одномерный массив <see cref="T:System.Array" />, начиная с указанного индекса в массиве <see cref="T:System.Array" />.</summary>
      <param name="array">Одномерный массив <see cref="T:System.Array" /> — назначение для элементов, копируемых из текущей коллекции <see cref="T:System.Data.SqlClient.SqlParameterCollection" />.</param>
      <param name="index">32-разрядное целое число, представляющее индекс в коллекции <see cref="T:System.Array" />, с которого начинается копирование.</param>
    </member>
    <member name="M:System.Data.SqlClient.SqlParameterCollection.CopyTo(System.Data.SqlClient.SqlParameter[],System.Int32)">
      <summary>Копирует все элементы текущей коллекции <see cref="T:System.Data.SqlClient.SqlParameterCollection" /> в указанную коллекцию <see cref="T:System.Data.SqlClient.SqlParameterCollection" />, начиная с указанного индекса в коллекции назначения.</summary>
      <param name="array">Коллекция <see cref="T:System.Data.SqlClient.SqlParameterCollection" /> — назначение для элементов, копируемых из текущей коллекции <see cref="T:System.Data.SqlClient.SqlParameterCollection" />.</param>
      <param name="index">32-разрядное целое число, представляющее индекс в коллекции <see cref="T:System.Data.SqlClient.SqlParameterCollection" />, с которого начинается копирование.</param>
    </member>
    <member name="P:System.Data.SqlClient.SqlParameterCollection.Count">
      <summary>Возвращает целое число, которое содержит количество элементов в <see cref="T:System.Data.SqlClient.SqlParameterCollection" />. Только для чтения.</summary>
      <returns>Число элементов в коллекции <see cref="T:System.Data.SqlClient.SqlParameterCollection" /> является значением типа Integer.</returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlParameterCollection.GetEnumerator">
      <summary>Возвращает перечислитель, осуществляющий перебор элементов списка <see cref="T:System.Data.SqlClient.SqlParameterCollection" />.</summary>
      <returns>Интерфейс <see cref="T:System.Collections.IEnumerator" /> для <see cref="T:System.Data.SqlClient.SqlParameterCollection" />.</returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlParameterCollection.IndexOf(System.Data.SqlClient.SqlParameter)">
      <summary>Возвращает положение указанного объекта <see cref="T:System.Data.SqlClient.SqlParameter" /> в коллекции.</summary>
      <param name="value">Искомый объект <see cref="T:System.Data.SqlClient.SqlParameter" />.</param>
      <returns>Отсчитываемое от нуля расположение указанного объекта <see cref="T:System.Data.SqlClient.SqlParameter" />, который является объектом <see cref="T:System.Data.SqlClient.SqlParameter" /> в коллекции. Возвращает значение -1, если объект не существует в коллекции <see cref="T:System.Data.SqlClient.SqlParameterCollection" />.</returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlParameterCollection.IndexOf(System.Object)">
      <summary>Возвращает положение указанного объекта <see cref="T:System.Object" /> в коллекции.</summary>
      <param name="value">Искомый объект <see cref="T:System.Object" />.</param>
      <returns>Отсчитываемое от нуля расположение указанного объекта <see cref="T:System.Object" />, который является объектом <see cref="T:System.Data.SqlClient.SqlParameter" /> в коллекции. Возвращает значение -1, если объект не существует в коллекции <see cref="T:System.Data.SqlClient.SqlParameterCollection" />.</returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlParameterCollection.IndexOf(System.String)">
      <summary>Возвращает положение заданного объекта <see cref="T:System.Data.SqlClient.SqlParameter" /> с указанным именем.</summary>
      <param name="parameterName">Имя искомого объекта <see cref="T:System.Data.SqlClient.SqlParameter" /> с учетом регистра.</param>
      <returns>Положение (отсчет с нуля) указанного объекта <see cref="T:System.Data.SqlClient.SqlParameter" /> с заданным именем с учетом регистра. Возвращает значение -1, если объект не существует в коллекции <see cref="T:System.Data.SqlClient.SqlParameterCollection" />.</returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlParameterCollection.Insert(System.Int32,System.Data.SqlClient.SqlParameter)">
      <summary>Вставляет объект <see cref="T:System.Data.SqlClient.SqlParameter" /> в коллекцию <see cref="T:System.Data.SqlClient.SqlParameterCollection" /> по указанному индексу.</summary>
      <param name="index">Индекс (отсчет с нуля), по которому необходимо вставить значение.</param>
      <param name="value">Объект <see cref="T:System.Data.SqlClient.SqlParameter" />, вставляемый в коллекцию <see cref="T:System.Data.SqlClient.SqlParameterCollection" />.</param>
    </member>
    <member name="M:System.Data.SqlClient.SqlParameterCollection.Insert(System.Int32,System.Object)">
      <summary>Вставляет объект <see cref="T:System.Object" /> в коллекцию <see cref="T:System.Data.SqlClient.SqlParameterCollection" /> по указанному индексу.</summary>
      <param name="index">Индекс (отсчет с нуля), по которому необходимо вставить значение.</param>
      <param name="value">Объект <see cref="T:System.Object" />, вставляемый в коллекцию <see cref="T:System.Data.SqlClient.SqlParameterCollection" />.</param>
    </member>
    <member name="P:System.Data.SqlClient.SqlParameterCollection.IsFixedSize">
      <summary>Возвращает значение, показывающее, имеет ли объект <see cref="T:System.Data.SqlClient.SqlParameterCollection" /> фиксированный размер.</summary>
      <returns>Значение <see langword="true" />, если словарь <see cref="T:System.Data.SqlClient.SqlParameterCollection" /> имеет фиксированный размер; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.SqlClient.SqlParameterCollection.IsReadOnly">
      <summary>Возвращает значение, которое определяет, является ли коллекция <see cref="T:System.Data.SqlClient.SqlParameterCollection" /> доступной только для чтения.</summary>
      <returns>Значение <see langword="true" />, если интерфейс <see cref="T:System.Data.SqlClient.SqlParameterCollection" /> доступен только для чтения; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.SqlClient.SqlParameterCollection.IsSynchronized">
      <summary>Возвращает значение, которое определяет, является ли коллекция <see cref="T:System.Data.SqlClient.SqlParameterCollection" /> синхронизированной.</summary>
      <returns>Значение <see langword="true" />, если коллекция <see cref="T:System.Data.SqlClient.SqlParameterCollection" /> синхронизирована; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.SqlClient.SqlParameterCollection.Item(System.Int32)">
      <summary>Возвращает объект <see cref="T:System.Data.SqlClient.SqlParameter" /> по указанному индексу.</summary>
      <param name="index">Индекс получаемого параметра (отсчет с нуля).</param>
      <returns>Параметр <see cref="T:System.Data.SqlClient.SqlParameter" /> по указанному индексу.</returns>
      <exception cref="T:System.IndexOutOfRangeException">Указанный индекс не существует.</exception>
    </member>
    <member name="P:System.Data.SqlClient.SqlParameterCollection.Item(System.String)">
      <summary>Возвращает объект <see cref="T:System.Data.SqlClient.SqlParameter" /> с указанным именем.</summary>
      <param name="parameterName">Имя получаемого параметра.</param>
      <returns>Параметр <see cref="T:System.Data.SqlClient.SqlParameter" /> с указанным именем.</returns>
      <exception cref="T:System.IndexOutOfRangeException">Указанное значение <paramref name="parameterName" /> недопустимо.</exception>
    </member>
    <member name="M:System.Data.SqlClient.SqlParameterCollection.Remove(System.Data.SqlClient.SqlParameter)">
      <summary>Удаляет указанный объект <see cref="T:System.Data.SqlClient.SqlParameter" /> из коллекции.</summary>
      <param name="value">Объект <see cref="T:System.Data.SqlClient.SqlParameter" />, который должен быть удален из коллекции.</param>
      <exception cref="T:System.InvalidCastException">Параметр не является объектом <see cref="T:System.Data.SqlClient.SqlParameter" />.</exception>
      <exception cref="T:System.SystemException">Параметр отсутствует в коллекции.</exception>
    </member>
    <member name="M:System.Data.SqlClient.SqlParameterCollection.Remove(System.Object)">
      <summary>Удаляет указанный объект <see cref="T:System.Data.SqlClient.SqlParameter" /> из коллекции.</summary>
      <param name="value">Объект, который должен быть удален из коллекции.</param>
    </member>
    <member name="M:System.Data.SqlClient.SqlParameterCollection.RemoveAt(System.Int32)">
      <summary>Удаляет объект <see cref="T:System.Data.SqlClient.SqlParameter" /> с указанным индексом из коллекции <see cref="T:System.Data.SqlClient.SqlParameterCollection" />.</summary>
      <param name="index">Индекс (отсчет с нуля) удаляемого объекта <see cref="T:System.Data.SqlClient.SqlParameter" />.</param>
    </member>
    <member name="M:System.Data.SqlClient.SqlParameterCollection.RemoveAt(System.String)">
      <summary>Удаляет объект <see cref="T:System.Data.SqlClient.SqlParameter" /> с указанным именем из коллекции <see cref="T:System.Data.SqlClient.SqlParameterCollection" />.</summary>
      <param name="parameterName">Имя удаляемого объекта <see cref="T:System.Data.SqlClient.SqlParameter" />.</param>
    </member>
    <member name="P:System.Data.SqlClient.SqlParameterCollection.SyncRoot">
      <summary>Получает объект, с помощью которого можно синхронизировать доступ к коллекции <see cref="T:System.Data.SqlClient.SqlParameterCollection" />.</summary>
      <returns>Объект, который может использоваться для синхронизации доступа к <see cref="T:System.Data.SqlClient.SqlParameterCollection" />.</returns>
    </member>
    <member name="T:System.Data.SqlClient.SqlRowsCopiedEventArgs">
      <summary>Представляет набор аргументов, передаваемых <see cref="T:System.Data.SqlClient.SqlRowsCopiedEventH*******ler" />.</summary>
    </member>
    <member name="M:System.Data.SqlClient.SqlRowsCopiedEventArgs.#ctor(System.Int64)">
      <summary>Создает новый экземпляр объекта <see cref="T:System.Data.SqlClient.SqlRowsCopiedEventArgs" />.</summary>
      <param name="rowsCopied">Значение типа <see cref="T:System.Int64" />, указывающее количество строк, скопированных текущей операцией массового копирования.</param>
    </member>
    <member name="P:System.Data.SqlClient.SqlRowsCopiedEventArgs.Abort">
      <summary>Возвращает или задает значение, указывающее должна ли быть отменена операция массового копирования.</summary>
      <returns>
        <see langword="true" />, если операция массового копирования должна быть отменена; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.SqlClient.SqlRowsCopiedEventArgs.RowsCopied">
      <summary>Возвращает значение, возвращающее количество строк, скопированных текущей операцией массового копирования.</summary>
      <returns>Значение типа <see langword="int" />, указывающее число скопированных строк.</returns>
    </member>
    <member name="T:System.Data.SqlClient.SqlRowsCopiedEventH*******ler">
      <summary>Представляет метод, обрабатывающий событие <see cref="E:System.Data.SqlClient.SqlBulkCopy.SqlRowsCopied" /><see cref="T:System.Data.SqlClient.SqlBulkCopy" />.</summary>
      <param name="sender">Источник события.</param>
      <param name="e">Объект <see cref="T:System.Data.SqlClient.SqlRowsCopiedEventArgs" />, содержащий данные события.</param>
    </member>
    <member name="T:System.Data.SqlClient.SqlRowUpdatedEventArgs">
      <summary>Предоставляет данные для события <see cref="E:System.Data.SqlClient.SqlDataAdapter.RowUpdated" />.</summary>
    </member>
    <member name="M:System.Data.SqlClient.SqlRowUpdatedEventArgs.#ctor(System.Data.DataRow,System.Data.IDbComm*******,System.Data.StatementType,System.Data.Common.DataTableMapping)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.SqlClient.SqlRowUpdatedEventArgs" />.</summary>
      <param name="row">Объект <see cref="T:System.Data.DataRow" /> отправлен с помощью метода <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</param>
      <param name="comm*******">Команда <see cref="T:System.Data.IDbComm*******" />, выполняемая при вызове метода <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</param>
      <param name="statementType">Одно из значений <see cref="T:System.Data.StatementType" />, указывающих тип выполненного запроса.</param>
      <param name="tableMapping">Объект <see cref="T:System.Data.Common.DataTableMapping" /> отправлен с помощью метода <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</param>
    </member>
    <member name="P:System.Data.SqlClient.SqlRowUpdatedEventArgs.Comm*******">
      <summary>Возвращает или задает <see cref="T:System.Data.SqlClient.SqlComm*******" />, которая выполняется при вызове <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</summary>
      <returns>Команда <see cref="T:System.Data.SqlClient.SqlComm*******" />, выполняемая при вызове метода <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</returns>
    </member>
    <member name="T:System.Data.SqlClient.SqlRowUpdatedEventH*******ler">
      <summary>Представляет метод, обрабатывающий событие <see cref="E:System.Data.SqlClient.SqlDataAdapter.RowUpdated" /> объекта <see cref="T:System.Data.SqlClient.SqlDataAdapter" />.</summary>
      <param name="sender">Источник события.</param>
      <param name="e">Объект класса <see cref="T:System.Data.SqlClient.SqlRowUpdatedEventArgs" />, содержащий данные о событии.</param>
    </member>
    <member name="T:System.Data.SqlClient.SqlRowUpdatingEventArgs">
      <summary>Предоставляет данные для события <see cref="E:System.Data.SqlClient.SqlDataAdapter.RowUpdating" />.</summary>
    </member>
    <member name="M:System.Data.SqlClient.SqlRowUpdatingEventArgs.#ctor(System.Data.DataRow,System.Data.IDbComm*******,System.Data.StatementType,System.Data.Common.DataTableMapping)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.SqlClient.SqlRowUpdatingEventArgs" />.</summary>
      <param name="row">Объект <see cref="T:System.Data.DataRow" /> для метода <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</param>
      <param name="comm*******">
        <see cref="T:System.Data.IDbComm*******" /> для выполнения в методе <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</param>
      <param name="statementType">Одно из значений <see cref="T:System.Data.StatementType" />, указывающих тип выполненного запроса.</param>
      <param name="tableMapping">Объект <see cref="T:System.Data.Common.DataTableMapping" /> отправлен с помощью метода <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</param>
    </member>
    <member name="P:System.Data.SqlClient.SqlRowUpdatingEventArgs.Comm*******">
      <summary>Возвращает или задает команду <see cref="T:System.Data.SqlClient.SqlComm*******" />, которую необходимо выполнить в процессе <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</summary>
      <returns>Команда <see cref="T:System.Data.SqlClient.SqlComm*******" />, которую необходимо выполнить в процессе <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</returns>
    </member>
    <member name="T:System.Data.SqlClient.SqlRowUpdatingEventH*******ler">
      <summary>Представляет метод, обрабатывающий событие <see cref="E:System.Data.SqlClient.SqlDataAdapter.RowUpdating" /> объекта <see cref="T:System.Data.SqlClient.SqlDataAdapter" />.</summary>
      <param name="sender">Источник события.</param>
      <param name="e">Объект класса <see cref="T:System.Data.SqlClient.SqlRowUpdatingEventArgs" />, содержащий данные о событии.</param>
    </member>
    <member name="T:System.Data.SqlClient.SqlTransaction">
      <summary>Предоставляет транзакцию Transact-SQL, которая должна быть выполнена над базой данных SQL Server. Этот класс не наследуется.</summary>
    </member>
    <member name="M:System.Data.SqlClient.SqlTransaction.Commit">
      <summary>Фиксирует транзакцию базы данных.</summary>
      <exception cref="T:System.Exception">Ошибка при попытке фиксации транзакции.</exception>
      <exception cref="T:System.InvalidOperationException">Транзакция уже зафиксирована, или выполнен откат.  

или - 
Соединение закрыто.</exception>
    </member>
    <member name="P:System.Data.SqlClient.SqlTransaction.Connection">
      <summary>Получает объект <see cref="T:System.Data.SqlClient.SqlConnection" />, связанный с транзакцией, или <see langword="null" />, если транзакция уже недействительна.</summary>
      <returns>Объект <see cref="T:System.Data.SqlClient.SqlConnection" />, связанный с транзакцией.</returns>
    </member>
    <member name="P:System.Data.SqlClient.SqlTransaction.IsolationLevel">
      <summary>Указывает <see cref="T:System.Data.IsolationLevel" /> для этой транзакции.</summary>
      <returns>
        <see cref="T:System.Data.IsolationLevel" /> для этой транзакции. Значение по умолчанию — <see langword="ReadCommitted" />.</returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlTransaction.Rollback">
      <summary>Откатывает транзакцию из состояния ожидания.</summary>
      <exception cref="T:System.Exception">Ошибка при попытке фиксации транзакции.</exception>
      <exception cref="T:System.InvalidOperationException">Транзакция уже зафиксирована, или выполнен откат.  

или - 
Соединение закрыто.</exception>
    </member>
    <member name="M:System.Data.SqlClient.SqlTransaction.Rollback(System.String)">
      <summary>Откатывает транзакцию из состояния ожидания и задает транзакцию или имя пиксели сохранения.</summary>
      <param name="transactionName">Имя транзакции, которую требуется откатить, или пиксель сохранения, до которой должен быть выполнен откат.</param>
      <exception cref="T:System.ArgumentException">Имя транзакции не задано.</exception>
      <exception cref="T:System.InvalidOperationException">Транзакция уже зафиксирована, или выполнен откат.  

или - 
Соединение закрыто.</exception>
    </member>
    <member name="M:System.Data.SqlClient.SqlTransaction.Save(System.String)">
      <summary>Создает в транзакции пиксель сохранения, которая может быть использована для отката части транзакции, и задает имя пиксели сохранения.</summary>
      <param name="savePointName">Имя пиксели сохранения.</param>
      <exception cref="T:System.Exception">Ошибка при попытке фиксации транзакции.</exception>
      <exception cref="T:System.InvalidOperationException">Транзакция уже зафиксирована, или выполнен откат.  

или - 
Соединение закрыто.</exception>
    </member>
    <member name="T:System.Data.SqlDbType">
      <summary>Указывает относящийся к SQL Server тип данных поля или свойства для использования в <see cref="T:System.Data.SqlClient.SqlParameter" />.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.BigInt">
      <summary>
        <see cref="T:System.Int64" />. 64-разрядное целое число со знаком.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Binary">
      <summary>
        <see cref="T:System.Array" /> имеет тип данных <see cref="T:System.Byte" />. Поток фиксированной длины из двоичных данных, имеющий длину от 1 до 8000 байтов.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Bit">
      <summary>
        <see cref="T:System.Boolean" />. Числовое значение без знака, которое может быть равно 0, 1 или <see langword="null" />.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Char">
      <summary>
        <see cref="T:System.String" />. Поток фиксированной длины из символов, не принадлежащих кодировке Юникод. В нем может быть от 1 до 8000 символов.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Date">
      <summary>Значение даты может находиться в диапазоне от 1 января 1 г. н. э. до 31 декабря 9999 года н. э.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.DateTime">
      <summary>
        <see cref="T:System.DateTime" />. Значение даты и времени, лежащее в диапазоне от 1 января 1753 года до 31 декабря 9999 года и имеющее точность 3.33 миллисекунды.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.DateTime2">
      <summary>Данные даты и времени. Значение даты может находиться в диапазоне от 1 января 1 г. н. э. до 31 декабря 9999 года н. э. Значение времени может находиться в диапазоне от 00:00:00 до 23:59:59,9999999 с точностью до 100 наносекунд.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.DateTimeOffset">
      <summary>Данные даты и времени с учетом часового пояса. Значение даты может находиться в диапазоне от 1 января 1 г. н. э. до 31 декабря 9999 года н. э. Значение времени может находиться в диапазоне от 00:00:00 до 23:59:59,9999999 с точностью до 100 наносекунд. Часовые пояса могут находиться в диапазоне от -14:00 до +14:00.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Decimal">
      <summary>
        <see cref="T:System.Decimal" />. Числовое значение с фиксированной точностью и масштабом в диапазоне от –10 38 –1 до 10 38 –1.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Float">
      <summary>
        <see cref="T:System.Double" />. Числовое значение с плавающей запятой, лежащее в диапазоне от -1.79E +308 до 1.79E +308.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Image">
      <summary>
        <see cref="T:System.Array" /> имеет тип данных <see cref="T:System.Byte" />. Поток переменной длины из двоичных данных, имеющий длину от 0 до 2 31 –1 (или 2 147 483 647) байтов.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Int">
      <summary>
        <see cref="T:System.Int32" />. 32-разрядное знаковое целое число.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Money">
      <summary>
        <see cref="T:System.Decimal" />. Значение типа currency, лежащее в диапазоне от –2 63 (или –9 223 372 036 854 775 808) до 2 63 –1 (или +9 223 372 036 854 775 807) и имеющее точность до одной десятитысячной денежной единицы.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.NChar">
      <summary>
        <see cref="T:System.String" />. Поток фиксированной длины из символов кодировки Юникод. В нем может быть от 1 до 4 000 символов.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.NText">
      <summary>
        <see cref="T:System.String" />. Поток переменной длины из данных Юникод, максимальная длина которого равна 2 30 – 1 (или 1 073 741 823) символов.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.NVarChar">
      <summary>
        <see cref="T:System.String" />. Поток переменной длины из символов кодировки Юникод. В нем может быть от 1 до 4 000 символов. Неявное преобразование не может быть выполнено, если длина строки превышает 4 000 символов. Поэтому при работе со строками длиннее 4 000 символов нужно явно задавать значение этого объекта. Используйте <see cref="F:System.Data.SqlDbType.NVarChar" />, если столбец базы данных имеет тип <see langword="nvarchar(max)" />.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Real">
      <summary>
        <see cref="T:System.Single" />. Числовое значение с плавающей запятой, лежащее в диапазоне от -3,40E +38 до 3,40E +38.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.SmallDateTime">
      <summary>
        <see cref="T:System.DateTime" />. Значение даты и времени, лежащее в диапазоне от 1 января 1900 года до 6 июня 2079 года, точность которого равна одной минуте.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.SmallInt">
      <summary>
        <see cref="T:System.Int16" />. 16-разрядное знаковое целое число.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.SmallMoney">
      <summary>
        <see cref="T:System.Decimal" />. Денежная сумма в диапазоне от -214 748,3648 до +214 748,3647 с точностью, равной одной десятитысячной денежной единицы.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Structured">
      <summary>Специальный тип данных для определения структурированных данных, содержащихся в параметрах табличных значений.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Text">
      <summary>
        <see cref="T:System.String" />. Поток переменной длины из символов, не принадлежащих кодировке Юникод, максимальная длина которого равна 2 31 –1 (или 2 147 483 647) символов.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Time">
      <summary>Данные времени в 24-часовом формате. Значение времени может находиться в диапазоне от 00:00:00 до 23:59:59,9999999 с точностью до 100 наносекунд. Соответствует значению <see langword="time" /> SQL Server.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Timestamp">
      <summary>
        <see cref="T:System.Array" /> имеет тип данных <see cref="T:System.Byte" />. Автоматически создаваемые двоичные числа, которые гарантированно являются уникальными в пределах базы данных. Значения <see langword="timestamp" /> обычно используются для отметки версий строк таблицы. Размер при хранении — 8 байт.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.TinyInt">
      <summary>
        <see cref="T:System.Byte" />. 8-разрядное целое число без знака.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Udt">
      <summary>Пользовательский тип (UDT) SQL Server.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.UniqueIdentifier">
      <summary>
        <see cref="T:System.Guid" />. Глобальный уникальный идентификатор (GUID).</summary>
    </member>
    <member name="F:System.Data.SqlDbType.VarBinary">
      <summary>
        <see cref="T:System.Array" /> имеет тип данных <see cref="T:System.Byte" />. Поток переменной длины из двоичных данных, имеющий длину от 1 до 8000 байт. Неявное преобразование не может быть выполнено, если длина массива превышает 8 000 байтов. Поэтому при работе с массивами байтов, состоящими из более чем 8000 байтов, нужно явно задать значение этого объекта.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.VarChar">
      <summary>
        <see cref="T:System.String" />. Поток переменной длины из символов, не принадлежащих кодировке Юникод. В нем может быть от 1 до 8000 символов. Используйте <see cref="F:System.Data.SqlDbType.VarChar" />, если столбец базы данных имеет тип <see langword="varchar(max)" />.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Variant">
      <summary>
        <see cref="T:System.Object" />. Специальный тип данных, который может содержать числовые, строковые, двоичные данные, даты, а также значения Empty и Null, относящиеся к SQL Server. Если ни один тип не объявлен, считается, что данные имеют этот тип.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Xml">
      <summary>Значение XML. Получает XML как строку с помощью метода <see cref="M:System.Data.SqlClient.SqlDataReader.GetValue(System.Int32)" /> или свойства <see cref="P:System.Data.SqlTypes.SqlXml.Value" />, или в качестве средства чтения <see cref="T:System.Xml.XmlReader" /> путем вызова метода <see cref="M:System.Data.SqlTypes.SqlXml.CreateReader" />.</summary>
    </member>
    <member name="T:System.Data.SqlTypes.INullable">
      <summary>Во всех объектах и структурах <see cref="N:System.Data.SqlTypes" /> реализован интерфейс <see langword="INullable" />.</summary>
    </member>
    <member name="P:System.Data.SqlTypes.INullable.IsNull">
      <summary>Показывает, является ли структура неопределенной. Это свойство доступно только для чтения.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" />
        <see langword="true" />, если значение этого объекта равно NULL. В противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="T:System.Data.SqlTypes.SqlAlreadyFilledException">
      <summary>Класс <see cref="T:System.Data.SqlTypes.SqlAlreadyFilledException" /> предназначен для использования не в качестве самостоятельного компонента, а в качестве базового класса, от которого другие классы наследуют стандартные функциональные возможности.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlAlreadyFilledException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.SqlTypes.SqlAlreadyFilledException" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlAlreadyFilledException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.SqlTypes.SqlAlreadyFilledException" />.</summary>
      <param name="message">Строка, отображаемая при возникновении исключения.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlAlreadyFilledException.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.SqlTypes.SqlAlreadyFilledException" />.</summary>
      <param name="message">Строка, отображаемая при возникновении исключения.</param>
      <param name="e">Ссылка на внутреннее исключение.</param>
    </member>
    <member name="T:System.Data.SqlTypes.SqlBinary">
      <summary>Представляет поток двоичных данных переменной длины, сохраняемый в базе данных или извлекаемый из нее.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.#ctor(System.Byte[])">
      <summary>Выполняет инициализацию нового экземпляра структуры <see cref="T:System.Data.SqlTypes.SqlBinary" />, задавая в качестве значения свойства <see cref="P:System.Data.SqlTypes.SqlBinary.Value" /> содержимое предоставленного массива байтов.</summary>
      <param name="value">Сохраняемый или извлекаемый массив байтов.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.Add(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary>Сцепляет два заданных значения <see cref="T:System.Data.SqlTypes.SqlBinary" /> для создания новой структуры <see cref="T:System.Data.SqlTypes.SqlBinary" />.</summary>
      <param name="x">Объект <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <param name="y">Объект <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlBinary" />, представляющая собой сцепленное значение, составленное из x и y.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.CompareTo(System.Data.SqlTypes.SqlBinary)">
      <summary>Сравнивает этот объект <see cref="T:System.Data.SqlTypes.SqlBinary" /> с предоставленным объектом <see cref="T:System.Data.SqlTypes.SqlBinary" /> и возвращает сведения об их относительных значениях.</summary>
      <param name="value">Объект <see cref="T:System.Data.SqlTypes.SqlBinary" /> для сравнения с этой структурой <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <returns>Число со знаком, представляющее относительные значения данной структуры <see cref="T:System.Data.SqlTypes.SqlBinary" /> и объекта.  
  Возвращаемое значение 
  Условие 
  Меньше нуля 
  Значение этого объекта <see cref="T:System.Data.SqlTypes.SqlBinary" /> меньше, чем данный объект.  

  Нуль 
  Этот объект <see cref="T:System.Data.SqlTypes.SqlBinary" /> совпадает с объектом.  

  Больше нуля 
  Этот объект <see cref="T:System.Data.SqlTypes.SqlBinary" /> больше, чем объект.  

-или- 
Объект является пустой ссылкой.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.CompareTo(System.Object)">
      <summary>Сравнивает этот объект <see cref="T:System.Data.SqlTypes.SqlBinary" /> с предоставленным объектом и возвращает сведения об их относительных значениях.</summary>
      <param name="value">Объект, который необходимо сравнить с этой структурой <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <returns>Число со знаком, представляющее относительные значения данной структуры <see cref="T:System.Data.SqlTypes.SqlBinary" /> и объекта.  
  Возвращаемое значение 
  Условие 
  Меньше нуля 
  Значение этого объекта <see cref="T:System.Data.SqlTypes.SqlBinary" /> меньше, чем данный объект.  

  Нуль 
  Этот объект <see cref="T:System.Data.SqlTypes.SqlBinary" /> совпадает с объектом.  

  Больше нуля 
  Этот объект <see cref="T:System.Data.SqlTypes.SqlBinary" /> больше, чем объект.  

- или - 
Объект является пустой ссылкой.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.Concat(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary>Сцепляет две структуры <see cref="T:System.Data.SqlTypes.SqlBinary" /> для создания новой структуры <see cref="T:System.Data.SqlTypes.SqlBinary" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <returns>Сцепленные значения параметров <paramref name="x" /> и <paramref name="y" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.Equals(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary>Сравнивает две структуры <see cref="T:System.Data.SqlTypes.SqlBinary" />, чтобы определить, совпадают ли они.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <returns>
        <see langword="true" />, если эти два значения равны. В противном случае — значение <see langword="false" />. Если один из экземпляров пуст, <see langword="SqlBinary" /> будет иметь значение NULL.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.Equals(System.Object)">
      <summary>Сравнивает предоставленный параметр объекта со свойством <see cref="P:System.Data.SqlTypes.SqlBinary.Value" /> объекта <see cref="T:System.Data.SqlTypes.SqlBinary" />.</summary>
      <param name="value">Сравниваемый объект.</param>
      <returns>
        <see langword="true" />, если объект является экземпляром структуры <see cref="T:System.Data.SqlTypes.SqlBinary" /> и они равны; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.GetHashCode">
      <summary>Возвращает хэш-код данной структуры <see cref="T:System.Data.SqlTypes.SqlBinary" />.</summary>
      <returns>Хэш-код в виде 32-разрядного целого числа со знаком.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary>Возвращает XSD (XML-схему) заданного объекта <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</summary>
      <param name="schemaSet">Объект <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
      <returns>Значение <see langword="string" />, указывающее определение XML-схемы заданного объекта <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.GreaterThan(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary>Сравнивает две структуры <see cref="T:System.Data.SqlTypes.SqlBinary" />, чтобы определить, превышает ли первая вторую.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <returns>Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр больше второго. В противном случае — <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlBinary" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.GreaterThanOrEqual(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary>Сравнивает две структуры <see cref="T:System.Data.SqlTypes.SqlBinary" />, чтобы определить, превышает ли первая вторую или равна ли ей.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <returns>Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр больше второго или равен ему. В противном случае — <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlBinary" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBinary.IsNull">
      <summary>Указывает, имеет ли структура <see cref="T:System.Data.SqlTypes.SqlBinary" /> значение null. Это свойство доступно только для чтения.</summary>
      <returns>
        <see langword="true" /> если <see langword="null" />. В противном случае <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBinary.Item(System.Int32)">
      <summary>Получает один байт из свойства <see cref="P:System.Data.SqlTypes.SqlBinary.Value" />, расположенный в позиции, на которую указывает целочисленный параметр <paramref name="index" />. Если <paramref name="index" /> указывает на позицию за пределами массива байтов, появится <see cref="T:System.Data.SqlTypes.SqlNullValueException" />. Это свойство доступно только для чтения.</summary>
      <param name="index">Позиция извлекаемого байта.</param>
      <returns>Байт, расположенный в позиции, на которую указывает целочисленный параметр.</returns>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">Свойство читается, когда свойство <see cref="P:System.Data.SqlTypes.SqlBinary.Value" /> содержит <see cref="F:System.Data.SqlTypes.SqlBinary.Null" />.  
-или- 
Параметр <paramref name="index" /> указывает на позицию за пределами длины массива байтов, указанной в свойстве <see cref="P:System.Data.SqlTypes.SqlBinary.Length" />.</exception>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBinary.Length">
      <summary>Получает длину в байтах для свойства <see cref="P:System.Data.SqlTypes.SqlBinary.Value" />. Это свойство доступно только для чтения.</summary>
      <returns>Длина массива двоичных данных в свойстве <see cref="P:System.Data.SqlTypes.SqlBinary.Value" />.</returns>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">Свойство <see cref="P:System.Data.SqlTypes.SqlBinary.Length" /> читается, когда свойство <see cref="P:System.Data.SqlTypes.SqlBinary.Value" /> содержит <see cref="F:System.Data.SqlTypes.SqlBinary.Null" />.</exception>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.LessThan(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary>Сравнивает две структуры <see cref="T:System.Data.SqlTypes.SqlBinary" />, чтобы определить, является ли первая меньше второй.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <returns>Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр меньше второго. В противном случае — <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlBinary" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.LessThanOrEqual(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary>Сравнивает две структуры <see cref="T:System.Data.SqlTypes.SqlBinary" />, чтобы определить, является ли первая меньше или равна второй.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <returns>Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр меньше второго или ему равен. В противном случае — <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlBinary" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.NotEquals(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary>Сравнивает две структуры <see cref="T:System.Data.SqlTypes.SqlBinary" /> на неравенство.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <returns>Переменная <see cref="T:System.Data.SqlTypes.SqlBoolean" />, которая принимает значение <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если два экземпляра не равны, или значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />, если они равны. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlBinary" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlBinary.Null">
      <summary>Представляет значение <see cref="T:System.DBNull" />, которое может быть присвоено данному экземпляру структуры <see cref="T:System.Data.SqlTypes.SqlBinary" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_Addition(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary>Сцепляет два параметра <see cref="T:System.Data.SqlTypes.SqlBinary" /> для создания новой структуры <see cref="T:System.Data.SqlTypes.SqlBinary" />.</summary>
      <param name="x">Объект <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <param name="y">Объект <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <returns>Сцепленные значения параметров <paramref name="x" /> и <paramref name="y" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_Equality(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary>Сравнивает две структуры <see cref="T:System.Data.SqlTypes.SqlBinary" />, чтобы определить, совпадают ли они.</summary>
      <param name="x">Объект <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <param name="y">Объект <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlBoolean" />, которая принимает значение <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если два экземпляра равны, или значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />, если они не равны. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlBinary" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_Explicit(System.Data.SqlTypes.SqlBinary)~System.Byte[]">
      <summary>Преобразует структуру <see cref="T:System.Data.SqlTypes.SqlBinary" /> в массив <see cref="T:System.Byte" />.</summary>
      <param name="x">Преобразуемая структура <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <returns>Массив <see cref="T:System.Byte" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_Explicit(System.Data.SqlTypes.SqlGuid)~System.Data.SqlTypes.SqlBinary">
      <summary>Преобразует структуру <see cref="T:System.Data.SqlTypes.SqlGuid" /> в структуру <see cref="T:System.Data.SqlTypes.SqlBinary" />.</summary>
      <param name="x">Преобразуемая структура <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <returns>Преобразуемая структура <see cref="T:System.Data.SqlTypes.SqlGuid" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_GreaterThan(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary>Сравнивает две структуры <see cref="T:System.Data.SqlTypes.SqlBinary" />, чтобы определить, превышает ли первая вторую.</summary>
      <param name="x">Объект <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <param name="y">Объект <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <returns>Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр больше второго. В противном случае — <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlBinary" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary>Сравнивает две структуры <see cref="T:System.Data.SqlTypes.SqlBinary" />, чтобы определить, превышает ли первая вторую или равна ли ей.</summary>
      <param name="x">Объект <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <param name="y">Объект <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <returns>Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр больше второго или равен ему. В противном случае — <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlBinary" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_Implicit(System.Byte[])~System.Data.SqlTypes.SqlBinary">
      <summary>Преобразует массив байтов в структуру <see cref="T:System.Data.SqlTypes.SqlBinary" />.</summary>
      <param name="x">Преобразуемый массив байтов.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlBinary" />, которая представляет преобразованный массив байтов.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_Inequality(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary>Сравнивает две структуры <see cref="T:System.Data.SqlTypes.SqlBinary" /> на неравенство.</summary>
      <param name="x">Объект <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <param name="y">Объект <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <returns>Переменная <see cref="T:System.Data.SqlTypes.SqlBoolean" />, которая принимает значение <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если два экземпляра не равны, или значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />, если они равны. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlBinary" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_LessThan(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary>Сравнивает две структуры <see cref="T:System.Data.SqlTypes.SqlBinary" />, чтобы определить, является ли первая меньше второй.</summary>
      <param name="x">Объект <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <param name="y">Объект <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <returns>Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр меньше второго. В противном случае — <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlBinary" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_LessThanOrEqual(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary>Сравнивает две структуры <see cref="T:System.Data.SqlTypes.SqlBinary" />, чтобы определить, является ли первая меньше или равна второй.</summary>
      <param name="x">Объект <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <param name="y">Объект <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <returns>Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр меньше второго или ему равен. В противном случае — <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlBinary" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary>Описание этого члена см. в разделе <see cref="M:System.Xml.Serialization.IXmlSerializable.GetSchema" />.</summary>
      <returns>Экземпляр <see cref="T:System.Xml.Schema.XmlSchema" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary>Описание этого члена см. в разделе <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" />.</summary>
      <param name="reader">Объект <see cref="T:System.Xml.XmlReader" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary>Описание этого члена см. в разделе <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" />.</summary>
      <param name="writer">Объект <see cref="T:System.Xml.XmlWriter" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.ToSqlGuid">
      <summary>Преобразует этот экземпляр <see cref="T:System.Data.SqlTypes.SqlBinary" /> в <see cref="T:System.Data.SqlTypes.SqlGuid" />.</summary>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlGuid" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.ToString">
      <summary>Преобразует этот объект <see cref="T:System.Data.SqlTypes.SqlBinary" /> в строку.</summary>
      <returns>Строка, содержащая <see cref="P:System.Data.SqlTypes.SqlBinary.Value" /> типа <see cref="T:System.Data.SqlTypes.SqlBinary" />. Если <see cref="P:System.Data.SqlTypes.SqlBinary.Value" /> пусто, строка будет содержать "NULL".</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBinary.Value">
      <summary>Получает значение структуры <see cref="T:System.Data.SqlTypes.SqlBinary" />. Это свойство доступно только для чтения.</summary>
      <returns>Значение структуры <see cref="T:System.Data.SqlTypes.SqlBinary" />.</returns>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">Свойство <see cref="P:System.Data.SqlTypes.SqlBinary.Value" /> читается, когда свойство содержит <see cref="F:System.Data.SqlTypes.SqlBinary.Null" />.</exception>
    </member>
    <member name="T:System.Data.SqlTypes.SqlBoolean">
      <summary>Представляет целое значение 1 или 0, сохраняемое в базе данных или извлекаемое из нее.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.#ctor(System.Boolean)">
      <summary>Инициализирует новый экземпляр структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> с использованием предоставленного логического значения.</summary>
      <param name="value">Значение для новой структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" />; или <see langword="true" />, или <see langword="false" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.#ctor(System.Int32)">
      <summary>Выполняет инициализацию нового экземпляра структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> с использованием заданного целого значения.</summary>
      <param name="value">Целое число, значение которого требуется использовать для новой структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.And(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary>Вычисляет результат битовой операции логического умножения для двух указанных структур <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns>Результат операции логического умножения.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBoolean.ByteValue">
      <summary>Получает значение структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> в виде байта.</summary>
      <returns>Байт, представляющий значение структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.CompareTo(System.Data.SqlTypes.SqlBoolean)">
      <summary>Сравнивает этот объект <see cref="T:System.Data.SqlTypes.SqlBoolean" /> с предоставленным объектом <see cref="T:System.Data.SqlTypes.SqlBoolean" /> и возвращает сведения об их относительных значениях.</summary>
      <param name="value">Сравниваемый объект <see cref="T:System.Data.SqlTypes.SqlBoolean" /><see cref="T:System.Data.SqlTypes.SqlBoolean" /> или пустая ссылка (<see langword="Nothing" /> в Visual Basic).</param>
      <returns>Число со знаком, представляющее относительные значения экземпляра и значения.  
  Значение 
  Описание: 
  Отрицательное целое число 
  Этот экземпляр меньше параметра <paramref name="value" />.  

  Нуль 
  Этот экземпляр и параметр <paramref name="value" /> равны.  

  Положительное целое число 
  Этот экземпляр больше параметра <paramref name="value" />.  

-или- 
 Параметр <paramref name="value" /> является неопределенной ссылкой (<see langword="Nothing" /> в Visual Basic).</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.CompareTo(System.Object)">
      <summary>Сравнивает данную структуру <see cref="T:System.Data.SqlTypes.SqlBoolean" /> с заданным объектом и возвращает сведения об их относительных значениях.</summary>
      <param name="value">Сравниваемый объект или пустая ссылка (<see langword="Nothing" /> в Visual Basic).</param>
      <returns>Число со знаком, представляющее относительные значения экземпляра и значения.  
  Значение 
  Описание 
  Отрицательное целое число 
  Этот экземпляр меньше параметра <paramref name="value" />.  

  Нуль 
  Этот экземпляр и параметр <paramref name="value" /> равны.  

  Положительное целое число 
  Этот экземпляр больше параметра <paramref name="value" />.  

- или - 
 Параметр <paramref name="value" /> является неопределенной ссылкой (<see langword="Nothing" /> в Visual Basic).</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.Equals(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary>Сравнивает две структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" />, чтобы определить, совпадают ли они.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns>Значение <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если два экземпляра равны, или значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />, если они не равны. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.Equals(System.Object)">
      <summary>Сравнивает параметр предоставленного объекта с <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <param name="value">Сравниваемый объект.</param>
      <returns>
        <see langword="true" />, если объект является экземпляром структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> и они равны; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlBoolean.False">
      <summary>Представляет значение ЛОЖЬ, которое может быть присвоено свойству <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> экземпляра структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.GetHashCode">
      <summary>Возвращает хэш-код данного экземпляра.</summary>
      <returns>Хэш-код в виде 32-разрядного целого числа со знаком.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary>Возвращает XSD (XML-схему) заданного объекта <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</summary>
      <param name="schemaSet">Объект <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
      <returns>Значение <see langword="string" />, указывающее определение XML-схемы заданного объекта <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.GreaterThan(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary>Сравнивает два экземпляра <see cref="T:System.Data.SqlTypes.SqlBoolean" />, чтобы определить, что первый объект больше, чем второй.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns>Значение <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр больше второго, в противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.GreaterThanOrEquals(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary>Сравнивает два экземпляра структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" />, чтобы определить, равны ли они, или первый больше, чем второй.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns>Значение <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр больше или равен второму экземпляру; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBoolean.IsFalse">
      <summary>Показывает, задано ли для текущего свойства <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />.</summary>
      <returns>Значение <see langword="true" />, если свойство <see langword="Value" /> имеет значение <see langword="False" />; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBoolean.IsNull">
      <summary>Указывает, имеет ли структура <see cref="T:System.Data.SqlTypes.SqlBoolean" /> значение null.</summary>
      <returns>
        <see langword="true" /> Если <see cref="T:System.Data.SqlTypes.SqlBoolean" /> структура является null, в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBoolean.IsTrue">
      <summary>Получает значение, указывающее имеет ли данный <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> значение <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />.</summary>
      <returns>Значение <see langword="true" />, если свойство <see langword="Value" /> имеет значение <see langword="true" />; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.LessThan(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary>Сравнивает два экземпляра <see cref="T:System.Data.SqlTypes.SqlBoolean" />, чтобы определить, является ли первый меньшим, чем второй.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns>Значение <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр меньше второго, в противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.LessThanOrEquals(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary>Сравнивает два экземпляра структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" />, чтобы определить, равны ли они, или первый меньше, чем второй.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns>Значение <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр меньше или равен второму экземпляру; в противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.NotEquals(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary>Сравнивает на равенство два экземпляра <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns>Значение <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если два экземпляра не равны, или значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />, если они равны. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlBoolean.Null">
      <summary>Представляет значение <see cref="T:System.DBNull" />, которое может быть присвоено данному экземпляру структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlBoolean.One">
      <summary>Представляет значение единицы, которое может быть назначено свойству <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" /> экземпляра структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.OnesComplement(System.Data.SqlTypes.SqlBoolean)">
      <summary>Выполняет операцию дополнения до единицы для предоставленных структур <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns>Дополнение до единицы предоставленной структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_BitwiseAnd(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary>Вычисляет результат битовой операции логического умножения для двух указанных структур <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns>Результат операции логического умножения.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_BitwiseOr(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary>Вычисляет результат битовой операции логического сложения операндов.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns>Результаты операции логического сложения.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Equality(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary>Сравнивает на равенство два экземпляра <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <param name="x">Объект <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <param name="y">Объект <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns>Значение <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если два экземпляра равны, или значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />, если они не равны. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_ExclusiveOr(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary>Выполняет побитовую операцию исключающего логического сложения с предоставленными параметрами.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns>Результат операции исключающего логического сложения.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Boolean">
      <summary>Преобразует значение <see cref="T:System.Data.SqlTypes.SqlBoolean" /> в логическое значение.</summary>
      <param name="x">Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, которое требуется преобразовать.</param>
      <returns>Логическое значение, установленное для <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlBoolean">
      <summary>Преобразует параметр <see cref="T:System.Data.SqlTypes.SqlByte" /> в структуру <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <param name="x">Параметр <see cref="T:System.Data.SqlTypes.SqlByte" />, который требуется преобразовать в структуру <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlBoolean" />, значение которой равно <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> параметра <see cref="T:System.Data.SqlTypes.SqlByte" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlBoolean">
      <summary>Преобразует параметр <see cref="T:System.Data.SqlTypes.SqlDecimal" /> в структуру <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <param name="x">Параметр <see cref="T:System.Data.SqlTypes.SqlDecimal" />, который требуется преобразовать в структуру <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlByte" />, у которой значение равно свойству <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> параметра <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlBoolean">
      <summary>Преобразует параметр <see cref="T:System.Data.SqlTypes.SqlDouble" /> в структуру <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <param name="x">Параметр <see cref="T:System.Data.SqlTypes.SqlDouble" />, который требуется преобразовать в структуру <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlBoolean" />, у которой значение равно свойству <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> параметра <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlBoolean">
      <summary>Преобразует параметр <see cref="T:System.Data.SqlTypes.SqlInt16" /> в структуру <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <param name="x">Параметр <see cref="T:System.Data.SqlTypes.SqlInt16" />, который требуется преобразовать в структуру <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlBoolean" />, у которой значение равно свойству <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> параметра <see cref="T:System.Data.SqlTypes.SqlInt16" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlBoolean">
      <summary>Преобразует параметр <see cref="T:System.Data.SqlTypes.SqlInt32" /> в структуру <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <param name="x">Параметр <see cref="T:System.Data.SqlTypes.SqlInt32" />, который требуется преобразовать в структуру <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlBoolean" />, у которой значение равно свойству <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> параметра <see cref="T:System.Data.SqlTypes.SqlInt32" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlBoolean">
      <summary>Преобразует параметр <see cref="T:System.Data.SqlTypes.SqlInt64" /> в структуру <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <param name="x">Параметр <see cref="T:System.Data.SqlTypes.SqlInt64" />, который требуется преобразовать в структуру <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlBoolean" />, у которой значение равно свойству <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> параметра <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlBoolean">
      <summary>Преобразует параметр <see cref="T:System.Data.SqlTypes.SqlMoney" /> в структуру <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <param name="x">Параметр <see cref="T:System.Data.SqlTypes.SqlMoney" />, который требуется преобразовать в структуру <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlByte" />, у которой значение равно свойству <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> параметра <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlBoolean">
      <summary>Преобразует параметр <see cref="T:System.Data.SqlTypes.SqlSingle" /> в структуру <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <param name="x">Параметр <see cref="T:System.Data.SqlTypes.SqlSingle" />, который требуется преобразовать в структуру <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlBoolean" />, у которой значение равно свойству <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> параметра <see cref="T:System.Data.SqlTypes.SqlSingle" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlBoolean">
      <summary>Преобразует параметр <see cref="T:System.Data.SqlTypes.SqlString" /> в структуру <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <param name="x">Параметр <see cref="T:System.Data.SqlTypes.SqlString" />, который требуется преобразовать в структуру <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlByte" />, у которой значение равно свойству <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> параметра <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_False(System.Data.SqlTypes.SqlBoolean)">
      <summary>Оператор false может использоваться для проверки свойства <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> параметра <see cref="T:System.Data.SqlTypes.SqlBoolean" />, чтобы определить, имеет ли оно значение FALSE.</summary>
      <param name="x">Проверяемая структура <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns>Значение <see langword="true" />, если предоставленный параметр <see cref="T:System.Data.SqlTypes.SqlBoolean" /> имеет значение <see langword="false" />; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_GreaterThan(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary>Сравнивает две структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" />, чтобы определить, превышает ли первая вторую.</summary>
      <param name="x">Объект <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <param name="y">Объект <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns>Значение <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр больше второго, в противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary>Сравнивает две структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" />, чтобы определить, превышает ли первая вторую или равна ли ей.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns>Значение <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр больше или равен второму экземпляру; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Implicit(System.Boolean)~System.Data.SqlTypes.SqlBoolean">
      <summary>Преобразует предоставленное значение байта в <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <param name="x">Значение байта, преобразуемое в <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns>Значение <see cref="T:System.Data.SqlTypes.SqlBoolean" />, содержащее 0 или 1.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Inequality(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary>Сравнивает два экземпляра <see cref="T:System.Data.SqlTypes.SqlBoolean" /> с целью проверить, что они не равны.</summary>
      <param name="x">Объект <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <param name="y">Объект <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns>Значение <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если два экземпляра не равны, или значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />, если они равны. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_LessThan(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary>Сравнивает два экземпляра <see cref="T:System.Data.SqlTypes.SqlBoolean" />, чтобы определить, является ли первый меньшим, чем второй.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns>Значение <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр меньше второго, в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_LessThanOrEqual(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary>Сравнивает два экземпляра структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" />, чтобы определить, равны ли они, или первый меньше, чем второй.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns>Значение <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр меньше или равен второму экземпляру; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_LogicalNot(System.Data.SqlTypes.SqlBoolean)">
      <summary>Выполняет операцию логического отрицания со структурой <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlBoolean" />, для которой будет выполняться операция логического отрицания.</param>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> с <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /><see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если аргумент имел значение TRUE, <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />, если аргумент имел значение NULL; в противном случае — <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_OnesComplement(System.Data.SqlTypes.SqlBoolean)">
      <summary>Выполняет операцию дополнения до единицы для предоставленных структур <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns>Дополнение до единицы предоставленной структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_True(System.Data.SqlTypes.SqlBoolean)">
      <summary>Оператор true может использоваться для проверки свойства <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> для структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" />, чтобы определить, имеет ли оно значение TRUE.</summary>
      <param name="x">Проверяемая структура <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns>Значение <see langword="true" />, если предоставленный параметр <see cref="T:System.Data.SqlTypes.SqlBoolean" /> имеет значение <see langword="true" />; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.Or(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary>Выполняет битовую операцию ИЛИ с двумя указанными структурами <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlBoolean" />, значение которой является результатом битовой операции логического сложения.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.Parse(System.String)">
      <summary>Преобразует заданное представление логического значения <see cref="T:System.String" /> в его эквивалент <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <param name="s">Преобразуемая структура <see cref="T:System.String" />.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlBoolean" />, содержащая анализируемое значение.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary>Данный член предназначен для поддержки платформы .NET Framework и не должен вызываться напрямую из кода приложения.</summary>
      <returns>Объект <see langword="XmlSchema" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary>Данный член предназначен для поддержки платформы .NET Framework и не должен вызываться напрямую из кода приложения.</summary>
      <param name="reader">
        <see langword="XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary>Данный член предназначен для поддержки платформы .NET Framework и не должен вызываться напрямую из кода приложения.</summary>
      <param name="writer">
        <see langword="XmlWriter" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToSqlByte">
      <summary>Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlBoolean" /> в <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlByte" /> со значением 1 или 0. Если значение структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> равняется <see langword="true" />, новая структура <see cref="T:System.Data.SqlTypes.SqlByte" /> имеет значение 1. В противном случае новое значение структуры <see cref="T:System.Data.SqlTypes.SqlByte" /> — 0.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToSqlDecimal">
      <summary>Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlBoolean" /> в <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlDecimal" /> со значением 1 или 0. Если значение структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> равняется <see langword="true" />, новая структура <see cref="T:System.Data.SqlTypes.SqlDecimal" /> имеет значение 1. В противном случае новое значение структуры <see cref="T:System.Data.SqlTypes.SqlDecimal" /> — 0.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToSqlDouble">
      <summary>Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlBoolean" /> в <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlDouble" /> со значением 1 или 0. Если значение структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> равняется <see langword="true" />, новая структура <see cref="T:System.Data.SqlTypes.SqlDouble" /> имеет значение 1. В противном случае новое значение структуры <see cref="T:System.Data.SqlTypes.SqlDouble" /> — 0.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToSqlInt16">
      <summary>Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlBoolean" /> в <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <returns>Новая структура <see langword="SqlInt16" /> со значением 1 или 0. Если значение структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> равняется <see langword="true" />, новая структура <see cref="T:System.Data.SqlTypes.SqlInt16" /> имеет значение 1. В противном случае новое значение структуры <see langword="SqlInt16" /> — 0.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToSqlInt32">
      <summary>Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlBoolean" /> в <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <returns>Новая структура <see langword="SqlInt32" /> со значением 1 или 0. Если значение структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> равняется <see langword="true" />, новая структура <see cref="T:System.Data.SqlTypes.SqlInt32" /> имеет значение 1. В противном случае новое значение структуры <see langword="SqlInt32" /> — 0.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToSqlInt64">
      <summary>Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlBoolean" /> в <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <returns>Новая структура <see langword="SqlInt64" /> со значением 1 или 0. Если значение структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> равняется <see langword="true" />, новая структура <see cref="T:System.Data.SqlTypes.SqlInt64" /> имеет значение 1. В противном случае новое значение структуры <see langword="SqlInt64" /> — 0.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToSqlMoney">
      <summary>Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlBoolean" /> в <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlMoney" /> со значением 1 или 0. Если значение структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> равняется <see langword="true" />, новое значение <see cref="T:System.Data.SqlTypes.SqlMoney" /> равняется 1. Если значение структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> равняется <see langword="false" />, новое значение <see cref="T:System.Data.SqlTypes.SqlMoney" /> равняется 0. Если значение структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> не равняется ни 1, ни 0, новое значение <see cref="T:System.Data.SqlTypes.SqlMoney" /> равняется <see cref="F:System.Data.SqlTypes.SqlMoney.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToSqlSingle">
      <summary>Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlBoolean" /> в <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlSingle" /> со значением 1 или 0.  
Если значение структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> равно TRUE, значение новой структуры <see cref="T:System.Data.SqlTypes.SqlSingle" /> равно 1; в противном случае значение новой структуры <see cref="T:System.Data.SqlTypes.SqlSingle" /> равно 0.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToSqlString">
      <summary>Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlBoolean" /> в <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlString" /> со значением 1 или 0. Если значение структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> — <see langword="true" />, то значение структуры <see cref="T:System.Data.SqlTypes.SqlString" /> — 1. В противном случае новое значение структуры <see cref="T:System.Data.SqlTypes.SqlString" /> — 0.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToString">
      <summary>Преобразует данную структуру <see cref="T:System.Data.SqlTypes.SqlBoolean" /> в строку.</summary>
      <returns>Строка, содержащая значение <see cref="T:System.Data.SqlTypes.SqlBoolean" />. Если данное значение равно NULL, строка будет содержать "NULL".</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlBoolean.True">
      <summary>Представляет значение ИСТИНА, которое может быть присвоено свойству <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> экземпляра структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBoolean.Value">
      <summary>Получает значение структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" />. Это свойство доступно только для чтения.</summary>
      <returns>Значение <see langword="true" />, если <see cref="T:System.Data.SqlTypes.SqlBoolean" /> имеет тип <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />; в противном случае — значение <see langword="false" />.</returns>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">Для свойства задано значение NULL.</exception>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.Xor(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary>Выполняет битовую операцию исключающего логического сложения с предоставленными параметрами.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns>Результат операции исключающего логического сложения.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlBoolean.Zero">
      <summary>Представляет нулевое значение, которое можно присвоить свойству <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" /> экземпляра структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
    </member>
    <member name="T:System.Data.SqlTypes.SqlByte">
      <summary>Представляет 8-разрядное целое число без знака в диапазоне от 0 до 255, сохраняемое в базе данных или извлекаемое из нее.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.#ctor(System.Byte)">
      <summary>Инициализирует новый экземпляр структуры <see cref="T:System.Data.SqlTypes.SqlByte" /> с использованием заданного байтового значения.</summary>
      <param name="value">Байтовое значение, сохраняемое в свойстве <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> новой структуры <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.Add(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>Вычисляет сумму двух заданных структур <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlByte" />, свойство <see langword="Value" /> которой содержит результаты сложения.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.BitwiseAnd(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>Выполняет битовую операцию логического умножения операндов <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns>Результаты битовой операции логического умножения.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.BitwiseOr(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>Вычисляет результат битовой операции OR двух операндов <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns>Результаты битовой операции логического сложения.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.CompareTo(System.Data.SqlTypes.SqlByte)">
      <summary>Сравнивает данный экземпляр с предоставленным объектом <see cref="T:System.Data.SqlTypes.SqlByte" /> и возвращает сведения об их относительных значениях.</summary>
      <param name="value">Сравниваемый объект <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns>Число со знаком, представляющее результат сравнения значений экземпляра и объекта.  
  Возвращаемое значение 
  Условие 
  Меньше нуля 
  Этот экземпляр меньше данного объекта.  

  Нуль 
  Этот экземпляр равен данному объекту.  

  Больше нуля 
  Этот экземпляр больше данного объекта 
- или - 
Объект является пустой ссылкой (<see langword="Nothing" /> в Visual Basic).</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.CompareTo(System.Object)">
      <summary>Сравнивает этот экземпляр с предоставленным объектом <see cref="T:System.Object" /> и возвращает сведения об их относительных значениях.</summary>
      <param name="value">Выражение <see cref="T:System.Object" /> для сравнения.</param>
      <returns>Число со знаком, представляющее результат сравнения значений экземпляра и объекта.  
  Возвращаемое значение 
  Условие 
  Меньше нуля 
  Этот экземпляр меньше данного объекта.  

  Нуль 
  Этот экземпляр равен данному объекту.  

  Больше нуля 
  Этот экземпляр больше данного объекта 
- или - 
Объект является пустой ссылкой (<see langword="Nothing" /> в Visual Basic).</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.Divide(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>Делит свой первый операнд <see cref="T:System.Data.SqlTypes.SqlByte" /> на второй.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlByte" />, свойство <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> которой содержит результаты деления.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.Equals(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>Выполняет логическое сравнение двух структур <see cref="T:System.Data.SqlTypes.SqlByte" />, чтобы определить, равны ли они.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns>
        <see langword="true" />, если эти два значения равны. В противном случае — значение <see langword="false" />. Если один из экземпляров пуст, <see langword="SqlByte" /> будет иметь значение NULL.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.Equals(System.Object)">
      <summary>Сравнивает предоставленный параметр <see cref="T:System.Object" /> со свойством <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> объекта <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="value">Выражение <see cref="T:System.Object" /> для сравнения.</param>
      <returns>
        <see langword="true" />, если объект является экземпляром структуры <see cref="T:System.Data.SqlTypes.SqlByte" /> и они равны; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.GetHashCode">
      <summary>Возвращает хэш-код данного экземпляра.</summary>
      <returns>Хэш-код в виде 32-разрядного целого числа со знаком.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary>Возвращает XSD (XML-схему) заданного объекта <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</summary>
      <param name="schemaSet">Объект <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
      <returns>Значение <see langword="string" />, указывающее определение XML-схемы заданного объекта <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.GreaterThan(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>Сравнивает два экземпляра <see cref="T:System.Data.SqlTypes.SqlByte" />, чтобы определить, что первый объект больше, чем второй.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns>Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр больше второго. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlByte" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.GreaterThanOrEqual(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>Сравнивает две структуры <see cref="T:System.Data.SqlTypes.SqlByte" />, чтобы определить, превышает ли первая вторую или равна ли ей.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns>Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр больше второго или равен ему. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlByte" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlByte.IsNull">
      <summary>Получает логическое значение, показывающее, имеет ли данная структура <see cref="T:System.Data.SqlTypes.SqlByte" /> значение NULL.</summary>
      <returns>Значение <see langword="true" />, если NULL. В противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.LessThan(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>Сравнивает два экземпляра <see cref="T:System.Data.SqlTypes.SqlByte" />, чтобы определить, является ли первый меньшим, чем второй.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns>Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр меньше второго. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlByte" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.LessThanOrEqual(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>Сравнивает два экземпляра структуры <see cref="T:System.Data.SqlTypes.SqlByte" />, чтобы определить, равны ли они, или первый меньше, чем второй.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns>Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр меньше второго или ему равен. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlByte" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlByte.MaxValue">
      <summary>Константа, представляющая наибольшее возможное значение <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlByte.MinValue">
      <summary>Константа, представляющая наименьшее возможное значение <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.Mod(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>Вычисляет остаток от деления первого операнда <see cref="T:System.Data.SqlTypes.SqlByte" /> на второй.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlByte" />, <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> которой содержит остаток.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.Modulus(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>Делит одно значение <see cref="T:System.Data.SqlTypes.SqlByte" />на другое и возвращает остаток.</summary>
      <param name="x">Объект <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y">Объект <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns>Остаток, получившийся при делении <paramref name="x" /> на <paramref name="y" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.Multiply(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>Вычисляет произведение двух операндов <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlByte" />, свойство <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> которой содержит результат умножения.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.NotEquals(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>Сравнивает два экземпляра <see cref="T:System.Data.SqlTypes.SqlByte" /> с целью проверить, что они не равны.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns>Переменная <see cref="T:System.Data.SqlTypes.SqlBoolean" />, которая принимает значение <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если два экземпляра не равны, или значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />, если они равны. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlByte" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlByte.Null">
      <summary>Представляет значение <see cref="T:System.DBNull" />, которое может быть присвоено данному экземпляру структуры <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.OnesComplement(System.Data.SqlTypes.SqlByte)">
      <summary>Оператор дополнения до единицы выполняет битовую операцию дополнения до единицы над своим операндом <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlByte" />, свойство <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> которой содержит дополнение до единицы параметра <see cref="T:System.Data.SqlTypes.SqlByte" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Addition(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>Вычисляет сумму двух заданных структур <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlByte" />, в свойстве <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> которой содержится сумма двух операндов.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_BitwiseAnd(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>Выполняет битовую операцию логического умножения операндов <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns>Результаты битовой операции логического умножения.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_BitwiseOr(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>Вычисляет результат битовой операции OR двух операндов <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns>Результаты битовой операции логического сложения.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Division(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>Делит свой первый операнд <see cref="T:System.Data.SqlTypes.SqlByte" /> на второй.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlByte" />, свойство <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> которой содержит результаты деления.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Equality(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>Выполняет логическое сравнение двух структур <see cref="T:System.Data.SqlTypes.SqlByte" />, чтобы определить, равны ли они.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlBoolean" />, которая принимает значение <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если два экземпляра равны, или значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />, если они не равны. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlByte" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_ExclusiveOr(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>Выполняет битовую операцию исключающего логического сложения с предоставленными параметрами.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns>Результаты битовой операции исключающего логического сложения.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlByte">
      <summary>Преобразует параметр <see cref="T:System.Data.SqlTypes.SqlBoolean" /> в <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x">Параметр <see cref="T:System.Data.SqlTypes.SqlBoolean" />, преобразуемый в <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlByte" />, свойство <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> которой равно <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" /> предоставленного параметра <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlByte)~System.Byte">
      <summary>Преобразует предоставленную структуру <see cref="T:System.Data.SqlTypes.SqlByte" /> в байт.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />, преобразуемая в байт.</param>
      <returns>Байт, значение которого равно свойству <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> параметра <see cref="T:System.Data.SqlTypes.SqlByte" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlByte">
      <summary>Преобразует предоставленное <see cref="T:System.Data.SqlTypes.SqlDecimal" /> в <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlByte" />, свойство <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> которой равно <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> параметра <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlByte">
      <summary>Преобразует предоставленное <see cref="T:System.Data.SqlTypes.SqlDouble" /> в <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlByte" />, свойство <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> которой равно <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> параметра <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlByte">
      <summary>Преобразует параметр <see cref="T:System.Data.SqlTypes.SqlInt16" /> в <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlByte" />, свойство <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> которой равно <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> параметра <see cref="T:System.Data.SqlTypes.SqlInt16" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlByte">
      <summary>Преобразует предоставленное <see cref="T:System.Data.SqlTypes.SqlInt32" /> в <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlByte" />, свойство <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> которой равно <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> параметра <see cref="T:System.Data.SqlTypes.SqlInt32" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlByte">
      <summary>Преобразует предоставленное <see cref="T:System.Data.SqlTypes.SqlInt64" /> в <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlByte" />, свойство <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> которой равно <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> параметра <see langword="SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlByte">
      <summary>Преобразует параметр <see cref="T:System.Data.SqlTypes.SqlMoney" /> в <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x">Структура <see langword="SqlMoney" />.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlByte" />, свойство <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> которой равно <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> параметра <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlByte">
      <summary>Преобразует предоставленную структуру <see cref="T:System.Data.SqlTypes.SqlSingle" /> в <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlByte" />, свойство <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> которой равно <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> параметра <see cref="T:System.Data.SqlTypes.SqlSingle" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlByte">
      <summary>Преобразует предоставленное <see cref="T:System.Data.SqlTypes.SqlString" /> в <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x">Экземпляр класса <see langword="SqlString" />.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlByte" />, свойство <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> которой равно числовому значению, представленному параметром <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_GreaterThan(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>Сравнивает два экземпляра <see cref="T:System.Data.SqlTypes.SqlByte" />, чтобы определить, что первый объект больше, чем второй.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns>Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр больше второго. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlByte" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>Сравнивает два экземпляра структуры <see cref="T:System.Data.SqlTypes.SqlByte" />, чтобы определить, равны ли они, или первый больше, чем второй.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns>Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр больше второго или равен ему. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlByte" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see langword="SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Implicit(System.Byte)~System.Data.SqlTypes.SqlByte">
      <summary>Преобразует предоставленное значение байта в <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x">Значение байта, преобразуемое в <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlByte" />, свойство <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> которой равно предоставленному параметру.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Inequality(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>Сравнивает два экземпляра <see cref="T:System.Data.SqlTypes.SqlByte" /> с целью проверить, что они не равны.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns>Переменная <see cref="T:System.Data.SqlTypes.SqlBoolean" />, которая принимает значение <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если два экземпляра не равны, или значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />, если они равны. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlByte" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_LessThan(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>Сравнивает два экземпляра <see cref="T:System.Data.SqlTypes.SqlByte" />, чтобы определить, является ли первый меньшим, чем второй.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns>Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр меньше второго. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlByte" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_LessThanOrEqual(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>Сравнивает два экземпляра структуры <see cref="T:System.Data.SqlTypes.SqlByte" />, чтобы определить, равны ли они, или первый меньше, чем второй.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns>Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр меньше второго или ему равен. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlByte" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Modulus(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>Вычисляет остаток от деления первого операнда <see cref="T:System.Data.SqlTypes.SqlByte" /> на второй.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlByte" />, <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> которой содержит остаток.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Multiply(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>Вычисляет произведение двух операндов <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlByte" />, свойство <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> которой содержит результат умножения.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_OnesComplement(System.Data.SqlTypes.SqlByte)">
      <summary>Оператор дополнения до единицы выполняет битовую операцию дополнения до единицы над своим операндом <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlByte" />, свойство <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> которой содержит дополнение до единицы параметра <see cref="T:System.Data.SqlTypes.SqlByte" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Subtraction(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>Вычитает второй операнд <see cref="T:System.Data.SqlTypes.SqlByte" /> из первого.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns>Результаты вычитания второго операнда <see cref="T:System.Data.SqlTypes.SqlByte" /> из первого.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.Parse(System.String)">
      <summary>Преобразует представление <see cref="T:System.String" /> числа в эквивалентное ему 8-разрядное целое число без знака.</summary>
      <param name="s">Представление <see langword="String" />, которое необходимо проанализировать.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlByte" />, содержащая 8-разрядное число, представленное параметром <see langword="String" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.Subtract(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>Вычитает второй операнд <see cref="T:System.Data.SqlTypes.SqlByte" /> из первого.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns>Результаты вычитания второго операнда <see cref="T:System.Data.SqlTypes.SqlByte" /> из первого.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary>Данный член предназначен для поддержки платформы .NET Framework и не должен вызываться напрямую из кода приложения.</summary>
      <returns>Объект <see langword="XmlSchema" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary>Данный член предназначен для поддержки платформы .NET Framework и не должен вызываться напрямую из кода приложения.</summary>
      <param name="reader">
        <see langword="XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary>Данный член предназначен для поддержки платформы .NET Framework и не должен вызываться напрямую из кода приложения.</summary>
      <param name="writer">
        <see langword="XmlWriter" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToSqlBoolean">
      <summary>Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlByte" /> в <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <returns>
        <see langword="true" />, если <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> не равно нулю; <see langword="false" />, если равно нулю; в противном случае — NULL.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToSqlDecimal">
      <summary>Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlByte" /> в <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <returns>Структура <see langword="SqlDecimal" />, <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> которой равно <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlByte" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToSqlDouble">
      <summary>Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlByte" /> в <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <returns>Структура <see langword="SqlDouble" />, имеющая то же значение, что и данная структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToSqlInt16">
      <summary>Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlByte" /> в <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <returns>Структура <see langword="SqlInt16" />, имеющая то же значение, что и данная структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToSqlInt32">
      <summary>Преобразует <see cref="T:System.Data.SqlTypes.SqlByte" /> в <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <returns>Структура <see langword="SqlInt32" />, имеющая то же значение, что и данная структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToSqlInt64">
      <summary>Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlByte" /> в <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <returns>Структура <see langword="SqlInt64" />, <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> которой равно <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> данной структуры <see cref="T:System.Data.SqlTypes.SqlByte" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToSqlMoney">
      <summary>Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlByte" /> в <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <returns>Структура <see langword="SqlMoney" />, <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> которой равно <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlByte" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToSqlSingle">
      <summary>Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlByte" /> в <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <returns>Структура <see langword="SqlSingle" />, имеющая то же <see cref="P:System.Data.SqlTypes.SqlSingle.Value" />, что и данная структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToSqlString">
      <summary>Преобразует этот экземпляр <see cref="T:System.Data.SqlTypes.SqlByte" /> в <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <returns>Структура <see langword="SqlString" />, содержащая строковое представление <see cref="T:System.Data.SqlTypes.SqlByte" /> структуры <see cref="P:System.Data.SqlTypes.SqlByte.Value" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToString">
      <summary>Преобразует данную структуру <see cref="T:System.Data.SqlTypes.SqlByte" /> в <see cref="T:System.String" />.</summary>
      <returns>Строка, содержащая <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> типа <see cref="T:System.Data.SqlTypes.SqlByte" />. Если <see langword="Value" /> равно NULL, <see langword="String" /> будет пустой строкой.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlByte.Value">
      <summary>Получает значение структуры <see cref="T:System.Data.SqlTypes.SqlByte" />. Это свойство доступно только для чтения.</summary>
      <returns>Значение структуры <see cref="T:System.Data.SqlTypes.SqlByte" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.Xor(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>Выполняет битовую операцию исключающего логического сложения с предоставленными параметрами.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns>Результаты операции исключающего логического сложения.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlByte.Zero">
      <summary>Представляет нулевое значение, которое можно присвоить свойству <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> экземпляра структуры <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
    </member>
    <member name="T:System.Data.SqlTypes.SqlBytes">
      <summary>Представляет изменяемый ссылочный тип, служащий оболочкой для <see cref="P:System.Data.SqlTypes.SqlBytes.Buffer" /> или <see cref="P:System.Data.SqlTypes.SqlBytes.Stream" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.SqlTypes.SqlBytes" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.#ctor(System.Byte[])">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.SqlTypes.SqlBytes" /> на основе заданного массива байтов.</summary>
      <param name="buffer">Массив байтов без знака.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.#ctor(System.Data.SqlTypes.SqlBinary)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.SqlTypes.SqlBytes" /> на основе указанного значения <see cref="T:System.Data.SqlTypes.SqlBinary" />.</summary>
      <param name="value">Значение <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.#ctor(System.IO.Stream)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.SqlTypes.SqlBytes" /> на основе указанного значения <see cref="T:System.IO.Stream" />.</summary>
      <param name="s">Объект <see cref="T:System.IO.Stream" />.</param>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBytes.Buffer">
      <summary>Возвращает ссылку на внутренний буфер.</summary>
      <returns>Ссылка на внутренний буфер. Для экземпляров <see cref="T:System.Data.SqlTypes.SqlBytes" />, созданных поверх неуправляемых указателей, возвращает управляемую копию внутреннего буфера.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary>Возвращает XSD (XML-схему) заданного объекта <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</summary>
      <param name="schemaSet">Объект <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
      <returns>Значение <see langword="string" />, указывающее определение XML-схемы заданного объекта <see langword="XmlSchemaSet" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBytes.IsNull">
      <summary>Получает логическое значение, показывающее, имеет ли данный экземпляр <see cref="T:System.Data.SqlTypes.SqlBytes" /> значение NULL.</summary>
      <returns>Значение <see langword="true" />, если объект <see cref="T:System.Data.SqlTypes.SqlBytes" /> имеет значение NULL; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBytes.Item(System.Int64)">
      <summary>Получает или задает экземпляр <see cref="T:System.Data.SqlTypes.SqlBytes" /> по указанному индексу.</summary>
      <param name="offset">Значение <see cref="T:System.Int64" />.</param>
      <returns>Значение <see cref="T:System.Byte" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBytes.Length">
      <summary>Получает длину значения, которое содержится в экземпляре <see cref="T:System.Data.SqlTypes.SqlBytes" />.</summary>
      <returns>Значение <see cref="T:System.Int64" />, представляющее длину значения, которое содержится в экземпляре <see cref="T:System.Data.SqlTypes.SqlBytes" />.  
Возвращает -1, если для экземпляра нет доступного буфера или если значение равно NULL.  
Возвращает <see cref="P:System.IO.Stream.Length" /> для экземпляра, включенного в поток.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBytes.MaxLength">
      <summary>Получает максимальную длину значения внутреннего буфера данного экземпляра <see cref="T:System.Data.SqlTypes.SqlBytes" />.</summary>
      <returns>Число типа long, представляющее максимальную длину значения внутреннего буфера. Возвращает –1 для экземпляра <see cref="T:System.Data.SqlTypes.SqlBytes" />, включенного в поток.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBytes.Null">
      <summary>Получает пустой экземпляр данного объекта <see cref="T:System.Data.SqlTypes.SqlBytes" />.</summary>
      <returns>Экземпляр которого <see cref="P:System.Data.SqlTypes.SqlBytes.IsNull" /> возвращает <see langword="true" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.op_Explicit(System.Data.SqlTypes.SqlBinary)~System.Data.SqlTypes.SqlBytes">
      <summary>Преобразует структуру <see cref="T:System.Data.SqlTypes.SqlBinary" /> в структуру <see cref="T:System.Data.SqlTypes.SqlBytes" />.</summary>
      <param name="value">Преобразуемая структура <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlBytes" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.op_Explicit(System.Data.SqlTypes.SqlBytes)~System.Data.SqlTypes.SqlBinary">
      <summary>Преобразует структуру <see cref="T:System.Data.SqlTypes.SqlBytes" /> в структуру <see cref="T:System.Data.SqlTypes.SqlBinary" />.</summary>
      <param name="value">Преобразуемая структура <see cref="T:System.Data.SqlTypes.SqlBytes" />.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlBinary" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.Read(System.Int64,System.Byte[],System.Int32,System.Int32)">
      <summary>Копирует байты из этого экземпляра <see cref="T:System.Data.SqlTypes.SqlBytes" /> в буфер передачи и возвращает количество скопированных байтов.</summary>
      <param name="offset">Смещение типа long <see cref="T:System.Int64" /> в значении, которое содержится в экземпляре <see cref="T:System.Data.SqlTypes.SqlBytes" />.</param>
      <param name="buffer">Буфер массива байтов, в который будет выполняться копирование.</param>
      <param name="offsetInBuffer">Целочисленное смещение <see cref="T:System.Int32" /> в буфере для начала копирования.</param>
      <param name="count">Целое число <see cref="T:System.Int32" />, представляющее количество байтов для копирования.</param>
      <returns>Значение типа long <see cref="T:System.Int64" />, представляющее число скопированных байтов.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.SetLength(System.Int64)">
      <summary>Задает длину данного экземпляра <see cref="T:System.Data.SqlTypes.SqlBytes" />.</summary>
      <param name="value">Значение типа long <see cref="T:System.Int64" />, представляющее длину.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.SetNull">
      <summary>Задает для данного экземпляра <see cref="T:System.Data.SqlTypes.SqlBytes" /> значение NULL.</summary>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBytes.Storage">
      <summary>Возвращает сведения о состоянии хранения данного экземпляра <see cref="T:System.Data.SqlTypes.SqlBytes" />.</summary>
      <returns>Перечисление <see cref="T:System.Data.SqlTypes.StorageState" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBytes.Stream">
      <summary>Возвращает или задает данные этого экземпляра <see cref="T:System.Data.SqlTypes.SqlBytes" /> в виде потока.</summary>
      <returns>Поток, содержащий данные SqlBytes.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Получает сведения о сериализации со всеми данными, необходимыми для повторного создания данного экземпляра <see cref="T:System.Data.SqlTypes.SqlBytes" />.</summary>
      <param name="info">Объект, для которого будут заполнены сведения о сериализации.</param>
      <param name="context">Контекст назначения сериализации.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary>Данный член предназначен для поддержки платформы .NET Framework и не должен вызываться напрямую из кода приложения.</summary>
      <returns>Данный член предназначен для поддержки платформы .NET Framework и не должен вызываться напрямую из кода приложения.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary>Данный член предназначен для поддержки платформы .NET Framework и не должен вызываться напрямую из кода приложения.</summary>
      <param name="r">
        <see langword="XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary>Данный член предназначен для поддержки платформы .NET Framework и не должен вызываться напрямую из кода приложения.</summary>
      <param name="writer">
        <see langword="XmlWriter" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.ToSqlBinary">
      <summary>Формирует и возвращает <see cref="T:System.Data.SqlTypes.SqlBinary" /> из данного экземпляра <see cref="T:System.Data.SqlTypes.SqlBytes" />.</summary>
      <returns>Объект <see cref="T:System.Data.SqlTypes.SqlBinary" /> из данного экземпляра.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBytes.Value">
      <summary>Возвращает управляемую копию значения, которое содержится в данном объекте <see cref="T:System.Data.SqlTypes.SqlBytes" />.</summary>
      <returns>Значение данного экземпляра <see cref="T:System.Data.SqlTypes.SqlBytes" /> в виде массива байтов.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.Write(System.Int64,System.Byte[],System.Int32,System.Int32)">
      <summary>Копирует байты из буфера передачи в этот экземпляр <see cref="T:System.Data.SqlTypes.SqlBytes" />.</summary>
      <param name="offset">Смещение типа long <see cref="T:System.Int64" /> в значении, которое содержится в экземпляре <see cref="T:System.Data.SqlTypes.SqlBytes" />.</param>
      <param name="buffer">Буфер массива байтов, в который будет выполняться копирование.</param>
      <param name="offsetInBuffer">Целочисленное смещение <see cref="T:System.Int32" /> в буфере для начала копирования.</param>
      <param name="count">Целое число <see cref="T:System.Int32" />, представляющее количество байтов для копирования.</param>
    </member>
    <member name="T:System.Data.SqlTypes.SqlChars">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlChars" /> —изменяемый ссылочный тип, служащий оболочкой для массива <see cref="T:System.Char" /> или экземпляра <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.SqlTypes.SqlChars" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.#ctor(System.Char[])">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.SqlTypes.SqlChars" /> на основе заданного массива знаков.</summary>
      <param name="buffer">Массив <see cref="T:System.Char" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.#ctor(System.Data.SqlTypes.SqlString)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.SqlTypes.SqlChars" /> на основе указанного значения <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <param name="value">Объект <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
    </member>
    <member name="P:System.Data.SqlTypes.SqlChars.Buffer">
      <summary>Возвращает ссылку на внутренний буфер.</summary>
      <returns>Ссылка на внутренний буфер. Для экземпляров <see cref="T:System.Data.SqlTypes.SqlChars" />, созданных поверх неуправляемых указателей, возвращает управляемую копию внутреннего буфера.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary>Возвращает XSD (XML-схему) заданного объекта <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</summary>
      <param name="schemaSet">Объект <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
      <returns>Значение <see langword="string" />, указывающее определение XML-схемы заданного объекта <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlChars.IsNull">
      <summary>Получает логическое значение, показывающее, имеет ли данный экземпляр <see cref="T:System.Data.SqlTypes.SqlChars" /> значение NULL.</summary>
      <returns>
        <see langword="true" />, если <see cref="T:System.Data.SqlTypes.SqlChars" /> имеет значение NULL. В противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlChars.Item(System.Int64)">
      <summary>Получает или задает экземпляр <see cref="T:System.Data.SqlTypes.SqlChars" /> по указанному индексу.</summary>
      <param name="offset">Значение <see cref="T:System.Int64" />.</param>
      <returns>Значение <see cref="T:System.Char" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlChars.Length">
      <summary>Получает длину значения, которое содержится в экземпляре <see cref="T:System.Data.SqlTypes.SqlChars" />.</summary>
      <returns>Значение <see cref="T:System.Int64" />, указывающее длину (в символах) значения, которое содержится в экземпляре <see cref="T:System.Data.SqlTypes.SqlChars" />.  
Возвращает -1, если для экземпляра нет доступного буфера или если значение равно NULL.  
Возвращает <see cref="P:System.IO.Stream.Length" /> для экземпляра, включенного в поток.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlChars.MaxLength">
      <summary>Получает максимальную длину значения, которое может содержаться во внутреннем буфере, в двухбайтовых знаках.</summary>
      <returns>Значение <see cref="T:System.Int64" />, представляющее максимальную длину значения внутреннего буфера в двухбайтовых знаках.  
Возвращает –1 для экземпляра <see cref="T:System.Data.SqlTypes.SqlChars" />, включенного в поток.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlChars.Null">
      <summary>Возвращает пустой экземпляр данного объекта <see cref="T:System.Data.SqlTypes.SqlChars" />.</summary>
      <returns>Экземпляр которого <see cref="P:System.Data.SqlTypes.SqlChars.IsNull" /> возвращает <see langword="true" />. Дополнительные сведения см. в разделе H*******ling Null Values.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.op_Explicit(System.Data.SqlTypes.SqlChars)~System.Data.SqlTypes.SqlString">
      <summary>Преобразует структуру <see cref="T:System.Data.SqlTypes.SqlChars" /> в структуру <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <param name="value">Преобразуемая структура <see cref="T:System.Data.SqlTypes.SqlChars" />.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlChars">
      <summary>Преобразует структуру <see cref="T:System.Data.SqlTypes.SqlString" /> в структуру <see cref="T:System.Data.SqlTypes.SqlChars" />.</summary>
      <param name="value">Преобразуемая структура <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlChars" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.Read(System.Int64,System.Char[],System.Int32,System.Int32)">
      <summary>Копирует знаки из этого экземпляра <see cref="T:System.Data.SqlTypes.SqlChars" /> в буфер передачи и возвращает количество скопированных знаков.</summary>
      <param name="offset">Смещение значения <see cref="T:System.Int64" /><see langword="long" /> в значение, которое содержится в экземпляре <see cref="T:System.Data.SqlTypes.SqlChars" />.</param>
      <param name="buffer">Буфер массива знаков для копирования.</param>
      <param name="offsetInBuffer">Целочисленное смещение <see cref="T:System.Int32" /> в буфере для начала копирования.</param>
      <param name="count">Целое число <see cref="T:System.Int32" />, представляющее количество знаков для копирования.</param>
      <returns>Значение <see cref="T:System.Int64" /><see langword="long" />, представляющее число скопированных байтов.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.SetLength(System.Int64)">
      <summary>Задает длину данного экземпляра <see cref="T:System.Data.SqlTypes.SqlChars" />.</summary>
      <param name="value">Значение <see cref="T:System.Int64" /><see langword="long" />, представляющее длину.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.SetNull">
      <summary>Задает для данного экземпляра <see cref="T:System.Data.SqlTypes.SqlChars" /> значение NULL.</summary>
    </member>
    <member name="P:System.Data.SqlTypes.SqlChars.Storage">
      <summary>Возвращает сведения о состоянии хранения данного экземпляра <see cref="T:System.Data.SqlTypes.SqlChars" />.</summary>
      <returns>Перечисление <see cref="T:System.Data.SqlTypes.StorageState" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Получает сведения о сериализации со всеми данными, необходимыми для повторного создания данного экземпляра <see cref="T:System.Data.SqlTypes.SqlChars" />.</summary>
      <param name="info">Объект, для которого будут заполнены сведения о сериализации.</param>
      <param name="context">Контекст назначения сериализации.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary>Данный член предназначен для поддержки платформы .NET Framework и не должен вызываться напрямую из кода приложения.</summary>
      <returns>Данный член предназначен для поддержки платформы .NET Framework и не должен вызываться напрямую из кода приложения.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary>Данный член предназначен для поддержки платформы .NET Framework и не должен вызываться напрямую из кода приложения.</summary>
      <param name="r">
        <see langword="XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary>Данный член предназначен для поддержки платформы .NET Framework и не должен вызываться напрямую из кода приложения.</summary>
      <param name="writer">
        <see langword="XmlWriter" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.ToSqlString">
      <summary>Преобразует данный экземпляр <see cref="T:System.Data.SqlTypes.SqlChars" /> в эквивалентное представление <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <returns>Представление <see cref="T:System.Data.SqlTypes.SqlString" /> данного типа.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlChars.Value">
      <summary>Возвращает управляемую копию значения, которое содержится в данном объекте <see cref="T:System.Data.SqlTypes.SqlChars" />.</summary>
      <returns>Значение данного экземпляра <see cref="T:System.Data.SqlTypes.SqlChars" /> в виде массива знаков.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.Write(System.Int64,System.Char[],System.Int32,System.Int32)">
      <summary>Копирует знаки из буфера передачи в этот экземпляр <see cref="T:System.Data.SqlTypes.SqlChars" />.</summary>
      <param name="offset">Смещение значения <see langword="long" /> в значении, которое содержится в экземпляре <see cref="T:System.Data.SqlTypes.SqlChars" />.</param>
      <param name="buffer">Буфер массива знаков для копирования.</param>
      <param name="offsetInBuffer">Целочисленное смещение <see cref="T:System.Int32" /> в буфере для начала копирования.</param>
      <param name="count">Целое число <see cref="T:System.Int32" />, представляющее количество знаков для копирования.</param>
    </member>
    <member name="T:System.Data.SqlTypes.SqlCompareOptions">
      <summary>Задает значения параметров сравнения для структуры <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlCompareOptions.BinarySort">
      <summary>Задает сортировку на основе числового значения символов вместо сортировки по алфавиту.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlCompareOptions.BinarySort2">
      <summary>Выполняет двоичную сортировку.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlCompareOptions.IgnoreCase">
      <summary>Указывает, что при выполнении сравнения объектов <see cref="T:System.Data.SqlTypes.SqlString" /> не должен учитываться регистр.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlCompareOptions.IgnoreKanaType">
      <summary>Задает игнорирование типа японской азбуки при сравнении объектов типа <see cref="T:System.Data.SqlTypes.SqlString" />. Типы японской азбуки Каны обозначают символы хираганы и катаканы, представляющие звуки японского языка. Хирагана используется для японских выражений и слов, а катакана — для слов, заимствованных из других языков, например "компьютер" и "Интернет". Для обозначения любого звука может быть использована как хирагана, так и катакана. Если выбрано это значение, знаки хирагана и катакана для одного и того же звука считаются равными.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlCompareOptions.IgnoreNonSpace">
      <summary>Задает игнорирование несамостоятельных знаков (например, диакритических) при сравнении объектов типа  <see cref="T:System.Data.SqlTypes.SqlString" />. В стандарте Юникод несамостоятельные знаки определяются как знаки, которые в сочетании с основными знаками образуют новый знак. Несамостоятельные знаки при отображении не занимают место знака. Дополнительные сведения о несамостоятельных знаках без пробелов см. на веб-сайте стандарта Юникод по адресу https://www.unicode.org.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlCompareOptions.IgnoreWidth">
      <summary>Задает игнорирование ширины знака при сравнении объектов типа <see cref="T:System.Data.SqlTypes.SqlString" />. Например, японские знаки катакана могут быть представлены в полную ширину или в половину ширины. Если выбрано это значение, знаки катакана, написанные в полную ширину, считаются равными знакам, написанным в половину ширины.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlCompareOptions.None">
      <summary>Задает параметры по умолчанию для сравнения объектов типа <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
    </member>
    <member name="T:System.Data.SqlTypes.SqlDateTime">
      <summary>Представляет сохраняемые в базе данных или извлекаемые из нее данные о дате и времени в диапазоне значений от 1 января 1753 г. до 31 декабря 9999 г. с точностью 3,33 миллисекунды. Базовая структура данных структуры <see cref="T:System.Data.SqlTypes.SqlDateTime" /> отличается от соответствующего типа платформы .NET Framework, <see cref="T:System.DateTime" />, который может представлять любое время между 00:00:00 01.01.0001 и 23:59:59 31.12.9999 с точностью 100 наносекунд. В объекте <see cref="T:System.Data.SqlTypes.SqlDateTime" /> фактически хранится разница относительно 00:00:00 01.01.1900. Поэтому в результате преобразования "00:00:00 01.01.1900" в целое число будет возвращен 0.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.#ctor(System.DateTime)">
      <summary>Инициализирует новый экземпляр структуры <see cref="T:System.Data.SqlTypes.SqlDateTime" /> с использованием заданного значения <see cref="T:System.DateTime" />.</summary>
      <param name="value">Структура <see langword="DateTime" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.#ctor(System.Int32,System.Int32)">
      <summary>Выполняет инициализацию нового экземпляра структуры <see cref="T:System.Data.SqlTypes.SqlDateTime" /> с использованием предоставленных параметров.</summary>
      <param name="dayTicks">Целое значение, представляющее дату как число импульсов.</param>
      <param name="timeTicks">Целое значение, представляющее время как число импульсов.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.#ctor(System.Int32,System.Int32,System.Int32)">
      <summary>Инициализирует новый экземпляр структуры <see cref="T:System.Data.SqlTypes.SqlDateTime" /> с использованием предоставленных параметров для инициализации года, месяца, дня.</summary>
      <param name="year">Целое число, представляющее год в новой структуре <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="month">Целое число, представляющее месяц в новой структуре <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="day">Целое значение, представляющее номер дня в новой структуре <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Выполняет инициализацию нового экземпляра структуры <see cref="T:System.Data.SqlTypes.SqlDateTime" /> с помощью предоставленных параметров для инициализации года, месяца, дня, часа, минуты и секунды новой структуры.</summary>
      <param name="year">Целое число, представляющее год в новой структуре <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="month">Целое число, представляющее месяц в новой структуре <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="day">Целое число, представляющее день месяца в новой структуре <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="hour">Целое число, представляющее час в новой структуре <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="minute">Целое число, представляющее минуту в новой структуре <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="second">Целое число, представляющее секунду в новой структуре <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Double)">
      <summary>Выполняет инициализацию нового экземпляра структуры <see cref="T:System.Data.SqlTypes.SqlDateTime" /> с помощью предоставленных параметров для инициализации года, месяца, дня, часа, минуты, секунды и миллисекунды новой структуры.</summary>
      <param name="year">Целое число, представляющее год в новой структуре <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="month">Целое число, представляющее месяц в новой структуре <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="day">Целое число, представляющее день месяца в новой структуре <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="hour">Целое число, представляющее час в новой структуре <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="minute">Целое число, представляющее минуту в новой структуре <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="second">Целое число, представляющее секунду в новой структуре <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="millisecond">Значение типа double, представляющее миллисекунду в новой структуре <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Выполняет инициализацию нового экземпляра структуры <see cref="T:System.Data.SqlTypes.SqlDateTime" /> с помощью предоставленных параметров для инициализации года, месяца, дня, часа, минуты, секунды и микросекунды новой структуры.</summary>
      <param name="year">Целое число, представляющее год в новой структуре <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="month">Целое число, представляющее месяц в новой структуре <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="day">Целое значение, представляющее день в новой структуре <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="hour">Целое число, представляющее час в новой структуре <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="minute">Целое число, представляющее минуту в новой структуре <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="second">Целое число, представляющее секунду в новой структуре <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="bilisecond">Целое число, представляющее микросекунду (одну тысячную миллисекунды) в новой структуре <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.Add(System.Data.SqlTypes.SqlDateTime,System.TimeSpan)">
      <summary>Добавляет объект <see cref="T:System.Data.SqlTypes.SqlDateTime" /> к указанному объекту <see langword="TimeSpan" />.</summary>
      <param name="x">Значение <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="t">Значение <see langword="Timespan" />.</param>
      <returns>Значение <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.CompareTo(System.Data.SqlTypes.SqlDateTime)">
      <summary>Сравнивает данную структуру <see cref="T:System.Data.SqlTypes.SqlDateTime" /> с предоставленной структурой <see cref="T:System.Data.SqlTypes.SqlDateTime" /> и возвращает сведения об их относительных значениях.</summary>
      <param name="value">Структура <see cref="T:System.Data.SqlTypes.SqlDateTime" /> для сравнения.</param>
      <returns>Число со знаком, представляющее результат сравнения значений экземпляра и объекта.  
  Возвращаемое значение 
  Условие 
  Меньше нуля 
  Этот экземпляр меньше параметра <see cref="T:System.Data.SqlTypes.SqlDateTime" />.  

  Нуль 
  Данный экземпляр равен <see cref="T:System.Data.SqlTypes.SqlDateTime" />.  

  Больше нуля 
  Данный экземпляр больше, чем <see cref="T:System.Data.SqlTypes.SqlDateTime" />.  

- или - 
 Параметр <see cref="T:System.Data.SqlTypes.SqlDateTime" /> является неопределенной ссылкой (<see langword="Nothing" /> в Visual Basic).</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.CompareTo(System.Object)">
      <summary>Сравнивает данную структуру <see cref="T:System.Data.SqlTypes.SqlDateTime" /> с предоставленным <see cref="T:System.Object" /> и возвращает сведения об их относительных значениях.</summary>
      <param name="value">Выражение <see cref="T:System.Object" /> для сравнения.</param>
      <returns>Число со знаком, представляющее результат сравнения значений экземпляра и объекта.  
  Возвращаемое значение 
  Условие 
  Меньше нуля 
  Этот экземпляр меньше данного объекта.  

  Нуль 
  Этот экземпляр равен данному объекту.  

  Больше нуля 
  Этот экземпляр больше данного объекта 
- или - 
объект является пустой ссылкой (<see langword="Nothing" /> в Visual Basic).</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDateTime.DayTicks">
      <summary>Получает число импульсов, представляющее дату данной структуры <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</summary>
      <returns>Число импульсов, представляющее дату, которая содержится в свойстве <see cref="P:System.Data.SqlTypes.SqlDateTime.Value" /> данной структуры <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</returns>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">Исключение, возникающее, когда для свойства <see langword="Value" /> структуры <see cref="N:System.Data.SqlTypes" /> установлено значение NULL.</exception>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.Equals(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary>Выполняет логическое сравнение двух структур <see cref="T:System.Data.SqlTypes.SqlDateTime" />, чтобы определить, равны ли они.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <returns>
        <see langword="true" />, если эти два значения равны. В противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.Equals(System.Object)">
      <summary>Сравнивает предоставленный параметр объекта со свойством <see cref="P:System.Data.SqlTypes.SqlDateTime.Value" /> объекта <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</summary>
      <param name="value">Сравниваемый объект.</param>
      <returns>
        <see langword="true" />, если объект является экземпляром структуры <see cref="T:System.Data.SqlTypes.SqlDateTime" /> и они равны; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.GetHashCode">
      <summary>Получает хэш-код для этого экземпляра.</summary>
      <returns>Хэш-код в виде 32-разрядного целого числа со знаком.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary>Возвращает XSD (XML-схему) заданного объекта <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</summary>
      <param name="schemaSet">Объект <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
      <returns>Значение <see langword="string" />, указывающее определение XML-схемы заданного объекта <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.GreaterThan(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary>Сравнивает два экземпляра <see cref="T:System.Data.SqlTypes.SqlDateTime" />, чтобы определить, что первый объект больше, чем второй.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <returns>Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр больше второго. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlDateTime" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.GreaterThanOrEqual(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary>Сравнивает два экземпляра структуры <see cref="T:System.Data.SqlTypes.SqlDateTime" />, чтобы определить, равны ли они, или первый больше, чем второй.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <returns>Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр больше второго или равен ему. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlDateTime" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDateTime.IsNull">
      <summary>Указывает, имеет ли структура <see cref="T:System.Data.SqlTypes.SqlDateTime" /> значение null.</summary>
      <returns>Значение <see langword="true" />, если NULL. В противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.LessThan(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary>Сравнивает два экземпляра <see cref="T:System.Data.SqlTypes.SqlDateTime" />, чтобы определить, является ли первый меньшим, чем второй.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <returns>Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр меньше второго. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlDateTime" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.LessThanOrEqual(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary>Сравнивает два экземпляра структуры <see cref="T:System.Data.SqlTypes.SqlDateTime" />, чтобы определить, равны ли они, или первый меньше, чем второй.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <returns>Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр меньше второго или ему равен. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlDateTime" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDateTime.MaxValue">
      <summary>Представляет максимальное допустимое значение даты для структуры <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDateTime.MinValue">
      <summary>Представляет минимальное допустимое значение даты для структуры <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.NotEquals(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary>Выполняет логическое сравнение двух экземпляров <see cref="T:System.Data.SqlTypes.SqlDateTime" />, чтобы определить, что они не равны.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <returns>Переменная <see cref="T:System.Data.SqlTypes.SqlBoolean" />, которая принимает значение <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если два экземпляра не равны, или значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />, если они равны. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlDateTime" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDateTime.Null">
      <summary>Представляет значение <see cref="T:System.DBNull" />, которое может быть присвоено данному экземпляру структуры <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_Addition(System.Data.SqlTypes.SqlDateTime,System.TimeSpan)">
      <summary>Добавляет период времени, указанный предоставленным параметром <see cref="T:System.TimeSpan" />, <paramref name="t" />, к предоставленной структуре <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="t">Структура <see cref="T:System.TimeSpan" />.</param>
      <returns>Новый объект <see cref="T:System.Data.SqlTypes.SqlDateTime" />. Если один из аргументов имеет значение <see cref="F:System.Data.SqlTypes.SqlDateTime.Null" />, новый объект <see cref="P:System.Data.SqlTypes.SqlDateTime.Value" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlDateTime.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_Equality(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary>Выполняет логическое сравнение двух структур <see cref="T:System.Data.SqlTypes.SqlDateTime" />, чтобы определить, равны ли они.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <returns>
        <see langword="true" />, если эти два значения равны. В противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_Explicit(System.Data.SqlTypes.SqlDateTime)~System.DateTime">
      <summary>Преобразует структуру <see cref="T:System.Data.SqlTypes.SqlDateTime" /> в структуру <see cref="T:System.DateTime" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <returns>Объект <see cref="T:System.DateTime" />, свойства <see cref="P:System.DateTime.Date" /> и <see cref="P:System.DateTime.TimeOfDay" /> которого содержат те же значения даты и времени, что и свойство <see cref="P:System.Data.SqlTypes.SqlDateTime.Value" /> предоставленной структуры <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlDateTime">
      <summary>Преобразует параметр <see cref="T:System.Data.SqlTypes.SqlString" /> в <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</summary>
      <param name="x">Объект <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlDateTime" />, значение свойства <see cref="P:System.Data.SqlTypes.SqlDateTime.Value" /> которой равно дате и времени, представленным параметром <see cref="T:System.Data.SqlTypes.SqlString" />. Если <see cref="T:System.Data.SqlTypes.SqlString" /> равно NULL, <see langword="Value" /> созданной структуры <see cref="T:System.Data.SqlTypes.SqlDateTime" /> будет равно NULL.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_GreaterThan(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary>Сравнивает два экземпляра <see cref="T:System.Data.SqlTypes.SqlDateTime" />, чтобы определить, что первый объект больше, чем второй.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <returns>Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр больше второго. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary>Сравнивает два экземпляра структуры <see cref="T:System.Data.SqlTypes.SqlDateTime" />, чтобы определить, равны ли они, или первый больше, чем второй.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <returns>Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр больше второго или равен ему. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlDateTime" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_Implicit(System.DateTime)~System.Data.SqlTypes.SqlDateTime">
      <summary>Преобразует структуру <see cref="T:System.DateTime" /> в структуру <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</summary>
      <param name="value">Структура <see langword="DateTime" />.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlDateTime" />, <see cref="P:System.Data.SqlTypes.SqlDateTime.Value" /> которой равно объединенным свойствам <see cref="P:System.DateTime.Date" /> и <see cref="P:System.DateTime.TimeOfDay" /> предоставленной структуры <see cref="T:System.DateTime" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_Inequality(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary>Выполняет логическое сравнение двух экземпляров <see cref="T:System.Data.SqlTypes.SqlDateTime" />, чтобы определить, что они не равны.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <returns>Переменная <see cref="T:System.Data.SqlTypes.SqlBoolean" />, которая принимает значение <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если два экземпляра не равны, или значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />, если они равны. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlDateTime" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_LessThan(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary>Сравнивает два экземпляра <see cref="T:System.Data.SqlTypes.SqlDateTime" />, чтобы определить, является ли первый меньшим, чем второй.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <returns>Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр меньше второго. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlDateTime" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_LessThanOrEqual(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary>Сравнивает два экземпляра структуры <see cref="T:System.Data.SqlTypes.SqlDateTime" />, чтобы определить, равны ли они, или первый меньше, чем второй.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <returns>Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр меньше второго или ему равен. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlDateTime" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_Subtraction(System.Data.SqlTypes.SqlDateTime,System.TimeSpan)">
      <summary>Вычитает предоставленную структуру <see cref="T:System.TimeSpan" />, <paramref name="t" />, из предоставленной структуры <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="t">Структура <see cref="T:System.TimeSpan" />.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlDateTime" />, представляющая результаты вычитания.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.Parse(System.String)">
      <summary>Преобразует заданное представление даты и времени <see cref="T:System.String" /> в его эквивалент для структуры <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</summary>
      <param name="s">Представление <see langword="string" />, которое необходимо проанализировать.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlDateTime" />, эквивалентная дате и времени, которые представлены заданной <see langword="string" />.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDateTime.SQLTicksPerHour">
      <summary>Константа, значение которой представляет собой число импульсов, эквивалентное одному часу.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDateTime.SQLTicksPerMinute">
      <summary>Константа, значение которой представляет собой число импульсов, эквивалентное одной минуте.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDateTime.SQLTicksPerSecond">
      <summary>Константа, значение которой представляет собой число импульсов, эквивалентное одной секунде.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.Subtract(System.Data.SqlTypes.SqlDateTime,System.TimeSpan)">
      <summary>Вычитает указанное значение  <see langword="Timespan" /> из этого экземпляра <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</summary>
      <param name="x">Значение <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="t">Значение <see langword="Timespan" />.</param>
      <returns>Значение <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary>Данный член предназначен для поддержки платформы .NET Framework и не должен вызываться напрямую из кода приложения.</summary>
      <returns>Объект <see langword="XmlSchema" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary>Данный член предназначен для поддержки платформы .NET Framework и не должен вызываться напрямую из кода приложения.</summary>
      <param name="reader">
        <see langword="XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary>Данный член предназначен для поддержки платформы .NET Framework и не должен вызываться напрямую из кода приложения.</summary>
      <param name="writer">
        <see langword="XmlWriter" />
      </param>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDateTime.TimeTicks">
      <summary>Получает число импульсов, представляющее время данной структуры <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</summary>
      <returns>Число импульсов, представляющее время данной структуры <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.ToSqlString">
      <summary>Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlDateTime" /> в <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <returns>Структура <see langword="SqlString" />, значением которой является строка, представляющая дату и время, содержащиеся в данной структуре <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.ToString">
      <summary>Преобразует данную структуру <see cref="T:System.Data.SqlTypes.SqlDateTime" /> в <see cref="T:System.String" />.</summary>
      <returns>
        <see langword="String" /> представляет свойство <see cref="P:System.Data.SqlTypes.SqlDateTime.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDateTime.Value">
      <summary>Получает значение структуры <see cref="T:System.Data.SqlTypes.SqlDateTime" />. Это свойство доступно только для чтения.</summary>
      <returns>Значение данной структуры <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</returns>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">Исключение, возникающее, когда для свойства <see langword="Value" /> структуры <see cref="N:System.Data.SqlTypes" /> установлено значение NULL.</exception>
    </member>
    <member name="T:System.Data.SqlTypes.SqlDecimal">
      <summary>Представляет числовое значение с фиксированной точностью и масштабом в диапазоне от - 10^38 +1 и 10^38 - 1.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.#ctor(System.Byte,System.Byte,System.Boolean,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Выполняет инициализацию нового экземпляра структуры <see cref="T:System.Data.SqlTypes.SqlDecimal" /> с использованием предоставленных параметров.</summary>
      <param name="bPrecision">Максимальное число цифр, используемое для представления свойства <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> новой структуры <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="bScale">Число десятичных разрядов, для которых будет осуществляться разрешение свойства <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> для новой структуры <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="fPositive">Логическое значение, указывающее, представляет ли новая структура <see cref="T:System.Data.SqlTypes.SqlDecimal" /> положительное или отрицательное число.</param>
      <param name="data1">32-разрядное целое число без знака, объединяемое с data2, data3 и data4 при составлении 128-разрядного целого числа без знака, которое представляет новое значение структуры <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="data2">32-разрядное целое число без знака, объединяемое с data1, data3 и data4 при составлении 128-разрядного целого числа без знака, которое представляет новое значение структуры <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="data3">32-разрядное целое число без знака, объединяемое с data1, data2 и data4 при составлении 128-разрядного целого числа без знака, которое представляет новое значение структуры <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="data4">32-разрядное целое число без знака, объединяемое с data1, data2 и data3 при составлении 128-разрядного целого числа без знака, которое представляет новое значение структуры <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.#ctor(System.Byte,System.Byte,System.Boolean,System.Int32[])">
      <summary>Выполняет инициализацию нового экземпляра структуры <see cref="T:System.Data.SqlTypes.SqlDecimal" /> с использованием предоставленных параметров.</summary>
      <param name="bPrecision">Максимальное число цифр, используемое для представления свойства <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> новой структуры <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="bScale">Число десятичных разрядов, для которых будет осуществляться разрешение свойства <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> для новой структуры <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="fPositive">Логическое значение, указывающее, представляет ли новая структура <see cref="T:System.Data.SqlTypes.SqlDecimal" /> положительное или отрицательное число.</param>
      <param name="bits">128-разрядное целое число без знака, предоставляющее значение новой структуры <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.#ctor(System.Decimal)">
      <summary>Выполняет инициализацию нового экземпляра структуры <see cref="T:System.Data.SqlTypes.SqlDecimal" /> с помощью предоставленного значения <see cref="T:System.Decimal" />.</summary>
      <param name="value">Значение <see cref="T:System.Decimal" />, сохраняемое как структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.#ctor(System.Double)">
      <summary>Инициализирует новый экземпляр структуры <see cref="T:System.Data.SqlTypes.SqlDecimal" /> с использованием предоставленного параметра типа double.</summary>
      <param name="dVal">Значение типа double для новой структуры <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.#ctor(System.Int32)">
      <summary>Выполняет инициализацию нового экземпляра структуры <see cref="T:System.Data.SqlTypes.SqlDecimal" /> с использованием предоставленного целого значения.</summary>
      <param name="value">Предоставленное целое число, используемое в качестве значения новой структуры <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.#ctor(System.Int64)">
      <summary>Выполняет инициализацию нового экземпляра структуры <see cref="T:System.Data.SqlTypes.SqlDecimal" /> с помощью предоставленного длинного целого значения.</summary>
      <param name="value">Предоставленное длинное целое число, используемое в качестве значения новой структуры <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Abs(System.Data.SqlTypes.SqlDecimal)">
      <summary>Метод Abs получает абсолютное значение параметра <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <param name="n">Структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />, свойство <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> которой содержит число без знака, представляющее абсолютное значение параметра <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Add(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>Вычисляет сумму двух операторов <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />, у которой свойство <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> содержит сумму.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.AdjustScale(System.Data.SqlTypes.SqlDecimal,System.Int32,System.Boolean)">
      <summary>Масштаб операнда <see cref="T:System.Data.SqlTypes.SqlDecimal" /> будет согласован с количеством цифр, указанным в параметре digits. В зависимости от значения параметра fRound данное значение или округляется до соответствующего числа цифр, или усекается.</summary>
      <param name="n">Настраиваемая структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="digits">Число цифр в настраиваемой структуре.</param>
      <param name="fRound">Если этот параметр имеет значение <see langword="true" />, новое значение округляется, если <see langword="false" /> — значение усекается.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />, свойство <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> которой содержит настроенное число.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDecimal.BinData">
      <summary>Получает двоичное представление значения данной структуры <see cref="T:System.Data.SqlTypes.SqlDecimal" /> в виде массива байтов.</summary>
      <returns>Массив байтов, содержащий двоичное представление значения структуры <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Ceiling(System.Data.SqlTypes.SqlDecimal)">
      <summary>Возвращает наименьшее целое число, превышающее значение указанной структуры <see cref="T:System.Data.SqlTypes.SqlDecimal" /> или равное ему.</summary>
      <param name="n">Структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />, для которой необходимо рассчитать предельное значение.</param>
      <returns>Значение <see cref="T:System.Data.SqlTypes.SqlDecimal" />, представляющее наименьшее целое число, превышающее значение указанной структуры <see cref="T:System.Data.SqlTypes.SqlDecimal" /> или равное ему.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.CompareTo(System.Data.SqlTypes.SqlDecimal)">
      <summary>Сравнивает данный экземпляр <see cref="T:System.Data.SqlTypes.SqlDecimal" /> с предоставленным объектом <see cref="T:System.Data.SqlTypes.SqlDecimal" /> и возвращает сведения об их относительных значениях.</summary>
      <param name="value">Выражение <see cref="T:System.Data.SqlTypes.SqlDecimal" /> для сравнения.</param>
      <returns>Число со знаком, представляющее результат сравнения значений экземпляра и объекта.  
  Возвращаемое значение 
  Условие 
  Меньше нуля 
  Этот экземпляр меньше данного объекта.  

  Нуль 
  Этот экземпляр равен данному объекту.  

  Больше нуля 
  Этот экземпляр больше данного объекта 
-или- 
Объект является пустой ссылкой (<see langword="Nothing" /> в Visual Basic).</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.CompareTo(System.Object)">
      <summary>Сравнивает этот экземпляр <see cref="T:System.Data.SqlTypes.SqlDecimal" /> с предоставленным <see cref="T:System.Object" /> и возвращает сведения об их относительных значениях.</summary>
      <param name="value">Выражение <see cref="T:System.Object" /> для сравнения.</param>
      <returns>Число со знаком, представляющее результат сравнения значений экземпляра и объекта.  
  Возвращаемое значение 
  Условие 
  Меньше нуля 
  Этот экземпляр меньше данного объекта.  

  Нуль 
  Этот экземпляр равен данному объекту.  

  Больше нуля 
  Этот экземпляр больше данного объекта 
-или- 
Объект является пустой ссылкой (<see langword="Nothing" /> в Visual Basic).</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ConvertToPrecScale(System.Data.SqlTypes.SqlDecimal,System.Int32,System.Int32)">
      <summary>Настраивает значение операнда <see cref="T:System.Data.SqlTypes.SqlDecimal" /> для достижения указанной точности и масштаба.</summary>
      <param name="n">Структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />, значение которой требуется настроить.</param>
      <param name="precision">Точность для новой структуры <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="scale">Масштаб для новой структуры <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />, значение которой настроено для достижения точности и масштаба, указанных в данных параметрах.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDecimal.Data">
      <summary>Получает двоичное представление данной структуры <see cref="T:System.Data.SqlTypes.SqlDecimal" /> в виде массива целых чисел.</summary>
      <returns>Массив целых чисел, содержащий двоичное представление данной структуры <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Divide(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>Оператор деления вычисляет результаты деления первого операнда <see cref="T:System.Data.SqlTypes.SqlDecimal" /> на второй.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />, свойство <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> которой содержит результаты деления.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Equals(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>Выполняет логическое сравнение двух операндов <see cref="T:System.Data.SqlTypes.SqlDecimal" /> с целью определить, равны ли они.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns>
        <see langword="true" />, если эти два значения равны. В противном случае — значение <see langword="false" />. Если хотя бы один из экземпляров имеет значение NULL, значение <see langword="SqlDecimal" /> будет равно NULL.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Equals(System.Object)">
      <summary>Сравнивает предоставленный параметр <see cref="T:System.Object" /> со свойством <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> экземпляра  <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <param name="value">Выражение <see cref="T:System.Object" /> для сравнения.</param>
      <returns>
        <see langword="true" />, если объект является экземпляром структуры <see cref="T:System.Data.SqlTypes.SqlDecimal" /> и они равны. В противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Floor(System.Data.SqlTypes.SqlDecimal)">
      <summary>Округляет заданное число <see cref="T:System.Data.SqlTypes.SqlDecimal" /> до ближайшего меньшего целого числа.</summary>
      <param name="n">Структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />, для которой необходимо рассчитать наименьшее значение.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />, содержащая целую часть числа данной структуры <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.GetHashCode">
      <summary>Возвращает хэш-код данного экземпляра.</summary>
      <returns>Хэш-код в виде 32-разрядного целого числа со знаком.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary>Возвращает XSD (XML-схему) заданного объекта <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</summary>
      <param name="schemaSet">Объект <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
      <returns>Значение <see langword="string" />, указывающее определение XML-схемы заданного объекта <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.GreaterThan(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>Выполняет логическое сравнение двух структур <see cref="T:System.Data.SqlTypes.SqlDecimal" />, чтобы определить, больше ли первая структура, чем вторая.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns>Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр меньше второго. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlDecimal" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.GreaterThanOrEqual(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>Выполняет логическое сравнение двух параметров <see cref="T:System.Data.SqlTypes.SqlDecimal" />, чтобы определить, равны ли они, или же первый параметр больше второго.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns>Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр больше второго или равен ему. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlDecimal" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDecimal.IsNull">
      <summary>Указывает, имеет ли структура <see cref="T:System.Data.SqlTypes.SqlDecimal" /> значение null.</summary>
      <returns>Значение <see langword="true" />, если данная структура <see cref="T:System.Data.SqlTypes.SqlDecimal" /> имеет значение NULL. В противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDecimal.IsPositive">
      <summary>Указывает, больше ли нуля <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> данной структуры <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <returns>
        <see langword="true" />, если для <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> назначено значение NULL. В противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.LessThan(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>Выполняет логическое сравнение двух структур <see cref="T:System.Data.SqlTypes.SqlDecimal" />, чтобы определить, меньше ли первая структура, чем вторая.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns>Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр меньше второго. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlDecimal" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.LessThanOrEqual(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>Выполняет логическое сравнение двух параметров <see cref="T:System.Data.SqlTypes.SqlDecimal" /> с целью определить, верно ли, что первый параметр меньше второго или равен ему.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns>Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр меньше второго или ему равен. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlDecimal" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDecimal.MaxPrecision">
      <summary>Константа, представляющая наибольшее возможное значение для свойства <see cref="P:System.Data.SqlTypes.SqlDecimal.Precision" />.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDecimal.MaxScale">
      <summary>Константа, представляющая максимальное значение для свойства <see cref="P:System.Data.SqlTypes.SqlDecimal.Scale" />.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDecimal.MaxValue">
      <summary>Константа, представляющая максимальное значение структуры <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDecimal.MinValue">
      <summary>Константа, представляющая минимальное значение для структуры <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Multiply(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>Оператор умножения вычисляет произведение двух параметров <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />, свойство <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> которой содержит результат умножения.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.NotEquals(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>Выполняет логическое сравнение двух параметров <see cref="T:System.Data.SqlTypes.SqlDecimal" /> с целью определить, что они не равны.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns>Переменная <see cref="T:System.Data.SqlTypes.SqlBoolean" />, которая принимает значение <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если два экземпляра не равны, или значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />, если они равны. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlDecimal" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDecimal.Null">
      <summary>Представляет значение <see cref="T:System.DBNull" />, которое может быть присвоено данному экземпляру класса <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Addition(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>Вычисляет сумму двух операторов <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />, у которой свойство <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> содержит сумму.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Division(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>Оператор деления вычисляет результаты деления первого операнда <see cref="T:System.Data.SqlTypes.SqlDecimal" /> на второй.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />, свойство <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> которой содержит результаты деления.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Equality(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>Выполняет логическое сравнение двух операндов <see cref="T:System.Data.SqlTypes.SqlDecimal" /> с целью определить, равны ли они.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlBoolean" />, которая принимает значение <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если два экземпляра равны, или значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />, если они не равны. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlDecimal" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlDecimal">
      <summary>Преобразует предоставленную структуру <see cref="T:System.Data.SqlTypes.SqlBoolean" /> в <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <param name="x">Преобразуемая структура <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />, <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> которой равно <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" /> параметра <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Decimal">
      <summary>Преобразует параметр <see cref="T:System.Data.SqlTypes.SqlDecimal" /> в <see cref="T:System.Decimal" />.</summary>
      <param name="x">Преобразуемая структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns>Новая структура <see langword="Decimal" />, значение которой равно <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> параметра <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlDecimal">
      <summary>Преобразует предоставленную структуру <see cref="T:System.Data.SqlTypes.SqlDouble" /> в <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <param name="x">Преобразуемая структура <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />, <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> которой равно <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> параметра <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlDecimal">
      <summary>Преобразует предоставленную структуру <see cref="T:System.Data.SqlTypes.SqlSingle" /> в <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <param name="x">Преобразуемая структура <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />, свойство <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> которой равно свойству <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> параметра <see cref="T:System.Data.SqlTypes.SqlSingle" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlDecimal">
      <summary>Преобразует предоставленный параметр <see cref="T:System.Data.SqlTypes.SqlString" /> в <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <param name="x">Преобразуемый объект <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />, <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> которой равно значению, представленному параметром <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Explicit(System.Double)~System.Data.SqlTypes.SqlDecimal">
      <summary>Преобразует параметр <see cref="T:System.Double" /> в <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <param name="x">Преобразуемая структура <see cref="T:System.Double" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />, значение которой равно значению параметра <see cref="T:System.Double" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_GreaterThan(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>Выполняет логическое сравнение двух структур <see cref="T:System.Data.SqlTypes.SqlDecimal" />, чтобы определить, больше ли первая структура, чем вторая.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns>Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр меньше второго. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlDecimal" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>Выполняет логическое сравнение двух параметров <see cref="T:System.Data.SqlTypes.SqlDecimal" />, чтобы определить, равны ли они, или же первый параметр больше второго.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns>Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр больше второго или равен ему. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlDecimal" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlDecimal">
      <summary>Преобразует предоставленную структуру <see cref="T:System.Data.SqlTypes.SqlByte" /> в <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <param name="x">Преобразуемая структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />, свойство которой <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> равно свойству <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> параметра <see cref="T:System.Data.SqlTypes.SqlByte" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlDecimal">
      <summary>Преобразует предоставленную структуру <see cref="T:System.Data.SqlTypes.SqlInt16" /> в <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <param name="x">Преобразуемая структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />, свойство которой <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> равно свойству <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> параметра <see cref="T:System.Data.SqlTypes.SqlInt16" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlDecimal">
      <summary>Преобразует предоставленную структуру <see cref="T:System.Data.SqlTypes.SqlInt32" /> в <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <param name="x">Преобразуемая структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />, свойство которой <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> равно свойству <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> параметра <see cref="T:System.Data.SqlTypes.SqlInt32" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlDecimal">
      <summary>Преобразует предоставленную структуру <see cref="T:System.Data.SqlTypes.SqlInt64" /> в SqlDecimal.</summary>
      <param name="x">Преобразуемая структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />, <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> которой равно <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> параметра <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlDecimal">
      <summary>Преобразует операнд <see cref="T:System.Data.SqlTypes.SqlMoney" /> в <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <param name="x">Преобразуемая структура <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />, <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> которой равно <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> параметра <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Decimal)~System.Data.SqlTypes.SqlDecimal">
      <summary>Преобразует значение <see cref="T:System.Decimal" /> в <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <param name="x">Преобразуемое значение <see cref="T:System.Decimal" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />, свойство <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> которой равно значению параметра <see langword="Decimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Int64)~System.Data.SqlTypes.SqlDecimal">
      <summary>Преобразует предоставленную структуру <see cref="T:System.Int64" /> в <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <param name="x">Преобразуемая структура <see cref="T:System.Int64" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />, свойство <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> которой равно значению параметра <see cref="T:System.Int64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Inequality(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>Выполняет логическое сравнение двух параметров <see cref="T:System.Data.SqlTypes.SqlDecimal" /> с целью определить, что они не равны.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns>Переменная <see cref="T:System.Data.SqlTypes.SqlBoolean" />, которая принимает значение <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если два экземпляра не равны, или значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />, если они равны. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlDecimal" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_LessThan(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>Выполняет логическое сравнение двух структур <see cref="T:System.Data.SqlTypes.SqlDecimal" />, чтобы определить, меньше ли первая структура, чем вторая.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns>Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр меньше второго. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlDecimal" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_LessThanOrEqual(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>Выполняет логическое сравнение двух параметров <see cref="T:System.Data.SqlTypes.SqlDecimal" /> с целью определить, верно ли, что первый параметр меньше второго или равен ему.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns>Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр меньше второго или ему равен. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlDecimal" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Multiply(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>Оператор умножения вычисляет произведение двух параметров <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />, свойство <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> которой содержит результат умножения.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Subtraction(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>Вычисляет результаты вычитания второго операнда <see cref="T:System.Data.SqlTypes.SqlDecimal" /> из первого.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />, свойство Value которой содержит результаты вычитания.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_UnaryNegation(System.Data.SqlTypes.SqlDecimal)">
      <summary>Оператор "унарный минус" меняет знак параметра <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />, для которой выполняется инверсия.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />, значение которой содержит инвертированный результат.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Parse(System.String)">
      <summary>Преобразует представление числа типа <see cref="T:System.String" /> в эквивалентное ему значение <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <param name="s">Представление <see langword="String" />, которое необходимо проанализировать.</param>
      <returns>Значение <see cref="T:System.Data.SqlTypes.SqlDecimal" />, эквивалентное значению, которое содержится в заданном представлении <see cref="T:System.String" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Power(System.Data.SqlTypes.SqlDecimal,System.Double)">
      <summary>Возводит значение заданной структуры <see cref="T:System.Data.SqlTypes.SqlDecimal" /> в заданную экспоненциальную степень.</summary>
      <param name="n">Возводимая в степень структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="exp">Значение типа double, указывающее степень, в которую необходимо возвести число.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />, содержащая результаты.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDecimal.Precision">
      <summary>Получает максимальное число цифр, используемых для представления свойства <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" />.</summary>
      <returns>Максимальное число цифр, используемых для представления <see langword="Value" /> данной структуры <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Round(System.Data.SqlTypes.SqlDecimal,System.Int32)">
      <summary>Получает ближайшее к заданному значению структуры <see cref="T:System.Data.SqlTypes.SqlDecimal" /> число с заданной точностью.</summary>
      <param name="n">Округляемая структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="position">Количество значащих цифр дробной части числа (точность) возвращаемого значения.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />, содержащая результаты операции округления.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDecimal.Scale">
      <summary>Получает число десятичных разрядов для разрешения <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" />.</summary>
      <returns>Число десятичных разрядов, используемых для разрешения свойства <see langword="Value" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Sign(System.Data.SqlTypes.SqlDecimal)">
      <summary>Получает значение, определяющее в структуре <see cref="T:System.Data.SqlTypes.SqlDecimal" /> знак свойства <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" />.</summary>
      <param name="n">Структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />, в которой необходимо определить знак.</param>
      <returns>Число, указывающее знак структуры <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Subtract(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>Вычисляет результаты вычитания второго операнда <see cref="T:System.Data.SqlTypes.SqlDecimal" /> из первого.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />, свойство Value которой содержит результаты вычитания.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary>Данный член предназначен для поддержки платформы .NET Framework и не должен вызываться напрямую из кода приложения.</summary>
      <returns>Объект <see langword="XmlSchema" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary>Данный член предназначен для поддержки платформы .NET Framework и не должен вызываться напрямую из кода приложения.</summary>
      <param name="reader">
        <see langword="XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary>Данный член предназначен для поддержки платформы .NET Framework и не должен вызываться напрямую из кода приложения.</summary>
      <param name="writer">
        <see langword="XmlWriter" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToDouble">
      <summary>Возвращает число типа double, равное содержимому свойства <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> данного экземпляра.</summary>
      <returns>Десятичное представление свойства <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToSqlBoolean">
      <summary>Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlDecimal" /> в <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <returns>
        <see langword="true" />, если <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> не равно нулю; <see langword="false" />, если равно нулю; в противном случае — NULL.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToSqlByte">
      <summary>Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlDecimal" /> в <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlByte" />, <see langword="Value" /> которой равно <see langword="Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlDecimal" />. Если значение структуры <see cref="T:System.Data.SqlTypes.SqlDecimal" /> равняется <see langword="true" />, значение <see langword="Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlByte" /> будет равняться 1. В противном случае значение <see langword="Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlByte" /> будет равняться 0.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToSqlDouble">
      <summary>Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlDecimal" /> в <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlDouble" /> с тем же значением, что и у данного экземпляра <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToSqlInt16">
      <summary>Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlDecimal" /> в <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlInt16" /> с тем же значением, что и у данного экземпляра <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToSqlInt32">
      <summary>Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlDecimal" /> в <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlInt32" /> с тем же значением, что и у данного экземпляра <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToSqlInt64">
      <summary>Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlDecimal" /> в <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlInt64" /> с тем же значением, что и у данного экземпляра <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToSqlMoney">
      <summary>Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlDecimal" /> в <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlMoney" /> с тем же значением, что и у данного экземпляра <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToSqlSingle">
      <summary>Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlDecimal" /> в <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlSingle" /> с тем же значением, что и у данного экземпляра <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToSqlString">
      <summary>Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlDecimal" /> в <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlString" />, значение которой является строкой, представляющей значение, содержащееся в данной структуре <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToString">
      <summary>Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlDecimal" /> в <see cref="T:System.String" />.</summary>
      <returns>Новый объект <see cref="T:System.String" />, содержащий строковое представление свойства <see cref="T:System.Data.SqlTypes.SqlDecimal" />, относящегося к структуре <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Truncate(System.Data.SqlTypes.SqlDecimal,System.Int32)">
      <summary>Усекает значение указанной структуры <see cref="T:System.Data.SqlTypes.SqlDecimal" /> до требуемой позиции.</summary>
      <param name="n">Усекаемая структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="position">Десятичный разряд, до которого усекается число.</param>
      <returns>Для усечения данного значения до соответствующего разряда слева от десятичной запятой следует предоставить для параметра <paramref name="position" /> отрицательное значение.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDecimal.Value">
      <summary>Получает значение структуры <see cref="T:System.Data.SqlTypes.SqlDecimal" />. Это свойство доступно только для чтения.</summary>
      <returns>Число в диапазоне от -79 228 162 514 264 337 593 543 950 335 до 79 228 162 514 264 337 593 543 950 335.</returns>
    </member>
    <member name="T:System.Data.SqlTypes.SqlDouble">
      <summary>Представляет число с плавающей запятой в диапазоне от -1,79E + 308 до 1,79E + 308, сохраняемое в базе данных или извлекаемое из нее.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.#ctor(System.Double)">
      <summary>Инициализирует новый экземпляр структуры <see cref="T:System.Data.SqlTypes.SqlDouble" /> с использованием предоставленного параметра типа double для настройки нового свойства <see cref="T:System.Data.SqlTypes.SqlDouble" /> структуры <see cref="P:System.Data.SqlTypes.SqlDouble.Value" />.</summary>
      <param name="value">Значение типа double для новой структуры <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.Add(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>Оператор сложения вычисляет сумму двух операндов <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns>Сумма двух операндов <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.CompareTo(System.Data.SqlTypes.SqlDouble)">
      <summary>Сравнивает этот экземпляр <see cref="T:System.Data.SqlTypes.SqlDouble" /> с предоставленным <see cref="T:System.Data.SqlTypes.SqlDouble" /> и возвращает сведения об их относительных значениях.</summary>
      <param name="value">Выражение <see cref="T:System.Data.SqlTypes.SqlDouble" /> для сравнения.</param>
      <returns>Число со знаком, представляющее результат сравнения значений экземпляра и объекта.  
  Возвращаемое значение 
  Условие 
  Меньше нуля 
  Этот экземпляр меньше данного объекта.  

  Нуль 
  Этот экземпляр равен данному объекту.  

  Больше нуля 
  Этот экземпляр больше данного объекта 
- или - 
Объект является пустой ссылкой (<see langword="Nothing" /> в Visual Basic).</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.CompareTo(System.Object)">
      <summary>Сравнивает этот экземпляр <see cref="T:System.Data.SqlTypes.SqlDouble" /> с предоставленным <see cref="T:System.Object" /> и возвращает сведения об их относительных значениях.</summary>
      <param name="value">Сравниваемый шаблон <see cref="T:System.Object" />.</param>
      <returns>Число со знаком, представляющее результат сравнения значений экземпляра и объекта.  
  Возвращаемое значение 
  Условие 
  Меньше нуля 
  Этот экземпляр меньше данного объекта.  

  Нуль 
  Этот экземпляр равен данному объекту.  

  Больше нуля 
  Этот экземпляр больше данного объекта 
- или - 
Данный объект является пустой ссылкой (<see langword="Nothing" /> в Visual Basic).</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.Divide(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>Оператор деления делит первый операнд <see cref="T:System.Data.SqlTypes.SqlDouble" /> на второй.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlDouble" />, содержащая результаты операции деления.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.Equals(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>Выполняет логическое сравнение двух экземпляров <see cref="T:System.Data.SqlTypes.SqlDouble" />, чтобы определить, равны ли они.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns>
        <see langword="true" />, если эти два значения равны. В противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.Equals(System.Object)">
      <summary>Сравнивает предоставленный параметр объекта со свойством <see cref="P:System.Data.SqlTypes.SqlDateTime.Value" /> объекта <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <param name="value">Сравниваемый объект.</param>
      <returns>
        <see langword="true" />, если эти два значения равны. В противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.GetHashCode">
      <summary>Возвращает хэш-код для структуры <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <returns>Хэш-код в виде 32-разрядного целого числа со знаком.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary>Возвращает XSD (XML-схему) заданного объекта <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</summary>
      <param name="schemaSet">Объект <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
      <returns>Значение <see langword="string" />, указывающее определение XML-схемы заданного объекта <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.GreaterThan(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>Сравнивает два экземпляра <see cref="T:System.Data.SqlTypes.SqlDouble" />, чтобы определить, что первый объект больше, чем второй.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns>Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр больше второго. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlDouble" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.GreaterThanOrEqual(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>Сравнивает два экземпляра структуры <see cref="T:System.Data.SqlTypes.SqlDouble" />, чтобы определить, равны ли они, или первый больше, чем второй.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns>Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр больше второго или равен ему. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlDouble" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDouble.IsNull">
      <summary>Возвращает логическое значение, показывающее, имеет ли данный экземпляр <see cref="T:System.Data.SqlTypes.SqlDouble" /> значение NULL.</summary>
      <returns>
        <see langword="true" />, если <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> равно NULL. В противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.LessThan(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>Сравнивает два экземпляра <see cref="T:System.Data.SqlTypes.SqlDouble" />, чтобы определить, является ли первый меньшим, чем второй.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns>Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр меньше второго. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlDouble" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.LessThanOrEqual(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>Сравнивает два экземпляра структуры <see cref="T:System.Data.SqlTypes.SqlDouble" />, чтобы определить, равны ли они, или первый меньше, чем второй.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns>Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр меньше второго или ему равен. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlDouble" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDouble.MaxValue">
      <summary>Константа, представляющая максимальное значение для структуры <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDouble.MinValue">
      <summary>Константа, представляющая минимальное возможное значение структуры <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.Multiply(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>Оператор умножения вычисляет произведение двух операндов <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns>Произведение двух операндов <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.NotEquals(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>Сравнивает два экземпляра <see cref="T:System.Data.SqlTypes.SqlDouble" /> с целью определить, верно ли, что они не равны.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns>Переменная <see cref="T:System.Data.SqlTypes.SqlBoolean" />, которая принимает значение <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если два экземпляра не равны, или значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />, если они равны. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlDouble" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDouble.Null">
      <summary>Представляет значение <see cref="T:System.DBNull" />, которое может быть присвоено данному экземпляру структуры <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Addition(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>Оператор сложения вычисляет сумму двух операндов <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns>Сумма двух операндов <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Division(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>Оператор деления делит первый операнд <see cref="T:System.Data.SqlTypes.SqlDouble" /> на второй.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlDouble" />, содержащая результаты операции деления.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Equality(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>Выполняет логическое сравнение двух экземпляров <see cref="T:System.Data.SqlTypes.SqlDouble" />, чтобы определить, равны ли они.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns>
        <see langword="true" />, если эти два значения равны. В противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlDouble">
      <summary>Преобразует предоставленный параметр <see cref="T:System.Data.SqlTypes.SqlBoolean" /> в <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <param name="x">Преобразуемая структура <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlDouble" />, <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> которой равно 0 или 1 в зависимости от свойства <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" /> параметра <see cref="T:System.Data.SqlTypes.SqlBoolean" />. Если значение <see cref="T:System.Data.SqlTypes.SqlBoolean" /> равно <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />, структура <see cref="T:System.Data.SqlTypes.SqlDouble" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlDouble.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Double">
      <summary>Преобразует предоставленную структуру <see cref="T:System.Data.SqlTypes.SqlDouble" /> в тип double.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns>Эквивалент типа double для значения заданной структуры <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlDouble">
      <summary>Преобразует предоставленный параметр <see cref="T:System.Data.SqlTypes.SqlString" /> в <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <param name="x">Объект <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlDouble" />, <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> которой равно значению числа, представленного объектом <see cref="T:System.Data.SqlTypes.SqlString" />. Если значение <see cref="T:System.Data.SqlTypes.SqlString" /> равно <see cref="F:System.Data.SqlTypes.SqlString.Null" />, структура <see cref="T:System.Data.SqlTypes.SqlDouble" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlDouble.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_GreaterThan(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>Сравнивает два экземпляра <see cref="T:System.Data.SqlTypes.SqlDouble" />, чтобы определить, что первый объект больше, чем второй.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns>Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр больше второго. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlDouble" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>Сравнивает два экземпляра структуры <see cref="T:System.Data.SqlTypes.SqlDouble" />, чтобы определить, равны ли они, или первый больше, чем второй.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns>Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр больше второго или равен ему. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlDouble" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlDouble">
      <summary>Преобразует предоставленный параметр <see cref="T:System.Data.SqlTypes.SqlByte" /> в <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlDouble" />, <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> которой равно <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> параметра <see cref="T:System.Data.SqlTypes.SqlByte" />. Если значение <see cref="T:System.Data.SqlTypes.SqlByte" /> равно <see cref="F:System.Data.SqlTypes.SqlByte.Null" />, структура <see cref="T:System.Data.SqlTypes.SqlDouble" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlDouble.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlDouble">
      <summary>Преобразует предоставленный параметр <see cref="T:System.Data.SqlTypes.SqlDecimal" /> в <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlDouble" />, <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> которой равно <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> параметра <see cref="T:System.Data.SqlTypes.SqlDecimal" />. Если значение <see cref="T:System.Data.SqlTypes.SqlDecimal" /> равно <see cref="F:System.Data.SqlTypes.SqlDecimal.Null" />, структура <see cref="T:System.Data.SqlTypes.SqlDouble" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlDouble.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlDouble">
      <summary>Преобразует предоставленный параметр <see cref="T:System.Data.SqlTypes.SqlInt16" /> в <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlDouble" />, <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> которой равно <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> параметра <see cref="T:System.Data.SqlTypes.SqlInt16" />. Если значение <see cref="T:System.Data.SqlTypes.SqlInt16" /> равно <see cref="F:System.Data.SqlTypes.SqlInt16.Null" />, структура <see cref="T:System.Data.SqlTypes.SqlDouble" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlDouble.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlDouble">
      <summary>Преобразует предоставленный параметр <see cref="T:System.Data.SqlTypes.SqlInt32" /> в <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlDouble" />, <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> которой равно <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> параметра <see cref="T:System.Data.SqlTypes.SqlInt32" />. Если значение <see cref="T:System.Data.SqlTypes.SqlInt32" /> равно <see cref="F:System.Data.SqlTypes.SqlInt32.Null" />, структура <see cref="T:System.Data.SqlTypes.SqlDouble" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlDouble.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlDouble">
      <summary>Преобразует предоставленный параметр <see cref="T:System.Data.SqlTypes.SqlInt64" /> в <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlDouble" />, <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> которой равно <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> параметра <see cref="T:System.Data.SqlTypes.SqlInt64" />. Если значение <see cref="T:System.Data.SqlTypes.SqlInt64" /> равно <see cref="F:System.Data.SqlTypes.SqlInt64.Null" />, структура <see cref="T:System.Data.SqlTypes.SqlDouble" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlDouble.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlDouble">
      <summary>Преобразует предоставленный параметр <see cref="T:System.Data.SqlTypes.SqlMoney" /> в <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlDouble" />, <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> которой равно <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> параметра <see cref="T:System.Data.SqlTypes.SqlMoney" />. Если значение <see cref="T:System.Data.SqlTypes.SqlMoney" /> равно <see cref="F:System.Data.SqlTypes.SqlMoney.Null" />, структура <see cref="T:System.Data.SqlTypes.SqlDouble" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlDouble.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlDouble">
      <summary>Преобразует предоставленный параметр <see cref="T:System.Data.SqlTypes.SqlSingle" /> в <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlDouble" />, <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> которой равно <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> параметра <see cref="T:System.Data.SqlTypes.SqlSingle" />. Если значение <see cref="T:System.Data.SqlTypes.SqlSingle" /> равно <see cref="F:System.Data.SqlTypes.SqlSingle.Null" />, структура <see cref="T:System.Data.SqlTypes.SqlDouble" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlDouble.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Double)~System.Data.SqlTypes.SqlDouble">
      <summary>Преобразует предоставленное значение типа double в <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <param name="x">Преобразуемое значение типа double.</param>
      <returns>Параметр типа <see cref="T:System.Data.SqlTypes.SqlDouble" /> с тем же значением, что и у заданного параметра типа double.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Inequality(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>Сравнивает два экземпляра <see cref="T:System.Data.SqlTypes.SqlDouble" /> с целью проверить, что они не равны.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns>Переменная <see cref="T:System.Data.SqlTypes.SqlBoolean" />, которая принимает значение <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если два экземпляра не равны, или значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />, если они равны. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlDouble" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_LessThan(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>Сравнивает два экземпляра <see cref="T:System.Data.SqlTypes.SqlDouble" />, чтобы определить, является ли первый меньшим, чем второй.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns>Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр меньше второго. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlDouble" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_LessThanOrEqual(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>Сравнивает два экземпляра структуры <see cref="T:System.Data.SqlTypes.SqlDouble" />, чтобы определить, равны ли они, или первый меньше, чем второй.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns>Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр меньше второго или ему равен. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlDouble" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Multiply(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>Оператор умножения вычисляет произведение двух операндов <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns>Произведение двух операндов <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Subtraction(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>Оператор вычитания вычитает второй операнд <see cref="T:System.Data.SqlTypes.SqlDouble" /> из первого.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns>Результаты операции вычитания.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_UnaryNegation(System.Data.SqlTypes.SqlDouble)">
      <summary>Возвращает инвертированное значение заданной структуры <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlDouble" />, содержащая противоположное значение.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.Parse(System.String)">
      <summary>Преобразует представление <see cref="T:System.String" /> числа в его эквивалент в виде числа с плавающей запятой с удвоенной точностью.</summary>
      <param name="s">Представление <see langword="String" />, которое необходимо проанализировать.</param>
      <returns>Объект <see cref="T:System.Data.SqlTypes.SqlDouble" />, содержащий значение, представленное параметром типа <see langword="String" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.Subtract(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>Оператор вычитания вычитает второй операнд <see cref="T:System.Data.SqlTypes.SqlDouble" /> из первого.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns>Результаты операции вычитания.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary>Данный член предназначен для поддержки платформы .NET Framework и не должен вызываться напрямую из кода приложения.</summary>
      <returns>Схема XML, используемая платформой .NET Framework.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary>Данный член предназначен для поддержки платформы .NET Framework и не должен вызываться напрямую из кода приложения.</summary>
      <param name="reader">Объект <see cref="T:System.Xml.XmlReader" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary>Данный член предназначен для поддержки платформы .NET Framework и не должен вызываться напрямую из кода приложения.</summary>
      <param name="writer">Объект <see cref="T:System.Xml.XmlWriter" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToSqlBoolean">
      <summary>Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlDouble" /> в <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <returns>Структура <see langword="SqlBoolean" />, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> которой будет равно <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если для структуры <see cref="T:System.Data.SqlTypes.SqlDouble" /><see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> не равно нулю, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />, если <see cref="T:System.Data.SqlTypes.SqlDouble" /> равно нулю, и <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />, если структура <see cref="T:System.Data.SqlTypes.SqlDouble" /> имеет значение <see cref="F:System.Data.SqlTypes.SqlDouble.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToSqlByte">
      <summary>Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlDouble" /> в <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <returns>Структура <see langword="SqlByte" />, <see langword="Value" /> которой равно <see langword="Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToSqlDecimal">
      <summary>Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlDouble" /> в <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <returns>Новая структура <see langword="SqlDecimal" />, преобразованное значение которой равно округленному значению данной структуры <see langword="SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToSqlInt16">
      <summary>Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlDouble" /> в <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlInt16" />, свойство <see langword="Value" /> которой равно целой части значения структуры <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToSqlInt32">
      <summary>Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlDouble" /> в <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlInt32" />, свойство <see langword="Value" /> которой равно целой части значения структуры <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToSqlInt64">
      <summary>Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlDouble" /> в <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlInt64" />, свойство <see langword="Value" /> которой равно целой части значения структуры <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToSqlMoney">
      <summary>Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlDouble" /> в <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <returns>Новая структура <see langword="SqlMoney" />, <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> которой равно значению данной структуры <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToSqlSingle">
      <summary>Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlDouble" /> в <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <returns>Новая структура <see langword="SqlSingle" />, <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> которой равно <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> данной структуры <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToSqlString">
      <summary>Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlDouble" /> в <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <returns>Структура <see langword="SqlString" />, представляющая <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> данной структуры <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToString">
      <summary>Преобразует данную структуру <see cref="T:System.Data.SqlTypes.SqlDouble" /> в строку.</summary>
      <returns>Строка, представляющая <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> данной структуры <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDouble.Value">
      <summary>Получает значение структуры <see cref="T:System.Data.SqlTypes.SqlDouble" />. Это свойство доступно только для чтения.</summary>
      <returns>Значение структуры <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDouble.Zero">
      <summary>Представляет нулевое значение, которое можно присвоить свойству <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> экземпляра структуры <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
    </member>
    <member name="T:System.Data.SqlTypes.SqlFileStream">
      <summary>Предоставляет данные сервера SQL Server, сохраненные с помощью атрибута столбца FILESTREAM, как последовательность байтов.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlFileStream.#ctor(System.String,System.Byte[],System.IO.FileAccess)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.SqlTypes.SqlFileStream" />.</summary>
      <param name="path">Логический путь к файлу. Путь можно получить с помощью функции Pathname Transact-SQL в основном столбце FILESTREAM в таблице.</param>
      <param name="transactionContext">Контекст транзакции для объекта <see langword="SqlFileStream" />. Приложения должны возвращать массив байтов, возвращаемый путем вызова метода GET_FILESTREAM_TRANSACTION_CONTEXT.</param>
      <param name="access">Режим доступа, используемый при открытии файла. Поддерживаются следующие значения перечисления <see cref="T:System.IO.FileAccess" />: <see cref="F:System.IO.FileAccess.Read" />, <see cref="F:System.IO.FileAccess.Write" /> и <see cref="F:System.IO.FileAccess.ReadWrite" />.  
При использовании <see langword="FileAccess.Read" /> объект <see langword="SqlFileStream" /> можно использовать для считывания всех существующих данных.  
При использовании <see langword="FileAccess.Write" /><see langword="SqlFileStream" /> указывает на файл нулевой длины. Существующие данные будут перезаписаны при закрытии объекта и фиксации транзакции.  
При использовании <see langword="FileAccess.ReadWrite" /><see langword="SqlFileStream" /> указывает на файл, содержащий все существующие данные. Дескриптор размещается в начале файла. Для перемещения положения дескриптора в файле с целью записи или добавления новых данных можно использовать один из методов <see langword="System.IO" /><see langword="Seek" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> является пустой ссылкой, или <paramref name="transactionContext" /> имеет значение NULL.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="path" /> представляет собой пустую строку (""), содержащую только пробел или хотя бы один недопустимый символ.  
 <paramref name="path" /> начинается с "\\.\", например "\\.\PHYSICALDRIVE0".  
Маркер, возвращенный вызовом в NTCreateFile, не относится к типу FILE_TYPE_DISK.  
 <paramref name="options" /> содержит неподдерживаемое значение.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Не удается найти файл.</exception>
      <exception cref="T:System.IO.IOException">Ошибка ввода/вывода.</exception>
      <exception cref="T:System.Security.SecurityException">У вызывающего объекта отсутствует необходимое разрешение.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Указан недопустимый <paramref name="path" /> (например, он ведет на несопоставленный диск).</exception>
      <exception cref="T:System.UnauthorizedAccessException">Запрошенный доступ не разрешен операционной системой для указанного пути. Это происходит, если задан режим доступа с правом чтения или чтения и записи, а для файла или каталога задан режим доступа только для чтения.</exception>
      <exception cref="T:System.InvalidOperationException">NtCreateFile завершается сбоем с кодом ошибки ERROR_SHARING_VIOLATION.</exception>
    </member>
    <member name="M:System.Data.SqlTypes.SqlFileStream.#ctor(System.String,System.Byte[],System.IO.FileAccess,System.IO.FileOptions,System.Int64)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.SqlTypes.SqlFileStream" />.</summary>
      <param name="path">Логический путь к файлу. Путь можно получить с помощью функции Pathname Transact-SQL в основном столбце FILESTREAM в таблице.</param>
      <param name="transactionContext">Контекст транзакции для объекта <see langword="SqlFileStream" />. Если задано значение NULL, для объекта <see langword="SqlFileStream" /> будет использоваться неявная транзакция. Приложения должны возвращать массив байтов, возвращаемый путем вызова метода GET_FILESTREAM_TRANSACTION_CONTEXT.</param>
      <param name="access">Режим доступа, используемый при открытии файла. Поддерживаются следующие значения перечисления <see cref="T:System.IO.FileAccess" />: <see cref="F:System.IO.FileAccess.Read" />, <see cref="F:System.IO.FileAccess.Write" /> и <see cref="F:System.IO.FileAccess.ReadWrite" />.  
При использовании <see langword="FileAccess.Read" /> объект <see langword="SqlFileStream" /> можно использовать для считывания всех существующих данных.  
При использовании <see langword="FileAccess.Write" /><see langword="SqlFileStream" /> указывает на файл нулевой длины. Существующие данные будут перезаписаны при закрытии объекта и фиксации транзакции.  
При использовании <see langword="FileAccess.ReadWrite" /><see langword="SqlFileStream" /> указывает на файл, содержащий все существующие данные. Дескриптор размещается в начале файла. Для перемещения положения дескриптора в файле с целью записи или добавления новых данных можно использовать один из методов <see langword="System.IO" /><see langword="Seek" />.</param>
      <param name="options">Задает параметр, используемый при открытии файла. Допустимые значения <see cref="T:System.IO.FileOptions" />: <see cref="F:System.IO.FileOptions.Asynchronous" />, <see cref="F:System.IO.FileOptions.WriteThrough" />, <see cref="F:System.IO.FileOptions.SequentialScan" /> и <see cref="F:System.IO.FileOptions.R*******omAccess" />.</param>
      <param name="allocationSize">Размер выделения для использования при создании файла. Если задано значение 0, используется значение по умолчанию.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> является пустой ссылкой, или <paramref name="transactionContext" /> имеет значение NULL.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="path" /> представляет собой пустую строку (""), содержащую только пробел или хотя бы один недопустимый символ.  
 <paramref name="path" /> начинается с "\\.\", например "\\.\PHYSICALDRIVE0".  
Дескриптор, возвращенный вызовом NTCreateFile, не относится к типу FILE_TYPE_DISK.  
 <paramref name="options" /> содержит неподдерживаемое значение.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Не удается найти файл.</exception>
      <exception cref="T:System.IO.IOException">Ошибка ввода/вывода.</exception>
      <exception cref="T:System.Security.SecurityException">У вызывающего объекта отсутствует необходимое разрешение.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Указан недопустимый <paramref name="path" /> (например, он ведет на несопоставленный диск).</exception>
      <exception cref="T:System.UnauthorizedAccessException">Запрошенный доступ не разрешен операционной системой для указанного пути. Это происходит, если задан режим доступа с правом чтения или чтения и записи, а для файла или каталога задан режим доступа только для чтения.</exception>
      <exception cref="T:System.InvalidOperationException">NtCreateFile завершается сбоем с кодом ошибки ERROR_SHARING_VIOLATION.</exception>
    </member>
    <member name="M:System.Data.SqlTypes.SqlFileStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
      <summary>Начинает операцию асинхронного чтения.</summary>
      <param name="buffer">Буфер, в который необходимо считать данные.</param>
      <param name="offset">Смещение байтов в буфере <paramref name="buffer" />, с которого начинается запись данных, считанных из потока.</param>
      <param name="count">Максимальное число байтов, предназначенных для чтения.</param>
      <param name="callback">Дополнительный асинхронный обратный вызов по завершении чтения.</param>
      <param name="state">Предоставляемый пользователем объект, позволяющий отличать данный конкретный запрос на асинхронное чтение от других запросов.</param>
      <returns>
        <see cref="T:System.IAsyncResult" /> представляет асинхронное чтение, которое все еще может быть отложено.</returns>
      <exception cref="T:System.NotSupportedException">Чтение данных не поддерживается в потоке.</exception>
    </member>
    <member name="M:System.Data.SqlTypes.SqlFileStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
      <summary>Начинает операцию асинхронной записи.</summary>
      <param name="buffer">Буфер, из которого записываются данные.</param>
      <param name="offset">Смещение байтов в буфере <paramref name="buffer" />, с которого начинается запись.</param>
      <param name="count">Максимальное число байтов для записи.</param>
      <param name="callback">Дополнительный асинхронный обратный вызов по завершении записи.</param>
      <param name="state">Предоставляемый пользователем объект, являющийся отличительным признаком данного конкретного запроса на асинхронную запись от других запросов.</param>
      <returns>
        <see cref="T:System.IAsyncResult" /> представляет асинхронную запись, которая все еще может быть отложена.</returns>
      <exception cref="T:System.NotSupportedException">Запись данных в потоке не поддерживается.</exception>
    </member>
    <member name="P:System.Data.SqlTypes.SqlFileStream.CanRead">
      <summary>Возвращает значение, определяющее в текущем потоке наличие поддержки операций чтения.</summary>
      <returns>Значение <see langword="true" />, если текущий поток поддерживает чтение; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlFileStream.CanSeek">
      <summary>Возвращает значение, определяющее в текущем потоке наличие поддержки операций поиска.</summary>
      <returns>Значение <see langword="true" />, если текущий поток поддерживает поиск. В противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlFileStream.CanTimeout">
      <summary>Возвращает значение, определяющее, может ли для текущего потока истечь время ожидания.</summary>
      <returns>Значение <see langword="true" />, если для текущего потока может истечь время ожидания; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlFileStream.CanWrite">
      <summary>Возвращает значение, определяющее в текущем потоке наличие поддержки операций записи.</summary>
      <returns>Значение <see langword="true" />, если текущий поток поддерживает запись. В противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlFileStream.EndRead(System.IAsyncResult)">
      <summary>Ожидает завершения отложенного асинхронного чтения.</summary>
      <param name="asyncResult">Ссылка на отложенный асинхронный запрос, который необходимо завершить.</param>
      <returns>Количество байтов, считанных из потока, от нуля (0) до количества запрошенных байтов. Потоки возвращают нуль (0) только в конце. В противном случае они должны блокироваться до тех пор, пока доступен хотя бы один байт.</returns>
      <exception cref="T:System.ArgumentException">Объект <see cref="T:System.IAsyncResult" /> поступил не из соответствующего метода <see langword="BeginRead" />.</exception>
    </member>
    <member name="M:System.Data.SqlTypes.SqlFileStream.EndWrite(System.IAsyncResult)">
      <summary>Заканчивает операцию асинхронной записи.</summary>
      <param name="asyncResult">Ссылка на невыполненный асинхронный запрос ввода-вывода.</param>
      <exception cref="T:System.ArgumentException">Объект <see cref="T:System.IAsyncResult" /> поступил не из соответствующего метода <see langword="BeginWrite" />.</exception>
    </member>
    <member name="M:System.Data.SqlTypes.SqlFileStream.Finalize">
      <summary>Гарантирует, что ресурсы освобождены и выполнены другие операции очистки, когда сборщик мусора восстанавливает <see cref="T:System.Data.SqlTypes.SqlFileStream" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlFileStream.Flush">
      <summary>Очищает все буферы для этого потока и приводит к записи всех буферизованных данных в базовое устройство.</summary>
    </member>
    <member name="P:System.Data.SqlTypes.SqlFileStream.Length">
      <summary>Возвращает значение, указывающее длину текущего потока в байтах.</summary>
      <returns>Значение <see cref="T:System.Int64" />, указывающее длину текущего потока в байтах.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlFileStream.Name">
      <summary>Возвращает логический путь <see cref="T:System.Data.SqlTypes.SqlFileStream" />, переданного в конструктор.</summary>
      <returns>Строковое значение, указывающее имя <see cref="T:System.Data.SqlTypes.SqlFileStream" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlFileStream.Position">
      <summary>Возвращает или задает позицию в текущем потоке.</summary>
      <returns>Текущая позиция в потоке <see cref="T:System.Data.SqlTypes.SqlFileStream" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlFileStream.Read(System.Byte[],System.Int32,System.Int32)">
      <summary>Считывает последовательность байтов из текущего потока и перемещает позицию внутри потока на число считанных байтов.</summary>
      <param name="buffer">Массив байтов. После завершения выполнения данного метода буфер содержит указанный массив байтов, в котором значения в интервале между смещением и величиной "смещение + счетчик – 1" заменены байтами, считанными из текущего источника.</param>
      <param name="offset">Смещение байтов (начиная с нуля) в буфере, с которого начинается сохранение данных, считанных из текущего потока.</param>
      <param name="count">Максимальное количество байтов, которое должно быть считано из текущего потока.</param>
      <returns>Общее количество байтов, считанных в буфер. Это число может быть меньше количества запрошенных байтов, если столько байтов в настоящее время недоступно, а также равняться нулю (0), если был достигнут конец потока.</returns>
      <exception cref="T:System.NotSupportedException">Объект не поддерживает чтение данных.</exception>
    </member>
    <member name="M:System.Data.SqlTypes.SqlFileStream.ReadByte">
      <summary>Считывает байт из потока и перемещает позицию в потоке на один байт или возвращает -1, если достигнут конец потока.</summary>
      <returns>Байт без знака, приведенный к <see cref="T:System.Int32" />, или значение -1, если достигнут конец потока.</returns>
      <exception cref="T:System.NotSupportedException">Объект не поддерживает чтение данных.</exception>
    </member>
    <member name="P:System.Data.SqlTypes.SqlFileStream.ReadTimeout">
      <summary>Возвращает или задает значение в миллисекундах, определяющее период времени, отведенного потоку на выполнение операции чтения.</summary>
      <returns>Значение в миллисекундах, определяющее период времени, отведенного потоку на выполнение операции чтения.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlFileStream.Seek(System.Int64,System.IO.SeekOrigin)">
      <summary>Задает позицию в текущем потоке.</summary>
      <param name="offset">Смещение в байтах относительно параметра <paramref name="origin" />.</param>
      <param name="origin">Значение типа <see cref="T:System.IO.SeekOrigin" />, указывающее опорную точку, которая используется для получения новой позиции.</param>
      <returns>Новая позиция в текущем потоке.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlFileStream.SetLength(System.Int64)">
      <summary>Устанавливает длину текущего потока.</summary>
      <param name="value">Нужная длина текущего потока в байтах.</param>
      <exception cref="T:System.NotSupportedException">Объект не поддерживает чтение данных.</exception>
    </member>
    <member name="P:System.Data.SqlTypes.SqlFileStream.TransactionContext">
      <summary>Возвращает или задает контекст транзакции для данного объекта <see cref="T:System.Data.SqlTypes.SqlFileStream" />.</summary>
      <returns>Массив <paramref name="transactionContext" />, который был передан в конструктор для этого объекта <see cref="T:System.Data.SqlTypes.SqlFileStream" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlFileStream.Write(System.Byte[],System.Int32,System.Int32)">
      <summary>Записывает последовательность байтов в текущий поток и перемещает текущую позицию внутри потока на число записанных байтов.</summary>
      <param name="buffer">Массив байтов. Этот метод копирует байты <paramref name="count" /> из <paramref name="buffer" /> в текущий поток.</param>
      <param name="offset">Отсчитываемое от нуля смещение байтов в буфере <paramref name="buffer" />, с которого начинается копирование байтов в текущий поток.</param>
      <param name="count">Количество байтов, которое необходимо записать в текущий поток.</param>
      <exception cref="T:System.NotSupportedException">Объект не поддерживает запись данных.</exception>
    </member>
    <member name="M:System.Data.SqlTypes.SqlFileStream.WriteByte(System.Byte)">
      <summary>Записывает байт в текущее положение в потоке и перемещает позицию в потоке вперед на один байт.</summary>
      <param name="value">Байт, записываемый в поток.</param>
      <exception cref="T:System.NotSupportedException">Объект не поддерживает запись данных.</exception>
    </member>
    <member name="P:System.Data.SqlTypes.SqlFileStream.WriteTimeout">
      <summary>Возвращает или задает значение в миллисекундах, определяющее период времени, отведенного потоку на выполнение операции записи.</summary>
      <returns>Значение в миллисекундах, определяющее период времени, отведенного потоку на выполнение операции записи.</returns>
    </member>
    <member name="T:System.Data.SqlTypes.SqlGuid">
      <summary>Представляет код GUID, сохраняемый в базе данных или извлекаемый из нее.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.#ctor(System.Byte[])">
      <summary>Инициализирует новый экземпляр структуры <see cref="T:System.Data.SqlTypes.SqlGuid" /> с использованием предоставленного параметра в виде массива байтов.</summary>
      <param name="value">Массив байтов.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.#ctor(System.Guid)">
      <summary>Инициализирует новый экземпляр структуры <see cref="T:System.Data.SqlTypes.SqlGuid" /> с использованием заданного параметра <see cref="T:System.Guid" />.</summary>
      <param name="g">
        <see cref="T:System.Guid" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.#ctor(System.Int32,System.Int16,System.Int16,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte)">
      <summary>Инициализирует новый экземпляр структуры <see cref="T:System.Data.SqlTypes.SqlGuid" /> с использованием заданных значений.</summary>
      <param name="a">Первые четыре байта структуры <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="b">Следующие два байта структуры  <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="c">Следующие два байта структуры  <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="d">Следующий байт структуры <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="e">Следующий байт структуры <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="f">Следующий байт структуры <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="g">Следующий байт структуры <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="h">Следующий байт структуры <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="i">Следующий байт структуры <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="j">Следующий байт структуры <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="k">Следующий байт структуры <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр структуры <see cref="T:System.Data.SqlTypes.SqlGuid" /> с использованием заданного параметра <see cref="T:System.String" />.</summary>
      <param name="s">Объект <see cref="T:System.String" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.CompareTo(System.Data.SqlTypes.SqlGuid)">
      <summary>Сравнивает данную структуру <see cref="T:System.Data.SqlTypes.SqlGuid" /> с предоставленным <see cref="T:System.Data.SqlTypes.SqlGuid" /> и возвращает сведения об их относительных значениях. Сравнивает не только последние 6 байтов, но последние 6 байтов считаются наиболее важными при выполнении сравнения.</summary>
      <param name="value">Выражение <see cref="T:System.Data.SqlTypes.SqlGuid" /> для сравнения.</param>
      <returns>Число со знаком, представляющее результат сравнения значений экземпляра и объекта.  
  Возвращаемое значение 
  Условие 
  Меньше нуля 
  Этот экземпляр меньше, чем объект.  

  Нуль 
  Этот экземпляр равен объекту.  

  Больше нуля 
  Этот экземпляр больше, чем объект, 
- или - 
объект является пустой ссылкой (<see langword="Nothing" />).</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.CompareTo(System.Object)">
      <summary>Сравнивает эту структуру <see cref="T:System.Data.SqlTypes.SqlGuid" /> с предоставленным объектом и возвращает сведения об их относительных значениях. Сравнивает не только последние 6 байтов, но последние 6 байтов считаются наиболее важными при выполнении сравнения.</summary>
      <param name="value">Выражение <see cref="T:System.Object" /> для сравнения.</param>
      <returns>Число со знаком, представляющее результат сравнения значений экземпляра и объекта.  
  Возвращаемое значение 
  Условие 
  Меньше нуля 
  Этот экземпляр меньше, чем объект.  

  Нуль 
  Этот экземпляр равен объекту.  

  Больше нуля 
  Этот экземпляр больше, чем объект, 
-или- 
объект является пустой ссылкой (<see langword="Nothing" />).</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.Equals(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary>Выполняет логическое сравнение двух структур <see cref="T:System.Data.SqlTypes.SqlGuid" />, чтобы определить, равны ли они.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <returns>
        <see langword="true" />, если эти два значения равны. В противном случае — значение <see langword="false" />. Если один из экземпляров пуст, <see langword="SqlGuid" /> будет иметь значение NULL.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.Equals(System.Object)">
      <summary>Сравнивает предоставленный параметр объекта со свойством <see cref="P:System.Data.SqlTypes.SqlGuid.Value" /> объекта <see cref="T:System.Data.SqlTypes.SqlGuid" />.</summary>
      <param name="value">Сравниваемый объект.</param>
      <returns>
        <see langword="true" />, если объект является экземпляром структуры <see cref="T:System.Data.SqlTypes.SqlGuid" /> и они равны; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.GetHashCode">
      <summary>Возвращает хэш-код данной структуры <see cref="T:System.Data.SqlTypes.SqlGuid" />.</summary>
      <returns>Хэш-код в виде 32-разрядного целого числа со знаком.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary>Возвращает XSD (XML-схему) заданного объекта <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</summary>
      <param name="schemaSet">Объект <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
      <returns>Значение <see langword="string" />, указывающее определение XML-схемы заданного объекта <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.GreaterThan(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary>Сравнивает два экземпляра <see cref="T:System.Data.SqlTypes.SqlGuid" />, чтобы определить, что первый объект больше, чем второй.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <returns>Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр больше второго. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlGuid" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.GreaterThanOrEqual(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary>Сравнивает два экземпляра структуры <see cref="T:System.Data.SqlTypes.SqlGuid" />, чтобы определить, равны ли они, или первый больше, чем второй.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <returns>Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр больше второго или равен ему. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlGuid" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlGuid.IsNull">
      <summary>Получает логическое значение, показывающее, имеет ли данная структура <see cref="T:System.Data.SqlTypes.SqlGuid" /> значение NULL.</summary>
      <returns>
        <see langword="true" /> если <see langword="null" />. В противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.LessThan(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary>Сравнивает два экземпляра <see cref="T:System.Data.SqlTypes.SqlGuid" />, чтобы определить, является ли первый меньшим, чем второй.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <returns>Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр меньше второго. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlGuid" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.LessThanOrEqual(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary>Сравнивает два экземпляра структуры <see cref="T:System.Data.SqlTypes.SqlGuid" />, чтобы определить, равны ли они, или первый меньше, чем второй.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <returns>Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр меньше второго или ему равен. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlGuid" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.NotEquals(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary>Выполняет логическое сравнение двух структур <see cref="T:System.Data.SqlTypes.SqlGuid" /> с целью определить, верно ли, что они не равны.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <returns>Переменная <see cref="T:System.Data.SqlTypes.SqlBoolean" />, которая принимает значение <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если два экземпляра не равны, или значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />, если они равны. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlGuid" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlGuid.Null">
      <summary>Представляет значение <see cref="T:System.DBNull" />, которое может быть присвоено данному экземпляру структуры <see cref="T:System.Data.SqlTypes.SqlGuid" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_Equality(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary>Выполняет логическое сравнение двух структур <see cref="T:System.Data.SqlTypes.SqlGuid" />, чтобы определить, равны ли они.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlBoolean" />, которая принимает значение <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если два экземпляра равны, или значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />, если они не равны. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlGuid" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_Explicit(System.Data.SqlTypes.SqlBinary)~System.Data.SqlTypes.SqlGuid">
      <summary>Преобразует параметр <see cref="T:System.Data.SqlTypes.SqlBinary" /> в <see cref="T:System.Data.SqlTypes.SqlGuid" />.</summary>
      <param name="x">Объект <see langword="SqlBinary" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlGuid" />, <see cref="P:System.Data.SqlTypes.SqlGuid.Value" /> которой равно <see cref="P:System.Data.SqlTypes.SqlBinary.Value" /> параметра <see cref="T:System.Data.SqlTypes.SqlBinary" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_Explicit(System.Data.SqlTypes.SqlGuid)~System.Guid">
      <summary>Преобразует предоставленный параметр <see cref="T:System.Data.SqlTypes.SqlGuid" /> в <see cref="T:System.Guid" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <returns>Новая структура <see cref="T:System.Guid" />, равная <see cref="P:System.Data.SqlTypes.SqlGuid.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlGuid" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlGuid">
      <summary>Преобразует заданную структуру <see cref="T:System.Data.SqlTypes.SqlString" /> в <see cref="T:System.Data.SqlTypes.SqlGuid" />.</summary>
      <param name="x">Объект <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlGuid" />, <see cref="P:System.Data.SqlTypes.SqlGuid.Value" /> которой равно значению, представленному параметром <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_GreaterThan(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary>Сравнивает два экземпляра <see cref="T:System.Data.SqlTypes.SqlGuid" />, чтобы определить, что первый объект больше, чем второй.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <returns>Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр больше второго. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlGuid" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary>Сравнивает два экземпляра структуры <see cref="T:System.Data.SqlTypes.SqlGuid" />, чтобы определить, равны ли они, или первый больше, чем второй.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <returns>Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр больше второго или равен ему. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlGuid" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_Implicit(System.Guid)~System.Data.SqlTypes.SqlGuid">
      <summary>Преобразует предоставленный параметр <see cref="T:System.Guid" /> в <see cref="T:System.Data.SqlTypes.SqlGuid" />.</summary>
      <param name="x">Объект <see cref="T:System.Guid" />.</param>
      <returns>Новый объект <see cref="T:System.Data.SqlTypes.SqlGuid" />, <see cref="P:System.Data.SqlTypes.SqlGuid.Value" /> которого равен параметру <see cref="T:System.Guid" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_Inequality(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary>Выполняет логическое сравнение двух структур <see cref="T:System.Data.SqlTypes.SqlGuid" /> с целью определить, верно ли, что они не равны.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <returns>Переменная <see cref="T:System.Data.SqlTypes.SqlBoolean" />, которая принимает значение <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если два экземпляра не равны, или значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />, если они равны. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlGuid" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_LessThan(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary>Сравнивает два экземпляра <see cref="T:System.Data.SqlTypes.SqlGuid" />, чтобы определить, является ли первый меньшим, чем второй.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <returns>Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр меньше второго. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlGuid" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_LessThanOrEqual(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary>Сравнивает два экземпляра структуры <see cref="T:System.Data.SqlTypes.SqlGuid" />, чтобы определить, равны ли они, или первый меньше, чем второй.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <returns>Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр меньше второго или ему равен. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlGuid" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.Parse(System.String)">
      <summary>Преобразует заданную структуру <see cref="T:System.String" /> в <see cref="T:System.Data.SqlTypes.SqlGuid" />.</summary>
      <param name="s">Представление <see langword="String" />, которое необходимо проанализировать.</param>
      <returns>Значение <see cref="T:System.Data.SqlTypes.SqlGuid" />, эквивалентное значению, которое содержится в заданном представлении <see cref="T:System.String" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary>Данный член предназначен для поддержки платформы .NET Framework и не должен вызываться напрямую из кода приложения.</summary>
      <returns>Объект <see langword="XmlSchema" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary>Данный член предназначен для поддержки платформы .NET Framework и не должен вызываться напрямую из кода приложения.</summary>
      <param name="reader">
        <see langword="XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary>Данный член предназначен для поддержки платформы .NET Framework и не должен вызываться напрямую из кода приложения.</summary>
      <param name="writer">
        <see langword="XmlWriter" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.ToByteArray">
      <summary>Преобразует структуру <see cref="T:System.Data.SqlTypes.SqlGuid" /> в массив байтов.</summary>
      <returns>Массив байтов, представляющий <see cref="P:System.Data.SqlTypes.SqlGuid.Value" /> данной структуры <see cref="T:System.Data.SqlTypes.SqlGuid" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.ToSqlBinary">
      <summary>Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlGuid" /> в <see cref="T:System.Data.SqlTypes.SqlBinary" />.</summary>
      <returns>Структура <see langword="SqlBinary" />, содержащая байты структуры <see cref="T:System.Data.SqlTypes.SqlGuid" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.ToSqlString">
      <summary>Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlGuid" /> в <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlString" />, содержащая строковое представление структуры <see cref="T:System.Data.SqlTypes.SqlGuid" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.ToString">
      <summary>Преобразует данную структуру <see cref="T:System.Data.SqlTypes.SqlGuid" /> в <see cref="T:System.String" />.</summary>
      <returns>Структура <see cref="T:System.String" />, содержащая строковое представление структуры <see cref="T:System.Data.SqlTypes.SqlGuid" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlGuid.Value">
      <summary>Получает значение структуры <see cref="T:System.Data.SqlTypes.SqlGuid" />. Это свойство доступно только для чтения.</summary>
      <returns>Структура <see cref="T:System.Guid" />.</returns>
    </member>
    <member name="T:System.Data.SqlTypes.SqlInt16">
      <summary>Представляет 16-разрядное целое число со знаком, сохраняемое в базе данных или извлекаемое из нее.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.#ctor(System.Int16)">
      <summary>Инициализирует новый экземпляр структуры <see cref="T:System.Data.SqlTypes.SqlInt16" /> с использованием предоставленного параметра типа короткого целого.</summary>
      <param name="value">Короткое целое число.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.Add(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>Вычисляет сумму двух операндов <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />, свойство <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> которой содержит сумму двух операндов <see cref="T:System.Data.SqlTypes.SqlInt16" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.BitwiseAnd(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>Выполняет битовую операцию логического умножения операндов <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />, свойство <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> которой содержит результаты битовой операции логического умножения.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.BitwiseOr(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>Вычисляет результат битовой операции OR двух операндов <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />, свойство <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> которой содержит результаты битовой операции логического сложения.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.CompareTo(System.Data.SqlTypes.SqlInt16)">
      <summary>Сравнивает этот экземпляр <see cref="T:System.Data.SqlTypes.SqlInt16" /> с предоставленным <see cref="T:System.Data.SqlTypes.SqlInt16" /> и возвращает сведения об их относительных значениях.</summary>
      <param name="value">Выражение <see cref="T:System.Data.SqlTypes.SqlInt16" /> для сравнения.</param>
      <returns>Число со знаком, представляющее результат сравнения значений экземпляра и объекта.  
  Возвращаемое значение 
  Условие 
  Меньше нуля 
  Этот экземпляр меньше данного объекта.  

  Нуль 
  Этот экземпляр равен данному объекту.  

  Больше нуля 
  Этот экземпляр больше данного объекта 
-или- 
Объект является пустой ссылкой (<see langword="Nothing" /> в Visual Basic).</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.CompareTo(System.Object)">
      <summary>Сравнивает этот экземпляр <see cref="T:System.Data.SqlTypes.SqlInt16" /> с предоставленным <see cref="T:System.Object" /> и возвращает сведения об их относительных значениях.</summary>
      <param name="value">Выражение <see cref="T:System.Object" /> для сравнения.</param>
      <returns>Число со знаком, представляющее результат сравнения значений экземпляра и объекта.  
  Возвращаемое значение 
  Условие 
  Меньше нуля 
  Этот экземпляр меньше данного объекта.  

  Нуль 
  Этот экземпляр равен данному объекту.  

  Больше нуля 
  Этот экземпляр больше данного объекта 
-или- 
объект является пустой ссылкой (<see langword="Nothing" /> в Visual Basic).</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.Divide(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>Делит первый операнд <see cref="T:System.Data.SqlTypes.SqlInt16" /> на второй.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlInt16" />, свойство <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> которой содержит результаты деления.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.Equals(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>Выполняет логическое сравнение двух структур <see cref="T:System.Data.SqlTypes.SqlInt16" />, чтобы определить, равны ли они.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns>
        <see langword="true" />, если эти два значения равны. В противном случае — значение <see langword="false" />. Если один из экземпляров пуст, <see langword="SqlInt16" /> будет иметь значение NULL.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.Equals(System.Object)">
      <summary>Сравнивает заданный объект со свойством <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> объекта <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="value">Сравниваемый объект.</param>
      <returns>
        <see langword="true" />, если объект является экземпляром структуры <see cref="T:System.Data.SqlTypes.SqlInt16" /> и они равны; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.GetHashCode">
      <summary>Возвращает хэш-код данного экземпляра.</summary>
      <returns>Хэш-код в виде 32-разрядного целого числа со знаком.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary>Возвращает XSD (XML-схему) заданного объекта <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</summary>
      <param name="schemaSet">Объект <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
      <returns>Значение <see cref="T:System.String" />, указывающее определение XML-схемы заданного объекта <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.GreaterThan(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>Сравнивает два экземпляра <see cref="T:System.Data.SqlTypes.SqlInt16" />, чтобы определить, что первый объект больше, чем второй.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns>Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр больше второго. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlInt16" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.GreaterThanOrEqual(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>Сравнивает две структуры <see cref="T:System.Data.SqlTypes.SqlInt16" />, чтобы определить, превышает ли первая вторую или равна ли ей.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns>Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр больше второго или равен ему. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlInt16" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlInt16.IsNull">
      <summary>Указывает, имеет ли структура <see cref="T:System.Data.SqlTypes.SqlInt16" /> значение null.</summary>
      <returns>Значение <see langword="true" />, если NULL. В противном случае — значение <see langword="false" />. Дополнительные сведения см. в разделе H*******ling Null Values.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.LessThan(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>Сравнивает два экземпляра <see cref="T:System.Data.SqlTypes.SqlInt16" />, чтобы определить, является ли первый меньшим, чем второй.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns>Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр меньше второго. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlInt16" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.LessThanOrEqual(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>Сравнивает две структуры <see cref="T:System.Data.SqlTypes.SqlInt16" />, чтобы определить, является ли первая меньше или равна второй.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns>Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр меньше второго или ему равен. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlInt16" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt16.MaxValue">
      <summary>Константа, представляющая наибольшее возможное значение <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt16.MinValue">
      <summary>Константа, представляющая наименьшее возможное значение <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.Mod(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>Вычисляет остаток от деления первого операнда <see cref="T:System.Data.SqlTypes.SqlInt16" /> на второй.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />, <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> которой содержит остаток.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.Modulus(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>Делит одно значение <see cref="T:System.Data.SqlTypes.SqlInt16" />на другое и возвращает остаток.</summary>
      <param name="x">Значение <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y">Значение <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns>Остаток, получившийся при делении <paramref name="x" /> на <paramref name="y" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.Multiply(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>Вычисляет произведение двух параметров <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />, <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> которой содержит произведение двух параметров.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.NotEquals(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>Выполняет логическое сравнение двух структур <see cref="T:System.Data.SqlTypes.SqlInt16" /> с целью определить, отличаются ли они.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns>Переменная <see cref="T:System.Data.SqlTypes.SqlBoolean" />, которая принимает значение <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если два экземпляра не равны, или значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />, если они равны. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlInt16" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt16.Null">
      <summary>Представляет значение <see cref="T:System.DBNull" />, которое может быть присвоено данному экземпляру структуры <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.OnesComplement(System.Data.SqlTypes.SqlInt16)">
      <summary>Оператор ~ выполняет битовую операцию дополнения до единицы над операндом <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />, свойство <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> которой содержит дополнение заданной структуры <see cref="T:System.Data.SqlTypes.SqlInt16" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Addition(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>Вычисляет сумму двух операндов <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />, свойство <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> которой содержит сумму двух операндов <see cref="T:System.Data.SqlTypes.SqlInt16" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_BitwiseAnd(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>Выполняет битовую операцию логического умножения операндов <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />, свойство <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> которой содержит результаты битовой операции логического умножения.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_BitwiseOr(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>Вычисляет результат битовой операции OR двух операндов <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />, свойство <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> которой содержит результаты битовой операции логического сложения.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Division(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>Делит первый операнд <see cref="T:System.Data.SqlTypes.SqlInt16" /> на второй.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlInt16" />, свойство <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> которой содержит результаты деления.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Equality(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>Выполняет логическое сравнение двух структур <see cref="T:System.Data.SqlTypes.SqlInt16" />, чтобы определить, равны ли они.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlBoolean" />, которая принимает значение <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если два экземпляра равны, или значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />, если они не равны. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlInt16" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_ExclusiveOr(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>Выполняет битовую операцию исключающего логического сложения с предоставленными параметрами.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />, свойство <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> которой содержит результаты битовой операции исключающего логического сложения.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlInt16">
      <summary>Преобразует предоставленную структуру <see cref="T:System.Data.SqlTypes.SqlBoolean" /> в <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlInt16" />, свойство которой <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> равно свойству <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" /> параметра <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlInt16">
      <summary>Преобразует предоставленную структуру <see cref="T:System.Data.SqlTypes.SqlDecimal" /> в <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlInt16" />, свойство которой <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> равно свойству <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> параметра <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlInt16">
      <summary>Преобразует предоставленную структуру <see cref="T:System.Data.SqlTypes.SqlDouble" /> в <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlInt16" />, свойство <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> которой равно целой части параметра <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlInt16)~System.Int16">
      <summary>Преобразует предоставленную структуру <see cref="T:System.Data.SqlTypes.SqlInt16" /> в короткое целое число.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns>Короткое целое число, значение которого является значением параметра <see cref="T:System.Data.SqlTypes.SqlInt16" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlInt16">
      <summary>Преобразует предоставленную структуру <see cref="T:System.Data.SqlTypes.SqlInt32" /> в <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlInt16" />, свойство <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> которой равно <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> предоставленного параметра <see cref="T:System.Data.SqlTypes.SqlInt32" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlInt16">
      <summary>Преобразует предоставленную структуру <see cref="T:System.Data.SqlTypes.SqlInt64" /> в <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlInt16" />, свойство которой <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> равно свойству <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> параметра <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlInt16">
      <summary>Преобразует предоставленную структуру <see cref="T:System.Data.SqlTypes.SqlMoney" /> в <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlInt16" />, свойство которой <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> равно свойству <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> параметра <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlInt16">
      <summary>Преобразует предоставленную структуру <see cref="T:System.Data.SqlTypes.SqlSingle" /> в <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlInt16" />, свойство <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> которой равно целой части параметра <see cref="T:System.Data.SqlTypes.SqlSingle" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlInt16">
      <summary>Преобразует предоставленный объект <see cref="T:System.Data.SqlTypes.SqlString" /> в <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="x">Объект <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlInt16" />, свойство <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> которой равно значению, представленному параметром объекта <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_GreaterThan(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>Сравнивает два экземпляра <see cref="T:System.Data.SqlTypes.SqlInt16" />, чтобы определить, что первый объект больше, чем второй.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns>Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр больше второго. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlInt16" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>Сравнивает две структуры <see cref="T:System.Data.SqlTypes.SqlInt16" />, чтобы определить, превышает ли первая вторую или равна ли ей.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns>Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр больше второго или равен ему. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlInt16" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Implicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlInt16">
      <summary>Преобразует предоставленную структуру <see cref="T:System.Data.SqlTypes.SqlByte" /> в <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlInt16" />, свойство которой <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> равно свойству <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> параметра <see cref="T:System.Data.SqlTypes.SqlByte" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Implicit(System.Int16)~System.Data.SqlTypes.SqlInt16">
      <summary>Преобразует предоставленное короткое целое число в <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="x">Короткое целое число.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlInt16" /> со значением, равным заданному короткому целому числу.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Inequality(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>Выполняет логическое сравнение двух структур <see cref="T:System.Data.SqlTypes.SqlInt16" /> с целью определить, отличаются ли они.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns>Переменная <see cref="T:System.Data.SqlTypes.SqlBoolean" />, которая принимает значение <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если два экземпляра не равны, или значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />, если они равны. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlInt16" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_LessThan(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>Сравнивает два экземпляра <see cref="T:System.Data.SqlTypes.SqlInt16" />, чтобы определить, является ли первый меньшим, чем второй.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns>Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр меньше второго. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlInt16" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_LessThanOrEqual(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>Сравнивает две структуры <see cref="T:System.Data.SqlTypes.SqlInt16" />, чтобы определить, является ли первая меньше или равна второй.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns>Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр меньше второго или ему равен. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlInt16" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Modulus(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>Вычисляет остаток от деления первого операнда <see cref="T:System.Data.SqlTypes.SqlInt16" /> на второй.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />, <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> которой содержит остаток.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Multiply(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>Вычисляет произведение двух параметров <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />, <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> которой содержит произведение двух параметров.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_OnesComplement(System.Data.SqlTypes.SqlInt16)">
      <summary>Оператор ~ выполняет битовую операцию дополнения до единицы над операндом <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />, свойство <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> которой содержит дополнение заданной структуры <see cref="T:System.Data.SqlTypes.SqlInt16" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Subtraction(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>Вычитает второй параметр <see cref="T:System.Data.SqlTypes.SqlInt16" /> из первого.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />, свойство <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> которой содержит результаты вычитания.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_UnaryNegation(System.Data.SqlTypes.SqlInt16)">
      <summary>Оператор "унарный минус" меняет знак <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> операнда <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />, содержащая противоположное значение.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.Parse(System.String)">
      <summary>Преобразует представление <see cref="T:System.String" /> числа в эквивалентное ему 16-разрядное целое число со знаком.</summary>
      <param name="s">Представление <see langword="String" />, которое необходимо проанализировать.</param>
      <returns>16-разрядное целое число со знаком, эквивалентное значению указанной строки <see cref="T:System.String" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.Subtract(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>Вычитает второй параметр <see cref="T:System.Data.SqlTypes.SqlInt16" /> из первого.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />, свойство <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> которой содержит результаты вычитания.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary>Данный член предназначен для поддержки платформы .NET Framework и не должен вызываться напрямую из кода приложения.</summary>
      <returns>Схема XML, используемая платформой .NET Framework.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary>Данный член предназначен для поддержки платформы .NET Framework и не должен вызываться напрямую из кода приложения.</summary>
      <param name="reader">
        <see langword="XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary>Данный член предназначен для поддержки платформы .NET Framework и не должен вызываться напрямую из кода приложения.</summary>
      <param name="writer">
        <see langword="XmlWriter" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToSqlBoolean">
      <summary>Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlInt16" /> в <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <returns>
        <see langword="true" />, если <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> не равно нулю; <see langword="false" />, если равно нулю; в противном случае — NULL.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToSqlByte">
      <summary>Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlInt16" /> в <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlByte" />, <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> которой равно <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlInt16" />. Если значение <see cref="T:System.Data.SqlTypes.SqlInt16" /> меньше 0 или больше 255, происходит <see cref="T:System.OverflowException" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToSqlDecimal">
      <summary>Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlInt16" /> в <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />, <see langword="Value" /> которой равно значению данной структуры <see cref="T:System.Data.SqlTypes.SqlInt16" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToSqlDouble">
      <summary>Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlInt16" /> в <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlDouble" />, <see langword="Value" /> которой равно значению данной структуры <see cref="T:System.Data.SqlTypes.SqlInt16" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToSqlInt32">
      <summary>Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlInt16" /> в <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlInt32" />, <see langword="Value" /> которой равно значению данной структуры <see cref="T:System.Data.SqlTypes.SqlInt16" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToSqlInt64">
      <summary>Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlInt16" /> в <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlInt64" />, <see langword="Value" /> которой равно значению данной структуры <see cref="T:System.Data.SqlTypes.SqlInt16" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToSqlMoney">
      <summary>Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlInt16" /> в <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlMoney" />, <see langword="Value" /> которой равно значению данной структуры <see cref="T:System.Data.SqlTypes.SqlInt16" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToSqlSingle">
      <summary>Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlInt16" /> в <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlSingle" />, <see langword="Value" /> которой равно значению данной структуры <see cref="T:System.Data.SqlTypes.SqlInt16" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToSqlString">
      <summary>Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlInt16" /> в <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <returns>Объект <see cref="T:System.Data.SqlTypes.SqlString" />, представляющий <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> этого экземпляра <see cref="T:System.Data.SqlTypes.SqlInt16" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToString">
      <summary>Преобразует структуру <see cref="T:System.Data.SqlTypes.SqlInt16" /> в <see cref="T:System.String" />.</summary>
      <returns>Объект <see cref="T:System.String" />, представляющий <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> этого экземпляра <see cref="T:System.Data.SqlTypes.SqlInt16" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlInt16.Value">
      <summary>Получает значение этого экземпляра структуры <see cref="T:System.Data.SqlTypes.SqlInt16" />. Это свойство доступно только для чтения.</summary>
      <returns>Короткое целое число, представляющее значение этой структуры <see cref="T:System.Data.SqlTypes.SqlInt16" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.Xor(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>Выполняет битовую операцию исключающего логического сложения с предоставленными параметрами.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />, содержащая результаты операции исключающего логического сложения.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt16.Zero">
      <summary>Представляет нулевое значение, которое можно присвоить свойству <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> экземпляра структуры <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
    </member>
    <member name="T:System.Data.SqlTypes.SqlInt32">
      <summary>Представляет 32-разрядное целое число со знаком, сохраняемое в базе данных или извлекаемое из нее.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.#ctor(System.Int32)">
      <summary>Выполняет инициализацию нового экземпляра структуры <see cref="T:System.Data.SqlTypes.SqlInt32" /> с использованием предоставленного целого значения.</summary>
      <param name="value">Преобразуемое целое число.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.Add(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>Вычисляет сумму двух заданных структур <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />, свойство <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> которой содержит сумму заданных структур <see cref="T:System.Data.SqlTypes.SqlInt32" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.BitwiseAnd(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>Выполняет битовую операцию логического умножения операндов <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />, содержащая результаты поразрядной операции логического умножения.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.BitwiseOr(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>Выполняет поразрядную операцию логического сложения заданных структур <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />, содержащая результаты поразрядной операции логического сложения.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.CompareTo(System.Data.SqlTypes.SqlInt32)">
      <summary>Сравнивает этот экземпляр <see cref="T:System.Data.SqlTypes.SqlInt32" /> с предоставленным <see cref="T:System.Data.SqlTypes.SqlInt32" /> и возвращает сведения об их относительных значениях.</summary>
      <param name="value">Выражение <see cref="T:System.Data.SqlTypes.SqlInt32" /> для сравнения.</param>
      <returns>Число со знаком, представляющее результат сравнения значений экземпляра и объекта.  
  Возвращаемое значение 
  Условие 
  Меньше нуля 
  Этот экземпляр меньше данного объекта.  

  Нуль 
  Этот экземпляр равен данному объекту.  

  Больше нуля 
  Этот экземпляр больше данного объекта 
- или - 
Объект является пустой ссылкой (<see langword="Nothing" /> в Visual Basic).</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.CompareTo(System.Object)">
      <summary>Сравнивает этот экземпляр <see cref="T:System.Data.SqlTypes.SqlInt32" /> с предоставленным <see cref="T:System.Object" /> и возвращает сведения об их относительных значениях.</summary>
      <param name="value">Выражение <see cref="T:System.Object" /> для сравнения.</param>
      <returns>Число со знаком, представляющее результат сравнения значений экземпляра и объекта.  
  Возвращаемое значение 
  Условие 
  Меньше нуля 
  Этот экземпляр меньше данного объекта.  

  Нуль 
  Этот экземпляр равен данному объекту.  

  Больше нуля 
  Этот экземпляр больше данного объекта 
- или - 
Данный объект является пустой ссылкой (<see langword="Nothing" /> в Visual Basic).</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.Divide(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>Делит первый параметр <see cref="T:System.Data.SqlTypes.SqlInt32" /> на второй.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlInt32" />, свойство <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> которой содержит результаты деления.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.Equals(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>Выполняет логическое сравнение двух параметров <see cref="T:System.Data.SqlTypes.SqlInt32" /> с целью определить, равны ли они.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns>
        <see langword="true" />, если эти два значения равны. В противном случае — значение <see langword="false" />. Если один из экземпляров пуст, <see langword="SqlInt32" /> будет иметь значение NULL.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.Equals(System.Object)">
      <summary>Сравнивает предоставленный параметр объекта со свойством <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> объекта <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <param name="value">Сравниваемый объект.</param>
      <returns>
        <see langword="true" />, если объект является экземпляром структуры <see cref="T:System.Data.SqlTypes.SqlInt32" /> и они равны; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.GetHashCode">
      <summary>Возвращает хэш-код данного экземпляра.</summary>
      <returns>Хэш-код в виде 32-разрядного целого числа со знаком.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary>Возвращает XSD (XML-схему) заданного объекта <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</summary>
      <param name="schemaSet">Объект <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
      <returns>Значение <see langword="string" />, указывающее определение XML-схемы заданного объекта <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.GreaterThan(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>Сравнивает два параметра <see cref="T:System.Data.SqlTypes.SqlInt32" />, чтобы определить, является ли первый большим, чем второй.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns>Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр больше второго. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlInt32" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.GreaterThanOrEqual(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>Сравнивает два параметра <see cref="T:System.Data.SqlTypes.SqlInt32" />, чтобы определить, является ли первый большим, чем второй, или равным ему.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns>Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр больше второго или равен ему. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlInt32" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlInt32.IsNull">
      <summary>Указывает, имеет ли структура <see cref="T:System.Data.SqlTypes.SqlInt32" /> значение null.</summary>
      <returns>Это свойство имеет значение <see langword="true" />, если <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> имеет значение NULL. В противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.LessThan(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>Сравнивает два параметра <see cref="T:System.Data.SqlTypes.SqlInt32" />, чтобы определить, является ли первый меньшим, чем второй.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns>Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр меньше второго. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlInt32" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.LessThanOrEqual(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>Сравнивает два параметра <see cref="T:System.Data.SqlTypes.SqlInt32" />, чтобы определить, является ли первый меньшим, чем второй, или равным ему.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns>Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр меньше второго или ему равен. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlInt32" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt32.MaxValue">
      <summary>Константа, представляющая наибольшее возможное значение <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt32.MinValue">
      <summary>Константа, представляющая наименьшее возможное значение <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.Mod(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>Вычисляет остаток после деления первого параметра <see cref="T:System.Data.SqlTypes.SqlInt32" /> на второй.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />, <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> которой содержит остаток.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.Modulus(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>Делит одно значение <see cref="T:System.Data.SqlTypes.SqlInt32" />на другое и возвращает остаток.</summary>
      <param name="x">Значение <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y">Значение <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns>Остаток, получившийся при делении <paramref name="x" /> на <paramref name="y" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.Multiply(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>Вычисляет произведение двух параметров <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />, <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> которой содержит произведение двух параметров.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.NotEquals(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>Выполняет логическое сравнение двух параметров <see cref="T:System.Data.SqlTypes.SqlInt32" /> с целью определить, что они не равны.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns>Переменная <see cref="T:System.Data.SqlTypes.SqlBoolean" />, которая принимает значение <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если два экземпляра не равны, или значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />, если они равны. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlInt32" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt32.Null">
      <summary>Представляет значение <see cref="T:System.DBNull" />, которое может быть присвоено данному экземпляру класса <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.OnesComplement(System.Data.SqlTypes.SqlInt32)">
      <summary>Выполняет битовую операцию дополнения до единицы над заданной структурой <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />, содержащая результаты операции дополнения до единицы.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Addition(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>Вычисляет сумму двух заданных структур <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />, свойство <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> которой содержит сумму заданных структур <see cref="T:System.Data.SqlTypes.SqlInt32" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_BitwiseAnd(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>Выполняет битовую операцию логического умножения операндов <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />, содержащая результаты поразрядной операции логического умножения.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_BitwiseOr(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>Выполняет поразрядную операцию логического сложения заданных структур <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />, содержащая результаты поразрядной операции логического сложения.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Division(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>Делит первый параметр <see cref="T:System.Data.SqlTypes.SqlInt32" /> на второй.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlInt32" />, свойство <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> которой содержит результаты деления.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Equality(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>Выполняет логическое сравнение двух параметров <see cref="T:System.Data.SqlTypes.SqlInt32" /> с целью определить, равны ли они.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlBoolean" />, которая принимает значение <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если два экземпляра равны, или значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />, если они не равны. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlInt32" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_ExclusiveOr(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>Выполняет битовую операцию исключающего логического сложения с заданными структурами <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />, содержащая результаты битовой операции исключающего логического сложения.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlInt32">
      <summary>Преобразует предоставленное <see cref="T:System.Data.SqlTypes.SqlBoolean" /> в <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlInt32" />, свойство которой <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> равно свойству <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" /> параметра <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlInt32">
      <summary>Преобразует предоставленную структуру <see cref="T:System.Data.SqlTypes.SqlDecimal" /> в <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlInt32" />, свойство которой <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> равно свойству <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> параметра <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlInt32">
      <summary>Преобразует предоставленное <see cref="T:System.Data.SqlTypes.SqlDouble" /> в <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlInt32" />, свойство <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> которой равно целой части параметра <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Explicit(System.Data.SqlTypes.SqlInt32)~System.Int32">
      <summary>Преобразует предоставленную структуру <see cref="T:System.Data.SqlTypes.SqlInt32" /> в целое число.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns>Преобразованное целое значение.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Explicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlInt32">
      <summary>Преобразует предоставленное <see cref="T:System.Data.SqlTypes.SqlInt64" /> в <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlInt32" />, свойство которой <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> равно свойству <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> параметра <see langword="SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Explicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlInt32">
      <summary>Преобразует предоставленную структуру <see cref="T:System.Data.SqlTypes.SqlMoney" /> в <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlInt32" />, свойство которой <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> равно свойству <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> параметра <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlInt32">
      <summary>Преобразует предоставленное <see cref="T:System.Data.SqlTypes.SqlSingle" /> в <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlInt32" />, свойство <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> которой равно целой части параметра <see cref="T:System.Data.SqlTypes.SqlSingle" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlInt32">
      <summary>Преобразует предоставленный объект <see cref="T:System.Data.SqlTypes.SqlString" /> в <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <param name="x">Объект <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlInt32" />, свойство <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> которой равно значению, представленному параметром <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_GreaterThan(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>Сравнивает два параметра <see cref="T:System.Data.SqlTypes.SqlInt32" />, чтобы определить, является ли первый большим, чем второй.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns>Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр больше второго. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlInt32" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>Сравнивает два параметра <see cref="T:System.Data.SqlTypes.SqlInt32" />, чтобы определить, является ли первый большим, чем второй, или равным ему.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns>Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр больше второго или равен ему. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlInt32" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Implicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlInt32">
      <summary>Преобразует предоставленное свойство <see cref="T:System.Data.SqlTypes.SqlByte" /> в <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlInt32" />, свойство которой <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> равно свойству <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> параметра <see cref="T:System.Data.SqlTypes.SqlByte" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Implicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlInt32">
      <summary>Преобразует предоставленное <see cref="T:System.Data.SqlTypes.SqlInt16" /> в <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlInt32" />, свойство которой <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> равно свойству <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> параметра <see cref="T:System.Data.SqlTypes.SqlInt16" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Implicit(System.Int32)~System.Data.SqlTypes.SqlInt32">
      <summary>Преобразует предоставленное целое число в <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <param name="x">Целочисленное значение.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlInt32" />, свойство Value которой равно целочисленному параметру.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Inequality(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>Выполняет логическое сравнение двух параметров <see cref="T:System.Data.SqlTypes.SqlInt32" /> с целью определить, отличаются ли они.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns>Переменная <see cref="T:System.Data.SqlTypes.SqlBoolean" />, которая принимает значение <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если два экземпляра не равны, или значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />, если они равны. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlInt32" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_LessThan(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>Сравнивает два параметра <see cref="T:System.Data.SqlTypes.SqlInt32" />, чтобы определить, является ли первый меньшим, чем второй.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns>Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр меньше второго. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlInt32" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_LessThanOrEqual(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>Сравнивает два параметра <see cref="T:System.Data.SqlTypes.SqlInt32" />, чтобы определить, является ли первый меньшим, чем второй, или равным ему.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns>Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр меньше второго или ему равен. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlInt32" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Modulus(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>Вычисляет остаток после деления первого параметра <see cref="T:System.Data.SqlTypes.SqlInt32" /> на второй.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />, <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> которой содержит остаток.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Multiply(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>Вычисляет произведение двух параметров <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />, <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> которой содержит произведение двух параметров.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_OnesComplement(System.Data.SqlTypes.SqlInt32)">
      <summary>Выполняет битовую операцию дополнения до единицы над заданной структурой <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />, содержащая результаты операции дополнения до единицы.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Subtraction(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>Вычитает второй параметр <see cref="T:System.Data.SqlTypes.SqlInt32" /> из первого.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />, свойство <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> которой содержит результаты вычитания.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_UnaryNegation(System.Data.SqlTypes.SqlInt32)">
      <summary>Отрицает <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> операнда <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />, содержащая противоположное значение.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.Parse(System.String)">
      <summary>Преобразует представление <see cref="T:System.String" /> числа в эквивалентное ему 32-разрядное целое число со знаком.</summary>
      <param name="s">Представление <see cref="T:System.String" />, которое необходимо проанализировать.</param>
      <returns>Эквивалент 32-разрядного целого числа со знаком значению, содержащемуся в заданном <see cref="T:System.String" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.Subtract(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>Вычитает второй параметр <see cref="T:System.Data.SqlTypes.SqlInt32" /> из первого.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />, свойство <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> которой содержит результаты вычитания.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary>Данный член предназначен для поддержки платформы .NET Framework и не должен вызываться напрямую из кода приложения.</summary>
      <returns>Объект <see langword="XmlSchema" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary>Данный член предназначен для поддержки платформы .NET Framework и не должен вызываться напрямую из кода приложения.</summary>
      <param name="reader">
        <see langword="XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary>Данный член предназначен для поддержки платформы .NET Framework и не должен вызываться напрямую из кода приложения.</summary>
      <param name="writer">
        <see langword="XmlWriter" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToSqlBoolean">
      <summary>Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlInt32" /> в <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <returns>
        <see langword="true" />, если <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> не равно нулю; <see langword="false" />, если равно нулю; в противном случае — NULL.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToSqlByte">
      <summary>Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlInt32" /> в <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlByte" />, <see langword="Value" /> которой равно <see langword="Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlInt32" />. Если значение <see langword="SqlInt32" /> меньше 0 или больше 255, происходит <see cref="T:System.OverflowException" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToSqlDecimal">
      <summary>Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlInt32" /> в <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />, равная значению данной структуры <see cref="T:System.Data.SqlTypes.SqlInt32" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToSqlDouble">
      <summary>Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlInt32" /> в <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlDouble" />, равная значению данной структуры <see cref="T:System.Data.SqlTypes.SqlInt32" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToSqlInt16">
      <summary>Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlInt32" /> в <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlInt16" />, равная значению данной структуры <see cref="T:System.Data.SqlTypes.SqlInt32" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToSqlInt64">
      <summary>Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlInt32" /> в <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlInt64" />, равная значению данной структуры <see cref="T:System.Data.SqlTypes.SqlInt32" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToSqlMoney">
      <summary>Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlInt32" /> в <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlMoney" />, равная значению данной структуры <see cref="T:System.Data.SqlTypes.SqlInt32" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToSqlSingle">
      <summary>Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlInt32" /> в <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlSingle" />, равная значению данной структуры <see cref="T:System.Data.SqlTypes.SqlInt32" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToSqlString">
      <summary>Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlInt32" /> в <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlString" />, равная значению данной структуры <see cref="T:System.Data.SqlTypes.SqlInt32" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToString">
      <summary>Преобразует структуру <see cref="T:System.Data.SqlTypes.SqlInt32" /> в <see cref="T:System.String" />.</summary>
      <returns>Структура <see cref="T:System.String" />, равная значению данной структуры <see cref="T:System.Data.SqlTypes.SqlInt32" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlInt32.Value">
      <summary>Получает значение этой структуры <see cref="T:System.Data.SqlTypes.SqlInt32" />. Это свойство доступно только для чтения.</summary>
      <returns>Целое число, представляющее значение этой структуры <see cref="T:System.Data.SqlTypes.SqlInt32" />.</returns>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">Данное свойство содержит <see cref="F:System.Data.SqlTypes.SqlInt32.Null" />.</exception>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.Xor(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>Выполняет битовую операцию исключающего логического сложения с заданными структурами <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlInt32" />, содержащая результаты битовой операции исключающего логического сложения.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt32.Zero">
      <summary>Представляет нулевое значение, которое можно присвоить свойству <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> экземпляра структуры <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
    </member>
    <member name="T:System.Data.SqlTypes.SqlInt64">
      <summary>Представляет 64-разрядное целое число со знаком, сохраняемое в базе данных или извлекаемое из нее.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.#ctor(System.Int64)">
      <summary>Инициализирует новый экземпляр структуры <see cref="T:System.Data.SqlTypes.SqlInt64" /> с использованием предоставленного длинного целого значения.</summary>
      <param name="value">Длинное целое число.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.Add(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>Вычисляет сумму двух параметров <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlInt64" />, <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> которой равно сумме двух параметров <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.BitwiseAnd(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>Выполняет битовую операцию логического умножения операндов <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />, содержащая результаты поразрядной операции логического умножения.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.BitwiseOr(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>Вычисляет результат битовой операции OR двух операндов <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />, содержащая результаты поразрядной операции логического сложения.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.CompareTo(System.Data.SqlTypes.SqlInt64)">
      <summary>Сравнивает этот экземпляр <see cref="T:System.Data.SqlTypes.SqlInt64" /> с предоставленным <see cref="T:System.Data.SqlTypes.SqlInt64" /> и возвращает сведения об их относительных значениях.</summary>
      <param name="value">Выражение <see cref="T:System.Data.SqlTypes.SqlInt64" /> для сравнения.</param>
      <returns>Число со знаком, представляющее результат сравнения значений экземпляра и объекта.  
  Возвращаемое значение 
  Условие 
  Меньше нуля 
  Этот экземпляр меньше данного объекта.  

  Нуль 
  Этот экземпляр равен данному объекту.  

  Больше нуля 
  Этот экземпляр больше данного объекта 
-или- 
Данный объект является пустой ссылкой (<see langword="Nothing" /> в Visual Basic).</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.CompareTo(System.Object)">
      <summary>Сравнивает этот экземпляр <see cref="T:System.Data.SqlTypes.SqlInt64" /> с предоставленным <see cref="T:System.Object" /> и возвращает сведения об их относительных значениях.</summary>
      <param name="value">Выражение <see cref="T:System.Object" /> для сравнения.</param>
      <returns>Число со знаком, представляющее результат сравнения значений экземпляра и объекта.  
  Возвращаемое значение 
  Условие 
  Меньше нуля 
  Этот экземпляр меньше данного объекта.  

  Нуль 
  Этот экземпляр равен данному объекту.  

  Больше нуля 
  Этот экземпляр больше данного объекта 
-или- 
Данный объект является пустой ссылкой (<see langword="Nothing" /> в Visual Basic).</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.Divide(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>Делит первый параметр <see cref="T:System.Data.SqlTypes.SqlInt64" /> на второй.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlInt64" />, свойство <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> которой содержит результаты операции деления.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.Equals(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>Выполняет логическое сравнение двух параметров <see cref="T:System.Data.SqlTypes.SqlInt64" /> с целью определить, равны ли они.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns>
        <see langword="true" />, если эти два значения равны. В противном случае — значение <see langword="false" />. Если один из экземпляров пуст, <see langword="SqlInt64" /> будет иметь значение NULL.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.Equals(System.Object)">
      <summary>Сравнивает предоставленный параметр объекта со свойством <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> объекта <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="value">Сравниваемый объект.</param>
      <returns>
        <see langword="true" />, если объект является экземпляром структуры <see cref="T:System.Data.SqlTypes.SqlInt64" /> и они равны; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.GetHashCode">
      <summary>Возвращает хэш-код данного экземпляра.</summary>
      <returns>Хэш-код в виде 32-разрядного целого числа со знаком.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary>Возвращает XSD (XML-схему) заданного объекта <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</summary>
      <param name="schemaSet">Объект <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
      <returns>Значение <see langword="string" />, указывающее определение XML-схемы заданного объекта <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.GreaterThan(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>Выполняет логическое сравнение двух параметров <see cref="T:System.Data.SqlTypes.SqlInt64" />, чтобы определить, больше ли первый, чем второй.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns>Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр больше второго. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlInt64" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.GreaterThanOrEqual(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>Выполняет логическое сравнение двух параметров <see cref="T:System.Data.SqlTypes.SqlInt64" />, чтобы определить, равны ли они, или же первый параметр больше второго.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns>Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр больше второго или равен ему. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlInt64" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlInt64.IsNull">
      <summary>Получает логическое значение, показывающее, имеет ли данная структура <see cref="T:System.Data.SqlTypes.SqlInt64" /> значение NULL.</summary>
      <returns>Значение <see langword="true" />, если NULL. В противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.LessThan(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>Выполняет логическое сравнение двух параметров <see cref="T:System.Data.SqlTypes.SqlInt64" />, чтобы определить, меньше ли первый, чем второй.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns>Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр меньше второго. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlInt64" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.LessThanOrEqual(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>Выполняет логическое сравнение двух параметров <see cref="T:System.Data.SqlTypes.SqlInt64" /> с целью определить, верно ли, что первый параметр меньше второго или равен ему.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns>Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр меньше второго или ему равен. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlInt64" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt64.MaxValue">
      <summary>Константа, представляющая наибольшее возможное значение структуры <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt64.MinValue">
      <summary>Константа, представляющая наименьшее возможное значение структуры <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.Mod(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>Вычисляет остаток после деления первого параметра <see cref="T:System.Data.SqlTypes.SqlInt64" /> на второй.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlInt64" />, свойство <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> которой содержит остаток.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.Modulus(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>Делит одно значение <see cref="T:System.Data.SqlTypes.SqlInt64" />на другое и возвращает остаток.</summary>
      <param name="x">Значение <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y">Значение <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns>Остаток, получившийся при делении <paramref name="x" /> на <paramref name="y" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.Multiply(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>Вычисляет произведение двух параметров <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlInt64" />, <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> которой равно произведению двух параметров <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.NotEquals(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>Выполняет логическое сравнение двух параметров SqlInt64 с целью определить, верно ли, что они не равны.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns>Переменная <see cref="T:System.Data.SqlTypes.SqlBoolean" />, которая принимает значение <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если два экземпляра не равны, или значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />, если они равны. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlInt64" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt64.Null">
      <summary>Представляет значение <see cref="T:System.DBNull" />, которое может быть присвоено данному экземпляру структуры <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.OnesComplement(System.Data.SqlTypes.SqlInt64)">
      <summary>Выполняет битовую операцию дополнения до единицы над своим операндом <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlInt64" />, <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> которой равно дополнению до единицы параметра <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Addition(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>Вычисляет сумму двух параметров <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlInt64" />, <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> которой равно сумме двух параметров <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_BitwiseAnd(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>Выполняет битовую операцию логического умножения операндов <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />, содержащая результаты поразрядной операции логического умножения.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_BitwiseOr(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>Вычисляет результат битовой операции OR двух операндов <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />, содержащая результаты поразрядной операции логического сложения.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Division(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>Делит первый параметр <see cref="T:System.Data.SqlTypes.SqlInt64" /> на второй.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlInt64" />, свойство <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> которой содержит результаты операции деления.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Equality(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>Выполняет логическое сравнение двух параметров <see cref="T:System.Data.SqlTypes.SqlInt64" /> с целью определить, равны ли они.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlBoolean" />, которая принимает значение <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если два экземпляра равны, или значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />, если они не равны. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlInt64" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_ExclusiveOr(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>Выполняет битовую операцию исключающего логического сложения с предоставленными параметрами.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />, содержащая результаты битовой операции исключающего логического сложения.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlInt64">
      <summary>Преобразует предоставленный параметр <see cref="T:System.Data.SqlTypes.SqlBoolean" /> в <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x">Преобразуемая структура <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlInt64" />, свойство которой <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> равно свойству <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" /> параметра <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlInt64">
      <summary>Преобразует предоставленный параметр <see cref="T:System.Data.SqlTypes.SqlDecimal" /> в <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x">Преобразуемая структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlInt64" />, свойство <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> которой равно целой части параметра <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlInt64">
      <summary>Преобразует предоставленную структуру <see cref="T:System.Data.SqlTypes.SqlDouble" /> в <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x">Преобразуемая структура <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlInt64" />, свойство <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> которой равно целой части параметра <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlInt64)~System.Int64">
      <summary>Преобразует параметр <see cref="T:System.Data.SqlTypes.SqlInt64" /> в значение типа LONG.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns>Новое значение типа LONG, равное <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlInt64">
      <summary>Преобразует предоставленный параметр <see cref="T:System.Data.SqlTypes.SqlMoney" /> в <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x">Преобразуемая структура <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlInt64" />, свойство <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> которой равно целой части параметра <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlInt64">
      <summary>Преобразует предоставленный параметр <see cref="T:System.Data.SqlTypes.SqlSingle" /> в <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x">Преобразуемая структура <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlInt64" />, свойство <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> которой содержит целую часть параметра <see cref="T:System.Data.SqlTypes.SqlSingle" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlInt64">
      <summary>Преобразует предоставленный параметр <see cref="T:System.Data.SqlTypes.SqlString" /> в <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x">Преобразуемый объект <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlInt64" />, <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> которой равно значению, представленному параметром <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_GreaterThan(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>Выполняет логическое сравнение двух параметров <see cref="T:System.Data.SqlTypes.SqlInt64" />, чтобы определить, больше ли первый, чем второй.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns>Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр больше второго. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlInt64" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>Выполняет логическое сравнение двух параметров <see cref="T:System.Data.SqlTypes.SqlInt64" />, чтобы определить, равны ли они, или же первый параметр больше второго.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns>Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр больше второго или равен ему. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlInt64" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Implicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlInt64">
      <summary>Преобразует предоставленный параметр <see cref="T:System.Data.SqlTypes.SqlByte" /> в <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x">Преобразуемая структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlInt64" />, свойство которой <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> равно свойству <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> параметра <see cref="T:System.Data.SqlTypes.SqlByte" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Implicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlInt64">
      <summary>Преобразует предоставленный параметр <see cref="T:System.Data.SqlTypes.SqlInt16" /> в <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x">Преобразуемая структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlInt64" />, свойство которой <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> равно свойству <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> параметра <see cref="T:System.Data.SqlTypes.SqlInt16" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Implicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlInt64">
      <summary>Преобразует предоставленный параметр <see cref="T:System.Data.SqlTypes.SqlInt32" /> в <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x">Преобразуемая структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlInt64" />, свойство которой <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> равно свойству <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> параметра <see cref="T:System.Data.SqlTypes.SqlInt32" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Implicit(System.Int64)~System.Data.SqlTypes.SqlInt64">
      <summary>Преобразует параметр типа LONG в <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x">Длинное целое значение.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlInt64" />, <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> которой равно значению параметра типа LONG.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Inequality(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>Выполняет логическое сравнение двух параметров SqlInt64 с целью определить, верно ли, что они не равны.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns>Переменная <see cref="T:System.Data.SqlTypes.SqlBoolean" />, которая принимает значение <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если два экземпляра не равны, или значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />, если они равны. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlInt64" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_LessThan(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>Выполняет логическое сравнение двух параметров <see cref="T:System.Data.SqlTypes.SqlInt64" />, чтобы определить, меньше ли первый, чем второй.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns>Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр меньше второго. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlInt64" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_LessThanOrEqual(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>Выполняет логическое сравнение двух параметров <see cref="T:System.Data.SqlTypes.SqlInt64" /> с целью определить, верно ли, что первый параметр меньше второго или равен ему.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns>Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр меньше второго или ему равен. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlInt64" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Modulus(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>Вычисляет остаток после деления первого параметра <see cref="T:System.Data.SqlTypes.SqlInt64" /> на второй.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlInt64" />, свойство <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> которой содержит остаток.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Multiply(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>Вычисляет произведение двух параметров <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlInt64" />, <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> которой равно произведению двух параметров <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_OnesComplement(System.Data.SqlTypes.SqlInt64)">
      <summary>Выполняет битовую операцию дополнения до единицы над своим операндом <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlInt64" />, <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> которой равно дополнению до единицы параметра <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Subtraction(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>Вычитает второй параметр <see cref="T:System.Data.SqlTypes.SqlInt64" /> из первого.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlInt64" />, свойство <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> которой равно результатам операции вычитания.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_UnaryNegation(System.Data.SqlTypes.SqlInt64)">
      <summary>Оператор "унарный минус" меняет знак <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> операнда <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />, <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> которой равно инвертированному <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> параметра <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.Parse(System.String)">
      <summary>Преобразует представление <see cref="T:System.String" /> числа в эквивалентное ему 64-разрядное целое число со знаком.</summary>
      <param name="s">Представление <see cref="T:System.String" />, которое необходимо проанализировать.</param>
      <returns>Эквивалент 64-разрядного целого числа со знаком значению, содержащемуся в заданном <see cref="T:System.String" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.Subtract(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>Вычитает второй параметр <see cref="T:System.Data.SqlTypes.SqlInt64" /> из первого.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlInt64" />, свойство <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> которой равно результатам операции вычитания.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary>Данный член предназначен для поддержки платформы .NET Framework и не должен вызываться напрямую из кода приложения.</summary>
      <returns>Объект <see langword="XmlSchema" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary>Данный член предназначен для поддержки платформы .NET Framework и не должен вызываться напрямую из кода приложения.</summary>
      <param name="reader">
        <see langword="XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary>Данный член предназначен для поддержки платформы .NET Framework и не должен вызываться напрямую из кода приложения.</summary>
      <param name="writer">
        <see langword="XmlWriter" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToSqlBoolean">
      <summary>Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlInt64" /> в <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <returns>
        <see langword="true" />, если <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> не равно нулю; <see langword="false" />, если равно нулю; в противном случае — NULL.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToSqlByte">
      <summary>Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlInt64" /> в <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlByte" />, <see langword="Value" /> которой равно <see langword="Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToSqlDecimal">
      <summary>Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlInt64" /> в <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />, равная значению данной структуры <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToSqlDouble">
      <summary>Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlInt64" /> в <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlDouble" />, равная значению данной структуры <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToSqlInt16">
      <summary>Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlInt64" /> в <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlInt16" />, равная значению данной структуры <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToSqlInt32">
      <summary>Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlInt64" /> в <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlInt64" />, равная значению данной структуры <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToSqlMoney">
      <summary>Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlInt64" /> в <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlMoney" />, равная значению данной структуры <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToSqlSingle">
      <summary>Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlInt64" /> в <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlSingle" />, равная значению данной структуры <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToSqlString">
      <summary>Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlInt64" /> в <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <returns>Объект <see cref="T:System.Data.SqlTypes.SqlString" />, представляющий значение данной структуры <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToString">
      <summary>Преобразует этот экземпляр <see cref="T:System.Data.SqlTypes.SqlInt64" /> в <see cref="T:System.String" />.</summary>
      <returns>Объект <see cref="T:System.String" />, представляющий значение данной структуры <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlInt64.Value">
      <summary>Получает значение этой структуры <see cref="T:System.Data.SqlTypes.SqlInt64" />. Это свойство доступно только для чтения.</summary>
      <returns>Длинное целое число, представляющее значение данной структуры <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.Xor(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>Выполняет битовую операцию исключающего логического сложения с предоставленными параметрами.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlInt64" />, содержащая результаты битовой операции исключающего логического сложения.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt64.Zero">
      <summary>Представляет нулевое значение, которое можно присвоить свойству <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> экземпляра структуры <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
    </member>
    <member name="T:System.Data.SqlTypes.SqlMoney">
      <summary>Представляет значение валюты в диапазоне от –2 63 (или –922 337 203 685 477,5808) до 2 63 –1 (или +922 337 203 685 477,5807) с точностью до десятитысячных единицы валюты, сохраняемое в базе данных или извлекаемое из нее.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.#ctor(System.Decimal)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.SqlTypes.SqlMoney" /> заданным значением <see cref="T:System.Decimal" />.</summary>
      <param name="value">Денежное значение для инициализации.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.#ctor(System.Double)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.SqlTypes.SqlMoney" /> с заданным значением типа double.</summary>
      <param name="value">Денежное значение для инициализации.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.#ctor(System.Int32)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.SqlTypes.SqlMoney" /> с заданным целым значением.</summary>
      <param name="value">Денежное значение для инициализации.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.#ctor(System.Int64)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.SqlTypes.SqlMoney" /> с заданным значением типа длинное целое.</summary>
      <param name="value">Денежное значение для инициализации.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.Add(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>Вычисляет сумму двух параметров <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlMoney" />, <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> которой содержит сумму двух параметров <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.CompareTo(System.Data.SqlTypes.SqlMoney)">
      <summary>Сравнивает этот экземпляр <see cref="T:System.Data.SqlTypes.SqlMoney" /> с предоставленным <see cref="T:System.Data.SqlTypes.SqlMoney" /> и возвращает сведения об их относительных значениях.</summary>
      <param name="value">Выражение <see cref="T:System.Data.SqlTypes.SqlMoney" /> для сравнения.</param>
      <returns>Число со знаком, представляющее результат сравнения значений экземпляра и объекта.  
  Возвращаемое значение 
  Условие 
  Меньше нуля 
  Этот экземпляр меньше данного объекта.  

  Нуль 
  Этот экземпляр равен данному объекту.  

  Больше нуля 
  Этот экземпляр больше данного объекта 
- или - 
Объект является пустой ссылкой (<see langword="Nothing" /> в Visual Basic).</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.CompareTo(System.Object)">
      <summary>Сравнивает этот экземпляр <see cref="T:System.Data.SqlTypes.SqlMoney" /> с предоставленным <see cref="T:System.Object" /> и возвращает сведения об их относительных значениях.</summary>
      <param name="value">Выражение <see cref="T:System.Object" /> для сравнения.</param>
      <returns>Число со знаком, представляющее результат сравнения значений экземпляра и объекта.  
  Возвращаемое значение 
  Условие 
  Меньше нуля 
  Этот экземпляр меньше данного объекта.  

  Нуль 
  Этот экземпляр равен данному объекту.  

  Больше нуля 
  Этот экземпляр больше данного объекта 
-или- 
Объект является пустой ссылкой (<see langword="Nothing" /> в Visual Basic).</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.Divide(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>Оператор деления делит первый параметр <see cref="T:System.Data.SqlTypes.SqlMoney" /> на второй.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlMoney" />, <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> которой содержит результаты деления.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.Equals(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>Выполняет логическое сравнение двух параметров <see cref="T:System.Data.SqlTypes.SqlMoney" /> с целью определить, равны ли они.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns>
        <see langword="true" />, если эти два значения равны. В противном случае — значение <see langword="false" />. Если один из экземпляров пуст, <see langword="SqlMoney" /> будет иметь значение NULL.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.Equals(System.Object)">
      <summary>Сравнивает предоставленный параметр объекта со свойством <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> объекта <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <param name="value">Сравниваемый объект.</param>
      <returns>Значение <see langword="true" />, если объект является экземпляром структуры <see cref="T:System.Data.SqlTypes.SqlMoney" /> и они равны; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.GetHashCode">
      <summary>Получает хэш-код для этого экземпляра.</summary>
      <returns>Хэш-код в виде 32-разрядного целого числа со знаком.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary>Возвращает XSD (XML-схему) заданного объекта <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</summary>
      <param name="schemaSet">Объект <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
      <returns>Значение <see langword="string" />, указывающее определение XML-схемы заданного объекта <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.GreaterThan(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>Выполняет логическое сравнение двух параметров <see cref="T:System.Data.SqlTypes.SqlMoney" />, чтобы определить, больше ли первый, чем второй.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns>Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр больше второго. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlMoney" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.GreaterThanOrEqual(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>Выполняет логическое сравнение двух параметров <see cref="T:System.Data.SqlTypes.SqlMoney" />, чтобы определить, равны ли они, или же первый параметр больше второго.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns>Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр больше второго или равен ему. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlMoney" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlMoney.IsNull">
      <summary>Возвращает логическое значение, показывающее, имеет ли данная структура <see cref="T:System.Data.SqlTypes.SqlMoney" /> значение NULL.</summary>
      <returns>Значение <see langword="true" />, если NULL. В противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.LessThan(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>Выполняет логическое сравнение двух параметров <see cref="T:System.Data.SqlTypes.SqlMoney" />, чтобы определить, меньше ли первый, чем второй.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns>Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр меньше второго. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlMoney" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.LessThanOrEqual(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>Выполняет логическое сравнение двух параметров <see cref="T:System.Data.SqlTypes.SqlMoney" /> с целью определить, верно ли, что первый параметр меньше второго или равен ему.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns>Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр меньше второго или ему равен. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlMoney" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlMoney.MaxValue">
      <summary>Представляет максимальное значение, которое можно назначить свойству <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> экземпляра класса <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlMoney.MinValue">
      <summary>Представляет минимальное значение, которое можно назначить свойству <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> экземпляра класса <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.Multiply(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>Оператор умножения вычисляет произведение двух параметров <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlMoney" />, <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> которой содержит результат умножения.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.NotEquals(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>Выполняет логическое сравнение двух параметров <see cref="T:System.Data.SqlTypes.SqlMoney" /> с целью определить, что они не равны.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns>Переменная <see cref="T:System.Data.SqlTypes.SqlBoolean" />, которая принимает значение <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если два экземпляра не равны, или значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />, если они равны. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlMoney" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlMoney.Null">
      <summary>Представляет значение <see cref="T:System.DBNull" />, которое может быть присвоено данному экземпляру класса <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Addition(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>Вычисляет сумму двух параметров <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlMoney" />, <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> которой содержит сумму двух параметров <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Division(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>Оператор деления делит первый параметр <see cref="T:System.Data.SqlTypes.SqlMoney" /> на второй.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlMoney" />, <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> которой содержит результаты деления.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Equality(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>Выполняет логическое сравнение двух параметров <see cref="T:System.Data.SqlTypes.SqlMoney" /> с целью определить, равны ли они.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlBoolean" />, которая принимает значение <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если два экземпляра равны, или значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />, если они не равны. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlMoney" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlMoney">
      <summary>Этот неявный оператор преобразует предоставленный параметр <see cref="T:System.Data.SqlTypes.SqlBoolean" /> в <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <param name="x">Преобразуемая структура <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlMoney" />, свойство которой <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> равно свойству <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" /> параметра <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlMoney">
      <summary>Этот оператор преобразует предоставленный параметр <see cref="T:System.Data.SqlTypes.SqlDecimal" /> в <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <param name="x">Преобразуемая структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlMoney" />, свойство <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> которой равно свойству <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> параметра <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlMoney">
      <summary>Этот оператор преобразует предоставленный параметр <see cref="T:System.Data.SqlTypes.SqlDouble" /> в <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <param name="x">Преобразуемая структура <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlMoney" />, свойство <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> которой равно свойству <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> параметра <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Explicit(System.Data.SqlTypes.SqlMoney)~System.Decimal">
      <summary>Преобразует заданную структуру <see cref="T:System.Data.SqlTypes.SqlMoney" /> в <see cref="T:System.Decimal" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns>Новая структура <see cref="T:System.Decimal" />, значение которой равно <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> параметра <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlMoney">
      <summary>Этот оператор преобразует предоставленный параметр <see cref="T:System.Data.SqlTypes.SqlSingle" /> в <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <param name="x">Преобразуемая структура <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlMoney" />, свойство <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> которой равно свойству <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> параметра <see cref="T:System.Data.SqlTypes.SqlSingle" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlMoney">
      <summary>Этот оператор преобразует параметр <see cref="T:System.Data.SqlTypes.SqlString" /> в <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <param name="x">Преобразуемый объект <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlMoney" />, свойство <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> которой равно значению, представленному параметром <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Explicit(System.Double)~System.Data.SqlTypes.SqlMoney">
      <summary>Этот неявный оператор преобразует предоставленный параметр <see cref="T:System.Data.SqlTypes.SqlDouble" /> в <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <param name="x">Преобразуемая структура <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlMoney" />, свойство которой <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> равно свойству <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" /> параметра <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_GreaterThan(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>Выполняет логическое сравнение двух параметров <see cref="T:System.Data.SqlTypes.SqlMoney" />, чтобы определить, больше ли первый, чем второй.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns>Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр больше второго. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlMoney" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>Выполняет логическое сравнение двух параметров <see cref="T:System.Data.SqlTypes.SqlMoney" />, чтобы определить, равны ли они, или же первый параметр больше второго.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns>Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр больше второго или равен ему. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlMoney" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Implicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlMoney">
      <summary>Этот неявный оператор преобразует предоставленный параметр <see cref="T:System.Data.SqlTypes.SqlByte" /> в <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <param name="x">Преобразуемая структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlMoney" />, свойство которой <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> равно свойству <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> параметра <see cref="T:System.Data.SqlTypes.SqlByte" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Implicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlMoney">
      <summary>Этот неявный оператор преобразует предоставленный параметр <see cref="T:System.Data.SqlTypes.SqlInt16" /> в <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <param name="x">Преобразуемая структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlMoney" />, свойство <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> которой равно свойству <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> параметра <see cref="T:System.Data.SqlTypes.SqlInt16" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Implicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlMoney">
      <summary>Этот неявный оператор преобразует предоставленный параметр <see cref="T:System.Data.SqlTypes.SqlInt32" /> в <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <param name="x">Преобразуемая структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlMoney" />, свойство <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> которой равно свойству <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> параметра <see cref="T:System.Data.SqlTypes.SqlInt32" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Implicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlMoney">
      <summary>Этот неявный оператор преобразует предоставленный параметр <see cref="T:System.Data.SqlTypes.SqlInt64" /> в <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <param name="x">Преобразуемая структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlMoney" />, свойство <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> которой равно свойству <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> параметра <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Implicit(System.Decimal)~System.Data.SqlTypes.SqlMoney">
      <summary>Преобразует параметр <see cref="T:System.Decimal" /> в <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <param name="x">Преобразуемое значение <see cref="T:System.Decimal" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlMoney" />, <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> которой равно значению параметра <see cref="T:System.Decimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Implicit(System.Int64)~System.Data.SqlTypes.SqlMoney">
      <summary>Этот неявный оператор преобразует предоставленный параметр <see cref="T:System.Int64" /> в <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <param name="x">Преобразуемая структура <see cref="T:System.Int64" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlMoney" />, свойство <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> которой равно значению параметра <see cref="T:System.Int64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Inequality(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>Выполняет логическое сравнение двух параметров <see cref="T:System.Data.SqlTypes.SqlMoney" /> с целью определить, что они не равны.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns>Переменная <see cref="T:System.Data.SqlTypes.SqlBoolean" />, которая принимает значение <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если два экземпляра не равны, или значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />, если они равны. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlMoney" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_LessThan(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>Выполняет логическое сравнение двух параметров <see cref="T:System.Data.SqlTypes.SqlMoney" />, чтобы определить, меньше ли первый, чем второй.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns>Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр меньше второго. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlMoney" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_LessThanOrEqual(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>Выполняет логическое сравнение двух параметров <see cref="T:System.Data.SqlTypes.SqlMoney" /> с целью определить, верно ли, что первый параметр меньше второго или равен ему.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns>Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр меньше второго или ему равен. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlMoney" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Multiply(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>Оператор умножения вычисляет произведение двух параметров <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlMoney" />, <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> которой содержит результат умножения.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Subtraction(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>Оператор вычитания вычитает второй параметр <see cref="T:System.Data.SqlTypes.SqlMoney" /> из первого.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlMoney" />, содержащая результаты вычитания.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_UnaryNegation(System.Data.SqlTypes.SqlMoney)">
      <summary>Оператор "унарный минус" меняет знак параметра <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlMoney" />, для которой выполняется инверсия.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlMoney" />, <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> которой содержит результаты отрицания.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.Parse(System.String)">
      <summary>Преобразует представление числа типа <see cref="T:System.String" /> в эквивалентное ему значение <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <param name="s">Представление <see langword="String" />, которое необходимо проанализировать.</param>
      <returns>Значение <see cref="T:System.Data.SqlTypes.SqlMoney" />, эквивалентное значению, которое содержится в заданном представлении <see cref="T:System.String" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.Subtract(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>Оператор вычитания вычитает второй параметр <see cref="T:System.Data.SqlTypes.SqlMoney" /> из первого.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlMoney" />, содержащая результаты вычитания.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary>Данный член предназначен для поддержки платформы .NET Framework и не должен вызываться напрямую из кода приложения.</summary>
      <returns>Объект <see langword="XmlSchema" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary>Данный член предназначен для поддержки платформы .NET Framework и не должен вызываться напрямую из кода приложения.</summary>
      <param name="reader">
        <see langword="XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary>Данный член предназначен для поддержки платформы .NET Framework и не должен вызываться напрямую из кода приложения.</summary>
      <param name="writer">
        <see langword="XmlWriter" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToDecimal">
      <summary>Преобразует значение этого экземпляра <see cref="T:System.Data.SqlTypes.SqlMoney" /> как структуру <see cref="T:System.Decimal" />.</summary>
      <returns>Структура <see cref="T:System.Decimal" />, значение которой равно свойству <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> данной структуры <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToDouble">
      <summary>Преобразует данную структуру <see cref="T:System.Data.SqlTypes.SqlMoney" /> в <see cref="T:System.Double" />.</summary>
      <returns>Структура типа double со значением, равным этой структуре <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToInt32">
      <summary>Преобразует данную структуру <see cref="T:System.Data.SqlTypes.SqlMoney" /> в <see cref="T:System.Int32" />.</summary>
      <returns>32-разрядное целое число, значение которого равно целой части этой структуры <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToInt64">
      <summary>Преобразует значение этой структуры <see cref="T:System.Data.SqlTypes.SqlMoney" /> в <see cref="T:System.Int64" />.</summary>
      <returns>64-разрядное целое число, значение которого равно целой части этой структуры <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToSqlBoolean">
      <summary>Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlMoney" /> в <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlBoolean" />. Если значение структуры <see cref="T:System.Data.SqlTypes.SqlMoney" /> равно нулю, значение структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToSqlByte">
      <summary>Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlMoney" /> в <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlByte" />, равная значению данной структуры <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToSqlDecimal">
      <summary>Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlMoney" /> в <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />, равная значению данной структуры <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToSqlDouble">
      <summary>Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlMoney" /> в <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlDouble" />, равная значению данной структуры <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToSqlInt16">
      <summary>Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlMoney" /> в <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlInt16" />, равная значению данной структуры <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToSqlInt32">
      <summary>Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlMoney" /> в <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlInt32" />, равная значению данной структуры <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToSqlInt64">
      <summary>Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlMoney" /> в <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlInt64" />, равная значению данной структуры <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToSqlSingle">
      <summary>Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlMoney" /> в <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlSingle" />, равная значению данной структуры <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToSqlString">
      <summary>Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlMoney" /> в <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlString" />, значение которой является строкой, представляющей значение данной структуры <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToString">
      <summary>Преобразует этот экземпляр <see cref="T:System.Data.SqlTypes.SqlMoney" /> в строку.</summary>
      <returns>Строка, значение которой является строковым представлением значения данной структуры <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlMoney.Value">
      <summary>Получает денежное значение экземпляра структуры <see cref="T:System.Data.SqlTypes.SqlMoney" />. Это свойство доступно только для чтения.</summary>
      <returns>Денежное значение экземпляра структуры <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">Для свойства задано значение NULL.</exception>
    </member>
    <member name="F:System.Data.SqlTypes.SqlMoney.Zero">
      <summary>Представляет нулевое значение, которое можно назначить свойству <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> экземпляра класса <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
    </member>
    <member name="T:System.Data.SqlTypes.SqlNotFilledException">
      <summary>Класс <see cref="T:System.Data.SqlTypes.SqlNotFilledException" /> предназначен для использования не в качестве самостоятельного компонента, а в качестве базового класса, от которого другие классы наследуют стандартные функциональные возможности.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlNotFilledException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.SqlTypes.SqlNotFilledException" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlNotFilledException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.SqlTypes.SqlNotFilledException" />.</summary>
      <param name="message">Строка, отображаемая при возникновении исключения.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlNotFilledException.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.SqlTypes.SqlNotFilledException" />.</summary>
      <param name="message">Строка, отображаемая при возникновении исключения.</param>
      <param name="e">Ссылка на внутреннее исключение.</param>
    </member>
    <member name="T:System.Data.SqlTypes.SqlNullValueException">
      <summary>Исключение, возникающее, когда для свойства <see langword="Value" /> структуры <see cref="N:System.Data.SqlTypes" /> установлено значение NULL.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlNullValueException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.SqlTypes.SqlNullValueException" /> с системным сообщением, содержащим описание ошибки.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlNullValueException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.SqlTypes.SqlNullValueException" /> с использованием заданного сообщения, содержащего описание ошибки.</summary>
      <param name="message">Сообщение с описанием исключения. Код, вызывающий этот конструктор, должен обеспечить локализацию данной строки в соответствии с текущим языком и региональными параметрами системы.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlNullValueException.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.SqlTypes.SqlNullValueException" /> указанным сообщением об ошибке и ссылкой на внутреннее исключение, вызвавшее данное исключение.</summary>
      <param name="message">Сообщение с описанием исключения. Код, вызывающий этот конструктор, должен обеспечить локализацию данной строки в соответствии с текущим языком и региональными параметрами системы.</param>
      <param name="e">Исключение, которое является причиной текущего исключения. Если значение параметра innerException не равно <see langword="null" />, текущее исключение возникает в блоке <see langword="catch" />, обрабатывающем внутреннее исключение.</param>
    </member>
    <member name="T:System.Data.SqlTypes.SqlSingle">
      <summary>Представляет число с плавающей запятой в диапазоне от -3,40E +38 до 3,40E +38, сохраняемое в базе данных или извлекаемое из нее.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.#ctor(System.Double)">
      <summary>Инициализирует новый экземпляр структуры <see cref="T:System.Data.SqlTypes.SqlSingle" /> с использованием предоставленного параметра типа double.</summary>
      <param name="value">Значение типа double, которое будет использоваться в качестве <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> новой структуры <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.#ctor(System.Single)">
      <summary>Инициализирует новый экземпляр структуры <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <param name="value">Число с плавающей десятичной запятой, которое будет использоваться в качестве <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> новой структуры <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.Add(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>Вычисляет сумму двух заданных структур <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlSingle" />, содержащая сумму двух заданных структур <see cref="T:System.Data.SqlTypes.SqlSingle" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.CompareTo(System.Data.SqlTypes.SqlSingle)">
      <summary>Сравнивает этот экземпляр <see cref="T:System.Data.SqlTypes.SqlSingle" /> с предоставленным <see cref="T:System.Data.SqlTypes.SqlSingle" /> и возвращает сведения об их относительных значениях.</summary>
      <param name="value">Выражение <see cref="T:System.Data.SqlTypes.SqlSingle" /> для сравнения.</param>
      <returns>Число со знаком, представляющее результат сравнения значений экземпляра и объекта.  
  Возвращаемое значение 
  Условие 
  Меньше нуля 
  Этот экземпляр меньше данного объекта.  

  Нуль 
  Этот экземпляр равен данному объекту.  

  Больше нуля 
  Этот экземпляр больше данного объекта 
- или - 
Объект является пустой ссылкой (<see langword="Nothing" /> в Visual Basic).</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.CompareTo(System.Object)">
      <summary>Сравнивает этот экземпляр <see cref="T:System.Data.SqlTypes.SqlSingle" /> с предоставленным <see cref="T:System.Object" /> и возвращает сведения об их относительных значениях.</summary>
      <param name="value">Выражение <see cref="T:System.Object" /> для сравнения.</param>
      <returns>Число со знаком, представляющее результат сравнения значений экземпляра и объекта.  
  Возвращаемое значение 
  Условие 
  Меньше нуля 
  Этот экземпляр меньше данного объекта.  

  Нуль 
  Этот экземпляр равен данному объекту.  

  Больше нуля 
  Этот экземпляр больше данного объекта 
-или- 
Объект является пустой ссылкой (<see langword="Nothing" /> в Visual Basic).</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.Divide(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>Делит первую структуру <see cref="T:System.Data.SqlTypes.SqlSingle" /> на вторую.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns>Структура <see langword="SqlInt64" />, содержащая результаты деления.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.Equals(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>Выполняет логическое сравнение двух параметров <see cref="T:System.Data.SqlTypes.SqlSingle" /> с целью определить, равны ли они.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns>
        <see langword="true" />, если эти два значения равны. В противном случае — значение <see langword="false" />. Если один из экземпляров пуст, <see langword="SqlSingle" /> будет иметь значение NULL.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.Equals(System.Object)">
      <summary>Сравнивает предоставленный параметр объекта со свойством <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> объекта <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <param name="value">Сравниваемый объект.</param>
      <returns>
        <see langword="true" />, если объект является экземпляром структуры <see cref="T:System.Data.SqlTypes.SqlSingle" /> и они равны. В противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.GetHashCode">
      <summary>Получает хэш-код для этого экземпляра.</summary>
      <returns>Хэш-код в виде 32-разрядного целого числа со знаком.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary>Возвращает XSD (XML-схему) заданного объекта <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</summary>
      <param name="schemaSet">Объект <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
      <returns>Значение <see langword="string" />, указывающее определение XML-схемы заданного объекта <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.GreaterThan(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>Выполняет логическое сравнение двух операндов <see cref="T:System.Data.SqlTypes.SqlSingle" /> с целью определить, больше ли первый, чем второй.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns>Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр больше второго. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlSingle" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.GreaterThanOrEqual(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>Выполняет логическое сравнение двух структур <see cref="T:System.Data.SqlTypes.SqlSingle" /> с целью определить, верно ли, что первая больше второй или равна ей.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns>Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр больше второго или равен ему. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlSingle" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlSingle.IsNull">
      <summary>Указывает, имеет ли структура <see cref="T:System.Data.SqlTypes.SqlSingle" /> значение null.</summary>
      <returns>Значение <see langword="true" />, если NULL. В противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.LessThan(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>Выполняет логическое сравнение двух параметров <see cref="T:System.Data.SqlTypes.SqlSingle" />, чтобы определить, меньше ли первый, чем второй.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns>Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр меньше второго. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlSingle" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.LessThanOrEqual(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>Выполняет логическое сравнение двух параметров <see cref="T:System.Data.SqlTypes.SqlSingle" /> с целью определить, верно ли, что первый параметр меньше второго или равен ему.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns>Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр меньше второго или ему равен. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlSingle" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlSingle.MaxValue">
      <summary>Представляет максимальное значение, которое можно назначить свойству <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> экземпляра класса <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlSingle.MinValue">
      <summary>Представляет минимальное значение, которое можно назначить свойству <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> экземпляра класса <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.Multiply(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>Вычисляет произведение двух заданных структур <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlSingle" />, содержащая результат умножения.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.NotEquals(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>Выполняет логическое сравнение двух параметров <see cref="T:System.Data.SqlTypes.SqlSingle" /> с целью определить, что они не равны.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns>Переменная <see cref="T:System.Data.SqlTypes.SqlBoolean" />, которая принимает значение <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если два экземпляра не равны, или значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />, если они равны. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlSingle" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlSingle.Null">
      <summary>Представляет значение <see cref="T:System.DBNull" />, которое может быть присвоено данному экземпляру структуры <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Addition(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>Вычисляет сумму двух заданных структур <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlSingle" />, содержащая сумму двух заданных структур <see cref="T:System.Data.SqlTypes.SqlSingle" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Division(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>Делит первую структуру <see cref="T:System.Data.SqlTypes.SqlSingle" /> на вторую.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlSingle" />, содержащая результаты деления.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Equality(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>Выполняет логическое сравнение двух параметров SqlSingle с целью определить, равны ли они.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlBoolean" />, которая принимает значение <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если два экземпляра равны, или значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />, если они не равны. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlSingle" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlSingle">
      <summary>Этот неявный оператор преобразует предоставленную структуру <see cref="T:System.Data.SqlTypes.SqlBoolean" /> в <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <param name="x">Преобразуемая структура <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlSingle" />, <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> которой равно <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" /> параметра <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlSingle">
      <summary>Преобразует предоставленный параметр <see cref="T:System.Data.SqlTypes.SqlDouble" /> в <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <param name="x">Преобразуемый параметр <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlSingle" />, <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> которой равно <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> параметра <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Single">
      <summary>Преобразует заданную структуру <see cref="T:System.Data.SqlTypes.SqlSingle" /> в число с плавающей запятой.</summary>
      <param name="x">Значение <see cref="T:System.Data.SqlTypes.SqlSingle" />, преобразуемое в число с плавающей запятой.</param>
      <returns>Число с плавающей запятой, содержащее значение структуры <see cref="T:System.Data.SqlTypes.SqlSingle" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlSingle">
      <summary>Преобразует предоставленный параметр <see cref="T:System.Data.SqlTypes.SqlString" /> в <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <param name="x">Преобразуемый объект <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlSingle" />, <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> которой равен значению, представленному параметром <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_GreaterThan(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>Выполняет логическое сравнение двух операндов <see cref="T:System.Data.SqlTypes.SqlSingle" /> с целью определить, больше ли первый, чем второй.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns>Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр больше второго. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlSingle" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>Выполняет логическое сравнение двух структур <see cref="T:System.Data.SqlTypes.SqlSingle" /> с целью определить, верно ли, что первая больше второй или равна ей.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns>Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр больше второго или равен ему. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlSingle" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Implicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlSingle">
      <summary>Этот неявный оператор преобразует параметр <see cref="T:System.Data.SqlTypes.SqlByte" /> в <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <param name="x">Преобразуемая структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlSingle" />, свойство <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> которой равно свойству <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> параметра <see cref="T:System.Data.SqlTypes.SqlByte" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Implicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlSingle">
      <summary>Преобразует предоставленный параметр <see cref="T:System.Data.SqlTypes.SqlDecimal" /> в <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <param name="x">Преобразуемая структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlSingle" />, <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> которой равно <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> параметра <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Implicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlSingle">
      <summary>Преобразует предоставленный параметр <see cref="T:System.Data.SqlTypes.SqlInt16" /> в <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <param name="x">Преобразуемая структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlSingle" />, <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> которой равно <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> параметра <see cref="T:System.Data.SqlTypes.SqlInt16" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Implicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlSingle">
      <summary>Преобразует предоставленную структуру <see cref="T:System.Data.SqlTypes.SqlInt32" /> в <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <param name="x">Преобразуемая структура <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlSingle" />, <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> которой равно <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> параметра <see cref="T:System.Data.SqlTypes.SqlInt32" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Implicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlSingle">
      <summary>Преобразует предоставленный параметр <see cref="T:System.Data.SqlTypes.SqlInt64" /> в <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <param name="x">Преобразуемая структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlSingle" />, <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> которой равно <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> параметра <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Implicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlSingle">
      <summary>Преобразует предоставленную структуру <see cref="T:System.Data.SqlTypes.SqlMoney" /> в <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <param name="x">Преобразуемая структура <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlSingle" />, <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> которой равно <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> параметра <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Implicit(System.Single)~System.Data.SqlTypes.SqlSingle">
      <summary>Преобразует заданное значение с плавающей десятичной запятой в <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <param name="x">Значение с плавающей десятичной запятой, преобразуемое в структуру <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlSingle" />, содержащая значение заданного числа с плавающей запятой.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Inequality(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>Выполняет логическое сравнение двух параметров <see cref="T:System.Data.SqlTypes.SqlSingle" /> с целью определить, что они не равны.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns>Переменная <see cref="T:System.Data.SqlTypes.SqlBoolean" />, которая принимает значение <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если два экземпляра не равны, или значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />, если они равны. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlSingle" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_LessThan(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>Выполняет логическое сравнение двух параметров <see cref="T:System.Data.SqlTypes.SqlSingle" />, чтобы определить, меньше ли первый, чем второй.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns>Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр меньше второго. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlSingle" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_LessThanOrEqual(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>Выполняет логическое сравнение двух параметров <see cref="T:System.Data.SqlTypes.SqlSingle" /> с целью определить, верно ли, что первый параметр меньше второго или равен ему.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns>Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр меньше второго или ему равен. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlSingle" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Multiply(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>Вычисляет произведение двух заданных структур <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlSingle" />, содержащая результат умножения.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Subtraction(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>Вычитает вторую структуру <see cref="T:System.Data.SqlTypes.SqlSingle" /> из первой.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlSingle" />, содержащая результаты вычитания.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_UnaryNegation(System.Data.SqlTypes.SqlSingle)">
      <summary>Инвертирует <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> заданной структуры <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlSingle" />, содержащая противоположное значение.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.Parse(System.String)">
      <summary>Преобразует заданную структуру <see cref="T:System.String" /> в структуру <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <param name="s">Представление <see cref="T:System.String" />, которое необходимо проанализировать.</param>
      <returns>Значение <see cref="T:System.Data.SqlTypes.SqlSingle" />, эквивалентное значению, которое содержится в заданном представлении <see cref="T:System.String" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.Subtract(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>Вычитает вторую структуру <see cref="T:System.Data.SqlTypes.SqlSingle" /> из первой.</summary>
      <param name="x">Структура <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <param name="y">Структура <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlSingle" />, содержащая результаты вычитания.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary>Данный член предназначен для поддержки платформы .NET Framework и не должен вызываться напрямую из кода приложения.</summary>
      <returns>Объект <see langword="XmlSchema" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary>Данный член предназначен для поддержки платформы .NET Framework и не должен вызываться напрямую из кода приложения.</summary>
      <param name="reader">
        <see langword="XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary>Данный член предназначен для поддержки платформы .NET Framework и не должен вызываться напрямую из кода приложения.</summary>
      <param name="writer">
        <see langword="XmlWriter" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToSqlBoolean">
      <summary>Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlSingle" /> в <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <returns>
        <see langword="true" />, если <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> не равно нулю; <see langword="false" />, если равно нулю; в противном случае — NULL.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToSqlByte">
      <summary>Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlSingle" /> в <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlByte" />, <see langword="Value" /> которой равно <see langword="Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlSingle" />. Если значение структуры <see cref="T:System.Data.SqlTypes.SqlSingle" /> равняется <see langword="true" />, значение <see langword="Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlByte" /> будет равняться 1. В противном случае значение <see langword="Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlByte" /> будет равняться 0.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToSqlDecimal">
      <summary>Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlSingle" /> в <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <returns>Новая структура <see langword="SqlDecimal" />, равная значению данной структуры <see cref="T:System.Data.SqlTypes.SqlSingle" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToSqlDouble">
      <summary>Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlSingle" /> в <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <returns>Новая структура <see langword="SqlDouble" />, равная значению данной структуры <see cref="T:System.Data.SqlTypes.SqlSingle" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToSqlInt16">
      <summary>Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlSingle" /> в <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <returns>Новая структура <see langword="SqlInt16" />, равная значению данной структуры <see cref="T:System.Data.SqlTypes.SqlSingle" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToSqlInt32">
      <summary>Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlSingle" /> в <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlInt32" />, равная значению данной структуры <see cref="T:System.Data.SqlTypes.SqlSingle" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToSqlInt64">
      <summary>Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlSingle" /> в <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlInt64" />, равная значению данной структуры <see cref="T:System.Data.SqlTypes.SqlSingle" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToSqlMoney">
      <summary>Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlSingle" /> в <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlMoney" />, равная значению данной структуры <see cref="T:System.Data.SqlTypes.SqlSingle" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToSqlString">
      <summary>Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlSingle" /> в <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <returns>Объект <see cref="T:System.Data.SqlTypes.SqlString" />, представляющий значение данной структуры <see cref="T:System.Data.SqlTypes.SqlSingle" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToString">
      <summary>Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlSingle" /> в <see cref="T:System.String" />.</summary>
      <returns>Объект <see langword="String" />, представляющий значение данной структуры <see cref="T:System.Data.SqlTypes.SqlSingle" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlSingle.Value">
      <summary>Получает значение этой структуры <see cref="T:System.Data.SqlTypes.SqlSingle" />. Это свойство доступно только для чтения.</summary>
      <returns>Значение с плавающей десятичной запятой в диапазоне от -3,40E+38 до 3,40E+38.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlSingle.Zero">
      <summary>Представляет нулевое значение, которое можно назначить свойству <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> экземпляра класса <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
    </member>
    <member name="T:System.Data.SqlTypes.SqlString">
      <summary>Представляет поток символов переменной длины, сохраняемый в базе данных или извлекаемый из нее. <see cref="T:System.Data.SqlTypes.SqlString" /> имеет базовую структуру данных, отличную от соответствующего типа данных <see cref="T:System.String" /> платформы .NET Framework.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.#ctor(System.Int32,System.Data.SqlTypes.SqlCompareOptions,System.Byte[])">
      <summary>Инициализирует новый экземпляр структуры <see cref="T:System.Data.SqlTypes.SqlString" /> с использованием заданных кода языка, параметров сравнения и данных.</summary>
      <param name="lcid">Задает региональные настройки и язык для новой структуры <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="compareOptions">Задает параметры сравнения новой структуры <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="data">Массив данных для хранения.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.#ctor(System.Int32,System.Data.SqlTypes.SqlCompareOptions,System.Byte[],System.Boolean)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <param name="lcid">Задает региональные настройки и язык для новой структуры <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="compareOptions">Задает параметры сравнения новой структуры <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="data">Массив данных для хранения.</param>
      <param name="fUnicode">
        <see langword="true" />, если используется кодировка Юникод. В противном случае — значение <see langword="false" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.#ctor(System.Int32,System.Data.SqlTypes.SqlCompareOptions,System.Byte[],System.Int32,System.Int32)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <param name="lcid">Задает региональные настройки и язык для новой структуры <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="compareOptions">Задает параметры сравнения новой структуры <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="data">Массив данных для хранения.</param>
      <param name="index">Начальный индекс в массиве.</param>
      <param name="count">Число символов из индекса для копирования.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.#ctor(System.Int32,System.Data.SqlTypes.SqlCompareOptions,System.Byte[],System.Int32,System.Int32,System.Boolean)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <param name="lcid">Задает региональные настройки и язык для новой структуры <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="compareOptions">Задает параметры сравнения новой структуры <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="data">Массив данных для хранения.</param>
      <param name="index">Начальный индекс в массиве.</param>
      <param name="count">Число символов из индекса для копирования.</param>
      <param name="fUnicode">
        <see langword="true" />, если используется кодировка Юникод. В противном случае — значение <see langword="false" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр структуры <see cref="T:System.Data.SqlTypes.SqlString" /> с использованием заданной строки.</summary>
      <param name="data">Строка, которую необходимо сохранить.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.#ctor(System.String,System.Int32)">
      <summary>Инициализирует новый экземпляр структуры <see cref="T:System.Data.SqlTypes.SqlString" /> с использованием заданной строки и значений кода языка.</summary>
      <param name="data">Строка, которую необходимо сохранить.</param>
      <param name="lcid">Задает региональные настройки и язык для новой структуры <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.#ctor(System.String,System.Int32,System.Data.SqlTypes.SqlCompareOptions)">
      <summary>Инициализирует новый экземпляр структуры <see cref="T:System.Data.SqlTypes.SqlString" /> с использованием заданных строки, кода языка и значений параметров сравнения.</summary>
      <param name="data">Строка, которую необходимо сохранить.</param>
      <param name="lcid">Задает региональные настройки и язык для новой структуры <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="compareOptions">Задает параметры сравнения новой структуры <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.Add(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary>Сцепляет два заданных значения <see cref="T:System.Data.SqlTypes.SqlString" /> для создания новой структуры <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <param name="x">Объект <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="y">Объект <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlString" />, представляющая собой сцепленное значение, составленное из <paramref name="x" /> и <paramref name="y" />.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlString.BinarySort">
      <summary>Задает сортировку на основе числового значения символов вместо сортировки по алфавиту.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlString.BinarySort2">
      <summary>Задает сортировку на основе числового значения символов вместо сортировки по алфавиту.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.Clone">
      <summary>Создает копию данного объекта <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <returns>Новый объект <see cref="T:System.Data.SqlTypes.SqlString" />, в котором все значения свойств аналогичны значениям свойств исходного объекта.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlString.CompareInfo">
      <summary>Получает объект <see cref="T:System.Globalization.CompareInfo" />, который определяет способ сравнения строк для этой структуры <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <returns>Объект <see langword="CompareInfo" />, который определяет сравнение строк для этой структуры <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.CompareOptionsFromSqlCompareOptions(System.Data.SqlTypes.SqlCompareOptions)">
      <summary>Получает эквивалент перечисления <see cref="T:System.Globalization.CompareOptions" /> указанного значения <see cref="T:System.Data.SqlTypes.SqlCompareOptions" />.</summary>
      <param name="compareOptions">Значение <see cref="T:System.Data.SqlTypes.SqlCompareOptions" />, которое описывает параметры сравнения для данной структуры <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns>Значение <see langword="CompareOptions" />, которое соответствует <see langword="SqlCompareOptions" /> для данной структуры <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.CompareTo(System.Data.SqlTypes.SqlString)">
      <summary>Сравнивает этот экземпляр <see cref="T:System.Data.SqlTypes.SqlString" /> с предоставленным <see cref="T:System.Data.SqlTypes.SqlString" /> и возвращает сведения об их относительных значениях.</summary>
      <param name="value">Выражение <see cref="T:System.Data.SqlTypes.SqlString" /> для сравнения.</param>
      <returns>Число со знаком, представляющее результат сравнения значений экземпляра и объекта.  
  Возвращаемое значение 
  Условие 
  Меньше нуля 
  Этот экземпляр меньше данного объекта.  

  Нуль 
  Этот экземпляр равен данному объекту.  

  Больше нуля 
  Этот экземпляр больше данного объекта 
-или- 
Данный объект является пустой ссылкой (<see langword="Nothing" /> в Visual Basic).</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.CompareTo(System.Object)">
      <summary>Сравнивает этот объект <see cref="T:System.Data.SqlTypes.SqlString" /> с предоставленным <see cref="T:System.Object" /> и возвращает сведения об их относительных значениях.</summary>
      <param name="value">Выражение <see cref="T:System.Object" /> для сравнения.</param>
      <returns>Число со знаком, представляющее результат сравнения значений экземпляра и объекта.  
  Возвращаемое значение 
  Условие 
  Меньше нуля 
  Этот экземпляр меньше данного объекта.  

  Нуль 
  Этот экземпляр равен данному объекту.  

  Больше нуля 
  Этот экземпляр больше данного объекта 
- или - 
Объект является пустой ссылкой (<see langword="Nothing" /> в Visual Basic).</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.Concat(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary>Сцепляет две указанные структуры <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <param name="x">Объект <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="y">Объект <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlString" />, которая содержит новое сцепленное значение, представляющее собой содержимое двух параметров <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlString.CultureInfo">
      <summary>Получает структуру <see cref="T:System.Globalization.CultureInfo" />, которая представляет сведения о языке и региональных параметрах этого объекта <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <returns>Структура <see cref="T:System.Globalization.CultureInfo" />, в которой приводятся сведения о языке и региональных параметрах этой структуры SqlString, в том числе об именах, системе письма и календаре, а также о доступе к характерным объектам, предоставляющим методы для выполнения распространенных операций, таких как форматирование даты и сортировка строк.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.Equals(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary>Выполняет логическое сравнение двух операндов <see cref="T:System.Data.SqlTypes.SqlString" /> с целью определить, равны ли они.</summary>
      <param name="x">Объект <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="y">Объект <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns>
        <see langword="true" />, если эти два значения равны. В противном случае — значение <see langword="false" />. Если один из экземпляров пуст, <see langword="SqlString" /> будет иметь значение NULL.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.Equals(System.Object)">
      <summary>Сравнивает предоставленный параметр объекта со свойством <see cref="P:System.Data.SqlTypes.SqlString.Value" /> объекта <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <param name="value">Сравниваемый объект.</param>
      <returns>Значение <see langword="true" />, если объект является экземпляром структуры <see cref="T:System.Data.SqlTypes.SqlString" /> и они равны; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.GetHashCode">
      <summary>Получает хэш-код для этого экземпляра.</summary>
      <returns>Хэш-код в виде 32-разрядного целого числа со знаком.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.GetNonUnicodeBytes">
      <summary>Получает массив байтов, в который помещено содержимое <see cref="T:System.Data.SqlTypes.SqlString" /> в формате ANSI.</summary>
      <returns>Массив байтов с содержимым <see cref="T:System.Data.SqlTypes.SqlString" /> в формате ANSI.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.GetUnicodeBytes">
      <summary>Получает массив байтов, в который помещено содержимое <see cref="T:System.Data.SqlTypes.SqlString" /> в формате Юникод.</summary>
      <returns>Массив байтов с содержимым <see cref="T:System.Data.SqlTypes.SqlString" /> в формате Юникод.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary>Возвращает XSD (XML-схему) заданного объекта <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</summary>
      <param name="schemaSet">Объект <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
      <returns>Значение <see langword="string" />, указывающее определение XML-схемы заданного объекта <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.GreaterThan(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary>Выполняет логическое сравнение двух операндов <see cref="T:System.Data.SqlTypes.SqlString" /> с целью определить, больше ли первый, чем второй.</summary>
      <param name="x">Объект <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="y">Объект <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns>Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр больше второго. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlString" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.GreaterThanOrEqual(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary>Выполняет логическое сравнение двух операндов <see cref="T:System.Data.SqlTypes.SqlString" /> с целью определить, верно ли, что первый больше второго или равен ему.</summary>
      <param name="x">Объект <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="y">Объект <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns>Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр больше второго или равен ему. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlString" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlString.IgnoreCase">
      <summary>Задает игнорирование регистра при выполнении сравнения <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlString.IgnoreKanaType">
      <summary>Задает игнорирование типа японской азбуки при сравнении строк.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlString.IgnoreNonSpace">
      <summary>Задает игнорирование несамостоятельных знаков (например, диакритических) при сравнении строк.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlString.IgnoreWidth">
      <summary>Задает игнорирование ширины знака при сравнении строк.</summary>
    </member>
    <member name="P:System.Data.SqlTypes.SqlString.IsNull">
      <summary>Указывает, имеет ли структура <see cref="T:System.Data.SqlTypes.SqlString" /> значение null.</summary>
      <returns>Значение <see langword="true" />, если свойство <see cref="P:System.Data.SqlTypes.SqlString.Value" /> имеет значение <see cref="F:System.Data.SqlTypes.SqlString.Null" />. В противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlString.LCID">
      <summary>Задает региональные параметры и язык для структуры <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <returns>Код языка для строки, хранящейся в свойстве <see cref="P:System.Data.SqlTypes.SqlString.Value" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.LessThan(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary>Выполняет логическое сравнение двух операндов <see cref="T:System.Data.SqlTypes.SqlString" />, чтобы определить, меньше ли первый, чем второй.</summary>
      <param name="x">Объект <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="y">Объект <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns>Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр меньше второго. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlString" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.LessThanOrEqual(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary>Выполняет логическое сравнение двух операндов <see cref="T:System.Data.SqlTypes.SqlString" /> с целью определить, верно ли, что первый меньше второго или равен ему.</summary>
      <param name="x">Объект <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="y">Объект <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns>Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр меньше второго или ему равен. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlString" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.NotEquals(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary>Выполняет логическое сравнение двух операндов <see cref="T:System.Data.SqlTypes.SqlString" /> с целью определить, отличаются ли они.</summary>
      <param name="x">Объект <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="y">Объект <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns>Переменная <see cref="T:System.Data.SqlTypes.SqlBoolean" />, которая принимает значение <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если два экземпляра не равны, или значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />, если они равны. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlString" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlString.Null">
      <summary>Представляет значение <see cref="T:System.DBNull" />, которое может быть присвоено данному экземпляру структуры <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Addition(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary>Сцепляет две указанные структуры <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <param name="x">Объект <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="y">Объект <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlString" />, которая содержит новое сцепленное значение, представляющее собой содержимое двух параметров <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Equality(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary>Выполняет логическое сравнение двух операндов <see cref="T:System.Data.SqlTypes.SqlString" /> с целью определить, равны ли они.</summary>
      <param name="x">Объект <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="y">Объект <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns>Структура <see cref="T:System.Data.SqlTypes.SqlBoolean" />, которая принимает значение <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если два экземпляра равны, или значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />, если они не равны. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlString" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlString">
      <summary>Преобразует заданную структуру <see cref="T:System.Data.SqlTypes.SqlBoolean" /> в <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <param name="x">Преобразуемая структура <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns>Новый объект <see cref="T:System.Data.SqlTypes.SqlString" />, содержащий строковое представление параметра <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlString">
      <summary>Преобразует заданную структуру <see cref="T:System.Data.SqlTypes.SqlByte" /> в <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <param name="x">Преобразуемая структура <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns>Новый объект <see cref="T:System.Data.SqlTypes.SqlString" />, содержащий строковое представление параметра <see cref="T:System.Data.SqlTypes.SqlByte" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlDateTime)~System.Data.SqlTypes.SqlString">
      <summary>Преобразует заданный параметр <see cref="T:System.Data.SqlTypes.SqlDateTime" /> в <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <param name="x">Преобразуемая структура <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <returns>Новый объект <see cref="T:System.Data.SqlTypes.SqlString" />, содержащий строковое представление параметра <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlString">
      <summary>Преобразует заданный параметр <see cref="T:System.Data.SqlTypes.SqlDecimal" /> в <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <param name="x">Преобразуемая структура <see langword="SqlDecimal" />.</param>
      <returns>Новый объект <see cref="T:System.Data.SqlTypes.SqlString" />, содержащий строковое представление параметра <see langword="SqlDecimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlString">
      <summary>Преобразует заданный параметр <see cref="T:System.Data.SqlTypes.SqlDouble" /> в <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <param name="x">Преобразуемая структура <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns>Новый объект <see cref="T:System.Data.SqlTypes.SqlString" />, содержащий строковое представление параметра <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlGuid)~System.Data.SqlTypes.SqlString">
      <summary>Преобразует заданный параметр <see cref="T:System.Data.SqlTypes.SqlGuid" /> в <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <param name="x">Преобразуемая структура <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <returns>Объект <see cref="T:System.Data.SqlTypes.SqlString" />, значение которого является строковым представлением заданной структуры <see cref="T:System.Data.SqlTypes.SqlGuid" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlString">
      <summary>Преобразует заданный параметр <see cref="T:System.Data.SqlTypes.SqlInt16" /> в <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <param name="x">Преобразуемая структура <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns>Новый объект <see cref="T:System.Data.SqlTypes.SqlString" />, содержащий строковое представление параметра <see cref="T:System.Data.SqlTypes.SqlInt16" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlString">
      <summary>Преобразует заданный параметр <see cref="T:System.Data.SqlTypes.SqlInt32" /> в <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <param name="x">Преобразуемая структура SqlInt32.</param>
      <returns>Новый объект <see cref="T:System.Data.SqlTypes.SqlString" />, содержащий строковое представление параметра <see cref="T:System.Data.SqlTypes.SqlInt32" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlString">
      <summary>Преобразует заданный параметр <see cref="T:System.Data.SqlTypes.SqlInt64" /> в <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <param name="x">Преобразуемая структура <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns>Новый объект <see cref="T:System.Data.SqlTypes.SqlString" />, содержащий строковое представление параметра <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlString">
      <summary>Преобразует заданный параметр <see cref="T:System.Data.SqlTypes.SqlMoney" /> в <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <param name="x">Преобразуемая структура <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns>Новый объект <see cref="T:System.Data.SqlTypes.SqlString" />, содержащий строковое представление параметра <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlString">
      <summary>Преобразует заданный параметр <see cref="T:System.Data.SqlTypes.SqlSingle" /> в <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <param name="x">Преобразуемая структура <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns>Новый объект <see cref="T:System.Data.SqlTypes.SqlString" />, содержащий строковое представление параметра <see cref="T:System.Data.SqlTypes.SqlSingle" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlString)~System.String">
      <summary>Преобразует <see cref="T:System.Data.SqlTypes.SqlString" /> в <see cref="T:System.String" />.</summary>
      <param name="x">Преобразуемая структура <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns>Объект <see langword="String" />, содержимое которого совпадает со свойством <see cref="P:System.Data.SqlTypes.SqlString.Value" /> параметра <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_GreaterThan(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary>Выполняет логическое сравнение двух операндов <see cref="T:System.Data.SqlTypes.SqlString" /> с целью определить, больше ли первый, чем второй.</summary>
      <param name="x">Объект <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="y">Объект <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns>Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр больше второго. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlString" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary>Выполняет логическое сравнение двух операндов <see cref="T:System.Data.SqlTypes.SqlString" /> с целью определить, верно ли, что первый больше второго или равен ему.</summary>
      <param name="x">Объект <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="y">Объект <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns>Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр больше второго или равен ему. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlString" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Implicit(System.String)~System.Data.SqlTypes.SqlString">
      <summary>Преобразует параметр <see cref="T:System.String" /> в <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <param name="x">Преобразуемая структура <see cref="T:System.String" />.</param>
      <returns>Объект <see cref="T:System.Data.SqlTypes.SqlString" />, содержащий значение указанного параметра <see langword="String" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Inequality(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary>Выполняет логическое сравнение двух операндов <see cref="T:System.Data.SqlTypes.SqlString" /> с целью определить, отличаются ли они.</summary>
      <param name="x">Объект <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="y">Объект <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns>Переменная <see cref="T:System.Data.SqlTypes.SqlBoolean" />, которая принимает значение <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если два экземпляра не равны, или значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />, если они равны. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlString" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_LessThan(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary>Выполняет логическое сравнение двух операндов <see cref="T:System.Data.SqlTypes.SqlString" />, чтобы определить, меньше ли первый, чем второй.</summary>
      <param name="x">Объект <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="y">Объект <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns>Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр меньше второго. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlString" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_LessThanOrEqual(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary>Выполняет логическое сравнение двух операндов <see cref="T:System.Data.SqlTypes.SqlString" /> с целью определить, верно ли, что первый меньше второго или равен ему.</summary>
      <param name="x">Объект <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="y">Объект <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns>Значение типа <see cref="T:System.Data.SqlTypes.SqlBoolean" />, равное <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, если первый экземпляр меньше второго или ему равен. В противном случае — значение <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Если один из экземпляров структуры <see cref="T:System.Data.SqlTypes.SqlString" /> пуст, свойство <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> структуры <see cref="T:System.Data.SqlTypes.SqlBoolean" /> будет иметь значение <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlString.SqlCompareOptions">
      <summary>Сочетание одного или нескольких значений перечисления <see cref="T:System.Data.SqlTypes.SqlCompareOptions" />, представляющее способ сравнения <see cref="T:System.Data.SqlTypes.SqlString" /> с другими структурами <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <returns>Значение, указывающее способ сравнения <see cref="T:System.Data.SqlTypes.SqlString" /> с другими структурами <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary>Данный член предназначен для поддержки платформы .NET Framework и не должен вызываться напрямую из кода приложения.</summary>
      <returns>Объект <see langword="XmlSchema" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary>Данный член предназначен для поддержки платформы .NET Framework и не должен вызываться напрямую из кода приложения.</summary>
      <param name="reader">
        <see langword="XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary>Данный член предназначен для поддержки платформы .NET Framework и не должен вызываться напрямую из кода приложения.</summary>
      <param name="writer">
        <see langword="XmlWriter" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlBoolean">
      <summary>Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlString" /> в <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <returns>
        <see langword="true" />, если <see cref="P:System.Data.SqlTypes.SqlString.Value" /> не равно нулю; <see langword="false" />, если равно нулю; в противном случае — NULL.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlByte">
      <summary>Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlString" /> в <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <returns>Новая структура <see langword="SqlByte" />, <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> которой равно числу, представленному данной структурой <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlDateTime">
      <summary>Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlString" /> в <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</summary>
      <returns>Новая структура <see langword="SqlDateTime" />, содержащая значение даты, представленное данной структурой <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlDecimal">
      <summary>Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlString" /> в <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlDecimal" />, содержащая значение данной структуры <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlDouble">
      <summary>Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlString" /> в <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlDouble" />, значение которой равно числовому значению данной структуры <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlGuid">
      <summary>Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlString" /> в <see cref="T:System.Data.SqlTypes.SqlGuid" />.</summary>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlGuid" />, свойство <see cref="P:System.Data.SqlTypes.SqlGuid.Value" /> которой имеет значение <see langword="Guid" />, представленное данной структурой <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlInt16">
      <summary>Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlString" /> в <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlInt16" />, значение которой равно числовому значению данной структуры <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlInt32">
      <summary>Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlString" /> в <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlInt32" />, значение которой равно числовому значению данной структуры <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlInt64">
      <summary>Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlString" /> в <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlInt64" />, значение которой равно числовому значению данной структуры <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlMoney">
      <summary>Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlString" /> в <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlMoney" />, значение которой равно числовому значению данной структуры <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlSingle">
      <summary>Преобразует эту структуру <see cref="T:System.Data.SqlTypes.SqlString" /> в <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <returns>Новая структура <see cref="T:System.Data.SqlTypes.SqlSingle" />, значение которой равно числовому значению данной структуры <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToString">
      <summary>Преобразует объект <see cref="T:System.Data.SqlTypes.SqlString" /> в объект <see cref="T:System.String" />.</summary>
      <returns>Объект <see cref="T:System.String" /> имеет то же значение, что и данная структура <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlString.Value">
      <summary>Получает строку, которая хранится в данной структуре <see cref="T:System.Data.SqlTypes.SqlString" />. Это свойство доступно только для чтения.</summary>
      <returns>Хранимая строка.</returns>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">Значением строки является <see cref="F:System.Data.SqlTypes.SqlString.Null" />.</exception>
    </member>
    <member name="T:System.Data.SqlTypes.SqlTruncateException">
      <summary>Исключение, генерируемое в том случае, когда в структуре <see cref="N:System.Data.SqlTypes" /> задается значение, которое было бы усечено.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlTruncateException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.SqlTypes.SqlTruncateException" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlTruncateException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.SqlTypes.SqlTruncateException" /> с указанным сообщением об ошибке.</summary>
      <param name="message">Сообщение об ошибке, указывающее причину создания исключения.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlTruncateException.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.SqlTypes.SqlTruncateException" /> с указанным сообщением об ошибке и ссылкой на <see cref="T:System.Exception" />.</summary>
      <param name="message">Сообщение об ошибке, указывающее причину создания исключения.</param>
      <param name="e">Ссылка на внутреннее <see cref="T:System.Exception" />.</param>
    </member>
    <member name="T:System.Data.SqlTypes.SqlTypeException">
      <summary>Базовый класс исключений для <see cref="N:System.Data.SqlTypes" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlTypeException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.SqlTypes.SqlTypeException" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlTypeException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.SqlTypes.SqlTypeException" /> с сериализованными данными.</summary>
      <param name="si">Объект, содержащий сериализованные данные объекта.</param>
      <param name="sc">Контекстные сведения об источнике или назначении.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlTypeException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.SqlTypes.SqlTypeException" /> с указанным сообщением об ошибке.</summary>
      <param name="message">Сообщение об ошибке, указывающее причину создания исключения.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlTypeException.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.SqlTypes.SqlTypeException" /> указанным сообщением об ошибке и ссылкой на внутреннее исключение, вызвавшее данное исключение.</summary>
      <param name="message">Сообщение с описанием исключения. Код, вызывающий этот конструктор, должен обеспечить локализацию данной строки в соответствии с текущим языком и региональными параметрами системы.</param>
      <param name="e">Исключение, которое является причиной текущего исключения. Если значение параметра innerException не равно <see langword="null" />, текущее исключение возникает в блоке <see langword="catch" />, обрабатывающем внутреннее исключение.</param>
    </member>
    <member name="T:System.Data.SqlTypes.SqlTypesSchemaImporterExtensionHelper">
      <summary>Класс <see cref="T:System.Data.SqlTypes.SqlTypesSchemaImporterExtensionHelper" /> предназначен для использования не в качестве самостоятельного компонента, а в качестве базового класса, от которого другие классы наследуют стандартные функциональные возможности.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlTypesSchemaImporterExtensionHelper.#ctor(System.String,System.String)">
      <summary>Класс <see cref="T:System.Data.SqlTypes.SqlTypesSchemaImporterExtensionHelper" /> предназначен для использования не в качестве самостоятельного компонента, а в качестве базового класса, от которого другие классы наследуют стандартные функциональные возможности.</summary>
      <param name="name">Имя в виде строки.</param>
      <param name="destinationType">Целевой тип в виде строки.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlTypesSchemaImporterExtensionHelper.#ctor(System.String,System.String,System.Boolean)">
      <summary>Класс <see cref="T:System.Data.SqlTypes.SqlTypesSchemaImporterExtensionHelper" /> предназначен для использования не в качестве самостоятельного компонента, а в качестве базового класса, от которого другие классы наследуют стандартные функциональные возможности.</summary>
      <param name="name">Имя в виде строки.</param>
      <param name="destinationType">Целевой тип в виде строки.</param>
      <param name="direct">Логическое значение.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlTypesSchemaImporterExtensionHelper.#ctor(System.String,System.String,System.String[],System.CodeDom.CodeNamespaceImport[],System.String,System.Boolean)">
      <summary>Класс <see cref="T:System.Data.SqlTypes.SqlTypesSchemaImporterExtensionHelper" /> предназначен для использования не в качестве самостоятельного компонента, а в качестве базового класса, от которого другие классы наследуют стандартные функциональные возможности.</summary>
      <param name="name">Имя в виде строки.</param>
      <param name="targetNamespace">Конечное пространство имен.</param>
      <param name="references">Строковый массив ссылок.</param>
      <param name="namespaceImports">Массив объектов CodeNamespaceImport.</param>
      <param name="destinationType">Целевой тип в виде строки.</param>
      <param name="direct">Логическое для непосредственного.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlTypesSchemaImporterExtensionHelper.ImportSchemaType(System.String,System.String,System.Xml.Schema.XmlSchemaObject,System.Xml.Serialization.XmlSchemas,System.Xml.Serialization.XmlSchemaImporter,System.CodeDom.CodeCompileUnit,System.CodeDom.CodeNamespace,System.Xml.Serialization.CodeGenerationOptions,System.CodeDom.Compiler.CodeDomProvider)">
      <summary>Класс <see cref="T:System.Data.SqlTypes.SqlTypesSchemaImporterExtensionHelper" /> предназначен для использования не в качестве самостоятельного компонента, а в качестве базового класса, от которого другие классы наследуют стандартные функциональные возможности.</summary>
      <param name="name">
        <paramref name="name" />
      </param>
      <param name="xmlNamespace">
        <paramref name="xmlNamespace" />
      </param>
      <param name="context">
        <paramref name="context" />
      </param>
      <param name="schemas">
        <paramref name="schemas" />
      </param>
      <param name="importer">
        <paramref name="importer" />
      </param>
      <param name="compileUnit">
        <paramref name="compileUnit" />
      </param>
      <param name="mainNamespace">
        <paramref name="mainNamespace" />
      </param>
      <param name="options">
        <paramref name="options" />
      </param>
      <param name="codeProvider">
        <paramref name="codeProvider" />
      </param>
      <returns>Класс <see cref="T:System.Data.SqlTypes.SqlTypesSchemaImporterExtensionHelper" /> предназначен для использования не в качестве самостоятельного компонента, а в качестве базового класса, от которого другие классы наследуют стандартные функциональные возможности.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlTypesSchemaImporterExtensionHelper.ImportSchemaType(System.Xml.Schema.XmlSchemaType,System.Xml.Schema.XmlSchemaObject,System.Xml.Serialization.XmlSchemas,System.Xml.Serialization.XmlSchemaImporter,System.CodeDom.CodeCompileUnit,System.CodeDom.CodeNamespace,System.Xml.Serialization.CodeGenerationOptions,System.CodeDom.Compiler.CodeDomProvider)">
      <summary>Класс <see cref="T:System.Data.SqlTypes.SqlTypesSchemaImporterExtensionHelper" /> предназначен для использования не в качестве самостоятельного компонента, а в качестве базового класса, от которого другие классы наследуют стандартные функциональные возможности.</summary>
      <param name="type">
        <paramref name="type" />
      </param>
      <param name="context">
        <paramref name="context" />
      </param>
      <param name="schemas">
        <paramref name="schemas" />
      </param>
      <param name="importer">
        <paramref name="importer" />
      </param>
      <param name="compileUnit">
        <paramref name="compileUnit" />
      </param>
      <param name="mainNamespace">
        <paramref name="mainNamespace" />
      </param>
      <param name="options">
        <paramref name="options" />
      </param>
      <param name="codeProvider">
        <paramref name="codeProvider" />
      </param>
      <returns>Класс <see cref="T:System.Data.SqlTypes.SqlTypesSchemaImporterExtensionHelper" /> предназначен для использования не в качестве самостоятельного компонента, а в качестве базового класса, от которого другие классы наследуют стандартные функциональные возможности.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlTypesSchemaImporterExtensionHelper.SqlTypesNamespace">
      <summary>Класс <see cref="T:System.Data.SqlTypes.SqlTypesSchemaImporterExtensionHelper" /> предназначен для использования не в качестве самостоятельного компонента, а в качестве базового класса, от которого другие классы наследуют стандартные функциональные возможности.</summary>
    </member>
    <member name="T:System.Data.SqlTypes.SqlXml">
      <summary>Представляет XML-данные, сохраняемые на сервере или извлекаемые с него.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlXml.#ctor">
      <summary>Создает новый экземпляр <see cref="T:System.Data.SqlTypes.SqlXml" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlXml.#ctor(System.IO.Stream)">
      <summary>Создает новый экземпляр <see cref="T:System.Data.SqlTypes.SqlXml" />, получая XML-значение из полученного производного экземпляра <see cref="T:System.IO.Stream" />.</summary>
      <param name="value">Производный экземпляр <see cref="T:System.IO.Stream" /> (например, <see cref="T:System.IO.FileStream" />), из которого следует загрузить XML-содержимое экземпляра <see cref="T:System.Data.SqlTypes.SqlXml" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlXml.#ctor(System.Xml.XmlReader)">
      <summary>Создает новый экземпляр <see cref="T:System.Data.SqlTypes.SqlXml" /> и связывает его с содержимым предоставленного <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="value">Экземпляр производного класса, полученного из <see cref="T:System.Xml.XmlReader" />, который требуется использовать в качестве значения нового экземпляра <see cref="T:System.Data.SqlTypes.SqlXml" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlXml.CreateReader">
      <summary>Получает значение XML-содержимого данного экземпляра <see cref="T:System.Data.SqlTypes.SqlXml" /> в формате <see cref="T:System.Xml.XmlReader" />.</summary>
      <returns>Производный экземпляр, полученный из <see cref="T:System.Xml.XmlReader" /> и содержащий XML-данные. Фактический тип может меняться (например, возвращаемое значение может быть в формате <see cref="T:System.Xml.XmlTextReader" />) в зависимости от внутреннего способа представления данных на сервере.</returns>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">Предпринята попытка получить доступ к этому свойству в неопределенном экземпляре <see cref="T:System.Data.SqlTypes.SqlXml" />.</exception>
    </member>
    <member name="M:System.Data.SqlTypes.SqlXml.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary>Возвращает XSD (XML-схему) заданного объекта <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</summary>
      <param name="schemaSet">Объект <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
      <returns>Строка, указывающая определение XML-схемы заданного объекта <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlXml.IsNull">
      <summary>Показывает, представляет ли данный экземпляр неопределенное значение <see cref="T:System.Data.SqlTypes.SqlXml" />.</summary>
      <returns>
        <see langword="true" />, если <see langword="Value" /> равно NULL. В противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlXml.Null">
      <summary>Представляет неопределенный экземпляр типа <see cref="T:System.Data.SqlTypes.SqlXml" />.</summary>
      <returns>Неопределенный экземпляр типа <see cref="T:System.Data.SqlTypes.SqlXml" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlXml.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary>Описание этого члена см. в разделе <see cref="M:System.Xml.Serialization.IXmlSerializable.GetSchema" />.</summary>
      <returns>Схема <see cref="T:System.Xml.Schema.XmlSchema" />, описывающая представление XML объекта, полученного методом <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" /> и используемого методом <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlXml.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary>Описание этого члена см. в разделе <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" />.</summary>
      <param name="r">XmlReader.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlXml.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary>Описание этого члена см. в разделе <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" />.</summary>
      <param name="writer">XmlWriter.</param>
    </member>
    <member name="P:System.Data.SqlTypes.SqlXml.Value">
      <summary>Получает строковое представление XML-содержимого данного экземпляра <see cref="T:System.Data.SqlTypes.SqlXml" />.</summary>
      <returns>Строковое представление XML-содержимого.</returns>
    </member>
    <member name="T:System.Data.SqlTypes.StorageState">
      <summary>Перечисление <see cref="T:System.Data.SqlTypes.StorageState" /> не предназначено для использования в качестве самостоятельного компонента; оно является перечислением, от которого другие классы наследуют стандартные функциональные возможности.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.StorageState.Buffer">
      <summary>Размер буфера.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.StorageState.Stream">
      <summary>Поток.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.StorageState.UnmanagedBuffer">
      <summary>Неуправляемый буфер.</summary>
    </member>
    <member name="T:System.Data.SqlTypes.TypeBigIntSchemaImporterExtension">
      <summary>Класс <see cref="T:System.Data.SqlTypes.TypeBigIntSchemaImporterExtension" /> предназначен для использования не в качестве самостоятельного компонента, а в качестве базового класса, от которого другие классы наследуют стандартные функциональные возможности.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.TypeBigIntSchemaImporterExtension.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.SqlTypes.TypeBigIntSchemaImporterExtension" />.</summary>
    </member>
    <member name="T:System.Data.SqlTypes.TypeBinarySchemaImporterExtension">
      <summary>Класс <see cref="T:System.Data.SqlTypes.TypeBinarySchemaImporterExtension" /> предназначен для использования не в качестве самостоятельного компонента, а в качестве базового класса, от которого другие классы наследуют стандартные функциональные возможности.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.TypeBinarySchemaImporterExtension.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.SqlTypes.TypeBinarySchemaImporterExtension" />.</summary>
    </member>
    <member name="T:System.Data.SqlTypes.TypeBitSchemaImporterExtension">
      <summary>Класс <see cref="T:System.Data.SqlTypes.TypeBitSchemaImporterExtension" /> предназначен для использования не в качестве самостоятельного компонента, а в качестве базового класса, от которого другие классы наследуют стандартные функциональные возможности.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.TypeBitSchemaImporterExtension.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.SqlTypes.TypeBitSchemaImporterExtension" />.</summary>
    </member>
    <member name="T:System.Data.SqlTypes.TypeCharSchemaImporterExtension">
      <summary>Класс <see cref="T:System.Data.SqlTypes.TypeCharSchemaImporterExtension" /> предназначен для использования не в качестве самостоятельного компонента, а в качестве базового класса, от которого другие классы наследуют стандартные функциональные возможности.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.TypeCharSchemaImporterExtension.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.SqlTypes.TypeCharSchemaImporterExtension" />.</summary>
    </member>
    <member name="T:System.Data.SqlTypes.TypeDateTimeSchemaImporterExtension">
      <summary>Класс <see cref="T:System.Data.SqlTypes.TypeDateTimeSchemaImporterExtension" /> предназначен для использования не в качестве самостоятельного компонента, а в качестве базового класса, от которого другие классы наследуют стандартные функциональные возможности.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.TypeDateTimeSchemaImporterExtension.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.SqlTypes.TypeDateTimeSchemaImporterExtension" />.</summary>
    </member>
    <member name="T:System.Data.SqlTypes.TypeDecimalSchemaImporterExtension">
      <summary>Класс <see cref="T:System.Data.SqlTypes.TypeDecimalSchemaImporterExtension" /> предназначен для использования не в качестве самостоятельного компонента, а в качестве базового класса, от которого другие классы наследуют стандартные функциональные возможности.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.TypeDecimalSchemaImporterExtension.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.SqlTypes.TypeDecimalSchemaImporterExtension" />.</summary>
    </member>
    <member name="T:System.Data.SqlTypes.TypeFloatSchemaImporterExtension">
      <summary>Класс <see cref="T:System.Data.SqlTypes.TypeFloatSchemaImporterExtension" /> предназначен для использования не в качестве самостоятельного компонента, а в качестве базового класса, от которого другие классы наследуют стандартные функциональные возможности.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.TypeFloatSchemaImporterExtension.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.SqlTypes.TypeFloatSchemaImporterExtension" />.</summary>
    </member>
    <member name="T:System.Data.SqlTypes.TypeIntSchemaImporterExtension">
      <summary>Класс <see cref="T:System.Data.SqlTypes.TypeIntSchemaImporterExtension" /> предназначен для использования не в качестве самостоятельного компонента, а в качестве базового класса, от которого другие классы наследуют стандартные функциональные возможности.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.TypeIntSchemaImporterExtension.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.SqlTypes.TypeIntSchemaImporterExtension" />.</summary>
    </member>
    <member name="T:System.Data.SqlTypes.TypeMoneySchemaImporterExtension">
      <summary>Класс <see cref="T:System.Data.SqlTypes.TypeMoneySchemaImporterExtension" /> предназначен для использования не в качестве самостоятельного компонента, а в качестве базового класса, от которого другие классы наследуют стандартные функциональные возможности.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.TypeMoneySchemaImporterExtension.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.SqlTypes.TypeMoneySchemaImporterExtension" />.</summary>
    </member>
    <member name="T:System.Data.SqlTypes.TypeNCharSchemaImporterExtension">
      <summary>Класс <see cref="T:System.Data.SqlTypes.TypeNCharSchemaImporterExtension" /> предназначен для использования не в качестве самостоятельного компонента, а в качестве базового класса, от которого другие классы наследуют стандартные функциональные возможности.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.TypeNCharSchemaImporterExtension.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.SqlTypes.TypeNCharSchemaImporterExtension" />.</summary>
    </member>
    <member name="T:System.Data.SqlTypes.TypeNTextSchemaImporterExtension">
      <summary>Класс <see cref="T:System.Data.SqlTypes.TypeNTextSchemaImporterExtension" /> предназначен для использования не в качестве самостоятельного компонента, а в качестве базового класса, от которого другие классы наследуют стандартные функциональные возможности.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.TypeNTextSchemaImporterExtension.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.SqlTypes.TypeNTextSchemaImporterExtension" />.</summary>
    </member>
    <member name="T:System.Data.SqlTypes.TypeNumericSchemaImporterExtension">
      <summary>Класс <see cref="T:System.Data.SqlTypes.TypeNumericSchemaImporterExtension" /> предназначен для использования не в качестве самостоятельного компонента, а в качестве базового класса, от которого другие классы наследуют стандартные функциональные возможности.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.TypeNumericSchemaImporterExtension.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.SqlTypes.TypeNumericSchemaImporterExtension" />.</summary>
    </member>
    <member name="T:System.Data.SqlTypes.TypeNVarCharSchemaImporterExtension">
      <summary>Класс <see cref="T:System.Data.SqlTypes.TypeNVarCharSchemaImporterExtension" /> предназначен для использования не в качестве самостоятельного компонента, а в качестве базового класса, от которого другие классы наследуют стандартные функциональные возможности.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.TypeNVarCharSchemaImporterExtension.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.SqlTypes.TypeNVarCharSchemaImporterExtension" />.</summary>
    </member>
    <member name="T:System.Data.SqlTypes.TypeRealSchemaImporterExtension">
      <summary>Класс <see cref="T:System.Data.SqlTypes.TypeRealSchemaImporterExtension" /> предназначен для использования не в качестве самостоятельного компонента, а в качестве базового класса, от которого другие классы наследуют стандартные функциональные возможности.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.TypeRealSchemaImporterExtension.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.SqlTypes.TypeRealSchemaImporterExtension" />.</summary>
    </member>
    <member name="T:System.Data.SqlTypes.TypeSmallDateTimeSchemaImporterExtension">
      <summary>Класс TypeSmallDateTimeSchemaImporterExtension предназначен для использования не в качестве самостоятельного компонента, а в качестве класса, от которого другие классы наследуют стандартные функциональные возможности.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.TypeSmallDateTimeSchemaImporterExtension.#ctor">
      <summary>Инициализирует новый экземпляр класса TypeSmallDateTimeSchemaImporterExtension.</summary>
    </member>
    <member name="T:System.Data.SqlTypes.TypeSmallIntSchemaImporterExtension">
      <summary>Класс <see cref="T:System.Data.SqlTypes.TypeSmallIntSchemaImporterExtension" /> предназначен для использования не в качестве самостоятельного компонента, а в качестве базового класса, от которого другие классы наследуют стандартные функциональные возможности.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.TypeSmallIntSchemaImporterExtension.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.SqlTypes.TypeSmallIntSchemaImporterExtension" />.</summary>
    </member>
    <member name="T:System.Data.SqlTypes.TypeSmallMoneySchemaImporterExtension">
      <summary>Класс <see cref="T:System.Data.SqlTypes.TypeSmallMoneySchemaImporterExtension" /> предназначен для использования не в качестве самостоятельного компонента, а в качестве базового класса, от которого другие классы наследуют стандартные функциональные возможности.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.TypeSmallMoneySchemaImporterExtension.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.SqlTypes.TypeSmallMoneySchemaImporterExtension" />.</summary>
    </member>
    <member name="T:System.Data.SqlTypes.TypeTextSchemaImporterExtension">
      <summary>Класс <see cref="T:System.Data.SqlTypes.TypeTextSchemaImporterExtension" /> предназначен для использования не в качестве самостоятельного компонента, а в качестве базового класса, от которого другие классы наследуют стандартные функциональные возможности.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.TypeTextSchemaImporterExtension.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.SqlTypes.TypeTextSchemaImporterExtension" />.</summary>
    </member>
    <member name="T:System.Data.SqlTypes.TypeTinyIntSchemaImporterExtension">
      <summary>Класс <see cref="T:System.Data.SqlTypes.TypeTinyIntSchemaImporterExtension" /> предназначен для использования не в качестве самостоятельного компонента, а в качестве базового класса, от которого другие классы наследуют стандартные функциональные возможности.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.TypeTinyIntSchemaImporterExtension.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.SqlTypes.TypeTinyIntSchemaImporterExtension" />.</summary>
    </member>
    <member name="T:System.Data.SqlTypes.TypeUniqueIdentifierSchemaImporterExtension">
      <summary>Класс <see cref="T:System.Data.SqlTypes.TypeUniqueIdentifierSchemaImporterExtension" /> предназначен для использования не в качестве самостоятельного компонента, а в качестве базового класса, от которого другие классы наследуют стандартные функциональные возможности.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.TypeUniqueIdentifierSchemaImporterExtension.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.SqlTypes.TypeUniqueIdentifierSchemaImporterExtension" />.</summary>
    </member>
    <member name="T:System.Data.SqlTypes.TypeVarBinarySchemaImporterExtension">
      <summary>Класс <see cref="T:System.Data.SqlTypes.TypeVarBinarySchemaImporterExtension" /> предназначен для использования не в качестве самостоятельного компонента, а в качестве базового класса, от которого другие классы наследуют стандартные функциональные возможности.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.TypeVarBinarySchemaImporterExtension.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.SqlTypes.TypeVarBinarySchemaImporterExtension" />.</summary>
    </member>
    <member name="T:System.Data.SqlTypes.TypeVarCharSchemaImporterExtension">
      <summary>Класс <see cref="T:System.Data.SqlTypes.TypeVarCharSchemaImporterExtension" /> предназначен для использования не в качестве самостоятельного компонента, а в качестве базового класса, от которого другие классы наследуют стандартные функциональные возможности.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.TypeVarCharSchemaImporterExtension.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.SqlTypes.TypeVarCharSchemaImporterExtension" />.</summary>
    </member>
    <member name="T:System.Data.SqlTypes.TypeVarImageSchemaImporterExtension">
      <summary>Класс <see cref="T:System.Data.SqlTypes.TypeVarImageSchemaImporterExtension" /> предназначен для использования не в качестве самостоятельного компонента, а в качестве базового класса, от которого другие классы наследуют стандартные функциональные возможности.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.TypeVarImageSchemaImporterExtension.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.SqlTypes.TypeVarImageSchemaImporterExtension" />.</summary>
    </member>
    <member name="T:System.Data.StateChangeEventArgs">
      <summary>Предоставляет данные для события изменения состояния поставщика данных .NET Framework.</summary>
    </member>
    <member name="M:System.Data.StateChangeEventArgs.#ctor(System.Data.ConnectionState,System.Data.ConnectionState)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.StateChangeEventArgs" /> при данном исходном и текущем состоянии объекта.</summary>
      <param name="originalState">Одно из значений перечисления <see cref="T:System.Data.ConnectionState" />.</param>
      <param name="currentState">Одно из значений перечисления <see cref="T:System.Data.ConnectionState" />.</param>
    </member>
    <member name="P:System.Data.StateChangeEventArgs.CurrentState">
      <summary>Получает новое состояние подключения. Объект подключения будет уже в новом состоянии, когда событие запущено.</summary>
      <returns>Одно из значений перечисления <see cref="T:System.Data.ConnectionState" />.</returns>
    </member>
    <member name="P:System.Data.StateChangeEventArgs.OriginalState">
      <summary>Получает текущее состояние подключения.</summary>
      <returns>Одно из значений перечисления <see cref="T:System.Data.ConnectionState" />.</returns>
    </member>
    <member name="T:System.Data.StateChangeEventH*******ler">
      <summary>Представляет метод, обрабатывающий событие <see cref="E:System.Data.Common.DbConnection.StateChange" />.</summary>
      <param name="sender">Источник события.</param>
      <param name="e">Объект класса <see cref="T:System.Data.StateChangeEventArgs" />, содержащий данные о событии.</param>
    </member>
    <member name="T:System.Data.StatementCompletedEventArgs">
      <summary>Предоставляет дополнительные сведения для события <see cref="E:System.Data.SqlClient.SqlComm*******.StatementCompleted" />.</summary>
    </member>
    <member name="M:System.Data.StatementCompletedEventArgs.#ctor(System.Int32)">
      <summary>Создает новый экземпляр класса <see cref="T:System.Data.StatementCompletedEventArgs" />.</summary>
      <param name="recordCount">Указывает количество строк, на которые повлиял оператор, применение которого вызвало событие <see cref="E:System.Data.SqlClient.SqlComm*******.StatementCompleted" />.</param>
    </member>
    <member name="P:System.Data.StatementCompletedEventArgs.RecordCount">
      <summary>Указывает количество строк, на которые повлиял оператор, применение которого вызвало событие <see cref="E:System.Data.SqlClient.SqlComm*******.StatementCompleted" />.</summary>
      <returns>Число обработанных строк.</returns>
    </member>
    <member name="T:System.Data.StatementCompletedEventH*******ler">
      <summary>Тип делегата для обработчиков событий, относящихся к событию <see cref="E:System.Data.SqlClient.SqlComm*******.StatementCompleted" />.</summary>
      <param name="sender">Источник события.</param>
      <param name="e">Данные для события.</param>
    </member>
    <member name="T:System.Data.StatementType">
      <summary>Задает тип SQL запроса для использования в классах <see cref="T:System.Data.OleDb.OleDbRowUpdatedEventArgs" />, <see cref="T:System.Data.OleDb.OleDbRowUpdatingEventArgs" />, <see cref="T:System.Data.SqlClient.SqlRowUpdatedEventArgs" /> или <see cref="T:System.Data.SqlClient.SqlRowUpdatingEventArgs" />.</summary>
    </member>
    <member name="F:System.Data.StatementType.Batch">
      <summary>SQL-запрос, являющийся пакетным оператором.</summary>
    </member>
    <member name="F:System.Data.StatementType.Delete">
      <summary>SQL-запрос, являющийся оператором DELETE.</summary>
    </member>
    <member name="F:System.Data.StatementType.Insert">
      <summary>SQL-запрос, являющийся оператором INSERT.</summary>
    </member>
    <member name="F:System.Data.StatementType.Select">
      <summary>SQL-запрос, являющийся оператором SELECT.</summary>
    </member>
    <member name="F:System.Data.StatementType.Update">
      <summary>SQL-запрос, являющийся оператором UPDATE.</summary>
    </member>
    <member name="T:System.Data.StrongTypingException">
      <summary>Исключение, которое выдается строго типизированным объектом <see cref="T:System.Data.DataSet" />, когда пользователь получает доступ к значению <see langword="DBNull" />.</summary>
    </member>
    <member name="M:System.Data.StrongTypingException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.StrongTypingException" />.</summary>
    </member>
    <member name="M:System.Data.StrongTypingException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.StrongTypingException" />, используя заданную информацию сериализации и контекст потоков.</summary>
      <param name="info">Объект <see cref="T:System.Runtime.Serialization.SerializationInfo" />.</param>
      <param name="context">Структура <see cref="T:System.Runtime.Serialization.StreamingContext" />.</param>
    </member>
    <member name="M:System.Data.StrongTypingException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.StrongTypingException" /> с заданной строкой.</summary>
      <param name="message">Строка, отображаемая при возникновении исключения.</param>
    </member>
    <member name="M:System.Data.StrongTypingException.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.StrongTypingException" />, используя заданную строку и внутреннее исключение.</summary>
      <param name="s">Строка, отображаемая при возникновении исключения.</param>
      <param name="innerException">Ссылка на внутреннее исключение.</param>
    </member>
    <member name="T:System.Data.SyntaxErrorException">
      <summary>Предоставляет исключение, возникающее, когда свойство <see cref="P:System.Data.DataColumn.Expression" /> объекта <see cref="T:System.Data.DataColumn" /> содержит синтаксическую ошибку.</summary>
    </member>
    <member name="M:System.Data.SyntaxErrorException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.SyntaxErrorException" />.</summary>
    </member>
    <member name="M:System.Data.SyntaxErrorException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.SyntaxErrorException" /> со свойствами <see cref="T:System.Runtime.Serialization.SerializationInfo" /> и <see cref="T:System.Runtime.Serialization.StreamingContext" />.</summary>
      <param name="info">Данные, необходимые для сериализации или десериализации объекта.</param>
      <param name="context">Источник и назначение определенного сериализованного потока.</param>
    </member>
    <member name="M:System.Data.SyntaxErrorException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.SyntaxErrorException" /> с заданной строкой.</summary>
      <param name="s">Строка, отображаемая при возникновении исключения.</param>
    </member>
    <member name="M:System.Data.SyntaxErrorException.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.SyntaxErrorException" /> указанным сообщением об ошибке и ссылкой на внутреннее исключение, вызвавшее данное исключение.</summary>
      <param name="message">Сообщение об ошибке, указывающее причину создания исключения.</param>
      <param name="innerException">Исключение, вызвавшее текущее исключение, или пустая ссылка (<see langword="Nothing" /> в Visual Basic), если внутреннее исключение не задано.</param>
    </member>
    <member name="T:System.Data.TypedDataSetGenerator">
      <summary>Используется для создания строго типизированного объекта <see cref="T:System.Data.DataSet" />.</summary>
    </member>
    <member name="M:System.Data.TypedDataSetGenerator.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.TypedDataSetGenerator" />.</summary>
    </member>
    <member name="M:System.Data.TypedDataSetGenerator.Generate(System.Data.DataSet,System.CodeDom.CodeNamespace,System.CodeDom.Compiler.ICodeGenerator)">
      <summary>Создает строго типизированный набор данных <see cref="T:System.Data.DataSet" />.</summary>
      <param name="dataSet">Источник <see cref="T:System.Data.DataSet" />, который определяет метаданные для типизированного объекта <see cref="T:System.Data.DataSet" />.</param>
      <param name="codeNamespace">Пространство имен, которое предоставляет целевое пространство имен для типизированного объекта <see cref="T:System.Data.DataSet" />.</param>
      <param name="codeGen">Генератор, используемый для создания типизированного объекта <see cref="T:System.Data.DataSet" />.</param>
    </member>
    <member name="M:System.Data.TypedDataSetGenerator.GenerateIdName(System.String,System.CodeDom.Compiler.ICodeGenerator)">
      <summary>Преобразует строку в допустимое имя типизированного объекта <see cref="T:System.Data.DataSet" />.</summary>
      <param name="name">Имя источника для преобразования в допустимое имя типизированного объекта <see cref="T:System.Data.DataSet" />.</param>
      <param name="codeGen">Генератор, используемый для выполнения преобразования.</param>
      <returns>Строка, представляющая собой преобразованное имя.</returns>
    </member>
    <member name="T:System.Data.TypedDataSetGeneratorException">
      <summary>Это исключение создается в случае конфликта имен при создании объекта <see cref="T:System.Data.DataSet" /> со строгой типизацией.</summary>
    </member>
    <member name="M:System.Data.TypedDataSetGeneratorException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.TypedDataSetGeneratorException" />.</summary>
    </member>
    <member name="M:System.Data.TypedDataSetGeneratorException.#ctor(System.Collections.ArrayList)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.TypedDataSetGeneratorException" />.</summary>
      <param name="list">Объект <see cref="T:System.Collections.ArrayList" />, содержащий динамический список исключений.</param>
    </member>
    <member name="M:System.Data.TypedDataSetGeneratorException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.TypedDataSetGeneratorException" />, используя заданную информацию сериализации и контекст потоков.</summary>
      <param name="info">Объект <see cref="T:System.Runtime.Serialization.SerializationInfo" />.</param>
      <param name="context">Структура <see cref="T:System.Runtime.Serialization.StreamingContext" />.</param>
    </member>
    <member name="M:System.Data.TypedDataSetGeneratorException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.TypedDataSetGeneratorException" /> с заданной строкой.</summary>
      <param name="message">Строка, отображаемая при возникновении исключения.</param>
    </member>
    <member name="M:System.Data.TypedDataSetGeneratorException.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.TypedDataSetGeneratorException" />, используя заданную строку и внутреннее исключение.</summary>
      <param name="message">Строка, отображаемая при возникновении исключения.</param>
      <param name="innerException">Ссылка на внутреннее исключение.</param>
    </member>
    <member name="P:System.Data.TypedDataSetGeneratorException.ErrorList">
      <summary>Получает динамический список созданных ошибок.</summary>
      <returns>Объект <see cref="T:System.Collections.ArrayList" />.</returns>
    </member>
    <member name="M:System.Data.TypedDataSetGeneratorException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Реализует интерфейс <see langword="ISerializable" /> и возвращает данные, необходимые для сериализации объекта <see cref="T:System.Data.TypedDataSetGeneratorException" />.</summary>
      <param name="info">Объект <see cref="T:System.Runtime.Serialization.SerializationInfo" />.</param>
      <param name="context">Структура <see cref="T:System.Runtime.Serialization.StreamingContext" />.</param>
    </member>
    <member name="T:System.Data.UniqueConstraint">
      <summary>Предоставляет ограничение на набор столбцов, в которых все значения должны быть уникальными.</summary>
    </member>
    <member name="M:System.Data.UniqueConstraint.#ctor(System.Data.DataColumn)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.UniqueConstraint" /> указанным значением <see cref="T:System.Data.DataColumn" />.</summary>
      <param name="column">Объект <see cref="T:System.Data.DataColumn" />, который требуется ограничить.</param>
    </member>
    <member name="M:System.Data.UniqueConstraint.#ctor(System.Data.DataColumn,System.Boolean)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.UniqueConstraint" /> объектом <see cref="T:System.Data.DataColumn" />, который необходимо ограничить, и значением, определяющим, является ли ограничение первичным ключом.</summary>
      <param name="column">Объект <see cref="T:System.Data.DataColumn" />, который требуется ограничить.</param>
      <param name="isPrimaryKey">Значение <see langword="true" /> указывает, что ограничение является первичным ключом; в обратном случае — значение <see langword="false" />.</param>
    </member>
    <member name="M:System.Data.UniqueConstraint.#ctor(System.Data.DataColumn[])">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.UniqueConstraint" />, используя заданный массив объектов <see cref="T:System.Data.DataColumn" />.</summary>
      <param name="columns">Массив объектов <see cref="T:System.Data.DataColumn" />, которые должны быть ограничены.</param>
    </member>
    <member name="M:System.Data.UniqueConstraint.#ctor(System.Data.DataColumn[],System.Boolean)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.UniqueConstraint" /> массивом объектов <see cref="T:System.Data.DataColumn" />, которые необходимо ограничить, и значением, определяющим является ли ограничение первичным ключом.</summary>
      <param name="columns">Массив объектов <see cref="T:System.Data.DataColumn" />, которые должны быть ограничены.</param>
      <param name="isPrimaryKey">Значение <see langword="true" /> указывает, что ограничение является первичным ключом; в обратном случае — значение <see langword="false" />.</param>
    </member>
    <member name="M:System.Data.UniqueConstraint.#ctor(System.String,System.Data.DataColumn)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.UniqueConstraint" /> заданным именем и объектом <see cref="T:System.Data.DataColumn" />.</summary>
      <param name="name">Имя ограничения.</param>
      <param name="column">Объект <see cref="T:System.Data.DataColumn" />, который требуется ограничить.</param>
    </member>
    <member name="M:System.Data.UniqueConstraint.#ctor(System.String,System.Data.DataColumn,System.Boolean)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.UniqueConstraint" /> заданным именем, объектом <see cref="T:System.Data.DataColumn" />, который необходимо ограничить, и значением, определяющим, является ли ограничение первичным ключом.</summary>
      <param name="name">Имя ограничения.</param>
      <param name="column">Объект <see cref="T:System.Data.DataColumn" />, который требуется ограничить.</param>
      <param name="isPrimaryKey">Значение <see langword="true" /> указывает, что ограничение является первичным ключом; в обратном случае — значение <see langword="false" />.</param>
    </member>
    <member name="M:System.Data.UniqueConstraint.#ctor(System.String,System.Data.DataColumn[])">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.UniqueConstraint" /> заданным именем и массивом объектов <see cref="T:System.Data.DataColumn" />.</summary>
      <param name="name">Имя ограничения.</param>
      <param name="columns">Массив объектов <see cref="T:System.Data.DataColumn" />, которые должны быть ограничены.</param>
    </member>
    <member name="M:System.Data.UniqueConstraint.#ctor(System.String,System.Data.DataColumn[],System.Boolean)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.UniqueConstraint" /> заданным именем, массивом объектов <see cref="T:System.Data.DataColumn" />, которые необходимо ограничить, и значением, определяющим является ли ограничение первичным ключом.</summary>
      <param name="name">Имя ограничения.</param>
      <param name="columns">Массив объектов <see cref="T:System.Data.DataColumn" />, которые должны быть ограничены.</param>
      <param name="isPrimaryKey">Значение <see langword="true" /> указывает, что ограничение является первичным ключом; в обратном случае — значение <see langword="false" />.</param>
    </member>
    <member name="M:System.Data.UniqueConstraint.#ctor(System.String,System.String[],System.Boolean)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.UniqueConstraint" /> заданным именем, массивом объектов <see cref="T:System.Data.DataColumn" />, которые необходимо ограничить, и значением, определяющим является ли ограничение первичным ключом.</summary>
      <param name="name">Имя ограничения.</param>
      <param name="columnNames">Массив объектов <see cref="T:System.Data.DataColumn" />, которые должны быть ограничены.</param>
      <param name="isPrimaryKey">Значение <see langword="true" /> указывает, что ограничение является первичным ключом; в обратном случае — значение <see langword="false" />.</param>
    </member>
    <member name="P:System.Data.UniqueConstraint.Columns">
      <summary>Получает массив столбцов, на которые влияет это ограничение.</summary>
      <returns>Массив объектов <see cref="T:System.Data.DataColumn" />.</returns>
    </member>
    <member name="M:System.Data.UniqueConstraint.Equals(System.Object)">
      <summary>Сравнивает это ограничение со вторым, чтобы определить, являются ли они идентичными.</summary>
      <param name="key2">Объект, с которым сравнивается объект <see cref="T:System.Data.UniqueConstraint" />.</param>
      <returns>Значение <see langword="true" />, если ограничения одинаковы; в обратном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.UniqueConstraint.GetHashCode">
      <summary>Возвращает хэш-код этого экземпляра объекта <see cref="T:System.Data.UniqueConstraint" />.</summary>
      <returns>Хэш-код в виде 32-разрядного целого числа со знаком.</returns>
    </member>
    <member name="P:System.Data.UniqueConstraint.IsPrimaryKey">
      <summary>Получает значение, указывающее, является ли ограничение первичным ключом.</summary>
      <returns>Значение <see langword="true" />, если ограничение является первичным ключом; в обратном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.UniqueConstraint.Table">
      <summary>Получает таблицу, к которой относится это ограничение.</summary>
      <returns>Объект <see cref="T:System.Data.DataTable" />, которому принадлежит данное ограничение.</returns>
    </member>
    <member name="T:System.Data.UpdateRowSource">
      <summary>Задает способ применения результатов команды запроса к обновляемой строке.</summary>
    </member>
    <member name="F:System.Data.UpdateRowSource.Both">
      <summary>Выходные параметры и первая возвращаемая строка отображаются в измененной строке объекта <see cref="T:System.Data.DataSet" />.</summary>
    </member>
    <member name="F:System.Data.UpdateRowSource.FirstReturnedRecord">
      <summary>Данные первой возвращаемой строки отображаются в измененной строке объекта <see cref="T:System.Data.DataSet" />.</summary>
    </member>
    <member name="F:System.Data.UpdateRowSource.None">
      <summary>Любые возвращенные параметры или строки пропускаются.</summary>
    </member>
    <member name="F:System.Data.UpdateRowSource.OutputParameters">
      <summary>Выходные параметры отображаются в измененной строке объекта <see cref="T:System.Data.DataSet" />.</summary>
    </member>
    <member name="T:System.Data.UpdateStatus">
      <summary>Указывает действия, предпринимаемые в отношении текущей строки и остальных строк во время выполнения метода <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</summary>
    </member>
    <member name="F:System.Data.UpdateStatus.Continue">
      <summary>Класс <see cref="T:System.Data.Common.DataAdapter" /> для продолжения обработки строк.</summary>
    </member>
    <member name="F:System.Data.UpdateStatus.ErrorsOccurred">
      <summary>Обработчик событий сообщает, что обновление будет рассматриваться как ошибка.</summary>
    </member>
    <member name="F:System.Data.UpdateStatus.SkipAllRemainingRows">
      <summary>Текущая строка и все остальные строки не обновляются.</summary>
    </member>
    <member name="F:System.Data.UpdateStatus.SkipCurrentRow">
      <summary>Текущая строка не обновляется.</summary>
    </member>
    <member name="T:System.Data.VersionNotFoundException">
      <summary>Предоставляет исключение, возникающее при попытке возврата версии объекта <see cref="T:System.Data.DataRow" />, который был удален.</summary>
    </member>
    <member name="M:System.Data.VersionNotFoundException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.VersionNotFoundException" />.</summary>
    </member>
    <member name="M:System.Data.VersionNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.VersionNotFoundException" /> со сведениями о сериализации.</summary>
      <param name="info">Данные, необходимые для сериализации или десериализации объекта.</param>
      <param name="context">Описание источника и назначения заданного сериализованного потока.</param>
    </member>
    <member name="M:System.Data.VersionNotFoundException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.VersionNotFoundException" /> с заданной строкой.</summary>
      <param name="s">Строка, отображаемая при возникновении исключения.</param>
    </member>
    <member name="M:System.Data.VersionNotFoundException.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.VersionNotFoundException" /> указанным сообщением об ошибке и ссылкой на внутреннее исключение, вызвавшее данное исключение.</summary>
      <param name="message">Сообщение об ошибке, указывающее причину создания исключения.</param>
      <param name="innerException">Исключение, вызвавшее текущее исключение, или пустая ссылка (<see langword="Nothing" /> в Visual Basic), если внутреннее исключение не задано.</param>
    </member>
    <member name="T:System.Data.XmlReadMode">
      <summary>Указывает, как считывать XML-данные и реляционную схему в объект <see cref="T:System.Data.DataSet" />.</summary>
    </member>
    <member name="F:System.Data.XmlReadMode.Auto">
      <summary>По умолчанию.</summary>
    </member>
    <member name="F:System.Data.XmlReadMode.DiffGram">
      <summary>Считывает DiffGram, применяя изменения из DiffGram к объекту <see cref="T:System.Data.DataSet" />. Семантика идентична семантике операции <see cref="M:System.Data.DataSet.Merge(System.Data.DataSet)" />. Как и в случае операции <see cref="M:System.Data.DataSet.Merge(System.Data.DataSet)" />, значения <see cref="P:System.Data.DataRow.RowState" /> сохраняются. Входные данные метода <see cref="M:System.Data.DataSet.ReadXml(System.Xml.XmlReader)" /> с DiffGrams могут быть получены только с использованием выходных данных метода <see cref="M:System.Data.DataSet.WriteXml(System.IO.Stream)" /> в виде DiffGram.</summary>
    </member>
    <member name="F:System.Data.XmlReadMode.Fragment">
      <summary>Считывает XML-фрагменты, которые созданы при выполнении запросов FOR XML к экземпляру SQL Server. Когда для режима <see cref="T:System.Data.XmlReadMode" /> задано значение <see langword="Fragment" />, пространство имен по умолчанию читается как встроенная схема.</summary>
    </member>
    <member name="F:System.Data.XmlReadMode.IgnoreSchema">
      <summary>Пропускает любую встроенную схему и считывает данные в существующую схему <see cref="T:System.Data.DataSet" />. Если какие-либо данные не соответствуют существующей схеме, они удаляются (включая данные из разных пространств имен, определенных для объекта <see cref="T:System.Data.DataSet" />). Если данные являются DiffGram, значение <see langword="IgnoreSchema" /> имеет такую же функциональность, что и <see langword="DiffGram" />.</summary>
    </member>
    <member name="F:System.Data.XmlReadMode.InferSchema">
      <summary>Игнорирует все встроенные схемы, выводит схему из данных и загружает их. Если объект <see cref="T:System.Data.DataSet" /> уже содержит схему, текущая схема расширяется за счет добавления новых таблиц или столбцов в существующие таблицы. Если добавляемая таблица уже существует, но с другим пространством имен, или если добавляемые столбцы конфликтуют с существующими, выдается исключение.</summary>
    </member>
    <member name="F:System.Data.XmlReadMode.InferTypedSchema">
      <summary>Игнорирует все встроенные схемы, выводит строго типизированную схему из данных и загружает их. Если тип не может быть выведен из данных, он интерпретируется как строковые данные. Если объект <see cref="T:System.Data.DataSet" /> уже содержит схему, текущая схема расширяется за счет добавления либо новых таблиц, либо столбцов в существующие таблицы. Если добавляемая таблица уже существует, но с другим пространством имен, или если добавляемые столбцы конфликтуют с существующими, выдается исключение.</summary>
    </member>
    <member name="F:System.Data.XmlReadMode.ReadSchema">
      <summary>Считывает любую встроенную схему и загружает данные. Если объект <see cref="T:System.Data.DataSet" /> уже содержит схему, новая таблица может быть в нее добавлена, но если какая-либо таблица во внутренней схеме уже существует в объекте <see cref="T:System.Data.DataSet" />, выдается исключение.</summary>
    </member>
    <member name="T:System.Data.XmlWriteMode">
      <summary>Указывает, как записывать XML-данные и реляционную схему из объекта <see cref="T:System.Data.DataSet" />.</summary>
    </member>
    <member name="F:System.Data.XmlWriteMode.DiffGram">
      <summary>Записывает весь <see cref="T:System.Data.DataSet" /> как DiffGram, включая исходные и текущие значения. Для создания формата DiffGram, содержащего только измененные значения, следует вызвать метод <see cref="M:System.Data.DataSet.GetChanges" />, а затем — метод <see cref="M:System.Data.DataSet.WriteXml(System.IO.Stream)" /> как DiffGram для возвращенного объекта <see cref="T:System.Data.DataSet" />.</summary>
    </member>
    <member name="F:System.Data.XmlWriteMode.IgnoreSchema">
      <summary>Записывает текущее содержимое объекта <see cref="T:System.Data.DataSet" /> как XML-данные без схемы XSD. Если никакие данные не загружены в объект <see cref="T:System.Data.DataSet" />, запись не производится.</summary>
    </member>
    <member name="F:System.Data.XmlWriteMode.WriteSchema">
      <summary>Записывает текущее содержимое объекта <see cref="T:System.Data.DataSet" /> в виде XML-данных с реляционной структурой как встроенную схему XSD. Если объект <see cref="T:System.Data.DataSet" /> имеет только схему без данных, записывается только встроенная схема. Если объект <see cref="T:System.Data.DataSet" /> не имеет текущей схемы, запись не производится.</summary>
    </member>
    <member name="T:System.Xml.XmlDataDocument">
      <summary>Обеспечивает хранение, получение и управление структурированными данными с использованием реляционного объекта <see cref="T:System.Data.DataSet" />.</summary>
    </member>
    <member name="M:System.Xml.XmlDataDocument.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.XmlDataDocument" />.</summary>
    </member>
    <member name="M:System.Xml.XmlDataDocument.#ctor(System.Data.DataSet)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.XmlDataDocument" /> указанным значением <see cref="T:System.Data.DataSet" />.</summary>
      <param name="dataset">Объект <see langword="DataSet" /> для загрузки в <see langword="XmlDataDocument" />.</param>
    </member>
    <member name="M:System.Xml.XmlDataDocument.CloneNode(System.Boolean)">
      <summary>Создает дубликат текущего узла.</summary>
      <param name="deep">Значение <see langword="true" /> для рекурсивного клонирования поддерева указанного узла; значение <see langword="false" /> для клонирования только самого узла.</param>
      <returns>Точная копия узла.</returns>
    </member>
    <member name="M:System.Xml.XmlDataDocument.CreateElement(System.String,System.String,System.String)">
      <summary>Создает элемент с помощью указанных <see cref="P:System.Xml.XmlNode.Prefix" />, <see cref="P:System.Xml.XmlDocument.LocalName" /> и <see cref="P:System.Xml.XmlNode.NamespaceURI" />.</summary>
      <param name="prefix">Префикс нового элемента. Если значение String.Empty или <see langword="null" />, префикс отсутствует.</param>
      <param name="localName">Локальное имя нового элемента.</param>
      <param name="namespaceURI">Уникальный код ресурса пространства имен нового элемента. Если значение String.Empty или <see langword="null" />, URI пространства имен отсутствует.</param>
      <returns>Новый объект <see cref="T:System.Xml.XmlElement" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDataDocument.CreateEntityReference(System.String)">
      <summary>Создает объект <see cref="T:System.Xml.XmlEntityReference" /> с указанным именем.</summary>
      <param name="name">Имя ссылки на сущность.</param>
      <returns>Объект <see cref="T:System.Xml.XmlEntityReference" /> с указанным именем.</returns>
      <exception cref="T:System.NotSupportedException">Вызов этого метода.</exception>
    </member>
    <member name="M:System.Xml.XmlDataDocument.CreateNavigator(System.Xml.XmlNode)">
      <summary>Создает новый объект <see cref="T:System.Xml.XPath.XPathNavigator" /> для навигации в данном документе. Объект <see langword="XPathNavigator" /> находится в узле, заданном в параметре <paramref name="node" />.</summary>
      <param name="node">Узел <see cref="T:System.Xml.XmlNode" />, который будет служить исходной позицией навигатора.</param>
      <returns>Объект <see langword="XPathNavigator" />, используемый для перехода по документу.</returns>
    </member>
    <member name="P:System.Xml.XmlDataDocument.DataSet">
      <summary>Получает объект <see cref="T:System.Data.DataSet" />, обеспечивающий реляционное представление данных в <see langword="XmlDataDocument" />.</summary>
      <returns>Объект <see langword="DataSet" />, который можно использовать для доступа к данным в <see langword="XmlDataDocument" /> с помощью реляционной модели.</returns>
    </member>
    <member name="M:System.Xml.XmlDataDocument.GetElementById(System.String)">
      <summary>Возвращает элемент <see cref="T:System.Xml.XmlElement" /> с указанным идентификатором. Этот метод не поддерживается классом <see cref="T:System.Xml.XmlDataDocument" />. При вызове этого метода возникает исключение.</summary>
      <param name="elemId">Идентификатор атрибута для сопоставления.</param>
      <returns>Объект <see cref="T:System.Xml.XmlElement" /> с указанным идентификатором.</returns>
      <exception cref="T:System.NotSupportedException">Вызов этого метода.</exception>
    </member>
    <member name="M:System.Xml.XmlDataDocument.GetElementFromRow(System.Data.DataRow)">
      <summary>Получает объект <see cref="T:System.Xml.XmlElement" />, связанный с указанным объектом <see cref="T:System.Data.DataRow" />.</summary>
      <param name="r">Объект <see langword="DataRow" />, связанный с которым объект <see langword="XmlElement" /> необходимо получить.</param>
      <returns>Объект <see langword="XmlElement" />, содержащий представление заданного объекта <see langword="DataRow" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDataDocument.GetElementsByTagName(System.String)">
      <summary>Возвращает значение <see cref="T:System.Xml.XmlNodeList" />, содержащее список всех элементов-потомков, соответствующих указанному имени <see cref="P:System.Xml.XmlDocument.Name" />.</summary>
      <param name="name">Сопоставляемое полное имя. Оно противопоставляется свойству <see cref="P:System.Xml.XmlDocument.Name" /> соответствующего узла. Специальное значение "*" соответствует всем тегам.</param>
      <returns>Класс <see cref="T:System.Xml.XmlNodeList" />, содержащий список всех соответствующих узлов.</returns>
    </member>
    <member name="M:System.Xml.XmlDataDocument.GetRowFromElement(System.Xml.XmlElement)">
      <summary>Получает объект <see cref="T:System.Data.DataRow" />, связанный с указанным объектом <see cref="T:System.Xml.XmlElement" />.</summary>
      <param name="e">Объект <see langword="XmlElement" />, связанный с которым объект <see langword="DataRow" /> необходимо получить.</param>
      <returns>Объект <see langword="DataRow" />, содержащий представление <see langword="XmlElement" />; значение <see langword="null" />, если отсутствует объект <see langword="DataRow" />, связанный с <see langword="XmlElement" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDataDocument.Load(System.IO.Stream)">
      <summary>Загружает <see langword="XmlDataDocument" /> из указанного потока.</summary>
      <param name="inStream">Поток, содержащий загружаемый документ XML.</param>
    </member>
    <member name="M:System.Xml.XmlDataDocument.Load(System.IO.TextReader)">
      <summary>Загружает объект <see langword="XmlDataDocument" /> из указанного объекта <see cref="T:System.IO.TextReader" />.</summary>
      <param name="txtReader">
        <see langword="TextReader" />, используемый для передачи данных XML в документ.</param>
    </member>
    <member name="M:System.Xml.XmlDataDocument.Load(System.String)">
      <summary>Загружает объект <see langword="XmlDataDocument" /> по указанному URL-адресу.</summary>
      <param name="filename">Универсальный код ресурса (URI) файла, содержащего загружаемый XML-документ.</param>
    </member>
    <member name="M:System.Xml.XmlDataDocument.Load(System.Xml.XmlReader)">
      <summary>Загружает объект <see langword="XmlDataDocument" /> из указанного объекта <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="reader">Объект <see langword="XmlReader" />, содержащий загружаемый XML-документ.</param>
      <exception cref="T:System.NotSupportedException">Загружаемый XML содержит ссылки на сущность, и средство чтения не может разрешить сущности.</exception>
    </member>
  </members>
</doc>
