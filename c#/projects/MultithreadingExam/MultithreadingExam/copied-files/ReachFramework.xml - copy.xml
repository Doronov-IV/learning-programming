<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Activities</name>
  </assembly>
  <members>
    <member name="T:Microsoft.CSharp.Activities.CSharpReference`1">
      <summary>Указывает сведения о ссылке C#.</summary>
      <typeparam name="TResult" />
    </member>
    <member name="M:Microsoft.CSharp.Activities.CSharpReference`1.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:Microsoft.CSharp.Activities.CSharpReference`1" />.</summary>
    </member>
    <member name="M:Microsoft.CSharp.Activities.CSharpReference`1.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:Microsoft.CSharp.Activities.CSharpReference`1" /> с указанными текстом выражения.</summary>
      <param name="expressionText">Текст выражения.</param>
    </member>
    <member name="M:Microsoft.CSharp.Activities.CSharpReference`1.CacheMetadata(System.Activities.CodeActivityMetadata)">
      <summary>Компилирует новые метаданные в ссылку C#.</summary>
      <param name="metadata">Скомпилированные метаданные.</param>
    </member>
    <member name="M:Microsoft.CSharp.Activities.CSharpReference`1.Execute(System.Activities.CodeActivityContext)">
      <summary>Выполняет ссылку C#.</summary>
      <param name="context">Контекст.</param>
      <returns>Выполняемая ссылка.</returns>
    </member>
    <member name="P:Microsoft.CSharp.Activities.CSharpReference`1.ExpressionText">
      <summary>Получает или задает текст выражения для ссылки.</summary>
      <returns>Текст выражения для ссылки.</returns>
    </member>
    <member name="M:Microsoft.CSharp.Activities.CSharpReference`1.GetExpressionTree">
      <summary>Получает или дерево выражения для ссылки C#.</summary>
      <returns>Дерево выражения.</returns>
    </member>
    <member name="P:Microsoft.CSharp.Activities.CSharpReference`1.Language">
      <summary>Получает язык, используемый для ссылки.</summary>
      <returns>Язык, используемый для ссылки.</returns>
    </member>
    <member name="P:Microsoft.CSharp.Activities.CSharpReference`1.RequiresCompilation">
      <summary>Получает значение, указывающее, требует ли ссылка компиляции.</summary>
      <returns>Значение <see langword="True" />, если ссылка требует компиляции; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="T:Microsoft.CSharp.Activities.CSharpValue`1">
      <summary>Указывает сведения о значении C#.</summary>
      <typeparam name="TResult">Тип значения.</typeparam>
    </member>
    <member name="M:Microsoft.CSharp.Activities.CSharpValue`1.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:Microsoft.CSharp.Activities.CSharpValue`1" />.</summary>
    </member>
    <member name="M:Microsoft.CSharp.Activities.CSharpValue`1.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:Microsoft.CSharp.Activities.CSharpValue`1" /> с указанными текстом выражения.</summary>
      <param name="expressionText">Текст выражения.</param>
    </member>
    <member name="M:Microsoft.CSharp.Activities.CSharpValue`1.CacheMetadata(System.Activities.CodeActivityMetadata)">
      <summary>Компилирует новые метаданные в значение C#.</summary>
      <param name="metadata">Скомпилированные метаданные.</param>
    </member>
    <member name="M:Microsoft.CSharp.Activities.CSharpValue`1.Execute(System.Activities.CodeActivityContext)">
      <summary>Выполняет значение C#.</summary>
      <param name="context">Контекст.</param>
      <returns>Выполняемая ссылка.</returns>
    </member>
    <member name="P:Microsoft.CSharp.Activities.CSharpValue`1.ExpressionText">
      <summary>Получает или задает используемый текст выражения.</summary>
      <returns>Используемый текст выражения.</returns>
    </member>
    <member name="M:Microsoft.CSharp.Activities.CSharpValue`1.GetExpressionTree">
      <summary>Получает или дерево выражения для значения C#.</summary>
      <returns>Дерево выражения.</returns>
    </member>
    <member name="P:Microsoft.CSharp.Activities.CSharpValue`1.Language">
      <summary>Получает используемый язык.</summary>
      <returns>Используемый язык</returns>
    </member>
    <member name="P:Microsoft.CSharp.Activities.CSharpValue`1.RequiresCompilation">
      <summary>Получает значение, указывающее, требует ли значение компиляции.</summary>
      <returns>Значение <see langword="True" />, если значение требует компиляции; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Activities.VisualBasic">
      <summary>Служит хранилищем присоединенных свойств для <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicSettings" />.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Activities.VisualBasic.GetSettings(System.Object)">
      <summary>Получает экземпляр <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicSettings" />, присоединенный к указанному объекту.</summary>
      <param name="target">Объект для проверки.</param>
      <returns>Экземпляр <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicSettings" />, присоединенный к указанному объекту.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Activities.VisualBasic.SetSettings(System.Object,Microsoft.VisualBasic.Activities.VisualBasicSettings)">
      <summary>Присоединяет экземпляр <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicSettings" /> к указанному объекту.</summary>
      <param name="target">Объект, к которому прикрепляется экземпляр <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicSettings" />.</param>
      <param name="value">Экземпляр <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicSettings" /> для присоединения.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Activities.VisualBasic.SetSettingsForImplementation(System.Object,Microsoft.VisualBasic.Activities.VisualBasicSettings)">
      <summary>Прикрепляет экземпляр <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicSettings" /> к объекту для использования в его реализации.</summary>
      <param name="target">Объект, к которому прикрепляется экземпляр <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicSettings" />.</param>
      <param name="value">Экземпляр <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicSettings" /> для присоединения.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Activities.VisualBasic.ShouldSerializeSettings(System.Object)">
      <summary>Возвращает значение, указывающее, должен ли быть сериализован экземпляр <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicSettings" />, связанный с указанным объектом.</summary>
      <param name="target">Объект для проверки.</param>
      <returns>Значение <see langword="true" />, если экземпляр <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicSettings" /> нужно сериализовать; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Activities.VisualBasicDesignerHelper">
      <summary>Создает и компилирует выражения <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicReference`1" /> и <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicValue`1" />.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Activities.VisualBasicDesignerHelper.CreatePrecompiledVisualBasicReference(System.Type,System.String,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Activities.LocationReferenceEnvironment,System.Type@,System.Activities.ExpressionParser.SourceExpressionException@,Microsoft.VisualBasic.Activities.VisualBasicSettings@)">
      <summary>Создает и возвращает предварительно скомпилированное выражение <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicReference`1" />.</summary>
      <param name="targetType">Ожидаемый тип выражения.</param>
      <param name="expressionText">Выражение в синтаксисе Visual Basic.</param>
      <param name="namespaces">Импортированные пространства имен.</param>
      <param name="referencedAssemblies">сборки, на которые имеются ссылки;</param>
      <param name="environment">Механизм разрешения имен в соответствующие им объекты <see cref="T:System.Activities.Argument" /> и <see cref="T:System.Activities.Variable" />.</param>
      <param name="returnType">Этот метод возвращает тип результата выражения. Этот параметр передается неинициализированным.</param>
      <param name="compileError">При возврате результатов этот метод содержит все возникшие при компиляции ошибки, либо значение <see langword="null" />, если компиляция прошла успешно. Этот параметр передается неинициализированным.</param>
      <param name="vbSettings">Этот метод возвращает параметры, необходимые для компиляции выражения. Этот параметр передается неинициализированным.</param>
      <returns>Предварительно скомпилированное выражение <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicReference`1" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Activities.VisualBasicDesignerHelper.CreatePrecompiledVisualBasicValue(System.Type,System.String,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Activities.LocationReferenceEnvironment,System.Type@,System.Activities.ExpressionParser.SourceExpressionException@,Microsoft.VisualBasic.Activities.VisualBasicSettings@)">
      <summary>Создает и возвращает предварительно скомпилированное выражение <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicValue`1" />.</summary>
      <param name="targetType">Ожидаемый тип выражения.</param>
      <param name="expressionText">Выражение в синтаксисе Visual Basic.</param>
      <param name="namespaces">Импортированные пространства имен.</param>
      <param name="referencedAssemblies">сборки, на которые имеются ссылки;</param>
      <param name="environment">Механизм разрешения имен в соответствующие им объекты <see cref="T:System.Activities.Argument" /> и <see cref="T:System.Activities.Variable" />.</param>
      <param name="returnType">Этот метод возвращает тип результата выражения. Этот параметр передается неинициализированным.</param>
      <param name="compileError">При возврате результатов этот метод содержит все возникшие при компиляции ошибки, либо значение <see langword="null" />, если компиляция прошла успешно. Этот параметр передается неинициализированным. Этот параметр передается неинициализированным.</param>
      <param name="vbSettings">Этот метод возвращает параметры, необходимые для компиляции выражения.</param>
      <returns>Предварительно скомпилированное выражение <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicValue`1" />.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Activities.VisualBasicDesignerHelper.NameShadowingConstraint">
      <summary>Получает ограничение, используемое в затенении имен.</summary>
      <returns>Ограничение, используемое в затенении имен.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Activities.VisualBasicDesignerHelper.RecompileVisualBasicReference(System.Activities.ActivityWithResult,System.Type@,System.Activities.ExpressionParser.SourceExpressionException@,Microsoft.VisualBasic.Activities.VisualBasicSettings@)">
      <summary>Повторно компилирует ранее скомпилированное выражение <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicReference`1" />.</summary>
      <param name="visualBasicReference">Выражение, подлежащее повторной компиляции.</param>
      <param name="returnType">Этот метод возвращает тип результата выражения. Этот параметр передается неинициализированным.</param>
      <param name="compileError">При возврате результатов этот метод содержит все возникшие при компиляции ошибки, либо значение <see langword="null" />, если компиляция прошла успешно. Этот параметр передается неинициализированным.</param>
      <param name="vbSettings">Этот метод возвращает параметры, необходимые для компиляции выражения. Этот параметр передается неинициализированным.</param>
      <returns>Перекомпилированное выражение <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicReference`1" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Activities.VisualBasicDesignerHelper.RecompileVisualBasicValue(System.Activities.ActivityWithResult,System.Type@,System.Activities.ExpressionParser.SourceExpressionException@,Microsoft.VisualBasic.Activities.VisualBasicSettings@)">
      <summary>Повторно компилирует ранее скомпилированное выражение <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicValue`1" />.</summary>
      <param name="visualBasicValue">Выражение, подлежащее повторной компиляции.</param>
      <param name="returnType">Этот метод возвращает тип результата выражения. Этот параметр передается неинициализированным.</param>
      <param name="compileError">При возврате результатов этот метод содержит все возникшие при компиляции ошибки, либо значение <see langword="null" />, если компиляция прошла успешно. Этот параметр передается неинициализированным. Этот параметр передается неинициализированным.</param>
      <param name="vbSettings">Этот метод возвращает параметры, необходимые для компиляции выражения.</param>
      <returns>Перекомпилированное выражение <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicValue`1" />.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Activities.VisualBasicImportReference">
      <summary>Представляет ссылку на сборку и пространство имен, импортируемое из этой сборки.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Activities.VisualBasicImportReference.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicImportReference" />.</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Activities.VisualBasicImportReference.Assembly">
      <summary>Возвращает или задает полное имя сборки, упоминаемой в этом объекте <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicImportReference" />.</summary>
      <returns>Полное имя сборки, упоминаемой в этом объекте <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicImportReference" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Activities.VisualBasicImportReference.Equals(Microsoft.VisualBasic.Activities.VisualBasicImportReference)">
      <summary>Определяет, равен ли указанный объект <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicImportReference" /> текущему объекту <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicImportReference" />.</summary>
      <param name="other">Объект <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicImportReference" />, с которым сравнивается текущий объект <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicImportReference" />.</param>
      <returns>Значение <see langword="true" />, если указанный объект <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicImportReference" /> равен текущему объекту <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicImportReference" />; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Activities.VisualBasicImportReference.GetHashCode">
      <summary>Возвращает хэш-код экземпляра класса <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicImportReference" />.</summary>
      <returns>Хэш-код для экземпляра <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicImportReference" />.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Activities.VisualBasicImportReference.Import">
      <summary>Возвращает или задает импортируемое пространство имен, упоминаемое в этом объекте <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicImportReference" />.</summary>
      <returns>Импортируемое пространство имен, упоминаемое в этом объекте <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicImportReference" />.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Activities.VisualBasicReference`1">
      <summary>Содержит выражение с синтаксисом Visual Basic, результатом которого является левостороннее выражение, поддерживающее привязку аргументов <see cref="F:System.Activities.ArgumentDirection.Out" />.</summary>
      <typeparam name="TResult">Тип выражения.</typeparam>
    </member>
    <member name="M:Microsoft.VisualBasic.Activities.VisualBasicReference`1.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicReference`1" />.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Activities.VisualBasicReference`1.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicReference`1" /> с использованием заданного выражения.</summary>
      <param name="expressionText">Строка выражения в синтаксисе Visual Basic.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Activities.VisualBasicReference`1.CanConvertToString(System.Windows.Markup.IValueSerializerContext)">
      <summary>Определяет, может ли объект <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicReference`1" /> быть преобразован в <see cref="T:System.String" />.</summary>
      <param name="context">Контекстные сведения, используемые для преобразования.</param>
      <returns>Значение <see langword="true" />, если <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicReference`1" /> можно преобразовать в строку; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Activities.VisualBasicReference`1.ConvertToString(System.Windows.Markup.IValueSerializerContext)">
      <summary>Преобразует объект <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicReference`1" /> в значение типа <see cref="T:System.String" />.</summary>
      <param name="context">Контекстные сведения, используемые для преобразования.</param>
      <returns>Строковое представление объекта <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicReference`1" />.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Activities.VisualBasicReference`1.ExpressionText">
      <summary>Возвращает или задает выражение Visual Basic, представленное этим объектом <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicReference`1" />.</summary>
      <returns>Выражение Visual Basic.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Activities.VisualBasicReference`1.GetExpressionTree">
      <summary>Получает или дерево выражения, используемое в ссылке.</summary>
      <returns>Дерево выражения, используемое в ссылке.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Activities.VisualBasicReference`1.Language">
      <summary>Получает язык, используемый в ссылке.</summary>
      <returns>Язык, используемый в ссылке.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Activities.VisualBasicReference`1.RequiresCompilation">
      <summary>Получает значение, указывающее, требует ли ссылка компиляции.</summary>
      <returns>Значение <see langword="True" />, если ссылка требует компиляции; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Activities.VisualBasicSettings">
      <summary>Содержит параметры, используемые экземплярами <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicValue`1" /> и <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicReference`1" /> для компиляции исходного текста содержащихся в них выражений.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Activities.VisualBasicSettings.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicSettings" />.</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Activities.VisualBasicSettings.Default">
      <summary>Возвращает объект <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicSettings" />, содержащий используемый по умолчанию набор ссылок на сборки и импортируемых пространств имен. Этот набор доступен для всех экземпляров <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicValue`1" /> и <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicReference`1" /> в заданном <see cref="T:System.AppDomain" />.</summary>
      <returns>Объект <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicSettings" />, содержащий используемый по умолчанию набор ссылок на сборки и импортируемых пространств имен.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Activities.VisualBasicSettings.ImportReferences">
      <summary>Возвращает коллекцию объектов <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicImportReference" />, каждый из которых представляет ссылку на сборку и пространство имен, импортируемое из этой сборки.</summary>
      <returns>Коллекция объектов <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicImportReference" />, каждый из которых представляет ссылку на сборку и пространство имен, импортируемое из этой сборки.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Activities.VisualBasicValue`1">
      <summary>Содержит выражение с синтаксисом Visual Basic, результатом которого является правостороннее выражение, поддерживающее привязку аргументов <see cref="F:System.Activities.ArgumentDirection.In" />.</summary>
      <typeparam name="TResult">Тип выражения.</typeparam>
    </member>
    <member name="M:Microsoft.VisualBasic.Activities.VisualBasicValue`1.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicValue`1" />.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Activities.VisualBasicValue`1.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicValue`1" />, используя заданное выражение.</summary>
      <param name="expressionText">Строка выражения в синтаксисе Visual Basic.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Activities.VisualBasicValue`1.CanConvertToString(System.Windows.Markup.IValueSerializerContext)">
      <summary>Определяет, может ли объект <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicValue`1" /> быть преобразован в <see cref="T:System.String" />.</summary>
      <param name="context">Контекстные сведения, используемые для преобразования.</param>
      <returns>Значение <see langword="true" />, если <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicValue`1" /> можно преобразовать в строку; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Activities.VisualBasicValue`1.ConvertToString(System.Windows.Markup.IValueSerializerContext)">
      <summary>Преобразует объект <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicValue`1" /> в значение типа <see cref="T:System.String" />.</summary>
      <param name="context">Контекстные сведения, используемые для преобразования.</param>
      <returns>Строковое представление объекта <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicValue`1" />.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Activities.VisualBasicValue`1.ExpressionText">
      <summary>Возвращает или задает выражение Visual Basic, представленное этим объектом <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicValue`1" />.</summary>
      <returns>Выражение Visual Basic.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Activities.VisualBasicValue`1.GetExpressionTree">
      <summary>Возвращает Дерево выражения для значения.</summary>
      <returns>Дерево выражения для значения.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Activities.VisualBasicValue`1.Language">
      <summary>Получает язык, используемый для значения.</summary>
      <returns>Используемый язык.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Activities.VisualBasicValue`1.RequiresCompilation">
      <summary>Получает значение, указывающее, требует ли значение компиляции.</summary>
      <returns>Значение <see langword="True" />, если значение требует компиляции; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Activities.XamlIntegration.VisualBasicSettingsConverter">
      <summary>Преобразует экземпляр <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicSettings" /> в заданный тип.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Activities.XamlIntegration.VisualBasicSettingsConverter.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:Microsoft.VisualBasic.Activities.XamlIntegration.VisualBasicSettingsConverter" />.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Activities.XamlIntegration.VisualBasicSettingsConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Определяет, можно ли преобразовать объект указанного типа в экземпляр <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicSettings" />.</summary>
      <param name="context">Контекстная информация, используемая при выполнении преобразования.</param>
      <param name="sourceType">Преобразовываемый тип.</param>
      <returns>Значение <see langword="true" />, если из указанного типа можно выполнить преобразование; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Activities.XamlIntegration.VisualBasicSettingsConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Определяет, можно ли преобразовать экземпляр <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicSettings" /> в экземпляр указанного типа.</summary>
      <param name="context">Контекстная информация, используемая при выполнении преобразования.</param>
      <param name="destinationType">Целевой тип преобразования.</param>
      <returns>Значение <see langword="true" />, если экземпляр <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicSettings" /> можно преобразовать в экземпляр указанного типа; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Activities.XamlIntegration.VisualBasicSettingsConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Преобразует указанный объект в экземпляр <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicSettings" />.</summary>
      <param name="context">Контекстная информация, используемая при выполнении преобразования.</param>
      <param name="culture">Необязательный класс <see cref="T:System.Globalization.CultureInfo" />. Если не предоставляются, предполагается использование текущего языка и региональных параметров.</param>
      <param name="value">Преобразуемый объект.</param>
      <returns>Объект, представляющий преобразованное значение.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Activities.XamlIntegration.VisualBasicSettingsConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Преобразует экземпляр <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicSettings" /> в заданный тип.</summary>
      <param name="context">Контекстная информация, используемая при выполнении преобразования.</param>
      <param name="culture">Необязательный класс <see cref="T:System.Globalization.CultureInfo" />. Если не предоставляются, предполагается использование текущего языка и региональных параметров.</param>
      <param name="value">Экземпляр <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicSettings" /> для преобразования.</param>
      <param name="destinationType">Целевой тип преобразования.</param>
      <returns>Преобразованное значение.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Activities.XamlIntegration.VisualBasicSettingsValueSerializer">
      <summary>Выполняет сериализацию экземпляров <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicSettings" /> в XAML-код.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Activities.XamlIntegration.VisualBasicSettingsValueSerializer.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:Microsoft.VisualBasic.Activities.XamlIntegration.VisualBasicSettingsValueSerializer" />.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Activities.XamlIntegration.VisualBasicSettingsValueSerializer.CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary>Определяет, можно ли преобразовать указанный экземпляр <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicSettings" /> в объект <see cref="T:System.String" />.</summary>
      <param name="value">Преобразуемое значение.</param>
      <param name="context">Контекстная информация, используемая при выполнении преобразования.</param>
      <returns>Значение <see langword="true" />, если указанный экземпляр <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicSettings" /> можно преобразовать в объект <see cref="T:System.String" />; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Activities.XamlIntegration.VisualBasicSettingsValueSerializer.ConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary>Преобразует указанный экземпляр <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicSettings" /> в объект <see cref="T:System.String" />.</summary>
      <param name="value">Преобразуемое значение.</param>
      <param name="context">Контекстная информация, используемая при выполнении преобразования.</param>
      <returns>Строковое представление текущего экземпляра <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicSettings" />.</returns>
    </member>
    <member name="T:System.Activities.Activity">
      <summary>Абстрактный базовый класс, используемый для создания составных действий из существующих объектов <see cref="T:System.Activities.Activity" />.</summary>
    </member>
    <member name="M:System.Activities.Activity.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Activity" />.</summary>
    </member>
    <member name="P:System.Activities.Activity.CacheId">
      <summary>Возвращает идентификатор кэша, уникальный в пределах области определения рабочего процесса.</summary>
      <returns>Идентификатор кэша, уникальный в пределах области определения рабочего процесса.</returns>
    </member>
    <member name="M:System.Activities.Activity.CacheMetadata(System.Activities.ActivityMetadata)">
      <summary>Создает и проверяет описание аргументов, переменных, дочерних действий и делегатов действия.</summary>
      <param name="metadata">Метаданные действия, инкапсулирующие аргументы, переменные, дочерние действия и делегаты для действия.</param>
    </member>
    <member name="P:System.Activities.Activity.Constraints">
      <summary>Возвращает коллекцию действий <see cref="T:System.Activities.Validation.Constraint" />, которые можно настроить для выполнения проверки the <see cref="T:System.Activities.Activity" />.</summary>
      <returns>Коллекция ограничений.</returns>
    </member>
    <member name="P:System.Activities.Activity.DisplayName">
      <summary>Возвращает или задает дополнительное понятное имя, используемое для отладки, проверки, обработки исключений и отслеживания.</summary>
      <returns>Понятное имя, используемое для отладки, проверки, обработки исключений и отслеживания.</returns>
    </member>
    <member name="P:System.Activities.Activity.Id">
      <summary>Возвращает идентификатор, уникальный в пределах области определения рабочего процесса.</summary>
      <returns>Идентификатор, уникальный в пределах области определения рабочего процесса.</returns>
    </member>
    <member name="P:System.Activities.Activity.Implementation">
      <summary>Возвращает или задает делегат, который возвращает объект <see cref="T:System.Activities.Activity" />, содержащий логику выполнения.</summary>
      <returns>Делегат, который содержит логику выполнения.</returns>
    </member>
    <member name="P:System.Activities.Activity.ImplementationVersion">
      <summary>Получает или задает версию используемой реализации.</summary>
      <returns>Версия реализации</returns>
    </member>
    <member name="M:System.Activities.Activity.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.UpdateMapMetadata,System.Activities.Activity)">
      <summary>Вызывает событие при создании сопоставления для динамического обновления.</summary>
      <param name="metadata">Использованные метаданные.</param>
      <param name="originalActivity">Исходное действие.</param>
    </member>
    <member name="M:System.Activities.Activity.ShouldSerializeDisplayName">
      <summary>Указывает, необходима ли сериализация свойства <see cref="P:System.Activities.Activity.DisplayName" />.</summary>
      <returns>Значение <see langword="true" />, если значение свойства <see cref="P:System.Activities.Activity.DisplayName" /> подлежит сериализации; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Activities.Activity.ToString">
      <summary>Возвращает значение типа <see cref="T:System.String" />, которое содержит <see cref="P:System.Activities.Activity.Id" /> и <see cref="P:System.Activities.Activity.DisplayName" /> для <see cref="T:System.Activities.Activity" />.</summary>
      <returns>Идентификатор и отображаемое имя для действия.</returns>
    </member>
    <member name="T:System.Activities.Activity`1">
      <summary>Абстрактный базовый класс, который используется для создания составных действий из существующих объектов <see cref="T:System.Activities.Activity" /> и задает результирующий тип с помощью описателя типа действия.</summary>
      <typeparam name="TResult">Тип возвращаемого значения действия.</typeparam>
    </member>
    <member name="M:System.Activities.Activity`1.#ctor">
      <summary>При реализации в производном классе создает новый экземпляр производного класса.</summary>
    </member>
    <member name="M:System.Activities.Activity`1.FromValue(`0)">
      <summary>Возвращает выражение <see cref="T:System.Activities.Activity`1" />, результатом вычисления которого является данное значение.</summary>
      <param name="constValue">Значение, используемое для создания выражения <see cref="T:System.Activities.Activity`1" />.</param>
      <returns>Выражение рабочего процесса, результатом вычисления которого является данное значение.</returns>
    </member>
    <member name="M:System.Activities.Activity`1.FromVariable(System.Activities.Variable)">
      <summary>Возвращает выражение <see cref="T:System.Activities.Activity`1" />, результатом вычисления которого является данный объект <see cref="T:System.Activities.Variable" />.</summary>
      <param name="variable">Значение выражения.</param>
      <returns>Выражение рабочего процесса, результатом вычисления которого является данная переменная.</returns>
    </member>
    <member name="M:System.Activities.Activity`1.FromVariable(System.Activities.Variable{`0})">
      <summary>Возвращает выражение <see cref="T:System.Activities.Activity`1" />, результатом вычисления которого является данный объект <see cref="T:System.Activities.Variable`1" />.</summary>
      <param name="variable">Значение выражения.</param>
      <returns>Выражение рабочего процесса, результатом вычисления которого является данная переменная.</returns>
    </member>
    <member name="M:System.Activities.Activity`1.op_Implicit(System.Activities.Variable)~System.Activities.Activity{`0}">
      <summary>Возвращает выражение <see cref="T:System.Activities.Activity`1" />, результатом вычисления которого является данный объект <see cref="T:System.Activities.Variable" />.</summary>
      <param name="variable">Значение выражения.</param>
      <returns>Выражение рабочего процесса, результатом вычисления которого является данная переменная.</returns>
    </member>
    <member name="M:System.Activities.Activity`1.op_Implicit(System.Activities.Variable{`0})~System.Activities.Activity{`0}">
      <summary>Возвращает выражение <see cref="T:System.Activities.Activity`1" />, результатом вычисления которого является данный объект <see cref="T:System.Activities.Variable`1" />.</summary>
      <param name="variable">Значение выражения.</param>
      <returns>Выражение рабочего процесса, результатом вычисления которого является данная переменная.</returns>
    </member>
    <member name="M:System.Activities.Activity`1.op_Implicit(`0)~System.Activities.Activity{`0}">
      <summary>Возвращает выражение <see cref="T:System.Activities.Activity`1" />, результатом вычисления которого является данное значение.</summary>
      <param name="constValue">Значение, используемое для создания выражения.</param>
      <returns>Выражение рабочего процесса, результатом вычисления которого является данное значение.</returns>
    </member>
    <member name="P:System.Activities.Activity`1.Result">
      <summary>Возвращает или задает результирующий аргумент для <see cref="T:System.Activities.Activity`1" />.</summary>
      <returns>Результирующий аргумент для <see cref="T:System.Activities.Activity`1" />.</returns>
    </member>
    <member name="T:System.Activities.ActivityAction">
      <summary>Определяет делегат действия, который не принимает аргументов и не возвращает значение.</summary>
    </member>
    <member name="M:System.Activities.ActivityAction.#ctor">
      <summary>Создание нового экземпляра класса <see cref="T:System.Activities.ActivityAction" />.</summary>
    </member>
    <member name="T:System.Activities.ActivityAction`1">
      <summary>Определяет делегат действия, который принимает один аргумент и не возвращает значение.</summary>
      <typeparam name="T">Тип входного аргумента делегата действия.</typeparam>
    </member>
    <member name="M:System.Activities.ActivityAction`1.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.ActivityAction`1" />.</summary>
    </member>
    <member name="P:System.Activities.ActivityAction`1.Argument">
      <summary>Возвращает или задает входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="T:System.Activities.ActivityAction`10">
      <summary>Определяет делегат действия, который принимает десять аргументов и не возвращает значение.</summary>
      <typeparam name="T1">Тип первого входного аргумента делегата действия.</typeparam>
      <typeparam name="T2">Тип второго входного аргумента делегата действия.</typeparam>
      <typeparam name="T3">Тип третьего входного аргумента делегата действия.</typeparam>
      <typeparam name="T4">Тип четвертого входного аргумента делегата действия.</typeparam>
      <typeparam name="T5">Тип пятого входного аргумента делегата действия.</typeparam>
      <typeparam name="T6">Тип шестого входного аргумента делегата действия.</typeparam>
      <typeparam name="T7">Тип седьмого входного аргумента делегата действия.</typeparam>
      <typeparam name="T8">Тип восьмого входного аргумента делегата действия.</typeparam>
      <typeparam name="T9">Тип девятого входного аргумента делегата действия.</typeparam>
      <typeparam name="T10">Тип десятого входного аргумента делегата действия.</typeparam>
    </member>
    <member name="M:System.Activities.ActivityAction`10.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.ActivityAction`10" />.</summary>
    </member>
    <member name="P:System.Activities.ActivityAction`10.Argument1">
      <summary>Возвращает или задает первый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`10.Argument10">
      <summary>Возвращает или задает десятый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`10.Argument2">
      <summary>Возвращает или задает второй входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`10.Argument3">
      <summary>Возвращает или задает третий входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`10.Argument4">
      <summary>Возвращает или задает четвертый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`10.Argument5">
      <summary>Возвращает или задает пятый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`10.Argument6">
      <summary>Возвращает или задает шестой входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`10.Argument7">
      <summary>Возвращает или задает седьмой входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`10.Argument8">
      <summary>Возвращает или задает восьмой входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`10.Argument9">
      <summary>Возвращает или задает девятый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="T:System.Activities.ActivityAction`11">
      <summary>Определяет делегат действия, который принимает одиннадцать аргументов и не возвращает значение.</summary>
      <typeparam name="T1">Тип первого входного аргумента делегата действия.</typeparam>
      <typeparam name="T2">Тип второго входного аргумента делегата действия.</typeparam>
      <typeparam name="T3">Тип третьего входного аргумента делегата действия.</typeparam>
      <typeparam name="T4">Тип четвертого входного аргумента делегата действия.</typeparam>
      <typeparam name="T5">Тип пятого входного аргумента делегата действия.</typeparam>
      <typeparam name="T6">Тип шестого входного аргумента делегата действия.</typeparam>
      <typeparam name="T7">Тип седьмого входного аргумента делегата действия.</typeparam>
      <typeparam name="T8">Тип восьмого входного аргумента делегата действия.</typeparam>
      <typeparam name="T9">Тип девятого входного аргумента делегата действия.</typeparam>
      <typeparam name="T10">Тип десятого входного аргумента делегата действия.</typeparam>
      <typeparam name="T11">Тип одиннадцатого входного аргумента делегата действия.</typeparam>
    </member>
    <member name="M:System.Activities.ActivityAction`11.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.ActivityAction`11" />.</summary>
    </member>
    <member name="P:System.Activities.ActivityAction`11.Argument1">
      <summary>Возвращает или задает первый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`11.Argument10">
      <summary>Возвращает или задает десятый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`11.Argument11">
      <summary>Возвращает или задает одиннадцатый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`11.Argument2">
      <summary>Возвращает или задает второй входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`11.Argument3">
      <summary>Возвращает или задает третий входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`11.Argument4">
      <summary>Возвращает или задает четвертый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`11.Argument5">
      <summary>Возвращает или задает пятый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`11.Argument6">
      <summary>Возвращает или задает шестой входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`11.Argument7">
      <summary>Возвращает или задает седьмой входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`11.Argument8">
      <summary>Возвращает или задает восьмой входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`11.Argument9">
      <summary>Возвращает или задает девятый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="T:System.Activities.ActivityAction`12">
      <summary>Определяет делегат действия, который принимает двенадцать аргументов и не возвращает значение.</summary>
      <typeparam name="T1">Тип первого входного аргумента делегата действия.</typeparam>
      <typeparam name="T2">Тип второго входного аргумента делегата действия.</typeparam>
      <typeparam name="T3">Тип третьего входного аргумента делегата действия.</typeparam>
      <typeparam name="T4">Тип четвертого входного аргумента делегата действия.</typeparam>
      <typeparam name="T5">Тип пятого входного аргумента делегата действия.</typeparam>
      <typeparam name="T6">Тип шестого входного аргумента делегата действия.</typeparam>
      <typeparam name="T7">Тип седьмого входного аргумента делегата действия.</typeparam>
      <typeparam name="T8">Тип восьмого входного аргумента делегата действия.</typeparam>
      <typeparam name="T9">Тип девятого входного аргумента делегата действия.</typeparam>
      <typeparam name="T10">Тип десятого входного аргумента делегата действия.</typeparam>
      <typeparam name="T11">Тип одиннадцатого входного аргумента делегата действия.</typeparam>
      <typeparam name="T12">Тип двенадцатого входного аргумента делегата действия.</typeparam>
    </member>
    <member name="M:System.Activities.ActivityAction`12.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.ActivityAction`12" />.</summary>
    </member>
    <member name="P:System.Activities.ActivityAction`12.Argument1">
      <summary>Возвращает или задает первый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`12.Argument10">
      <summary>Возвращает или задает десятый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`12.Argument11">
      <summary>Возвращает или задает одиннадцатый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`12.Argument12">
      <summary>Возвращает или задает двенадцатый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`12.Argument2">
      <summary>Возвращает или задает второй входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`12.Argument3">
      <summary>Возвращает или задает третий входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`12.Argument4">
      <summary>Возвращает или задает четвертый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`12.Argument5">
      <summary>Возвращает или задает пятый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`12.Argument6">
      <summary>Возвращает или задает шестой входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`12.Argument7">
      <summary>Возвращает или задает седьмой входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`12.Argument8">
      <summary>Возвращает или задает восьмой входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`12.Argument9">
      <summary>Возвращает или задает девятый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="T:System.Activities.ActivityAction`13">
      <summary>Определяет делегат действия, который принимает тринадцать аргументов и не возвращает значение.</summary>
      <typeparam name="T1">Тип первого входного аргумента делегата действия.</typeparam>
      <typeparam name="T2">Тип второго входного аргумента делегата действия.</typeparam>
      <typeparam name="T3">Тип третьего входного аргумента делегата действия.</typeparam>
      <typeparam name="T4">Тип четвертого входного аргумента делегата действия.</typeparam>
      <typeparam name="T5">Тип пятого входного аргумента делегата действия.</typeparam>
      <typeparam name="T6">Тип шестого входного аргумента делегата действия.</typeparam>
      <typeparam name="T7">Тип седьмого входного аргумента делегата действия.</typeparam>
      <typeparam name="T8">Тип восьмого входного аргумента делегата действия.</typeparam>
      <typeparam name="T9">Тип девятого входного аргумента делегата действия.</typeparam>
      <typeparam name="T10">Тип десятого входного аргумента делегата действия.</typeparam>
      <typeparam name="T11">Тип одиннадцатого входного аргумента делегата действия.</typeparam>
      <typeparam name="T12">Тип двенадцатого входного аргумента делегата действия.</typeparam>
      <typeparam name="T13">Тип тринадцатого входного аргумента делегата действия.</typeparam>
    </member>
    <member name="M:System.Activities.ActivityAction`13.#ctor">
      <summary>Создание нового экземпляра класса <see cref="T:System.Activities.ActivityAction`13" />.</summary>
    </member>
    <member name="P:System.Activities.ActivityAction`13.Argument1">
      <summary>Возвращает или задает первый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`13.Argument10">
      <summary>Возвращает или задает десятый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`13.Argument11">
      <summary>Возвращает или задает одиннадцатый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`13.Argument12">
      <summary>Возвращает или задает двенадцатый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`13.Argument13">
      <summary>Возвращает или задает тринадцатый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`13.Argument2">
      <summary>Возвращает или задает второй входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`13.Argument3">
      <summary>Возвращает или задает третий входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`13.Argument4">
      <summary>Возвращает или задает четвертый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`13.Argument5">
      <summary>Возвращает или задает пятый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`13.Argument6">
      <summary>Возвращает или задает шестой входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`13.Argument7">
      <summary>Возвращает или задает седьмой входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`13.Argument8">
      <summary>Возвращает или задает восьмой входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`13.Argument9">
      <summary>Возвращает или задает девятый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="T:System.Activities.ActivityAction`14">
      <summary>Определяет делегат действия, который принимает четырнадцать аргументов и не возвращает значение.</summary>
      <typeparam name="T1">Тип первого входного аргумента делегата действия.</typeparam>
      <typeparam name="T2">Тип второго входного аргумента делегата действия.</typeparam>
      <typeparam name="T3">Тип третьего входного аргумента делегата действия.</typeparam>
      <typeparam name="T4">Тип четвертого входного аргумента делегата действия.</typeparam>
      <typeparam name="T5">Тип пятого входного аргумента делегата действия.</typeparam>
      <typeparam name="T6">Тип шестого входного аргумента делегата действия.</typeparam>
      <typeparam name="T7">Тип седьмого входного аргумента делегата действия.</typeparam>
      <typeparam name="T8">Тип восьмого входного аргумента делегата действия.</typeparam>
      <typeparam name="T9">Тип девятого входного аргумента делегата действия.</typeparam>
      <typeparam name="T10">Тип десятого входного аргумента делегата действия.</typeparam>
      <typeparam name="T11">Тип одиннадцатого входного аргумента делегата действия.</typeparam>
      <typeparam name="T12">Тип двенадцатого входного аргумента делегата действия.</typeparam>
      <typeparam name="T13">Тип тринадцатого входного аргумента делегата действия.</typeparam>
      <typeparam name="T14">Тип четырнадцатого входного аргумента делегата действия.</typeparam>
    </member>
    <member name="M:System.Activities.ActivityAction`14.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.ActivityAction`14" />.</summary>
    </member>
    <member name="P:System.Activities.ActivityAction`14.Argument1">
      <summary>Возвращает или задает первый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`14.Argument10">
      <summary>Возвращает или задает десятый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`14.Argument11">
      <summary>Возвращает или задает одиннадцатый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`14.Argument12">
      <summary>Возвращает или задает двенадцатый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`14.Argument13">
      <summary>Возвращает или задает тринадцатый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`14.Argument14">
      <summary>Возвращает или задает четырнадцатый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`14.Argument2">
      <summary>Возвращает или задает второй входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`14.Argument3">
      <summary>Возвращает или задает третий входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`14.Argument4">
      <summary>Возвращает или задает четвертый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`14.Argument5">
      <summary>Возвращает или задает пятый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`14.Argument6">
      <summary>Возвращает или задает шестой входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`14.Argument7">
      <summary>Возвращает или задает седьмой входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`14.Argument8">
      <summary>Возвращает или задает восьмой входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`14.Argument9">
      <summary>Возвращает или задает девятый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="T:System.Activities.ActivityAction`15">
      <summary>Определяет делегат действия, который принимает пятнадцать аргументов и не возвращает значение.</summary>
      <typeparam name="T1">Тип первого входного аргумента делегата действия.</typeparam>
      <typeparam name="T2">Тип второго входного аргумента делегата действия.</typeparam>
      <typeparam name="T3">Тип третьего входного аргумента делегата действия.</typeparam>
      <typeparam name="T4">Тип четвертого входного аргумента делегата действия.</typeparam>
      <typeparam name="T5">Тип пятого входного аргумента делегата действия.</typeparam>
      <typeparam name="T6">Тип шестого входного аргумента делегата действия.</typeparam>
      <typeparam name="T7">Тип седьмого входного аргумента делегата действия.</typeparam>
      <typeparam name="T8">Тип восьмого входного аргумента делегата действия.</typeparam>
      <typeparam name="T9">Тип девятого входного аргумента делегата действия.</typeparam>
      <typeparam name="T10">Тип десятого входного аргумента делегата действия.</typeparam>
      <typeparam name="T11">Тип одиннадцатого входного аргумента делегата действия.</typeparam>
      <typeparam name="T12">Тип двенадцатого входного аргумента делегата действия.</typeparam>
      <typeparam name="T13">Тип тринадцатого входного аргумента делегата действия.</typeparam>
      <typeparam name="T14">Тип четырнадцатого входного аргумента делегата действия.</typeparam>
      <typeparam name="T15">Тип пятнадцатого входного аргумента делегата действия.</typeparam>
    </member>
    <member name="M:System.Activities.ActivityAction`15.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.ActivityAction`15" />.</summary>
    </member>
    <member name="P:System.Activities.ActivityAction`15.Argument1">
      <summary>Возвращает или задает первый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`15.Argument10">
      <summary>Возвращает или задает десятый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`15.Argument11">
      <summary>Возвращает или задает одиннадцатый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`15.Argument12">
      <summary>Возвращает или задает двенадцатый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`15.Argument13">
      <summary>Возвращает или задает тринадцатый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`15.Argument14">
      <summary>Возвращает или задает четырнадцатый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`15.Argument15">
      <summary>Возвращает или задает пятнадцатый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`15.Argument2">
      <summary>Возвращает или задает второй входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`15.Argument3">
      <summary>Возвращает или задает третий входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`15.Argument4">
      <summary>Возвращает или задает четвертый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`15.Argument5">
      <summary>Возвращает или задает пятый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`15.Argument6">
      <summary>Возвращает или задает шестой входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`15.Argument7">
      <summary>Возвращает или задает седьмой входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`15.Argument8">
      <summary>Возвращает или задает восьмой входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`15.Argument9">
      <summary>Возвращает или задает девятый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="T:System.Activities.ActivityAction`16">
      <summary>Определяет делегат действия, который принимает шестнадцать аргументов и не возвращает значение.</summary>
      <typeparam name="T1">Тип первого аргумента делегата.</typeparam>
      <typeparam name="T2">Тип второго аргумента делегата.</typeparam>
      <typeparam name="T3">Тип третьего аргумента делегата.</typeparam>
      <typeparam name="T4">Тип четвертого аргумента делегата.</typeparam>
      <typeparam name="T5">Тип пятого аргумента делегата.</typeparam>
      <typeparam name="T6">Тип шестого аргумента делегата.</typeparam>
      <typeparam name="T7">Тип седьмого аргумента делегата.</typeparam>
      <typeparam name="T8">Тип восьмого аргумента делегата.</typeparam>
      <typeparam name="T9">Тип девятого аргумента делегата.</typeparam>
      <typeparam name="T10">Тип десятого аргумента делегата.</typeparam>
      <typeparam name="T11">Тип одиннадцатого аргумента делегата.</typeparam>
      <typeparam name="T12">Тип двенадцатого аргумента делегата.</typeparam>
      <typeparam name="T13">Тип тринадцатого аргумента делегата.</typeparam>
      <typeparam name="T14">Тип четырнадцатого аргумента делегата.</typeparam>
      <typeparam name="T15">Тип пятнадцатого аргумента делегата.</typeparam>
      <typeparam name="T16">Тип шестнадцатого аргумента делегата.</typeparam>
    </member>
    <member name="M:System.Activities.ActivityAction`16.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.ActivityAction`16" />.</summary>
    </member>
    <member name="P:System.Activities.ActivityAction`16.Argument1">
      <summary>Возвращает или задает первый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`16.Argument10">
      <summary>Возвращает или задает десятый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`16.Argument11">
      <summary>Возвращает или задает одиннадцатый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`16.Argument12">
      <summary>Возвращает или задает двенадцатый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`16.Argument13">
      <summary>Возвращает или задает тринадцатый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`16.Argument14">
      <summary>Возвращает или задает четырнадцатый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`16.Argument15">
      <summary>Возвращает или задает пятнадцатый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`16.Argument16">
      <summary>Возвращает или задает шестнадцатый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`16.Argument2">
      <summary>Возвращает или задает второй входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`16.Argument3">
      <summary>Возвращает или задает третий входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`16.Argument4">
      <summary>Возвращает или задает четвертый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`16.Argument5">
      <summary>Возвращает или задает пятый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`16.Argument6">
      <summary>Возвращает или задает шестой входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`16.Argument7">
      <summary>Возвращает или задает седьмой входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`16.Argument8">
      <summary>Возвращает или задает восьмой входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`16.Argument9">
      <summary>Возвращает или задает девятый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="T:System.Activities.ActivityAction`2">
      <summary>Определяет делегат действия, который принимает два аргумента и не возвращает значение.</summary>
      <typeparam name="T1">Тип первого входного аргумента делегата действия.</typeparam>
      <typeparam name="T2">Тип второго входного аргумента делегата действия.</typeparam>
    </member>
    <member name="M:System.Activities.ActivityAction`2.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.ActivityAction`2" />.</summary>
    </member>
    <member name="P:System.Activities.ActivityAction`2.Argument1">
      <summary>Возвращает или задает первый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`2.Argument2">
      <summary>Возвращает или задает второй входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="T:System.Activities.ActivityAction`3">
      <summary>Определяет делегат действия, который принимает три аргумента и не возвращает значение.</summary>
      <typeparam name="T1">Тип первого входного аргумента делегата действия.</typeparam>
      <typeparam name="T2">Тип второго входного аргумента делегата действия.</typeparam>
      <typeparam name="T3">Тип третьего входного аргумента делегата действия.</typeparam>
    </member>
    <member name="M:System.Activities.ActivityAction`3.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.ActivityAction`3" />.</summary>
    </member>
    <member name="P:System.Activities.ActivityAction`3.Argument1">
      <summary>Возвращает или задает первый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`3.Argument2">
      <summary>Возвращает или задает второй входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`3.Argument3">
      <summary>Возвращает или задает третий входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="T:System.Activities.ActivityAction`4">
      <summary>Определяет делегат действия, который принимает четыре аргумента и не возвращает значение.</summary>
      <typeparam name="T1">Тип первого входного аргумента делегата действия.</typeparam>
      <typeparam name="T2">Тип второго входного аргумента делегата действия.</typeparam>
      <typeparam name="T3">Тип третьего входного аргумента делегата действия.</typeparam>
      <typeparam name="T4">Тип четвертого входного аргумента делегата действия.</typeparam>
    </member>
    <member name="M:System.Activities.ActivityAction`4.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.ActivityAction`4" />.</summary>
    </member>
    <member name="P:System.Activities.ActivityAction`4.Argument1">
      <summary>Возвращает или задает первый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`4.Argument2">
      <summary>Возвращает или задает второй входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`4.Argument3">
      <summary>Возвращает или задает третий входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`4.Argument4">
      <summary>Возвращает или задает четвертый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="T:System.Activities.ActivityAction`5">
      <summary>Определяет делегат действия, который принимает пять аргументов и не возвращает значение.</summary>
      <typeparam name="T1">Тип первого входного аргумента делегата действия.</typeparam>
      <typeparam name="T2">Тип второго входного аргумента делегата действия.</typeparam>
      <typeparam name="T3">Тип третьего входного аргумента делегата действия.</typeparam>
      <typeparam name="T4">Тип четвертого входного аргумента делегата действия.</typeparam>
      <typeparam name="T5">Тип пятого входного аргумента делегата действия.</typeparam>
    </member>
    <member name="M:System.Activities.ActivityAction`5.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.ActivityAction`5" />.</summary>
    </member>
    <member name="P:System.Activities.ActivityAction`5.Argument1">
      <summary>Возвращает или задает первый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`5.Argument2">
      <summary>Возвращает или задает второй входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`5.Argument3">
      <summary>Возвращает или задает третий входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`5.Argument4">
      <summary>Возвращает или задает четвертый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`5.Argument5">
      <summary>Возвращает или задает пятый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="T:System.Activities.ActivityAction`6">
      <summary>Определяет делегат действия, который принимает шесть аргументов и не возвращает значение.</summary>
      <typeparam name="T1">Тип первого входного аргумента делегата действия.</typeparam>
      <typeparam name="T2">Тип второго входного аргумента делегата действия.</typeparam>
      <typeparam name="T3">Тип третьего входного аргумента делегата действия.</typeparam>
      <typeparam name="T4">Тип четвертого входного аргумента делегата действия.</typeparam>
      <typeparam name="T5">Тип пятого входного аргумента делегата действия.</typeparam>
      <typeparam name="T6">Тип шестого входного аргумента делегата действия.</typeparam>
    </member>
    <member name="M:System.Activities.ActivityAction`6.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.ActivityAction`6" />.</summary>
    </member>
    <member name="P:System.Activities.ActivityAction`6.Argument1">
      <summary>Возвращает или задает первый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`6.Argument2">
      <summary>Возвращает или задает второй входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`6.Argument3">
      <summary>Возвращает или задает третий входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`6.Argument4">
      <summary>Возвращает или задает четвертый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`6.Argument5">
      <summary>Возвращает или задает пятый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`6.Argument6">
      <summary>Возвращает или задает шестой входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="T:System.Activities.ActivityAction`7">
      <summary>Определяет делегат действия, который принимает семь аргументов и не возвращает значение.</summary>
      <typeparam name="T1">Тип первого входного аргумента делегата действия.</typeparam>
      <typeparam name="T2">Тип второго входного аргумента делегата действия.</typeparam>
      <typeparam name="T3">Тип третьего входного аргумента делегата действия.</typeparam>
      <typeparam name="T4">Тип четвертого входного аргумента делегата действия.</typeparam>
      <typeparam name="T5">Тип пятого входного аргумента делегата действия.</typeparam>
      <typeparam name="T6">Тип шестого входного аргумента делегата действия.</typeparam>
      <typeparam name="T7">Тип седьмого входного аргумента делегата действия.</typeparam>
    </member>
    <member name="M:System.Activities.ActivityAction`7.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.ActivityAction`7" />.</summary>
    </member>
    <member name="P:System.Activities.ActivityAction`7.Argument1">
      <summary>Возвращает или задает первый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`7.Argument2">
      <summary>Возвращает или задает второй входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`7.Argument3">
      <summary>Возвращает или задает третий входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`7.Argument4">
      <summary>Возвращает или задает четвертый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`7.Argument5">
      <summary>Возвращает или задает пятый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`7.Argument6">
      <summary>Возвращает или задает шестой входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`7.Argument7">
      <summary>Возвращает или задает седьмой входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="T:System.Activities.ActivityAction`8">
      <summary>Определяет делегат действия, который принимает восемь аргументов и не возвращает значение.</summary>
      <typeparam name="T1">Тип первого входного аргумента делегата действия.</typeparam>
      <typeparam name="T2">Тип второго входного аргумента делегата действия.</typeparam>
      <typeparam name="T3">Тип третьего входного аргумента делегата действия.</typeparam>
      <typeparam name="T4">Тип четвертого входного аргумента делегата действия.</typeparam>
      <typeparam name="T5">Тип пятого входного аргумента делегата действия.</typeparam>
      <typeparam name="T6">Тип шестого входного аргумента делегата действия.</typeparam>
      <typeparam name="T7">Тип седьмого входного аргумента делегата действия.</typeparam>
      <typeparam name="T8">Тип восьмого входного аргумента делегата действия.</typeparam>
    </member>
    <member name="M:System.Activities.ActivityAction`8.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.ActivityAction`8" />.</summary>
    </member>
    <member name="P:System.Activities.ActivityAction`8.Argument1">
      <summary>Возвращает или задает первый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`8.Argument2">
      <summary>Возвращает или задает второй входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`8.Argument3">
      <summary>Возвращает или задает третий входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`8.Argument4">
      <summary>Возвращает или задает четвертый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`8.Argument5">
      <summary>Возвращает или задает пятый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`8.Argument6">
      <summary>Возвращает или задает шестой входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`8.Argument7">
      <summary>Возвращает или задает седьмой входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`8.Argument8">
      <summary>Возвращает или задает восьмой входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="T:System.Activities.ActivityAction`9">
      <summary>Определяет делегат действия, который принимает девять аргументов и не возвращает значение.</summary>
      <typeparam name="T1">Тип первого входного аргумента делегата действия.</typeparam>
      <typeparam name="T2">Тип второго входного аргумента делегата действия.</typeparam>
      <typeparam name="T3">Тип третьего входного аргумента делегата действия.</typeparam>
      <typeparam name="T4">Тип четвертого входного аргумента делегата действия.</typeparam>
      <typeparam name="T5">Тип пятого входного аргумента делегата действия.</typeparam>
      <typeparam name="T6">Тип шестого входного аргумента делегата действия.</typeparam>
      <typeparam name="T7">Тип седьмого входного аргумента делегата действия.</typeparam>
      <typeparam name="T8">Тип восьмого входного аргумента делегата действия.</typeparam>
      <typeparam name="T9">Тип девятого входного аргумента делегата действия.</typeparam>
    </member>
    <member name="M:System.Activities.ActivityAction`9.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.ActivityAction`9" />.</summary>
    </member>
    <member name="P:System.Activities.ActivityAction`9.Argument1">
      <summary>Возвращает или задает первый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`9.Argument2">
      <summary>Возвращает или задает второй входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`9.Argument3">
      <summary>Возвращает или задает третий входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`9.Argument4">
      <summary>Возвращает или задает четвертый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`9.Argument5">
      <summary>Возвращает или задает пятый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`9.Argument6">
      <summary>Возвращает или задает шестой входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`9.Argument7">
      <summary>Возвращает или задает седьмой входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`9.Argument8">
      <summary>Возвращает или задает восьмой входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityAction`9.Argument9">
      <summary>Возвращает или задает девятый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="T:System.Activities.ActivityBuilder">
      <summary>Предоставляет данные свойств для действия рабочего процесса.</summary>
    </member>
    <member name="M:System.Activities.ActivityBuilder.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.ActivityBuilder" />.</summary>
    </member>
    <member name="P:System.Activities.ActivityBuilder.Attributes">
      <summary>Возвращает коллекцию атрибутов, используемых в построении дерева действий.</summary>
      <returns>Коллекция указанного типа.</returns>
    </member>
    <member name="P:System.Activities.ActivityBuilder.Constraints">
      <summary>Возвращает коллекцию ограничений, управляющих построением дерева действий.</summary>
      <returns>Коллекция указанного типа.</returns>
    </member>
    <member name="M:System.Activities.ActivityBuilder.GetPropertyReference(System.Object)">
      <summary>Возвращает <see cref="T:System.Activities.ActivityPropertyReference" /> для свойства, полученного из указанного объекта.</summary>
      <param name="target">Объект, содержащий свойство.</param>
      <returns>Ссылка на свойство.</returns>
    </member>
    <member name="M:System.Activities.ActivityBuilder.GetPropertyReferences(System.Object)">
      <summary>Возвращает список <see cref="T:System.Activities.ActivityPropertyReference" /> для свойства, полученного из указанного объекта.</summary>
      <param name="target">Объект, содержащий свойство.</param>
      <returns>Ссылка на свойство.</returns>
    </member>
    <member name="P:System.Activities.ActivityBuilder.Implementation">
      <summary>Возвращает или задает дерево действий, которое представлено текущим экземпляром <see cref="T:System.Activities.ActivityBuilder" />.</summary>
      <returns>Действие.</returns>
    </member>
    <member name="P:System.Activities.ActivityBuilder.ImplementationVersion">
      <summary>Получает или задает версию реализации для построителя действия.</summary>
      <returns>Версия реализации для построителя действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityBuilder.Name">
      <summary>Возвращает или задает имя дерева действий, которое представлено текущим экземпляром <see cref="T:System.Activities.ActivityBuilder" />.</summary>
      <returns>Имя дерева действий.</returns>
    </member>
    <member name="P:System.Activities.ActivityBuilder.Properties">
      <summary>Возвращает коллекцию значений свойств для текущего экземпляра <see cref="T:System.Activities.ActivityBuilder" />.</summary>
      <returns>Коллекция значений свойств.</returns>
    </member>
    <member name="M:System.Activities.ActivityBuilder.SetPropertyReference(System.Object,System.Activities.ActivityPropertyReference)">
      <summary>Задает значение для указанного присоединяемого свойства в указанном хранилище.</summary>
      <param name="target">Хранилище свойств.</param>
      <param name="value">Задаваемое значение.</param>
    </member>
    <member name="M:System.Activities.ActivityBuilder.ShouldSerializePropertyReference(System.Object)">
      <summary>Указывает, должен ли построитель действий выполнять сериализацию ссылки свойства.</summary>
      <param name="target">Хранилище свойств.</param>
      <returns>Значение <see langword="true" />, если построитель действий должен выполнять сериализацию ссылки свойства; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Activities.ActivityBuilder.ShouldSerializePropertyReferences(System.Object)">
      <summary>Указывает, должен ли построитель действий выполнять сериализацию ссылки свойства.</summary>
      <param name="target">Хранилище свойств.</param>
      <returns>Значение <see langword="true" />, если построитель действий должен выполнять сериализацию ссылки свойства; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Activities.ActivityBuilder.System#Activities#Debugger#IDebuggableWorkflowTree#GetWorkflowRoot">
      <summary>В случае реализации в базовом классе возвращает корневой элемент дерева действий рабочего процесса.</summary>
      <returns>Действие.</returns>
    </member>
    <member name="T:System.Activities.ActivityBuilder`1">
      <summary>Предоставляет данные свойств для универсального действия рабочего процесса.</summary>
      <typeparam name="TResult">Тип реализуемого действия.</typeparam>
    </member>
    <member name="M:System.Activities.ActivityBuilder`1.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.ActivityBuilder`1" />.</summary>
    </member>
    <member name="P:System.Activities.ActivityBuilder`1.Attributes">
      <summary>Возвращает универсальную коллекцию атрибутов, используемых в построении дерева действий.</summary>
      <returns>Универсальная коллекция.</returns>
    </member>
    <member name="P:System.Activities.ActivityBuilder`1.Constraints">
      <summary>Возвращает универсальную коллекцию ограничений, управляющих построением дерева действий.</summary>
      <returns>Универсальная коллекция.</returns>
    </member>
    <member name="P:System.Activities.ActivityBuilder`1.Implementation">
      <summary>Возвращает или задает универсальное дерево действий, которое представлено текущим экземпляром <see cref="T:System.Activities.ActivityBuilder`1" />.</summary>
      <returns>Объект действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityBuilder`1.ImplementationVersion">
      <summary>Получает или задает версию реализации построителя действия.</summary>
      <returns>Версия реализации построителя действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityBuilder`1.Name">
      <summary>Возвращает или задает имя универсального дерева действий, которое представлено текущим экземпляром <see cref="T:System.Activities.ActivityBuilder`1" />.</summary>
      <returns>Имя дерева действий.</returns>
    </member>
    <member name="P:System.Activities.ActivityBuilder`1.Properties">
      <summary>Возвращает коллекцию свойств <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /> текущего экземпляра <see cref="T:System.Activities.ActivityBuilder`1" />.</summary>
      <returns>Коллекция пар «ключ-значение» для свойств действия.</returns>
    </member>
    <member name="M:System.Activities.ActivityBuilder`1.System#Activities#Debugger#IDebuggableWorkflowTree#GetWorkflowRoot">
      <summary>Возвращает корневой элемент текущего дерева рабочих процессов.</summary>
      <returns>Действие.</returns>
    </member>
    <member name="T:System.Activities.ActivityContext">
      <summary>Базовый класс для классов контекста, представляющих среду выполнения действия.</summary>
    </member>
    <member name="P:System.Activities.ActivityContext.ActivityInstanceId">
      <summary>Возвращает уникальный идентификатор выполняющегося в данный момент экземпляра действия.</summary>
      <returns>Уникальный идентификатор выполняющегося в данный момент экземпляра действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityContext.DataContext">
      <summary>Возвращает контекст данных для действия, выполняющегося в данный момент.</summary>
      <returns>Контекст данных рабочего процесса для действия, выполняющегося в данный момент.</returns>
    </member>
    <member name="M:System.Activities.ActivityContext.GetExtension``1">
      <summary>Возвращает расширение указанного типа.</summary>
      <typeparam name="T">Тип получаемого расширения.</typeparam>
      <returns>Расширение указанного типа при его наличии; в противном случае — значение <see langword="null" />.</returns>
    </member>
    <member name="M:System.Activities.ActivityContext.GetLocation``1(System.Activities.LocationReference)">
      <summary>Возвращает типизированное расположение по указанному расположению для контекста текущего действия.</summary>
      <param name="locationReference">Упоминаемое расположение.</param>
      <typeparam name="T">Тип возвращаемого расположения.</typeparam>
      <returns>Типизированное расположение.</returns>
    </member>
    <member name="M:System.Activities.ActivityContext.GetValue(System.Activities.Argument)">
      <summary>Возвращает значение указанного аргумента <see cref="T:System.Activities.Argument" />.</summary>
      <param name="argument">Аргумент для проверки.</param>
      <returns>Значение аргумента.</returns>
    </member>
    <member name="M:System.Activities.ActivityContext.GetValue(System.Activities.RuntimeArgument)">
      <summary>Возвращает значение указанного аргумента <see cref="T:System.Activities.RuntimeArgument" />.</summary>
      <param name="runtimeArgument">Аргумент для проверки.</param>
      <returns>Значение аргумента.</returns>
    </member>
    <member name="M:System.Activities.ActivityContext.GetValue``1(System.Activities.InArgument{``0})">
      <summary>Возвращает значение указанного аргумента <see cref="T:System.Activities.InArgument`1" />.</summary>
      <param name="argument">Аргумент для проверки.</param>
      <typeparam name="T">Тип аргумента.</typeparam>
      <returns>Значение аргумента.</returns>
    </member>
    <member name="M:System.Activities.ActivityContext.GetValue``1(System.Activities.InOutArgument{``0})">
      <summary>Возвращает значение указанного аргумента <see cref="T:System.Activities.InOutArgument`1" />.</summary>
      <param name="argument">Аргумент для проверки.</param>
      <typeparam name="T">Тип аргумента.</typeparam>
      <returns>Значение аргумента.</returns>
    </member>
    <member name="M:System.Activities.ActivityContext.GetValue``1(System.Activities.LocationReference)">
      <summary>Возвращает значение из указанного расположения <see cref="T:System.Activities.LocationReference" />.</summary>
      <param name="locationReference">Указанное по ссылке расположение для проверки.</param>
      <typeparam name="T">Тип значения.</typeparam>
      <returns>Значение указанного по ссылке расположения.</returns>
    </member>
    <member name="M:System.Activities.ActivityContext.GetValue``1(System.Activities.OutArgument{``0})">
      <summary>Возвращает значение указанного аргумента <see cref="T:System.Activities.OutArgument`1" />.</summary>
      <param name="argument">Аргумент для проверки.</param>
      <typeparam name="T">Тип аргумента.</typeparam>
      <returns>Значение аргумента.</returns>
    </member>
    <member name="M:System.Activities.ActivityContext.SetValue(System.Activities.Argument,System.Object)">
      <summary>Присваивает значение указанному аргументу <see cref="T:System.Activities.Argument" />.</summary>
      <param name="argument">Аргумент, который получит новое значение.</param>
      <param name="value">Новое значение аргумента.</param>
    </member>
    <member name="M:System.Activities.ActivityContext.SetValue``1(System.Activities.InArgument{``0},``0)">
      <summary>Присваивает значение указанному аргументу <see cref="T:System.Activities.InArgument`1" />.</summary>
      <param name="argument">Аргумент, который получит новое значение.</param>
      <param name="value">Новое значение аргумента.</param>
      <typeparam name="T">Тип аргумента.</typeparam>
    </member>
    <member name="M:System.Activities.ActivityContext.SetValue``1(System.Activities.InOutArgument{``0},``0)">
      <summary>Присваивает значение указанному аргументу <see cref="T:System.Activities.InOutArgument`1" />.</summary>
      <param name="argument">Аргумент, который получит новое значение.</param>
      <param name="value">Новое значение аргумента.</param>
      <typeparam name="T">Тип аргумента.</typeparam>
    </member>
    <member name="M:System.Activities.ActivityContext.SetValue``1(System.Activities.LocationReference,``0)">
      <summary>Присваивает значение указанному аргументу <see cref="T:System.Activities.LocationReference" />.</summary>
      <param name="locationReference">Указанное по ссылке расположение для получения нового значения.</param>
      <param name="value">Новое значение указанного по ссылке расположения.</param>
      <typeparam name="T">Тип расположения.</typeparam>
    </member>
    <member name="M:System.Activities.ActivityContext.SetValue``1(System.Activities.OutArgument{``0},``0)">
      <summary>Присваивает значение указанному аргументу <see cref="T:System.Activities.OutArgument`1" />.</summary>
      <param name="argument">Аргумент, который получит новое значение.</param>
      <param name="value">Новое значение аргумента.</param>
      <typeparam name="T">Тип аргумента.</typeparam>
    </member>
    <member name="P:System.Activities.ActivityContext.WorkflowInstanceId">
      <summary>Возвращает уникальный идентификатор экземпляра рабочего процесса, выполняющегося в данный момент.</summary>
      <returns>Уникальный идентификатор экземпляра рабочего процесса, выполняющегося в данный момент.</returns>
    </member>
    <member name="T:System.Activities.ActivityDelegate">
      <summary>Представляет обратный вызов на основе действия.</summary>
    </member>
    <member name="M:System.Activities.ActivityDelegate.#ctor">
      <summary>Вызывается из конструкторов в производных классах, чтобы инициализировать объект.</summary>
    </member>
    <member name="P:System.Activities.ActivityDelegate.DisplayName">
      <summary>Возвращает или задает дополнительное понятное имя, используемое для отладки, проверки, обработки исключений и отслеживания.</summary>
      <returns>Понятное имя, используемое для отладки, проверки, обработки исключений и отслеживания.</returns>
    </member>
    <member name="M:System.Activities.ActivityDelegate.GetResultArgument">
      <summary>В случае реализации в производном классе возвращает аргумент <see cref="T:System.Activities.DelegateOutArgument" /> делегата <see cref="T:System.Activities.ActivityDelegate" />.</summary>
      <returns>Выходной аргумент для делегата <see cref="T:System.Activities.ActivityDelegate" />.</returns>
    </member>
    <member name="P:System.Activities.ActivityDelegate.H*******ler">
      <summary>Возвращает или задает действие, представляемое этим делегатом <see cref="T:System.Activities.ActivityDelegate" />.</summary>
      <returns>Действие, которое представляется этим делегатом <see cref="T:System.Activities.ActivityDelegate" />.</returns>
    </member>
    <member name="M:System.Activities.ActivityDelegate.OnGetRuntimeDelegateArguments(System.Collections.Generic.IList{System.Activities.RuntimeDelegateArgument})">
      <summary>Передает список аргументов времени выполнения для делегата <see cref="T:System.Activities.ActivityDelegate" />.</summary>
      <param name="runtimeDelegateArguments">Список, который заполняется аргументами времени выполнения.</param>
    </member>
    <member name="M:System.Activities.ActivityDelegate.ShouldSerializeDisplayName">
      <summary>Показывает, должно ли значение свойства <see cref="P:System.Activities.ActivityDelegate.DisplayName" /> проходить сериализацию в XAML-код.</summary>
      <returns>Значение <see langword="true" />, если значение свойства <see cref="P:System.Activities.ActivityDelegate.DisplayName" /> подлежит сериализации; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Activities.ActivityDelegate.ToString">
      <summary>Возвращает представление типа <see cref="T:System.String" /> для делегата <see cref="T:System.Activities.ActivityDelegate" />, который содержит свойство <see cref="P:System.Activities.ActivityDelegate.DisplayName" />.</summary>
      <returns>Представление делегата <see cref="T:System.Activities.ActivityDelegate" />, который содержит свойство <see cref="P:System.Activities.ActivityDelegate.DisplayName" />.</returns>
    </member>
    <member name="T:System.Activities.ActivityFunc`1">
      <summary>Определяет делегат действия, не имеющий аргументов <see langword="in" /> и имеющий один аргумент <see langword="out" /> типа TResult.</summary>
      <typeparam name="TResult">Тип выходного аргумента делегата действия.</typeparam>
    </member>
    <member name="M:System.Activities.ActivityFunc`1.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.ActivityFunc`1" />.</summary>
    </member>
    <member name="P:System.Activities.ActivityFunc`1.Result">
      <summary>Возвращает или задает выходной аргумент делегата действия.</summary>
      <returns>Аргумент.</returns>
    </member>
    <member name="T:System.Activities.ActivityFunc`10">
      <summary>Определяет делегат действия с девятью входными аргументами типа T и одним выходным аргументом типа TResult.</summary>
      <typeparam name="T1">Тип первого входного аргумента делегата действия.</typeparam>
      <typeparam name="T2">Тип второго входного аргумента делегата действия.</typeparam>
      <typeparam name="T3">Тип третьего входного аргумента делегата действия.</typeparam>
      <typeparam name="T4">Тип четвертого входного аргумента делегата действия.</typeparam>
      <typeparam name="T5">Тип пятого входного аргумента делегата действия.</typeparam>
      <typeparam name="T6">Тип шестого входного аргумента делегата действия.</typeparam>
      <typeparam name="T7">Тип седьмого входного аргумента делегата действия.</typeparam>
      <typeparam name="T8">Тип восьмого входного аргумента делегата действия.</typeparam>
      <typeparam name="T9">Тип девятого входного аргумента делегата действия.</typeparam>
      <typeparam name="TResult">Тип выходного аргумента делегата действия.</typeparam>
    </member>
    <member name="M:System.Activities.ActivityFunc`10.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.ActivityFunc`10" />.</summary>
    </member>
    <member name="P:System.Activities.ActivityFunc`10.Argument1">
      <summary>Возвращает или задает первый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`10.Argument2">
      <summary>Возвращает или задает второй входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`10.Argument3">
      <summary>Возвращает или задает третий входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`10.Argument4">
      <summary>Возвращает или задает четвертый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`10.Argument5">
      <summary>Возвращает или задает пятый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`10.Argument6">
      <summary>Возвращает или задает шестой входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`10.Argument7">
      <summary>Возвращает или задает седьмой входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`10.Argument8">
      <summary>Возвращает или задает восьмой входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`10.Argument9">
      <summary>Возвращает или задает девятый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`10.Result">
      <summary>Возвращает или задает выходной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="T:System.Activities.ActivityFunc`11">
      <summary>Определяет делегат действия с одним входным аргументом типа T и одним выходным аргументом типа TResult.</summary>
      <typeparam name="T1">Тип первого входного аргумента делегата действия.</typeparam>
      <typeparam name="T2">Тип второго входного аргумента делегата действия.</typeparam>
      <typeparam name="T3">Тип третьего входного аргумента делегата действия.</typeparam>
      <typeparam name="T4">Тип четвертого входного аргумента делегата действия.</typeparam>
      <typeparam name="T5">Тип пятого входного аргумента делегата действия.</typeparam>
      <typeparam name="T6">Тип шестого входного аргумента делегата действия.</typeparam>
      <typeparam name="T7">Тип седьмого входного аргумента делегата действия.</typeparam>
      <typeparam name="T8">Тип восьмого входного аргумента делегата действия.</typeparam>
      <typeparam name="T9">Тип девятого входного аргумента делегата действия.</typeparam>
      <typeparam name="T10">Тип десятого входного аргумента делегата действия.</typeparam>
      <typeparam name="TResult">Тип выходного аргумента делегата действия.</typeparam>
    </member>
    <member name="M:System.Activities.ActivityFunc`11.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.ActivityFunc`11" />.</summary>
    </member>
    <member name="P:System.Activities.ActivityFunc`11.Argument1">
      <summary>Возвращает или задает первый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`11.Argument10">
      <summary>Возвращает или задает десятый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`11.Argument2">
      <summary>Возвращает или задает второй входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`11.Argument3">
      <summary>Возвращает или задает третий входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`11.Argument4">
      <summary>Возвращает или задает четвертый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`11.Argument5">
      <summary>Возвращает или задает пятый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`11.Argument6">
      <summary>Возвращает или задает шестой входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`11.Argument7">
      <summary>Возвращает или задает седьмой входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`11.Argument8">
      <summary>Возвращает или задает восьмой входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`11.Argument9">
      <summary>Возвращает или задает девятый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`11.Result">
      <summary>Возвращает или задает выходной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="T:System.Activities.ActivityFunc`12">
      <summary>Определяет делегат действия с одним входным аргументом типа T и одним выходным аргументом типа TResult.</summary>
      <typeparam name="T1">Тип первого входного аргумента делегата действия.</typeparam>
      <typeparam name="T2">Тип второго входного аргумента делегата действия.</typeparam>
      <typeparam name="T3">Тип третьего входного аргумента делегата действия.</typeparam>
      <typeparam name="T4">Тип четвертого входного аргумента делегата действия.</typeparam>
      <typeparam name="T5">Тип пятого входного аргумента делегата действия.</typeparam>
      <typeparam name="T6">Тип шестого входного аргумента делегата действия.</typeparam>
      <typeparam name="T7">Тип седьмого входного аргумента делегата действия.</typeparam>
      <typeparam name="T8">Тип восьмого входного аргумента делегата действия.</typeparam>
      <typeparam name="T9">Тип девятого входного аргумента делегата действия.</typeparam>
      <typeparam name="T10">Тип десятого входного аргумента делегата действия.</typeparam>
      <typeparam name="T11">Тип одиннадцатого входного аргумента делегата действия.</typeparam>
      <typeparam name="TResult">Тип выходного аргумента делегата действия.</typeparam>
    </member>
    <member name="M:System.Activities.ActivityFunc`12.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.ActivityFunc`12" />.</summary>
    </member>
    <member name="P:System.Activities.ActivityFunc`12.Argument1">
      <summary>Возвращает или задает первый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`12.Argument10">
      <summary>Возвращает или задает десятый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`12.Argument11">
      <summary>Возвращает или задает одиннадцатый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`12.Argument2">
      <summary>Возвращает или задает второй входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`12.Argument3">
      <summary>Возвращает или задает третий входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`12.Argument4">
      <summary>Возвращает или задает четвертый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`12.Argument5">
      <summary>Возвращает или задает пятый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`12.Argument6">
      <summary>Возвращает или задает шестой входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`12.Argument7">
      <summary>Возвращает или задает седьмой входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`12.Argument8">
      <summary>Возвращает или задает восьмой входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`12.Argument9">
      <summary>Возвращает или задает девятый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`12.Result">
      <summary>Возвращает или задает выходной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="T:System.Activities.ActivityFunc`13">
      <summary>Определяет делегат действия с одним входным аргументом типа T и одним выходным аргументом типа TResult.</summary>
      <typeparam name="T1">Тип первого входного аргумента делегата действия.</typeparam>
      <typeparam name="T2">Тип второго входного аргумента делегата действия.</typeparam>
      <typeparam name="T3">Тип третьего входного аргумента делегата действия.</typeparam>
      <typeparam name="T4">Тип четвертого входного аргумента делегата действия.</typeparam>
      <typeparam name="T5">Тип пятого входного аргумента делегата действия.</typeparam>
      <typeparam name="T6">Тип шестого входного аргумента делегата действия.</typeparam>
      <typeparam name="T7">Тип седьмого входного аргумента делегата действия.</typeparam>
      <typeparam name="T8">Тип восьмого входного аргумента делегата действия.</typeparam>
      <typeparam name="T9">Тип девятого входного аргумента делегата действия.</typeparam>
      <typeparam name="T10">Тип десятого входного аргумента делегата действия.</typeparam>
      <typeparam name="T11">Тип одиннадцатого входного аргумента делегата действия.</typeparam>
      <typeparam name="T12">Тип двенадцатого входного аргумента делегата действия.</typeparam>
      <typeparam name="TResult">Тип выходного аргумента делегата действия.</typeparam>
    </member>
    <member name="M:System.Activities.ActivityFunc`13.#ctor">
      <summary>Создание нового экземпляра класса <see cref="T:System.Activities.ActivityFunc`13" />.</summary>
    </member>
    <member name="P:System.Activities.ActivityFunc`13.Argument1">
      <summary>Возвращает или задает первый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`13.Argument10">
      <summary>Возвращает или задает десятый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`13.Argument11">
      <summary>Возвращает или задает одиннадцатый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`13.Argument12">
      <summary>Возвращает или задает двенадцатый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`13.Argument2">
      <summary>Возвращает или задает второй входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`13.Argument3">
      <summary>Возвращает или задает третий входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`13.Argument4">
      <summary>Возвращает или задает четвертый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`13.Argument5">
      <summary>Возвращает или задает пятый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`13.Argument6">
      <summary>Возвращает или задает шестой входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`13.Argument7">
      <summary>Возвращает или задает седьмой входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`13.Argument8">
      <summary>Возвращает или задает восьмой входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`13.Argument9">
      <summary>Возвращает или задает девятый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`13.Result">
      <summary>Возвращает или задает выходной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="T:System.Activities.ActivityFunc`14">
      <summary>Определяет делегат действия с одним входным аргументом типа T и одним выходным аргументом типа TResult.</summary>
      <typeparam name="T1">Тип первого входного аргумента делегата действия.</typeparam>
      <typeparam name="T2">Тип второго входного аргумента делегата действия.</typeparam>
      <typeparam name="T3">Тип третьего входного аргумента делегата действия.</typeparam>
      <typeparam name="T4">Тип четвертого входного аргумента делегата действия.</typeparam>
      <typeparam name="T5">Тип пятого входного аргумента делегата действия.</typeparam>
      <typeparam name="T6">Тип шестого входного аргумента делегата действия.</typeparam>
      <typeparam name="T7">Тип седьмого входного аргумента делегата действия.</typeparam>
      <typeparam name="T8">Тип восьмого входного аргумента делегата действия.</typeparam>
      <typeparam name="T9">Тип девятого входного аргумента делегата действия.</typeparam>
      <typeparam name="T10">Тип десятого входного аргумента делегата действия.</typeparam>
      <typeparam name="T11">Тип одиннадцатого входного аргумента делегата действия.</typeparam>
      <typeparam name="T12">Тип двенадцатого входного аргумента делегата действия.</typeparam>
      <typeparam name="T13">Тип тринадцатого входного аргумента делегата действия.</typeparam>
      <typeparam name="TResult">Тип выходного аргумента делегата действия.</typeparam>
    </member>
    <member name="M:System.Activities.ActivityFunc`14.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.ActivityFunc`14" />.</summary>
    </member>
    <member name="P:System.Activities.ActivityFunc`14.Argument1">
      <summary>Возвращает или задает первый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`14.Argument10">
      <summary>Возвращает или задает десятый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`14.Argument11">
      <summary>Возвращает или задает одиннадцатый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`14.Argument12">
      <summary>Возвращает или задает двенадцатый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`14.Argument13">
      <summary>Возвращает или задает тринадцатый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`14.Argument2">
      <summary>Возвращает или задает второй входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`14.Argument3">
      <summary>Возвращает или задает третий входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`14.Argument4">
      <summary>Возвращает или задает четвертый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`14.Argument5">
      <summary>Возвращает или задает пятый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`14.Argument6">
      <summary>Возвращает или задает шестой входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`14.Argument7">
      <summary>Возвращает или задает седьмой входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`14.Argument8">
      <summary>Возвращает или задает восьмой входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`14.Argument9">
      <summary>Возвращает или задает девятый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`14.Result">
      <summary>Возвращает или задает выходной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="T:System.Activities.ActivityFunc`15">
      <summary>Определяет делегат действия с одним входным аргументом типа T и одним выходным аргументом типа TResult.</summary>
      <typeparam name="T1">Тип первого входного аргумента делегата действия.</typeparam>
      <typeparam name="T2">Тип второго входного аргумента делегата действия.</typeparam>
      <typeparam name="T3">Тип третьего входного аргумента делегата действия.</typeparam>
      <typeparam name="T4">Тип четвертого входного аргумента делегата действия.</typeparam>
      <typeparam name="T5">Тип пятого входного аргумента делегата действия.</typeparam>
      <typeparam name="T6">Тип шестого входного аргумента делегата действия.</typeparam>
      <typeparam name="T7">Тип седьмого входного аргумента делегата действия.</typeparam>
      <typeparam name="T8">Тип восьмого входного аргумента делегата действия.</typeparam>
      <typeparam name="T9">Тип девятого входного аргумента делегата действия.</typeparam>
      <typeparam name="T10">Тип десятого входного аргумента делегата действия.</typeparam>
      <typeparam name="T11">Тип одиннадцатого входного аргумента делегата действия.</typeparam>
      <typeparam name="T12">Тип двенадцатого входного аргумента делегата действия.</typeparam>
      <typeparam name="T13">Тип тринадцатого входного аргумента делегата действия.</typeparam>
      <typeparam name="T14">Тип четырнадцатого входного аргумента делегата действия.</typeparam>
      <typeparam name="TResult">Тип выходного аргумента делегата действия.</typeparam>
    </member>
    <member name="M:System.Activities.ActivityFunc`15.#ctor">
      <summary>Создание нового экземпляра класса <see cref="T:System.Activities.ActivityFunc`15" />.</summary>
    </member>
    <member name="P:System.Activities.ActivityFunc`15.Argument1">
      <summary>Возвращает или задает первый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`15.Argument10">
      <summary>Возвращает или задает десятый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`15.Argument11">
      <summary>Возвращает или задает одиннадцатый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`15.Argument12">
      <summary>Возвращает или задает двенадцатый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`15.Argument13">
      <summary>Возвращает или задает тринадцатый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`15.Argument14">
      <summary>Возвращает или задает четырнадцатый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`15.Argument2">
      <summary>Возвращает или задает второй входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`15.Argument3">
      <summary>Возвращает или задает третий входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`15.Argument4">
      <summary>Возвращает или задает четвертый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`15.Argument5">
      <summary>Возвращает или задает пятый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`15.Argument6">
      <summary>Возвращает или задает шестой входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`15.Argument7">
      <summary>Возвращает или задает седьмой входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`15.Argument8">
      <summary>Возвращает или задает восьмой входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`15.Argument9">
      <summary>Возвращает или задает девятый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`15.Result">
      <summary>Возвращает или задает выходной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="T:System.Activities.ActivityFunc`16">
      <summary>Определяет делегат действия с одним входным аргументом типа T и одним выходным аргументом типа TResult.</summary>
      <typeparam name="T1">Тип первого входного аргумента делегата действия.</typeparam>
      <typeparam name="T2">Тип второго входного аргумента делегата действия.</typeparam>
      <typeparam name="T3">Тип третьего входного аргумента делегата действия.</typeparam>
      <typeparam name="T4">Тип четвертого входного аргумента делегата действия.</typeparam>
      <typeparam name="T5">Тип пятого входного аргумента делегата действия.</typeparam>
      <typeparam name="T6">Тип шестого входного аргумента делегата действия.</typeparam>
      <typeparam name="T7">Тип седьмого входного аргумента делегата действия.</typeparam>
      <typeparam name="T8">Тип восьмого входного аргумента делегата действия.</typeparam>
      <typeparam name="T9">Тип девятого входного аргумента делегата действия.</typeparam>
      <typeparam name="T10">Тип десятого входного аргумента делегата действия.</typeparam>
      <typeparam name="T11">Тип одиннадцатого входного аргумента делегата действия.</typeparam>
      <typeparam name="T12">Тип двенадцатого входного аргумента делегата действия.</typeparam>
      <typeparam name="T13">Тип тринадцатого входного аргумента делегата действия.</typeparam>
      <typeparam name="T14">Тип четырнадцатого входного аргумента делегата действия.</typeparam>
      <typeparam name="T15">Тип пятнадцатого входного аргумента делегата действия.</typeparam>
      <typeparam name="TResult">Тип выходного аргумента делегата действия.</typeparam>
    </member>
    <member name="M:System.Activities.ActivityFunc`16.#ctor">
      <summary>Создание нового экземпляра класса <see cref="T:System.Activities.ActivityFunc`16" />.</summary>
    </member>
    <member name="P:System.Activities.ActivityFunc`16.Argument1">
      <summary>Возвращает или задает первый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`16.Argument10">
      <summary>Возвращает или задает десятый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`16.Argument11">
      <summary>Возвращает или задает одиннадцатый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`16.Argument12">
      <summary>Возвращает или задает двенадцатый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`16.Argument13">
      <summary>Возвращает или задает тринадцатый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`16.Argument14">
      <summary>Возвращает или задает четырнадцатый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`16.Argument15">
      <summary>Возвращает или задает пятнадцатый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`16.Argument2">
      <summary>Возвращает или задает второй входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`16.Argument3">
      <summary>Возвращает или задает третий входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`16.Argument4">
      <summary>Возвращает или задает четвертый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`16.Argument5">
      <summary>Возвращает или задает пятый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`16.Argument6">
      <summary>Возвращает или задает шестой входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`16.Argument7">
      <summary>Возвращает или задает седьмой входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`16.Argument8">
      <summary>Возвращает или задает восьмой входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`16.Argument9">
      <summary>Возвращает или задает девятый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`16.Result">
      <summary>Возвращает или задает выходной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="T:System.Activities.ActivityFunc`17">
      <summary>Определяет делегат действия с одним входным аргументом типа T и одним выходным аргументом типа TResult.</summary>
      <typeparam name="T1">Тип первого входного аргумента делегата действия.</typeparam>
      <typeparam name="T2">Тип второго входного аргумента делегата действия.</typeparam>
      <typeparam name="T3">Тип третьего входного аргумента делегата действия.</typeparam>
      <typeparam name="T4">Тип четвертого входного аргумента делегата действия.</typeparam>
      <typeparam name="T5">Тип пятого входного аргумента делегата действия.</typeparam>
      <typeparam name="T6">Тип шестого входного аргумента делегата действия.</typeparam>
      <typeparam name="T7">Тип седьмого входного аргумента делегата действия.</typeparam>
      <typeparam name="T8">Тип восьмого входного аргумента делегата действия.</typeparam>
      <typeparam name="T9">Тип девятого входного аргумента делегата действия.</typeparam>
      <typeparam name="T10">Тип десятого входного аргумента делегата действия.</typeparam>
      <typeparam name="T11">Тип одиннадцатого входного аргумента делегата действия.</typeparam>
      <typeparam name="T12">Тип двенадцатого входного аргумента делегата действия.</typeparam>
      <typeparam name="T13">Тип тринадцатого входного аргумента делегата действия.</typeparam>
      <typeparam name="T14">Тип четырнадцатого входного аргумента делегата действия.</typeparam>
      <typeparam name="T15">Тип пятнадцатого входного аргумента делегата действия.</typeparam>
      <typeparam name="T16">Тип шестнадцатого входного аргумента делегата действия.</typeparam>
      <typeparam name="TResult">Тип выходного аргумента делегата действия.</typeparam>
    </member>
    <member name="M:System.Activities.ActivityFunc`17.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.ActivityFunc`17" />.</summary>
    </member>
    <member name="P:System.Activities.ActivityFunc`17.Argument1">
      <summary>Возвращает или задает первый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`17.Argument10">
      <summary>Возвращает или задает десятый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`17.Argument11">
      <summary>Возвращает или задает одиннадцатый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`17.Argument12">
      <summary>Возвращает или задает двенадцатый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`17.Argument13">
      <summary>Возвращает или задает тринадцатый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`17.Argument14">
      <summary>Возвращает или задает четырнадцатый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`17.Argument15">
      <summary>Возвращает или задает пятнадцатый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`17.Argument16">
      <summary>Возвращает или задает шестнадцатый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`17.Argument2">
      <summary>Возвращает или задает второй входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`17.Argument3">
      <summary>Возвращает или задает третий входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`17.Argument4">
      <summary>Возвращает или задает четвертый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`17.Argument5">
      <summary>Возвращает или задает пятый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`17.Argument6">
      <summary>Возвращает или задает шестой входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`17.Argument7">
      <summary>Возвращает или задает седьмой входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`17.Argument8">
      <summary>Возвращает или задает восьмой входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`17.Argument9">
      <summary>Возвращает или задает девятый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`17.Result">
      <summary>Возвращает или задает выходной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="T:System.Activities.ActivityFunc`2">
      <summary>Определяет делегат действия с одним аргументом in типа <paramref name="T" /> и одним аргументом <see langword="out" /> типа <paramref name="TResult" />.</summary>
      <typeparam name="T">Тип аргумента <see langword="in" /> делегата действия.</typeparam>
      <typeparam name="TResult">Тип аргумента <see langword="out" /> делегата действия.</typeparam>
    </member>
    <member name="M:System.Activities.ActivityFunc`2.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.ActivityFunc`2" />.</summary>
    </member>
    <member name="P:System.Activities.ActivityFunc`2.Argument">
      <summary>Возвращает или задает входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`2.Result">
      <summary>Возвращает или задает выходной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="T:System.Activities.ActivityFunc`3">
      <summary>Определяет делегат действия с одним входным аргументом типа T и одним аргументом <see langword="out" /> типа TResult.</summary>
      <typeparam name="T1">Тип первого входного аргумента делегата действия.</typeparam>
      <typeparam name="T2">Тип второго входного аргумента делегата действия.</typeparam>
      <typeparam name="TResult">Тип выходного аргумента делегата действия.</typeparam>
    </member>
    <member name="M:System.Activities.ActivityFunc`3.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.ActivityFunc`3" />.</summary>
    </member>
    <member name="P:System.Activities.ActivityFunc`3.Argument1">
      <summary>Возвращает или задает первый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`3.Argument2">
      <summary>Возвращает или задает второй входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`3.Result">
      <summary>Возвращает или задает выходной аргумент делегата действия.</summary>
      <returns>Результирующий аргумент.</returns>
    </member>
    <member name="T:System.Activities.ActivityFunc`4">
      <summary>Определяет делегат действия с тремя входными аргументами типа T и одним аргументом <see langword="out" /> типа TResult.</summary>
      <typeparam name="T1">Тип первого входного аргумента делегата действия.</typeparam>
      <typeparam name="T2">Тип второго входного аргумента делегата действия.</typeparam>
      <typeparam name="T3">Тип третьего входного аргумента делегата действия.</typeparam>
      <typeparam name="TResult">Тип выходного аргумента делегата действия.</typeparam>
    </member>
    <member name="M:System.Activities.ActivityFunc`4.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.ActivityFunc`4" />.</summary>
    </member>
    <member name="P:System.Activities.ActivityFunc`4.Argument1">
      <summary>Возвращает или задает первый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`4.Argument2">
      <summary>Возвращает или задает второй входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`4.Argument3">
      <summary>Возвращает или задает третий входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`4.Result">
      <summary>Возвращает или задает выходной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="T:System.Activities.ActivityFunc`5">
      <summary>Определяет делегат действия с четырьмя входными аргументами типа T и одним аргументом <see langword="out" /> типа TResult.</summary>
      <typeparam name="T1">Тип первого входного аргумента делегата действия.</typeparam>
      <typeparam name="T2">Тип второго входного аргумента делегата действия.</typeparam>
      <typeparam name="T3">Тип третьего входного аргумента делегата действия.</typeparam>
      <typeparam name="T4">Тип четвертого входного аргумента делегата действия.</typeparam>
      <typeparam name="TResult">Тип выходного аргумента делегата действия.</typeparam>
    </member>
    <member name="M:System.Activities.ActivityFunc`5.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.ActivityFunc`5" />.</summary>
    </member>
    <member name="P:System.Activities.ActivityFunc`5.Argument1">
      <summary>Возвращает или задает первый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`5.Argument2">
      <summary>Возвращает или задает второй входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`5.Argument3">
      <summary>Возвращает или задает третий входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`5.Argument4">
      <summary>Возвращает или задает четвертый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`5.Result">
      <summary>Возвращает или задает выходной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="T:System.Activities.ActivityFunc`6">
      <summary>Определяет делегат действия с пятью входными аргументами типа T и одним выходным аргументом типа TResult.</summary>
      <typeparam name="T1">Тип первого входного аргумента делегата действия.</typeparam>
      <typeparam name="T2">Тип второго входного аргумента делегата действия.</typeparam>
      <typeparam name="T3">Тип третьего входного аргумента делегата действия.</typeparam>
      <typeparam name="T4">Тип четвертого входного аргумента делегата действия.</typeparam>
      <typeparam name="T5">Тип пятого входного аргумента делегата действия.</typeparam>
      <typeparam name="TResult">Тип выходного аргумента делегата действия.</typeparam>
    </member>
    <member name="M:System.Activities.ActivityFunc`6.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.ActivityFunc`6" />.</summary>
    </member>
    <member name="P:System.Activities.ActivityFunc`6.Argument1">
      <summary>Возвращает или задает первый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`6.Argument2">
      <summary>Возвращает или задает второй входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`6.Argument3">
      <summary>Возвращает или задает третий входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`6.Argument4">
      <summary>Возвращает или задает четвертый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`6.Argument5">
      <summary>Возвращает или задает пятый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`6.Result">
      <summary>Возвращает или задает выходной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="T:System.Activities.ActivityFunc`7">
      <summary>Определяет делегат действия с шестью входными аргументами типа T и одним выходным аргументом типа TResult.</summary>
      <typeparam name="T1">Тип первого входного аргумента делегата действия.</typeparam>
      <typeparam name="T2">Тип второго входного аргумента делегата действия.</typeparam>
      <typeparam name="T3">Тип третьего входного аргумента делегата действия.</typeparam>
      <typeparam name="T4">Тип четвертого входного аргумента делегата действия.</typeparam>
      <typeparam name="T5">Тип пятого входного аргумента делегата действия.</typeparam>
      <typeparam name="T6">Тип шестого входного аргумента делегата действия.</typeparam>
      <typeparam name="TResult">Тип выходного аргумента делегата действия.</typeparam>
    </member>
    <member name="M:System.Activities.ActivityFunc`7.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.ActivityFunc`7" />.</summary>
    </member>
    <member name="P:System.Activities.ActivityFunc`7.Argument1">
      <summary>Возвращает или задает первый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`7.Argument2">
      <summary>Возвращает или задает второй входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`7.Argument3">
      <summary>Возвращает или задает третий входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`7.Argument4">
      <summary>Возвращает или задает четвертый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`7.Argument5">
      <summary>Возвращает или задает пятый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`7.Argument6">
      <summary>Возвращает или задает шестой входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`7.Result">
      <summary>Возвращает или задает выходной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="T:System.Activities.ActivityFunc`8">
      <summary>Определяет делегат действия с семью входными аргументами типа T и одним выходным аргументом типа TResult.</summary>
      <typeparam name="T1">Тип первого входного аргумента делегата действия.</typeparam>
      <typeparam name="T2">Тип второго входного аргумента делегата действия.</typeparam>
      <typeparam name="T3">Тип третьего входного аргумента делегата действия.</typeparam>
      <typeparam name="T4">Тип четвертого входного аргумента делегата действия.</typeparam>
      <typeparam name="T5">Тип пятого входного аргумента делегата действия.</typeparam>
      <typeparam name="T6">Тип шестого входного аргумента делегата действия.</typeparam>
      <typeparam name="T7">Тип седьмого входного аргумента делегата действия.</typeparam>
      <typeparam name="TResult">Тип выходного аргумента делегата действия.</typeparam>
    </member>
    <member name="M:System.Activities.ActivityFunc`8.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.ActivityFunc`8" />.</summary>
    </member>
    <member name="P:System.Activities.ActivityFunc`8.Argument1">
      <summary>Возвращает или задает первый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`8.Argument2">
      <summary>Возвращает или задает второй входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`8.Argument3">
      <summary>Возвращает или задает третий входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`8.Argument4">
      <summary>Возвращает или задает четвертый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`8.Argument5">
      <summary>Возвращает или задает пятый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`8.Argument6">
      <summary>Возвращает или задает шестой входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`8.Argument7">
      <summary>Возвращает или задает седьмой входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`8.Result">
      <summary>Возвращает или задает выходной аргумент делегата действия.</summary>
      <returns>Аргумент.</returns>
    </member>
    <member name="T:System.Activities.ActivityFunc`9">
      <summary>Определяет делегат действия с восемью входными аргументами типа T и одним выходным аргументом типа TResult.</summary>
      <typeparam name="T1">Тип первого входного аргумента делегата действия.</typeparam>
      <typeparam name="T2">Тип второго входного аргумента делегата действия.</typeparam>
      <typeparam name="T3">Тип третьего входного аргумента делегата действия.</typeparam>
      <typeparam name="T4">Тип четвертого входного аргумента делегата действия.</typeparam>
      <typeparam name="T5">Тип пятого входного аргумента делегата действия.</typeparam>
      <typeparam name="T6">Тип шестого входного аргумента делегата действия.</typeparam>
      <typeparam name="T7">Тип седьмого входного аргумента делегата действия.</typeparam>
      <typeparam name="T8">Тип восьмого входного аргумента делегата действия.</typeparam>
      <typeparam name="TResult">Тип выходного аргумента делегата действия.</typeparam>
    </member>
    <member name="M:System.Activities.ActivityFunc`9.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.ActivityFunc`9" />.</summary>
    </member>
    <member name="P:System.Activities.ActivityFunc`9.Argument1">
      <summary>Возвращает или задает первый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`9.Argument2">
      <summary>Возвращает или задает второй входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`9.Argument3">
      <summary>Возвращает или задает третий входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`9.Argument4">
      <summary>Возвращает или задает четвертый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`9.Argument5">
      <summary>Возвращает или задает пятый входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`9.Argument6">
      <summary>Возвращает или задает шестой входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`9.Argument7">
      <summary>Возвращает или задает седьмой входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`9.Argument8">
      <summary>Возвращает или задает восьмой входной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="P:System.Activities.ActivityFunc`9.Result">
      <summary>Возвращает или задает выходной аргумент делегата действия.</summary>
      <returns>Аргумент для делегата действия.</returns>
    </member>
    <member name="T:System.Activities.ActivityInstance">
      <summary>Представляет состояние экземпляра действия во время выполнения.</summary>
    </member>
    <member name="P:System.Activities.ActivityInstance.Activity">
      <summary>Возвращает действие, представляемое текущим экземпляром <see cref="T:System.Activities.ActivityInstance" />.</summary>
      <returns>Действие, представляемое этим экземпляром <see cref="T:System.Activities.ActivityInstance" />.</returns>
    </member>
    <member name="P:System.Activities.ActivityInstance.Id">
      <summary>Возвращает идентификатор, однозначно определяющий экземпляр <see cref="T:System.Activities.ActivityInstance" />.</summary>
      <returns>Идентификатор, однозначно определяющий экземпляр <see cref="T:System.Activities.ActivityInstance" />.</returns>
    </member>
    <member name="P:System.Activities.ActivityInstance.ImplementationVersion">
      <summary>Получает или задает версию реализации для экземпляра.</summary>
      <returns>Версия реализации для экземпляра.</returns>
    </member>
    <member name="P:System.Activities.ActivityInstance.IsCompleted">
      <summary>Возвращает значение, которое показывает, завершено ли действие, представляемое текущим экземпляром <see cref="T:System.Activities.ActivityInstance" />.</summary>
      <returns>Значение <see langword="true" />, если действие завершено; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Activities.ActivityInstance.State">
      <summary>Возвращает объект <see cref="T:System.Activities.ActivityInstanceState" /> для текущего экземпляра <see cref="T:System.Activities.ActivityInstance" />.</summary>
      <returns>Состояние экземпляра действия.</returns>
    </member>
    <member name="T:System.Activities.ActivityInstanceState">
      <summary>Описывает состояние экземпляра действия.</summary>
    </member>
    <member name="F:System.Activities.ActivityInstanceState.Canceled">
      <summary>Указывает, что действие находится в отмененном состоянии.</summary>
    </member>
    <member name="F:System.Activities.ActivityInstanceState.Closed">
      <summary>Указывает, что действие находится в закрытом состоянии.</summary>
    </member>
    <member name="F:System.Activities.ActivityInstanceState.Executing">
      <summary>Указывает, что действие находится в состоянии выполнения.</summary>
    </member>
    <member name="F:System.Activities.ActivityInstanceState.Faulted">
      <summary>Указывает, что действие находится в ошибочном состоянии.</summary>
    </member>
    <member name="T:System.Activities.ActivityMetadata">
      <summary>Представляет набор аргументов, дочерних действий, переменных и делегатов, которые настроенный <see cref="T:System.Activities.Activity" /> вносит в среду выполнения.</summary>
    </member>
    <member name="M:System.Activities.ActivityMetadata.AddArgument(System.Activities.RuntimeArgument)">
      <summary>Добавляет аргумент в коллекцию аргументов действия.</summary>
      <param name="argument">Аргумент для добавления в коллекцию.</param>
    </member>
    <member name="M:System.Activities.ActivityMetadata.AddDefaultExtensionProvider``1(System.Func{``0})">
      <summary>Добавляет указанный поставщик расширений в коллекцию поставщиков расширений по умолчанию для данного действия.</summary>
      <param name="extensionProvider">Функция, возвращающая расширение.</param>
      <typeparam name="T">Тип поставщика расширений.</typeparam>
    </member>
    <member name="M:System.Activities.ActivityMetadata.AddImportedChild(System.Activities.Activity)">
      <summary>Добавляет указанное действие в список импортированных дочерних действий в метаданных.</summary>
      <param name="importedChild">Действие для добавления.</param>
    </member>
    <member name="M:System.Activities.ActivityMetadata.AddImportedChild(System.Activities.Activity,System.Object)">
      <summary>Добавляет указанное действие в список импортированных дочерних действий в метаданных.</summary>
      <param name="importedChild">Действие для добавления.</param>
      <param name="origin">Источник.</param>
    </member>
    <member name="M:System.Activities.ActivityMetadata.AddImportedDelegate(System.Activities.ActivityDelegate)">
      <summary>Добавляет указанный делегат в список импортированных делегатов в метаданных.</summary>
      <param name="importedDelegate">Добавляемый делегат.</param>
    </member>
    <member name="M:System.Activities.ActivityMetadata.AddImportedDelegate(System.Activities.ActivityDelegate,System.Object)">
      <summary>Добавляет указанный делегат в список импортированных делегатов в метаданных.</summary>
      <param name="importedDelegate">Добавляемый делегат.</param>
      <param name="origin">Источник.</param>
    </member>
    <member name="M:System.Activities.ActivityMetadata.AddValidationError(System.Activities.Validation.ValidationError)">
      <summary>Добавляет указанную ошибку проверки в коллекцию ошибок проверки в метаданных.</summary>
      <param name="validationError">Добавляемая ошибка проверки.</param>
    </member>
    <member name="M:System.Activities.ActivityMetadata.AddValidationError(System.String)">
      <summary>С помощью указанного описания добавляет ошибку проверки в коллекцию ошибок проверки в метаданных.</summary>
      <param name="validationErrorMessage">Сообщение, описывающее ошибку проверки.</param>
    </member>
    <member name="M:System.Activities.ActivityMetadata.AddVariable(System.Activities.Variable)">
      <summary>Добавляет указанную переменную в коллекцию переменных в метаданных.</summary>
      <param name="variable">Добавляемая переменная.</param>
    </member>
    <member name="M:System.Activities.ActivityMetadata.AddVariable(System.Activities.Variable,System.Object)">
      <summary>Добавляет указанную переменную в коллекцию переменных в метаданных.</summary>
      <param name="variable">Добавляемая переменная.</param>
      <param name="origin">Источник.</param>
    </member>
    <member name="M:System.Activities.ActivityMetadata.Bind(System.Activities.Argument,System.Activities.RuntimeArgument)">
      <summary>Привязывает указанный аргумент <see cref="T:System.Activities.Argument" /> к указанному <see cref="T:System.Activities.RuntimeArgument" />.</summary>
      <param name="binding">Привязываемый элемент управления <see cref="T:System.Activities.Argument" />.</param>
      <param name="argument">Привязываемый элемент управления <see cref="T:System.Activities.RuntimeArgument" />.</param>
    </member>
    <member name="P:System.Activities.ActivityMetadata.Environment">
      <summary>Возвращает среду <see cref="T:System.Activities.LocationReferenceEnvironment" /> аргументов, переменных, аргументов делегатов или символов действия, предоставляемых арбитром <see cref="T:System.Activities.Hosting.SymbolResolver" />.</summary>
      <returns>Среда ссылок на расположение действия аргументов, переменных, аргументов делегатов или символы, представленные <see cref="T:System.Activities.Hosting.SymbolResolver" />.</returns>
    </member>
    <member name="M:System.Activities.ActivityMetadata.Equals(System.Object)">
      <summary>Определяет, равен ли этот экземпляр метаданных указанному объекту.</summary>
      <param name="obj">Объект для сравнения.</param>
      <returns>Значение <see langword="true" />, если указанный объект равен данному экземпляру метаданных; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Activities.ActivityMetadata.GetArgumentsWithReflection">
      <summary>Возвращает коллекцию аргументов, полученных с помощью отражения.</summary>
      <returns>Коллекция аргументов.</returns>
    </member>
    <member name="M:System.Activities.ActivityMetadata.GetHashCode">
      <summary>Возвращает уникальный идентификатор этого экземпляра метаданных.</summary>
      <returns>Целое число, которое служит уникальным идентификатором этого экземпляра метаданных.</returns>
    </member>
    <member name="M:System.Activities.ActivityMetadata.GetImportedChildrenWithReflection">
      <summary>Возвращает коллекцию импортированных дочерних действий с использованием отражения.</summary>
      <returns>Коллекция импортированных дочерних действий.</returns>
    </member>
    <member name="M:System.Activities.ActivityMetadata.GetImportedDelegatesWithReflection">
      <summary>Возвращает коллекцию делегатов с использованием отражения.</summary>
      <returns>Коллекция делегатов.</returns>
    </member>
    <member name="M:System.Activities.ActivityMetadata.GetVariablesWithReflection">
      <summary>С помощью отражения возвращает коллекцию переменных.</summary>
      <returns>Коллекция переменных.</returns>
    </member>
    <member name="P:System.Activities.ActivityMetadata.HasViolations">
      <summary>Возвращает значение, указывающее наличие ошибок проверки в метаданных.</summary>
      <returns>Значение <see langword="true" />, если ошибки проверки есть; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Activities.ActivityMetadata.op_Equality(System.Activities.ActivityMetadata,System.Activities.ActivityMetadata)">
      <summary>Возвращает значение, указывающее, равны ли два указанных экземпляра метаданных.</summary>
      <param name="left">Первый элемент для сравнения.</param>
      <param name="right">Второй элемент для сравнения.</param>
      <returns>Значение <see langword="true" />, если два элемента равны, в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Activities.ActivityMetadata.op_Inequality(System.Activities.ActivityMetadata,System.Activities.ActivityMetadata)">
      <summary>Возвращает значение, показывающее неравенство двух указанных экземпляров метаданных.</summary>
      <param name="left">Первый элемент для сравнения.</param>
      <param name="right">Второй элемент для сравнения.</param>
      <returns>Значение <see langword="true" />, если две элемента не равны; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Activities.ActivityMetadata.RequireExtension(System.Type)">
      <summary>Указывает, что во время выполнения действию требуется расширение указанного типа.</summary>
      <param name="extensionType">Тип расширения.</param>
    </member>
    <member name="M:System.Activities.ActivityMetadata.RequireExtension``1">
      <summary>Указывает, что во время выполнения действию требуется расширение указанного универсального типа.</summary>
      <typeparam name="T">Тип расширения.</typeparam>
    </member>
    <member name="M:System.Activities.ActivityMetadata.SetArgumentsCollection(System.Collections.ObjectModel.Collection{System.Activities.RuntimeArgument})">
      <summary>Добавляет указанную коллекцию аргументов к аргументам действия.</summary>
      <param name="arguments">Добавляемые аргументы.</param>
    </member>
    <member name="M:System.Activities.ActivityMetadata.SetImportedChildrenCollection(System.Collections.ObjectModel.Collection{System.Activities.Activity})">
      <summary>Добавляет указанную коллекцию в качестве импортированных дочерних действий данного действия.</summary>
      <param name="importedChildren">Добавляемые действия.</param>
    </member>
    <member name="M:System.Activities.ActivityMetadata.SetImportedDelegatesCollection(System.Collections.ObjectModel.Collection{System.Activities.ActivityDelegate})">
      <summary>Добавляет указанную коллекцию в качестве импортированных делегатов данного действия.</summary>
      <param name="importedDelegates">Добавляемые делегаты.</param>
    </member>
    <member name="M:System.Activities.ActivityMetadata.SetValidationErrorsCollection(System.Collections.ObjectModel.Collection{System.Activities.Validation.ValidationError})">
      <summary>Добавляет указанную коллекцию ошибок проверки в коллекцию ошибок проверки в метаданных.</summary>
      <param name="validationErrors">Добавляемые ошибки проверки.</param>
    </member>
    <member name="M:System.Activities.ActivityMetadata.SetVariablesCollection(System.Collections.ObjectModel.Collection{System.Activities.Variable})">
      <summary>Добавляет указанную коллекцию переменных к переменным действия.</summary>
      <param name="variables">Добавляемые переменные.</param>
    </member>
    <member name="T:System.Activities.ActivityPropertyReference">
      <summary>Представляет ссылку на свойство, которая используется в <see cref="T:System.Activities.ActivityBuilder" /> и сопоставляется с <see cref="T:System.Activities.XamlIntegration.PropertyReferenceExtension`1" /> в действии <see langword="x:Class" />, когда действие <see langword="x:Class" /> десериализуется в <see cref="T:System.Activities.ActivityBuilder" />.</summary>
    </member>
    <member name="M:System.Activities.ActivityPropertyReference.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.ActivityPropertyReference" />.</summary>
    </member>
    <member name="P:System.Activities.ActivityPropertyReference.SourceProperty">
      <summary>Получает или задает исходное имя свойства, которое соответствует имени свойства в определении действия <see langword="x:Class" />.</summary>
      <returns>Исходное имя свойства, которое соответствует имени свойства в определении действия <see langword="x:Class" />.</returns>
    </member>
    <member name="P:System.Activities.ActivityPropertyReference.TargetProperty">
      <summary>Возвращает или задает имя свойства, задаваемого в целевом объекте.</summary>
      <returns>Имя свойства, задаваемого в целевом объекте.</returns>
    </member>
    <member name="T:System.Activities.ActivityWithResult">
      <summary>Получает значение или тип аргумента <see langword="out" /> действия. Этот класс является абстрактным и производным от класса <see cref="T:System.Activities.Activity" />.</summary>
    </member>
    <member name="P:System.Activities.ActivityWithResult.Result">
      <summary>В случае реализации в производном классе возвращает или задает значение объекта типа <see cref="T:System.Activities.OutArgument" />.</summary>
      <returns>Аргумент <see langword="out" />.</returns>
    </member>
    <member name="P:System.Activities.ActivityWithResult.ResultType">
      <summary>При реализации в производном классе возвращает тип аргумента <see cref="T:System.Activities.OutArgument" /> действия.</summary>
      <returns>Тип объекта.</returns>
    </member>
    <member name="T:System.Activities.Argument">
      <summary>Абстрактный базовый класс, представляющий конечную точку привязки, которая поддерживает поток данных в действие и из действия.</summary>
    </member>
    <member name="P:System.Activities.Argument.ArgumentType">
      <summary>Возвращает тип для данных, привязанных к этому <see cref="T:System.Activities.Argument" />.</summary>
      <returns>Тип для данных, привязанных к этому <see cref="T:System.Activities.Argument" />.</returns>
    </member>
    <member name="M:System.Activities.Argument.Create(System.Type,System.Activities.ArgumentDirection)">
      <summary>Инициализирует и возвращает новый аргумент <see cref="T:System.Activities.Argument" />.</summary>
      <param name="type">Тип данных объекта <see cref="T:System.Activities.Argument" />.</param>
      <param name="direction">Одно из значений перечисления, указывающее направление потока данных через объект <see cref="T:System.Activities.Argument" />.</param>
      <returns>Созданный новый аргумент.</returns>
    </member>
    <member name="M:System.Activities.Argument.CreateReference(System.Activities.Argument,System.String)">
      <summary>Создает новый аргумент, ссылающийся на заданный целевой аргумент, используя указанное имя аргумента.</summary>
      <param name="argumentToReference">Целевой аргумент для создания ссылки.</param>
      <param name="referencedArgumentName">Имя указанного по ссылке аргумента.</param>
      <returns>Новый аргумент, ссылающийся на заданный целевой аргумент.</returns>
    </member>
    <member name="P:System.Activities.Argument.Direction">
      <summary>Возвращает объект <see cref="T:System.Activities.ArgumentDirection" />, который указывает направление потока данных, представляемого <see cref="T:System.Activities.Argument" />: в действие, из действия или в обоих направлениях.</summary>
      <returns>Одно из значений перечисления, указывающее направление потока данных через объект <see cref="T:System.Activities.Argument" />.</returns>
    </member>
    <member name="P:System.Activities.Argument.EvaluationOrder">
      <summary>Возвращает или задает отсчитываемое от нуля значение, которое указывает порядок для вычисления аргумента.</summary>
      <returns>Отсчитываемое от нуля значение, которое указывает порядок для вычисления аргумента.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение меньше нуля и не равно <see cref="F:System.Activities.Argument.UnspecifiedEvaluationOrder" />.</exception>
    </member>
    <member name="P:System.Activities.Argument.Expression">
      <summary>Возвращает или задает объект <see cref="T:System.Activities.ActivityWithResult" />, представляющий значение данных, привязанное к этому <see cref="T:System.Activities.Argument" />.</summary>
      <returns>Значение данных, привязанное к этому аргументу <see cref="T:System.Activities.Argument" />.</returns>
    </member>
    <member name="M:System.Activities.Argument.Get(System.Activities.ActivityContext)">
      <summary>Возвращает значение аргумента, используя указанный контекст действия.</summary>
      <param name="context">Контекст текущего действия.</param>
      <returns>Значение аргумента.</returns>
    </member>
    <member name="M:System.Activities.Argument.Get``1(System.Activities.ActivityContext)">
      <summary>Возвращает значение аргумента, используя указанный тип и контекст действия.</summary>
      <param name="context">Контекст текущего действия.</param>
      <typeparam name="T">Тип аргумента.</typeparam>
      <returns>Значение аргумента.</returns>
    </member>
    <member name="M:System.Activities.Argument.GetLocation(System.Activities.ActivityContext)">
      <summary>Возвращает объект <see cref="T:System.Activities.Location" /> для данного объекта <see cref="T:System.Activities.Argument" />.</summary>
      <param name="context">Контекст выполняющегося действия.</param>
      <returns>Расположение данного объекта <see cref="T:System.Activities.Argument" />.</returns>
    </member>
    <member name="F:System.Activities.Argument.ResultValue">
      <summary>Представляет значение константы Result, которая соответствует имени свойства <see cref="P:System.Activities.ActivityWithResult.Result" /> типа <see cref="T:System.Activities.OutArgument" /> в базовом классе выражения <see cref="T:System.Activities.ActivityWithResult" />.</summary>
    </member>
    <member name="M:System.Activities.Argument.Set(System.Activities.ActivityContext,System.Object)">
      <summary>Задает значение аргумента, используя указанный контекст действия.</summary>
      <param name="context">Контекст текущего действия.</param>
      <param name="value">Значение для аргумента.</param>
    </member>
    <member name="F:System.Activities.Argument.UnspecifiedEvaluationOrder">
      <summary>Представляет значение свойства <see cref="P:System.Activities.Argument.EvaluationOrder" /> для аргумента с неуказанным порядком вычисления. Это значение доступно только для чтения.</summary>
    </member>
    <member name="T:System.Activities.ArgumentDirection">
      <summary>Указывает направление потока данных для <see cref="T:System.Activities.Argument" />.</summary>
    </member>
    <member name="F:System.Activities.ArgumentDirection.In">
      <summary>Объект <see cref="T:System.Activities.Argument" /> представляет поток данных в рабочий процесс или действие.</summary>
    </member>
    <member name="F:System.Activities.ArgumentDirection.InOut">
      <summary>Объект <see cref="T:System.Activities.Argument" /> представляет поток данных в рабочий процесс или действие и из рабочего процесса или действия.</summary>
    </member>
    <member name="F:System.Activities.ArgumentDirection.Out">
      <summary>Объект <see cref="T:System.Activities.Argument" /> представляет поток данных из рабочего процесса или действия.</summary>
    </member>
    <member name="T:System.Activities.AsyncCodeActivity">
      <summary>Управляет выполнением асинхронного кода для действия с начала до завершения. Этот класс является абстрактным.</summary>
    </member>
    <member name="M:System.Activities.AsyncCodeActivity.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.AsyncCodeActivity" />.</summary>
    </member>
    <member name="M:System.Activities.AsyncCodeActivity.BeginExecute(System.Activities.AsyncCodeActivityContext,System.AsyncCallback,System.Object)">
      <summary>При реализации в производном классе с помощью указанного контекста выполнения, метода обратного вызова и состояния пользователя помещает асинхронное действие в очередь в рабочем процессе времени выполнения.</summary>
      <param name="context">Сведения, определяющие среду выполнения действия <see cref="T:System.Activities.AsyncCodeActivity" />.</param>
      <param name="callback">Метод, вызываемый после асинхронного действия и получения уведомления о выполнении.</param>
      <param name="state">Объект, в котором хранятся сведения о переменных для экземпляра асинхронного действия.</param>
      <returns>Объект, в котором хранятся сведения о переменных для экземпляра асинхронного действия.</returns>
    </member>
    <member name="M:System.Activities.AsyncCodeActivity.CacheMetadata(System.Activities.ActivityMetadata)">
      <summary>Не реализовано. Взамен рекомендуется использовать <see cref="M:System.Activities.AsyncCodeActivity.CacheMetadata(System.Activities.CodeActivityMetadata)" />.</summary>
      <param name="metadata">Не реализовано.</param>
    </member>
    <member name="M:System.Activities.AsyncCodeActivity.CacheMetadata(System.Activities.CodeActivityMetadata)">
      <summary>Служит виртуальным методом и преобразует сведения, получаемые путем отражения кэша в аргументы для асинхронного действия.</summary>
      <param name="metadata">Объект <see cref="T:System.Activities.CodeActivityMetadata" />, содержащий данные для набора аргументов асинхронного действия.</param>
    </member>
    <member name="M:System.Activities.AsyncCodeActivity.Cancel(System.Activities.AsyncCodeActivityContext)">
      <summary>При реализации в производном классе и использовании указанных сведений о среде выполнения уведомляет среду выполнения рабочего процесса о том, что операция асинхронного действия завершилась преждевременно. Служит виртуальным методом.</summary>
      <param name="context">Сведения, определяющие среду выполнения действия <see cref="T:System.Activities.AsyncCodeActivity" />.</param>
    </member>
    <member name="M:System.Activities.AsyncCodeActivity.EndExecute(System.Activities.AsyncCodeActivityContext,System.IAsyncResult)">
      <summary>При реализации в производном классе и с помощью указанных сведений среды выполнения уведомляет среду выполнения рабочего процесса о том, что операция связанного асинхронного действия выполнена.</summary>
      <param name="context">Сведения, определяющие среду выполнения действия <see cref="T:System.Activities.AsyncCodeActivity" />.</param>
      <param name="result">Реализованный интерфейс <see cref="T:System.IAsyncResult" />, возвращающий состояние асинхронного действия при завершении выполнения.</param>
    </member>
    <member name="P:System.Activities.AsyncCodeActivity.Implementation">
      <summary>Получает значение <see langword="null" /> или вызывает ошибку при попытке задать значение этого свойства.</summary>
      <returns>Функция действия.</returns>
    </member>
    <member name="P:System.Activities.AsyncCodeActivity.ImplementationVersion">
      <summary>Получает или задает версию реализации действия.</summary>
      <returns>Версия реализации действия.</returns>
    </member>
    <member name="M:System.Activities.AsyncCodeActivity.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.UpdateMapMetadata,System.Activities.Activity)">
      <summary>Вызывает событие при создании сопоставления для динамического обновления.</summary>
      <param name="metadata">Использованные метаданные.</param>
      <param name="originalActivity">Исходное действие.</param>
    </member>
    <member name="T:System.Activities.AsyncCodeActivity`1">
      <summary>Управляет выполнением асинхронного кода для действия указанного типа с начала до завершения. Это абстрактный универсальный класс.</summary>
      <typeparam name="TResult">Тип асинхронного действия, обрабатываемого этим классом.</typeparam>
    </member>
    <member name="M:System.Activities.AsyncCodeActivity`1.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.AsyncCodeActivity" />.</summary>
    </member>
    <member name="M:System.Activities.AsyncCodeActivity`1.BeginExecute(System.Activities.AsyncCodeActivityContext,System.AsyncCallback,System.Object)">
      <summary>При реализации в производном классе с помощью указанного контекста выполнения, метода обратного вызова и состояния пользователя помещает асинхронное действие в очередь в рабочем процессе времени выполнения.</summary>
      <param name="context">Сведения, определяющие среду выполнения действия <see cref="T:System.Activities.AsyncCodeActivity" />.</param>
      <param name="callback">Метод, вызываемый после асинхронного действия и получения уведомления о выполнении.</param>
      <param name="state">Объект, в котором хранятся сведения о переменных для экземпляра асинхронного действия.</param>
      <returns>Объект.</returns>
    </member>
    <member name="M:System.Activities.AsyncCodeActivity`1.CacheMetadata(System.Activities.ActivityMetadata)">
      <summary>Не реализовано. Взамен рекомендуется использовать <see cref="M:System.Activities.AsyncCodeActivity`1.CacheMetadata(System.Activities.CodeActivityMetadata)" />.</summary>
      <param name="metadata">Не реализовано.</param>
    </member>
    <member name="M:System.Activities.AsyncCodeActivity`1.CacheMetadata(System.Activities.CodeActivityMetadata)">
      <summary>Служит виртуальным методом и преобразует сведения, получаемые путем отражения кэша, в аргументы для асинхронного действия.</summary>
      <param name="metadata">Объект <see cref="T:System.Activities.CodeActivityMetadata" />, содержащий данные для набора аргументов асинхронного действия.</param>
    </member>
    <member name="M:System.Activities.AsyncCodeActivity`1.Cancel(System.Activities.AsyncCodeActivityContext)">
      <summary>При реализации в производном классе и использовании указанных сведений о среде выполнения уведомляет среду выполнения рабочего процесса о том, что операция асинхронного действия отменена. Этот метод служит виртуальным методом.</summary>
      <param name="context">Сведения, определяющие среду выполнения действия <see cref="T:System.Activities.AsyncCodeActivity" />.</param>
    </member>
    <member name="M:System.Activities.AsyncCodeActivity`1.EndExecute(System.Activities.AsyncCodeActivityContext,System.IAsyncResult)">
      <summary>При реализации в производном классе и с помощью указанных сведений среды выполнения уведомляет среду выполнения рабочего процесса о том, что операция связанного асинхронного действия выполнена.</summary>
      <param name="context">Сведения, определяющие среду выполнения действия <see cref="T:System.Activities.AsyncCodeActivity" />.</param>
      <param name="result">Реализованный интерфейс <see cref="T:System.IAsyncResult" />, возвращающий состояние асинхронного действия при завершении выполнения.</param>
      <returns>Универсальный тип.</returns>
    </member>
    <member name="P:System.Activities.AsyncCodeActivity`1.Implementation">
      <summary>Получает значение <see langword="null" /> или вызывает ошибку при попытке задать значение этого свойства.</summary>
      <returns>Функция действия.</returns>
    </member>
    <member name="P:System.Activities.AsyncCodeActivity`1.ImplementationVersion">
      <summary>Получает или задает версию реализации действия.</summary>
      <returns>Версия реализации действия.</returns>
    </member>
    <member name="M:System.Activities.AsyncCodeActivity`1.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.UpdateMapMetadata,System.Activities.Activity)">
      <summary>Вызывает событие при создании сопоставления для динамического обновления.</summary>
      <param name="metadata">Метаданные.</param>
      <param name="originalActivity">Исходное действие.</param>
    </member>
    <member name="T:System.Activities.AsyncCodeActivityContext">
      <summary>Контекст выполнения для асинхронного действия.</summary>
    </member>
    <member name="P:System.Activities.AsyncCodeActivityContext.IsCancellationRequested">
      <summary>Возвращает значение, которое показывает, запрошена ли отмена действия <see cref="T:System.Activities.AsyncCodeActivity" />, выполняющегося в данный момент.</summary>
      <returns>Значение <see langword="true" />, если запрошена отмена <see cref="T:System.Activities.AsyncCodeActivity" />, выполняющегося в данный момент; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Activities.AsyncCodeActivityContext.MarkCanceled">
      <summary>Помечает текущий экземпляр действия как отмененный.</summary>
    </member>
    <member name="P:System.Activities.AsyncCodeActivityContext.UserState">
      <summary>Возвращает или задает определяемый пользователем объект, связанный с текущим асинхронным действием.</summary>
      <returns>Определяемый пользователем объект.</returns>
    </member>
    <member name="T:System.Activities.Bookmark">
      <summary>Представляет точку, в которой рабочий процесс или действие может пассивно ожидать возобновления.</summary>
    </member>
    <member name="M:System.Activities.Bookmark.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Bookmark" /> с использованием указанного имени.</summary>
      <param name="name">Имя, определяющее закладку.</param>
    </member>
    <member name="M:System.Activities.Bookmark.Equals(System.Activities.Bookmark)">
      <summary>Определяет, ссылаются ли текущий объект <see cref="T:System.Activities.Bookmark" /> и указанный объект <see cref="T:System.Activities.Bookmark" /> на одну точку продолжения в рабочем процессе.</summary>
      <param name="other">Закладка для сравнения.</param>
      <returns>Значение <see langword="true" />, если объекты <see cref="T:System.Activities.Bookmark" /> равны; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Activities.Bookmark.Equals(System.Object)">
      <summary>Определяет, ссылаются ли текущий объект <see cref="T:System.Activities.Bookmark" /> и указанный объект на одну точку продолжения в рабочем процессе.</summary>
      <param name="obj">Объект для сравнения.</param>
      <returns>Значение <see langword="true" />, если объекты <see cref="T:System.Activities.Bookmark" /> равны; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Activities.Bookmark.GetHashCode">
      <summary>Возвращает уникальный идентификатор для этого экземпляра <see cref="T:System.Activities.Bookmark" />.</summary>
      <returns>Уникальный идентификатор данного экземпляра <see cref="T:System.Activities.Bookmark" />.</returns>
    </member>
    <member name="P:System.Activities.Bookmark.Name">
      <summary>Возвращает имя закладки.</summary>
      <returns>Имя закладки.</returns>
    </member>
    <member name="M:System.Activities.Bookmark.ToString">
      <summary>Возвращает имя для именованной закладки или идентификатор для безымянной закладки.</summary>
      <returns>Имя или идентификатор закладки.</returns>
    </member>
    <member name="T:System.Activities.BookmarkCallback">
      <summary>Представляет метод, который вызывается во время возобновления <see cref="T:System.Activities.Bookmark" />.</summary>
      <param name="context">Среда выполнения действия, обрабатывающего возобновление <see cref="T:System.Activities.Bookmark" />.</param>
      <param name="bookmark">Возобновляемый объект <see cref="T:System.Activities.Bookmark" />.</param>
      <param name="value">Данные, связанные с возобновлением <see cref="T:System.Activities.Bookmark" />.</param>
    </member>
    <member name="T:System.Activities.BookmarkOptions">
      <summary>Задает параметры для <see cref="T:System.Activities.Bookmark" />.</summary>
    </member>
    <member name="F:System.Activities.BookmarkOptions.MultipleResume">
      <summary>Объект <see cref="T:System.Activities.Bookmark" />, который может возобновляться несколько раз.</summary>
    </member>
    <member name="F:System.Activities.BookmarkOptions.NonBlocking">
      <summary>Объект <see cref="T:System.Activities.Bookmark" />, который не блокирует рабочий процесс.</summary>
    </member>
    <member name="F:System.Activities.BookmarkOptions.None">
      <summary>Параметры <see cref="T:System.Activities.Bookmark" /> по умолчанию,</summary>
    </member>
    <member name="T:System.Activities.BookmarkResumptionResult">
      <summary>Определяет перечисление, элементы которого представляют результат запросов на планирование закладок.</summary>
    </member>
    <member name="F:System.Activities.BookmarkResumptionResult.NotFound">
      <summary>Возобновление закладки не было запланировано, поскольку не удалось найти закладку.</summary>
    </member>
    <member name="F:System.Activities.BookmarkResumptionResult.NotReady">
      <summary>Возобновление закладки не было запланировано, поскольку среда выполнения еще не создала закладку. Ведущее приложение должно дождаться следующей точки бездействия и повторить возобновление.</summary>
    </member>
    <member name="F:System.Activities.BookmarkResumptionResult.Success">
      <summary>Возобновление закладки успешно запланировано.</summary>
    </member>
    <member name="T:System.Activities.BookmarkScope">
      <summary>Определяет область для набора объектов <see cref="T:System.Activities.Bookmark" />, которые работают по одному протоколу.</summary>
    </member>
    <member name="M:System.Activities.BookmarkScope.#ctor(System.Guid)">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.BookmarkScope" /> с указанным идентификационным номером области (GUID).</summary>
      <param name="id">Идентификационный номер области (GUID).</param>
    </member>
    <member name="P:System.Activities.BookmarkScope.Default">
      <summary>Возвращает значение по умолчанию для объекта <see cref="T:System.Activities.BookmarkScope" />.</summary>
      <returns>Значение по умолчанию <see cref="T:System.Activities.BookmarkScope" />.</returns>
    </member>
    <member name="M:System.Activities.BookmarkScope.Equals(System.Activities.BookmarkScope)">
      <summary>Возвращает значение, показывающее, совпадает ли текущий объект <see cref="T:System.Activities.BookmarkScope" /> с указанным объектом <see cref="T:System.Activities.BookmarkScope" />.</summary>
      <param name="other">Объект области закладки.</param>
      <returns>Значение <see langword="true" />, если объемы закладки совпадают; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Activities.BookmarkScope.GetHashCode">
      <summary>Создает идентификационный номер для текущего объекта <see cref="T:System.Activities.BookmarkScope" />.</summary>
      <returns>Хэш-код.</returns>
    </member>
    <member name="P:System.Activities.BookmarkScope.Id">
      <summary>Возвращает идентификатор GUID для текущего объекта <see cref="T:System.Activities.BookmarkScope" />.</summary>
      <returns>Идентификатор GUID.</returns>
    </member>
    <member name="M:System.Activities.BookmarkScope.Initialize(System.Activities.NativeActivityContext,System.Guid)">
      <summary>Инициализирует текущий объект <see cref="T:System.Activities.BookmarkScope" /> с использованием указанного идентификатора GUID.</summary>
      <param name="context">Среда выполнения текущего действия.</param>
      <param name="id">Идентификатор GUID, назначаемый объекту <see cref="T:System.Activities.BookmarkScope" />.</param>
    </member>
    <member name="P:System.Activities.BookmarkScope.IsInitialized">
      <summary>Возвращает значение, которое показывает, был ли инициализирован текущий объект <see cref="T:System.Activities.BookmarkScope" />.</summary>
      <returns>Значение <see langword="true" />, если объект <see cref="T:System.Activities.BookmarkScope" /> инициализирован; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="T:System.Activities.BookmarkScopeH*******le">
      <summary>Объект T:System.H*******le используется для управления временем существования объекта <see cref="T:System.Activities.BookmarkScope" />.</summary>
    </member>
    <member name="M:System.Activities.BookmarkScopeH*******le.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.BookmarkScopeH*******le" />.</summary>
    </member>
    <member name="P:System.Activities.BookmarkScopeH*******le.BookmarkScope">
      <summary>Рабочая область метаданных <see cref="T:System.Activities.BookmarkScope" />, связанная с этим соединением <see cref="T:System.Activities.BookmarkScopeH*******le" />.</summary>
      <returns>Объект <see cref="T:System.Activities.BookmarkScope" />.</returns>
    </member>
    <member name="M:System.Activities.BookmarkScopeH*******le.CreateBookmarkScope(System.Activities.NativeActivityContext)">
      <summary>Создает новый экземпляр <see cref="P:System.Activities.BookmarkScopeH*******le.BookmarkScope" /></summary>
      <param name="context">Контекст действия.</param>
    </member>
    <member name="M:System.Activities.BookmarkScopeH*******le.CreateBookmarkScope(System.Activities.NativeActivityContext,System.Guid)">
      <summary>Создает новый экземпляр <see cref="T:System.Activities.BookmarkScope" />.</summary>
      <param name="context">Контекст действия.</param>
      <param name="scopeId">Уникальный глобальный идентификатор, связанный с объектом <see cref="T:System.Activities.BookmarkScope" />.</param>
    </member>
    <member name="P:System.Activities.BookmarkScopeH*******le.Default">
      <summary>Значение по умолчанию <see cref="T:System.Activities.BookmarkScopeH*******le" />.</summary>
      <returns>Объект <see cref="T:System.Activities.BookmarkScopeH*******le" />.</returns>
    </member>
    <member name="M:System.Activities.BookmarkScopeH*******le.Initialize(System.Activities.NativeActivityContext,System.Guid)">
      <summary>Инициализирует объект <see cref="P:System.Activities.BookmarkScopeH*******le.BookmarkScope" />, используя указанный контекст действия и идентификатор GUID.</summary>
      <param name="context">Контекст действия.</param>
      <param name="scope">Идентификатор GUID, связанный со свойством <see cref="P:System.Activities.BookmarkScopeH*******le.BookmarkScope" />.</param>
    </member>
    <member name="T:System.Activities.CodeActivity">
      <summary>Абстрактный класс для создания пользовательского действия императивного типа, определенного с помощью метода <see cref="M:System.Activities.CodeActivity.Execute(System.Activities.CodeActivityContext)" />. Класс предоставляет доступ к разрешению переменных и аргументов и доступ к расширениям.</summary>
    </member>
    <member name="M:System.Activities.CodeActivity.#ctor">
      <summary>При реализации в производном классе создает экземпляр производного класса.</summary>
    </member>
    <member name="M:System.Activities.CodeActivity.CacheMetadata(System.Activities.ActivityMetadata)">
      <summary>Не реализовано. Взамен рекомендуется использовать <see cref="M:System.Activities.CodeActivity.CacheMetadata(System.Activities.CodeActivityMetadata)" />.</summary>
      <param name="metadata">Не реализовано.</param>
    </member>
    <member name="M:System.Activities.CodeActivity.CacheMetadata(System.Activities.CodeActivityMetadata)">
      <summary>Создает и проверяет описание аргументов, переменных, дочерних действий и делегатов действия.</summary>
      <param name="metadata">Метаданные действия, инкапсулирующие аргументы, переменные, дочерние действия и делегаты для действия.</param>
    </member>
    <member name="M:System.Activities.CodeActivity.Execute(System.Activities.CodeActivityContext)">
      <summary>При реализации в производном классе выполняет действие.</summary>
      <param name="context">Контекст выполнения, в котором выполняется действие.</param>
    </member>
    <member name="P:System.Activities.CodeActivity.Implementation">
      <summary>Не поддерживается.</summary>
      <returns>Всегда возвращает значение <see langword="null" />.</returns>
    </member>
    <member name="P:System.Activities.CodeActivity.ImplementationVersion">
      <summary>Получает или задает версию реализации действия.</summary>
      <returns>Версия реализации действия.</returns>
    </member>
    <member name="M:System.Activities.CodeActivity.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.UpdateMapMetadata,System.Activities.Activity)">
      <summary>Вызывает событие при создании сопоставления для динамического обновления.</summary>
      <param name="metadata">Метаданные.</param>
      <param name="originalActivity">Исходное действие.</param>
    </member>
    <member name="T:System.Activities.CodeActivity`1">
      <summary>Абстрактный класс для создания пользовательского действия императивного типа, определенного в методе <see cref="M:System.Activities.CodeActivity.Execute(System.Activities.CodeActivityContext)" />. Класс предоставляет доступ к разрешению переменных и аргументов и доступ к расширениям.</summary>
      <typeparam name="TResult">Результат, возвращаемый действием.</typeparam>
    </member>
    <member name="M:System.Activities.CodeActivity`1.#ctor">
      <summary>При реализации в производном классе создает экземпляр производного класса.</summary>
    </member>
    <member name="M:System.Activities.CodeActivity`1.CacheMetadata(System.Activities.ActivityMetadata)">
      <summary>Не реализовано. Взамен рекомендуется использовать <see cref="M:System.Activities.CodeActivity.CacheMetadata(System.Activities.CodeActivityMetadata)" />.</summary>
      <param name="metadata">Не реализовано.</param>
    </member>
    <member name="M:System.Activities.CodeActivity`1.CacheMetadata(System.Activities.CodeActivityMetadata)">
      <summary>Создает и проверяет описание аргументов, переменных, дочерних действий и делегатов действия.</summary>
      <param name="metadata">Метаданные действия, инкапсулирующие аргументы, переменные, дочерние действия и делегаты для действия.</param>
    </member>
    <member name="M:System.Activities.CodeActivity`1.Execute(System.Activities.CodeActivityContext)">
      <summary>При реализации в производном классе выполняет действие.</summary>
      <param name="context">Контекст выполнения, в котором выполняется действие.</param>
      <returns>Результат выполнения действия.</returns>
    </member>
    <member name="P:System.Activities.CodeActivity`1.Implementation">
      <summary>Не поддерживается.</summary>
      <returns>Всегда возвращает значение <see langword="null" />.</returns>
    </member>
    <member name="P:System.Activities.CodeActivity`1.ImplementationVersion">
      <summary>Получает или задает версию реализации действия.</summary>
      <returns>Версия реализации действия.</returns>
    </member>
    <member name="M:System.Activities.CodeActivity`1.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.UpdateMapMetadata,System.Activities.Activity)">
      <summary>Вызывает событие при создании сопоставления для динамического обновления.</summary>
      <param name="metadata">Метаданные.</param>
      <param name="originalActivity">Исходное действие.</param>
    </member>
    <member name="T:System.Activities.CodeActivityContext">
      <summary>Расширяет возможности <see cref="T:System.Activities.ActivityContext" /> и предоставляет дополнительные функции для <see cref="T:System.Activities.CodeActivity" />.</summary>
    </member>
    <member name="M:System.Activities.CodeActivityContext.GetProperty``1">
      <summary>Возвращает свойство выполнения указанного типа.</summary>
      <typeparam name="TH*******le">Тип свойства выполнения.</typeparam>
      <returns>Свойство выполнения.</returns>
    </member>
    <member name="M:System.Activities.CodeActivityContext.Track(System.Activities.Tracking.CustomTrackingRecord)">
      <summary>Отправляет указанную пользовательскую запись отслеживания в любые зарегистрированные поставщики отслеживания.</summary>
      <param name="record">Данные для отслеживания.</param>
    </member>
    <member name="T:System.Activities.CodeActivityMetadata">
      <summary>Представляет набор аргументов, которые настроенное действие <see cref="T:System.Activities.CodeActivity" /> передает в среду выполнения.</summary>
    </member>
    <member name="M:System.Activities.CodeActivityMetadata.AddArgument(System.Activities.RuntimeArgument)">
      <summary>Добавляет аргумент в коллекцию аргументов действия.</summary>
      <param name="argument">Аргумент для добавления в коллекцию.</param>
    </member>
    <member name="M:System.Activities.CodeActivityMetadata.AddDefaultExtensionProvider``1(System.Func{``0})">
      <summary>Добавляет указанный поставщик расширений в коллекцию поставщиков расширений по умолчанию для данного действия.</summary>
      <param name="extensionProvider">Функция, возвращающая расширение.</param>
      <typeparam name="T">Тип поставщика расширений.</typeparam>
    </member>
    <member name="M:System.Activities.CodeActivityMetadata.AddValidationError(System.Activities.Validation.ValidationError)">
      <summary>Добавляет указанную ошибку проверки в коллекцию ошибок проверки в метаданных.</summary>
      <param name="validationError">Добавляемая ошибка проверки.</param>
    </member>
    <member name="M:System.Activities.CodeActivityMetadata.AddValidationError(System.String)">
      <summary>С помощью указанного описания добавляет ошибку проверки в коллекцию ошибок проверки в метаданных.</summary>
      <param name="validationErrorMessage">Сообщение, описывающее ошибку проверки.</param>
    </member>
    <member name="M:System.Activities.CodeActivityMetadata.Bind(System.Activities.Argument,System.Activities.RuntimeArgument)">
      <summary>Привязывает указанный аргумент <see cref="T:System.Activities.Argument" /> к указанному <see cref="T:System.Activities.RuntimeArgument" />.</summary>
      <param name="binding">Привязываемый элемент управления <see cref="T:System.Activities.Argument" />.</param>
      <param name="argument">Привязываемый элемент управления <see cref="T:System.Activities.RuntimeArgument" />.</param>
    </member>
    <member name="P:System.Activities.CodeActivityMetadata.Environment">
      <summary>Возвращает объект <see cref="T:System.Activities.LocationReferenceEnvironment" /> для аргументов или символов действия, передаваемых объектом <see cref="T:System.Activities.Hosting.SymbolResolver" />.</summary>
      <returns>Среда ссылок на расположение действия аргументов или символов, передаваемых объектом <see cref="T:System.Activities.Hosting.SymbolResolver" />.</returns>
    </member>
    <member name="M:System.Activities.CodeActivityMetadata.Equals(System.Object)">
      <summary>Определяет, равен ли этот экземпляр метаданных указанному объекту.</summary>
      <param name="obj">Объект для сравнения.</param>
      <returns>Значение <see langword="true" />, если указанный объект равен данному экземпляру метаданных; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Activities.CodeActivityMetadata.GetArgumentsWithReflection">
      <summary>Возвращает коллекцию аргументов, полученных с помощью отражения.</summary>
      <returns>Коллекция аргументов.</returns>
    </member>
    <member name="M:System.Activities.CodeActivityMetadata.GetHashCode">
      <summary>Возвращает уникальный идентификатор этого экземпляра метаданных.</summary>
      <returns>Целое число, которое служит уникальным идентификатором этого экземпляра метаданных.</returns>
    </member>
    <member name="P:System.Activities.CodeActivityMetadata.HasViolations">
      <summary>Возвращает значение, указывающее наличие ошибок проверки в метаданных.</summary>
      <returns>Значение <see langword="true" />, если ошибки проверки есть; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Activities.CodeActivityMetadata.op_Equality(System.Activities.CodeActivityMetadata,System.Activities.CodeActivityMetadata)">
      <summary>Возвращает значение, указывающее, равны ли два указанных экземпляра метаданных.</summary>
      <param name="left">Первый элемент для сравнения.</param>
      <param name="right">Второй элемент для сравнения.</param>
      <returns>Значение <see langword="true" />, если два элемента равны, в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Activities.CodeActivityMetadata.op_Inequality(System.Activities.CodeActivityMetadata,System.Activities.CodeActivityMetadata)">
      <summary>Возвращает значение, показывающее неравенство двух указанных экземпляров метаданных.</summary>
      <param name="left">Первый элемент для сравнения.</param>
      <param name="right">Первый элемент для сравнения.</param>
      <returns>Значение <see langword="true" />, если две элемента не равны; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Activities.CodeActivityMetadata.RequireExtension(System.Type)">
      <summary>Указывает, что во время выполнения действию требуется расширение указанного типа.</summary>
      <param name="extensionType">Тип расширения.</param>
    </member>
    <member name="M:System.Activities.CodeActivityMetadata.RequireExtension``1">
      <summary>Указывает, что во время выполнения действию требуется расширение указанного универсального типа.</summary>
      <typeparam name="T">Тип расширения.</typeparam>
    </member>
    <member name="M:System.Activities.CodeActivityMetadata.SetArgumentsCollection(System.Collections.ObjectModel.Collection{System.Activities.RuntimeArgument})">
      <summary>Добавляет указанную коллекцию аргументов к аргументам действия.</summary>
      <param name="arguments">Добавляемые аргументы.</param>
    </member>
    <member name="M:System.Activities.CodeActivityMetadata.SetValidationErrorsCollection(System.Collections.ObjectModel.Collection{System.Activities.Validation.ValidationError})">
      <summary>Добавляет указанную коллекцию ошибок проверки в коллекцию ошибок проверки в метаданных.</summary>
      <param name="validationErrors">Добавляемые ошибки проверки.</param>
    </member>
    <member name="T:System.Activities.CodeActivityPublicEnvironmentAccessor">
      <summary>Указывает сведения об открытом методе доступа среды.</summary>
    </member>
    <member name="P:System.Activities.CodeActivityPublicEnvironmentAccessor.ActivityMetadata">
      <summary>Получает аргументы, переменные, дочерние действия и делегаты действия.</summary>
      <returns>Действия аргументов, переменных, дочерних действий и делегатов действия.</returns>
    </member>
    <member name="M:System.Activities.CodeActivityPublicEnvironmentAccessor.Create(System.Activities.CodeActivityMetadata)">
      <summary>Создает описание аргументов, переменных, дочерних действий и делегатов действия.</summary>
      <param name="metadata">Метаданные действия, инкапсулирующие аргументы, переменные, дочерние действия и делегаты для действия.</param>
      <returns>Описание аргументов, переменных, дочерних действий и делегатов действия.</returns>
    </member>
    <member name="M:System.Activities.CodeActivityPublicEnvironmentAccessor.Equals(System.Object)">
      <summary>Определяет, равен ли указанный объект текущему открытому методу доступа к среде.</summary>
      <param name="obj">Объект для сравнения.</param>
      <returns>Значение <see langword="true" />, если указанный объект равен открытому методу доступа к среде; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Activities.CodeActivityPublicEnvironmentAccessor.GetHashCode">
      <summary>Возвращает Уникальный идентификатор для этого открытого метода доступа среды.</summary>
      <returns>Уникальный идентификатор для этого открытого метода доступа к среде.</returns>
    </member>
    <member name="M:System.Activities.CodeActivityPublicEnvironmentAccessor.op_Equality(System.Activities.CodeActivityPublicEnvironmentAccessor,System.Activities.CodeActivityPublicEnvironmentAccessor)">
      <summary>Возвращает значение, указывающее, равны ли два указанных экземпляра метаданных.</summary>
      <param name="left">Первый элемент для сравнения.</param>
      <param name="right">Второй элемент для сравнения.</param>
      <returns>Значение <see langword="true" />, если два указанных экземпляра метаданных равны; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Activities.CodeActivityPublicEnvironmentAccessor.op_Inequality(System.Activities.CodeActivityPublicEnvironmentAccessor,System.Activities.CodeActivityPublicEnvironmentAccessor)">
      <summary>Возвращает значение, показывающее неравенство двух указанных экземпляров метаданных.</summary>
      <param name="left">Первый элемент для сравнения.</param>
      <param name="right">Второй элемент для сравнения.</param>
      <returns>Значение <see langword="true" />, если два указанных экземпляра метаданных не равны; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Activities.CodeActivityPublicEnvironmentAccessor.TryGetAccessToPublicLocation(System.Activities.LocationReference,System.Activities.ArgumentDirection,System.Activities.LocationReference@)">
      <summary>Возвращает значение, указывающее, пытается ли действие получить доступ к общедоступному расположению.</summary>
      <param name="publicLocation">Ссылка на общедоступное Местоположение.</param>
      <param name="accessDirection">Указывает направление доступа.</param>
      <param name="equivalentLocation">Ссылка на эквивалентное расположение.</param>
      <returns>Значение <see langword="true" />, если действие, которое требуется попробовать выполнить, получит доступ к общедоступному расположению; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Activities.CodeActivityPublicEnvironmentAccessor.TryGetReferenceToPublicLocation(System.Activities.LocationReference,System.Activities.LocationReference@)">
      <summary>Возвращает значение, указывающее, пытается ли действие получить ссылку на общедоступное расположению.</summary>
      <param name="publicReference">Местоположение общедоступной ссылки.</param>
      <param name="equivalentReference">Эквивалентное расположение, заданное ссылкой.</param>
      <returns>Значение <see langword="true" />, если действие попробует получить ссылку на общедоступное расположение; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="T:System.Activities.CompletionCallback">
      <summary>Метод, вызываемый по завершении действия.</summary>
      <param name="context">Среда выполнения действия.</param>
      <param name="completedInstance">Завершенное действие.</param>
    </member>
    <member name="T:System.Activities.CompletionCallback`1">
      <summary>Метод, вызываемый по завершении действия.</summary>
      <param name="context">Среда выполнения действия.</param>
      <param name="completedInstance">Завершенное действие.</param>
      <param name="result">Значение <paramref name="TResult" /> для завершенного действия.</param>
      <typeparam name="TResult">Тип результирующего значения.</typeparam>
    </member>
    <member name="T:System.Activities.Debugger.DebugInfo">
      <summary>Представляет данные отладки.</summary>
    </member>
    <member name="T:System.Activities.Debugger.IDebuggableWorkflowTree">
      <summary>Предоставляет интерфейс, реализация которого позволяет отладчику рабочего процесса выполнить отладку сериализованного объекта рабочего процесса.</summary>
    </member>
    <member name="M:System.Activities.Debugger.IDebuggableWorkflowTree.GetWorkflowRoot">
      <summary>Возвращает корневой элемент дерева рабочих процессов.</summary>
      <returns>Действие, представляющее корень дерева рабочего процесса.</returns>
    </member>
    <member name="T:System.Activities.Debugger.LocalsItemDescription">
      <summary>Представляет имя и тип элемента с ранней привязкой, отображающегося в окне локальных переменных отладчика рабочего процесса.</summary>
    </member>
    <member name="M:System.Activities.Debugger.LocalsItemDescription.#ctor(System.String,System.Type)">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.Debugger.LocalsItemDescription" />, используя имя и тип определенного локального элемента.</summary>
      <param name="name">Имя указанного локального элемента с ранней привязкой.</param>
      <param name="type">Тип указанного локального элемента с ранней привязкой.</param>
    </member>
    <member name="P:System.Activities.Debugger.LocalsItemDescription.Name">
      <summary>Возвращает имя локального элемента, к которому было выполнено обращение во время отладки рабочего процесса.</summary>
      <returns>Строка, представляющая имя локального элемента.</returns>
    </member>
    <member name="M:System.Activities.Debugger.LocalsItemDescription.ToString">
      <summary>Возвращает строку, представляющую имя и тип локального элемента с ранней привязкой, отображающегося в окне локальных переменных отладчика рабочего процесса.</summary>
      <returns>Строка, представляющая имя и тип локального элемента.</returns>
    </member>
    <member name="P:System.Activities.Debugger.LocalsItemDescription.Type">
      <summary>Возвращает тип локального элемента, к которому было выполнено обращение во время отладки рабочего процесса.</summary>
      <returns>Строка, представляющая тип локального элемента.</returns>
    </member>
    <member name="T:System.Activities.Debugger.SourceLocation">
      <summary>Определяет указанное местоположение в целевом файле исходного кода.</summary>
    </member>
    <member name="M:System.Activities.Debugger.SourceLocation.#ctor(System.String,System.Int32)">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.Debugger.SourceLocation" />, указывающий имя файла исходного кода и номер строки в этом файле.</summary>
      <param name="fileName">Файл исходного кода.</param>
      <param name="line">Номер строки в файле исходного кода.</param>
    </member>
    <member name="M:System.Activities.Debugger.SourceLocation.#ctor(System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.Debugger.SourceLocation" />, указывающий имя файла исходного кода и параметры диапазона данных в файле.</summary>
      <param name="fileName">Имя файла исходного кода.</param>
      <param name="startLine">Номер, указывающий строку в файле исходного кода, с которой начинается чтение.</param>
      <param name="startColumn">Номер, указывающий столбец в файле исходного кода, с которого начинается чтение.</param>
      <param name="endLine">Номер, указывающий строку в файле исходного кода, на которой завершается чтение.</param>
      <param name="endColumn">Номер, указывающий столбец в файле исходного кода, на котором завершается чтение.</param>
    </member>
    <member name="P:System.Activities.Debugger.SourceLocation.EndColumn">
      <summary>Возвращает завершающий столбец в диапазоне одного или нескольких столбцов в файле исходного кода.</summary>
      <returns>Целое число, представляющее завершающий столбец в диапазоне столбцов.</returns>
    </member>
    <member name="P:System.Activities.Debugger.SourceLocation.EndLine">
      <summary>Возвращает завершающую строку в диапазоне одной или нескольких строк в файле исходного кода.</summary>
      <returns>Целое число, представляющее завершающую строку в диапазоне строк.</returns>
    </member>
    <member name="M:System.Activities.Debugger.SourceLocation.Equals(System.Object)">
      <summary>Возвращает значение, указывающее, точно ли совпадают настройки столбца и строки файла исходного кода, на которые ссылается объект <see cref="T:System.Activities.Debugger.SourceLocation" />, с параметрами строки и столбца в другом указанном объекте <see cref="T:System.Activities.Debugger.SourceLocation" />.</summary>
      <param name="obj">Указанный объект <see cref="T:System.Activities.Debugger.SourceLocation" />.</param>
      <returns>Логическое значение, указывающее на наличие или отсутствие совпадения.</returns>
    </member>
    <member name="P:System.Activities.Debugger.SourceLocation.FileName">
      <summary>Возвращает имя целевого файла исходного кода.</summary>
      <returns>Строковый экземпляр с именем целевого файла исходного кода.</returns>
    </member>
    <member name="M:System.Activities.Debugger.SourceLocation.GetHashCode">
      <summary>Возвращает уникальное значение для представления объекта <see cref="T:System.Activities.Debugger.SourceLocation" />.</summary>
      <returns>Целое число, представляющее хэш-код.</returns>
    </member>
    <member name="P:System.Activities.Debugger.SourceLocation.IsSingleWholeLine">
      <summary>Возвращает значение, указывающее, определяют ли настройки строки и столбца в файле исходного кода одну завершенную строку, а не несколько строк.</summary>
      <returns>Логическое значение, указывающее, что определяют параметры столбца.</returns>
    </member>
    <member name="P:System.Activities.Debugger.SourceLocation.StartColumn">
      <summary>Возвращает первый столбец в диапазоне одного или нескольких столбцов в файле исходного кода.</summary>
      <returns>Целое число, представляющее столбец в диапазоне столбцов.</returns>
    </member>
    <member name="P:System.Activities.Debugger.SourceLocation.StartLine">
      <summary>Возвращает первую строку в диапазоне одной или нескольких строк в файле исходного кода.</summary>
      <returns>Целое число, представляющее строку в диапазоне строк.</returns>
    </member>
    <member name="T:System.Activities.Debugger.SourceLocationFoundEventArgs">
      <summary>Представляет SourceLocationFoundEventArgs.</summary>
    </member>
    <member name="M:System.Activities.Debugger.SourceLocationFoundEventArgs.#ctor(System.Object,System.Activities.Debugger.SourceLocation)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Debugger.SourceLocationFoundEventArgs" />, используя исходное и целевое расположение.</summary>
      <param name="target">Конечное расположение.</param>
      <param name="sourceLocation">Исходное расположение.</param>
    </member>
    <member name="P:System.Activities.Debugger.SourceLocationFoundEventArgs.SourceLocation">
      <summary>Получает указанное местоположение в целевом файле исходного кода.</summary>
      <returns>Указанное местоположение в целевом файле исходного кода.</returns>
    </member>
    <member name="P:System.Activities.Debugger.SourceLocationFoundEventArgs.Target">
      <summary>Получает целевые файлы исходного кода для конкретного расположения.</summary>
      <returns>Целевые файлы исходного кода для конкретного расположения.</returns>
    </member>
    <member name="T:System.Activities.Debugger.SourceLocationProvider">
      <summary>Предоставляет данные <see cref="T:System.Activities.Debugger.SourceLocation" /> для сопоставления корневого действия и его потомков с соответствующими исходными положениями.</summary>
    </member>
    <member name="M:System.Activities.Debugger.SourceLocationProvider.CollectMapping(System.Activities.Activity,System.Activities.Activity,System.Collections.Generic.Dictionary{System.Object,System.Activities.Debugger.SourceLocation},System.String)">
      <summary>Создает коллекцию словарного типа на основе сопоставлений корневого действия и его потомков с соответствующими исходными расположениями.</summary>
      <param name="rootActivity1">Элемент рабочего процесса, представляющий действие, не сопоставленное с исходным местоположением.</param>
      <param name="rootActivity2">Элемент рабочего процесса, подменяющий <paramref name="rootActivity1" />, и имеющий определенные исходные местоположения, с которыми сопоставлены его элементы.</param>
      <param name="mapping">Объект словаря, содержащий корневое действие и его потомков, каждый из которых сопоставлен с исходным местоположением.</param>
      <param name="path">Путь используемого исходного файла.</param>
    </member>
    <member name="M:System.Activities.Debugger.SourceLocationProvider.GetSourceLocations(System.Activities.Activity,System.Activities.Debugger.Symbol.WorkflowSymbol)">
      <summary>Получает расположения в исходном коде для указанных символов корневого действия и рабочего процесса.</summary>
      <param name="rootActivity">Элемент рабочего процесса, представляющий корневое действие, из которого необходимо получить расположения источника.</param>
      <param name="symbol">Объект, содержащий символы рабочего процесса.</param>
      <returns>Объект <see cref="T:System.Collections.Generic.Dictionary`2" />, содержащий исходные расположения.</returns>
    </member>
    <member name="M:System.Activities.Debugger.SourceLocationProvider.GetSymbols(System.Activities.Activity,System.Collections.Generic.Dictionary{System.Object,System.Activities.Debugger.SourceLocation})">
      <summary>Получает символы рабочего процесса для указанного корневого действия и расположений в исходном коде.</summary>
      <param name="rootActivity">Элемент рабочего процесса, представляющий корневое действие, из которого необходимо получить символы рабочего процесса.</param>
      <param name="sourceLocations">Объект, содержащий исходные расположения.</param>
      <returns>Объект <see cref="T:System.Collections.Generic.ICollection`1" />, содержащий символы рабочего процесса.</returns>
    </member>
    <member name="T:System.Activities.Debugger.State">
      <summary>Управляет сведениями о свойствах, выделяющих в исходном коде особые точки, которые могут использоваться интерпретатором при пошаговом выполнении или служить точками останова.</summary>
    </member>
    <member name="T:System.Activities.Debugger.StateManager">
      <summary>Управляет отладкой всех действий, сопоставленных инфраструктурой отладки с состоянием.</summary>
    </member>
    <member name="M:System.Activities.Debugger.StateManager.Dispose">
      <summary>Выходит из всех потоков в списке логических потоков, а затем очищает список.</summary>
    </member>
    <member name="M:System.Activities.Debugger.StateManager.Exit(System.Int32)">
      <summary>Выходит из указанного потока и задает для его местоположения в списке логических потоков значение <see langword="null" />.</summary>
      <param name="threadIndex">Число, представляющее индекс в списке логических потоков.</param>
    </member>
    <member name="T:System.Activities.Debugger.Symbol.ActivitySymbol">
      <summary>Представляет символ действия.</summary>
    </member>
    <member name="P:System.Activities.Debugger.Symbol.ActivitySymbol.EndColumn">
      <summary>Возвращает завершающий столбец в диапазоне одного или нескольких столбцов в файле исходного кода.</summary>
      <returns>Завершающий столбец в диапазоне одного или нескольких столбцов.</returns>
    </member>
    <member name="P:System.Activities.Debugger.Symbol.ActivitySymbol.EndLine">
      <summary>Возвращает завершающую строку в диапазоне одной или нескольких строк в файле исходного кода.</summary>
      <returns>Последняя строка в диапазоне одной или нескольких строк в файле исходного кода.</returns>
    </member>
    <member name="P:System.Activities.Debugger.Symbol.ActivitySymbol.Id">
      <summary>Получает идентификатор действия.</summary>
      <returns>Идентификатор действия.</returns>
    </member>
    <member name="P:System.Activities.Debugger.Symbol.ActivitySymbol.StartColumn">
      <summary>Возвращает первый столбец в диапазоне одного или нескольких столбцов в файле исходного кода.</summary>
      <returns>Первый столбец в диапазоне одного или нескольких столбцов в файле исходного кода.</returns>
    </member>
    <member name="P:System.Activities.Debugger.Symbol.ActivitySymbol.StartLine">
      <summary>Возвращает первую строку в диапазоне одной или нескольких строк в файле исходного кода.</summary>
      <returns>Первая строка в диапазоне одной или нескольких строк в файле исходного кода.</returns>
    </member>
    <member name="M:System.Activities.Debugger.Symbol.ActivitySymbol.ToString">
      <summary>Возвращает строку, представляющую текущий объект.</summary>
      <returns>Строка, представляющая текущий объект.</returns>
    </member>
    <member name="T:System.Activities.Debugger.Symbol.DebugSymbol">
      <summary>Представляет символ отладки.</summary>
    </member>
    <member name="M:System.Activities.Debugger.Symbol.DebugSymbol.GetSymbol(System.Object)">
      <summary>Получает символ для символа отладки.</summary>
      <param name="instance">Экземпляр объекта.</param>
      <returns>Символ.</returns>
    </member>
    <member name="M:System.Activities.Debugger.Symbol.DebugSymbol.SetSymbol(System.Object,System.Object)">
      <summary>Символ для символа отладки.</summary>
      <param name="instance">Экземпляр объекта.</param>
      <param name="value">Значение символа.</param>
    </member>
    <member name="F:System.Activities.Debugger.Symbol.DebugSymbol.SymbolName">
      <summary>Задает имя символа.</summary>
    </member>
    <member name="T:System.Activities.Debugger.Symbol.WorkflowSymbol">
      <summary>Представляет символ рабочего процесса.</summary>
    </member>
    <member name="M:System.Activities.Debugger.Symbol.WorkflowSymbol.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Debugger.Symbol.WorkflowSymbol" />.</summary>
    </member>
    <member name="M:System.Activities.Debugger.Symbol.WorkflowSymbol.CalculateChecksum">
      <summary>Указывает, должен ли символ рабочего процесса вычислять символы контрольной суммы.</summary>
      <returns>Значение <see langword="true" />, если символ рабочего процесса для вычисления символов контрольной суммы; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Activities.Debugger.Symbol.WorkflowSymbol.Decode(System.String)">
      <summary>Преобразует формат кодирования данных в объект данных для указанного типа.</summary>
      <param name="symbolString">Строка символов.</param>
      <returns>Формат кодирования данных преобразуется в объект данных для указанного типа.</returns>
    </member>
    <member name="M:System.Activities.Debugger.Symbol.WorkflowSymbol.Encode">
      <summary>Задает формат кодировки для символа.</summary>
      <returns>Формат кодировки для символа.</returns>
    </member>
    <member name="P:System.Activities.Debugger.Symbol.WorkflowSymbol.FileName">
      <summary>Получает или задает имя файла для символа рабочего процесса.</summary>
      <returns>Имя файла для символа рабочего процесса.</returns>
    </member>
    <member name="M:System.Activities.Debugger.Symbol.WorkflowSymbol.GetChecksum">
      <summary>Получает контрольную сумму для символа рабочего процесса.</summary>
      <returns>Контрольная сумма для символа рабочего процесса.</returns>
    </member>
    <member name="P:System.Activities.Debugger.Symbol.WorkflowSymbol.Symbols">
      <summary>Получает или задает коллекцию символов.</summary>
      <returns>Коллекция символов.</returns>
    </member>
    <member name="M:System.Activities.Debugger.Symbol.WorkflowSymbol.ToString">
      <summary>Возвращает строку, представляющую символ рабочего процесса.</summary>
      <returns>Строка, представляющая символ рабочего процесс.</returns>
    </member>
    <member name="T:System.Activities.Debugger.ThreadWorkerController">
      <summary>Поддерживает создание и выполнение дополнительного потока отладки или острова в выделенном рабочем потоке. Этот тип является служебным классом, используемым платформой, и не предназначен для свободного использования.</summary>
    </member>
    <member name="M:System.Activities.Debugger.ThreadWorkerController.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.Debugger.ThreadWorkerController" />.</summary>
    </member>
    <member name="M:System.Activities.Debugger.ThreadWorkerController.Isl*******Worker(System.Activities.Debugger.ThreadWorkerController)">
      <summary>Направляет выполнение в определенный дополнительный поток отладки.</summary>
      <param name="controller">Выполняемый дополнительный поток отладки.</param>
    </member>
    <member name="T:System.Activities.Debugger.VirtualStackFrame">
      <summary>Предоставляет виртуальный кадр стека вызова для интерпретатора.</summary>
    </member>
    <member name="M:System.Activities.Debugger.VirtualStackFrame.#ctor(System.Activities.Debugger.State)">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.Debugger.VirtualStackFrame" /> с указанным состоянием.</summary>
      <param name="state">В данной реализации это объект, содержащий набор свойств, которые определяют виртуальную среду для кадра в стеке вызова.</param>
    </member>
    <member name="M:System.Activities.Debugger.VirtualStackFrame.#ctor(System.Activities.Debugger.State,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.Debugger.VirtualStackFrame" /> с заданными состоянием и локальными переменными.</summary>
      <param name="state">В данной реализации это объект, содержащий набор свойств, которые определяют виртуальную среду для кадра в стеке вызова.</param>
      <param name="locals">Переменные с ранней и поздней привязкой, связанные с состоянием.</param>
    </member>
    <member name="P:System.Activities.Debugger.VirtualStackFrame.Locals">
      <summary>Возвращает локальные переменные для кадра в стеке вызова.</summary>
      <returns>Коллекция пар «ключ-значение», определяющих переменные ранней и поздней привязки, связанные с определенным состоянием.</returns>
    </member>
    <member name="P:System.Activities.Debugger.VirtualStackFrame.State">
      <summary>Возвращает свойства, определяющие виртуальную среду для кадра в стеке вызова.</summary>
      <returns>Объект <see langword="State" />, содержащий свойства, определяющие указанную виртуальную среду.</returns>
    </member>
    <member name="M:System.Activities.Debugger.VirtualStackFrame.ToString">
      <summary>Экземпляр строки сведений о состоянии.</summary>
      <returns>Сведения о состоянии виртуальной среды.</returns>
    </member>
    <member name="T:System.Activities.Debugger.XamlDebuggerXmlReader">
      <summary>Предоставляет функции синтаксического анализа, преобразующие XAML-код разметки в объект или дерево объектов.</summary>
    </member>
    <member name="M:System.Activities.Debugger.XamlDebuggerXmlReader.#ctor(System.IO.TextReader)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Debugger.XamlDebuggerXmlReader" /> с указанным средством чтения текста.</summary>
      <param name="underlyingTextReader">Средство чтения текста для базовых текстовых данных.</param>
    </member>
    <member name="M:System.Activities.Debugger.XamlDebuggerXmlReader.#ctor(System.IO.TextReader,System.Xaml.XamlSchemaContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Debugger.XamlDebuggerXmlReader" /> заданным средством чтения текста и контекстом схемы для интерпретации или сопоставления типов XAML.</summary>
      <param name="underlyingTextReader">Средство чтения текста для базовых текстовых данных.</param>
      <param name="schemaContext">Контекст схемы для интерпретации или сопоставления типов XAML.</param>
    </member>
    <member name="M:System.Activities.Debugger.XamlDebuggerXmlReader.#ctor(System.Xaml.XamlReader,System.IO.TextReader)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Debugger.XamlDebuggerXmlReader" /> с указанным средством чтения XAML и средством чтения текста.</summary>
      <param name="underlyingReader">Средство чтения XAML для базовых данных XAML.</param>
      <param name="textReader">Средство чтения текста для базовых текстовых данных.</param>
    </member>
    <member name="M:System.Activities.Debugger.XamlDebuggerXmlReader.#ctor(System.Xaml.XamlReader,System.Xaml.IXamlLineInfo,System.IO.TextReader)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Debugger.XamlDebuggerXmlReader" /> с указанным средством чтения XAML, сведениями строки XAML и средством чтения текста.</summary>
      <param name="underlyingReader">Средство чтения XAML для базовых данных XAML.</param>
      <param name="xamlLineInfo">Объект, сообщающий сведения строки XAML.</param>
      <param name="textReader">Средство чтения текста для базовых текстовых данных.</param>
    </member>
    <member name="P:System.Activities.Debugger.XamlDebuggerXmlReader.CollectNonActivitySourceLocation">
      <summary>Получает или задает значение, указывающее, ведется ли сбор расположения в исходном коде, не относящегося к действию.</summary>
      <returns>Значение <see langword="true" />, если ведется сбор расположения в исходном коде, не относящегося к действиям; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Activities.Debugger.XamlDebuggerXmlReader.CopyAttachedSourceLocation(System.Object,System.Object)">
      <summary>Извлекает значения строки и столбца из указанного объекта действия и назначает их текущему экземпляру средства чтения XAML.</summary>
      <param name="source">Экземпляр действия XAML, из которого выполняется чтение значений исходного местоположения.</param>
      <param name="destination">Экземпляр действия.</param>
    </member>
    <member name="M:System.Activities.Debugger.XamlDebuggerXmlReader.Dispose(System.Boolean)">
      <summary>Освобождает неуправляемые ресурсы, используемые объектом <see cref="T:System.Activities.Debugger.XamlDebuggerXmlReader" />, а при необходимости освобождает также управляемые ресурсы.</summary>
      <param name="disposing">Значение <see langword="true" />, если необходимо освободить управляемые ресурсы; в противном случае — значение <see langword="false" />.</param>
    </member>
    <member name="F:System.Activities.Debugger.XamlDebuggerXmlReader.EndColumnName">
      <summary>Имя вложенного свойства, представляющее завершающий столбец элемента действия в его XAML-форме.</summary>
    </member>
    <member name="F:System.Activities.Debugger.XamlDebuggerXmlReader.EndLineName">
      <summary>Имя вложенного свойства, представляющее завершающую строку элемента действия в его XAML-форме.</summary>
    </member>
    <member name="F:System.Activities.Debugger.XamlDebuggerXmlReader.FileNameName">
      <summary>Имя вложенного свойства, представляющее имя файла для синтаксического анализа.</summary>
    </member>
    <member name="M:System.Activities.Debugger.XamlDebuggerXmlReader.GetEndColumn(System.Object)">
      <summary>Получает значение присоединенного свойства, которое указано в поле свойства зависимости EndColumnName указанного экземпляра средства чтения XAML.</summary>
      <param name="instance">Экземпляр действия.</param>
      <returns>Объект вложенного свойства.</returns>
    </member>
    <member name="M:System.Activities.Debugger.XamlDebuggerXmlReader.GetEndLine(System.Object)">
      <summary>Получает значение присоединенного свойства, которое указано в поле свойства зависимости EndLineName указанного экземпляра средства чтения XAML.</summary>
      <param name="instance">Экземпляр действия.</param>
      <returns>Объект вложенного свойства.</returns>
    </member>
    <member name="M:System.Activities.Debugger.XamlDebuggerXmlReader.GetFileName(System.Object)">
      <summary>Получает значение присоединенного свойства, которое указано в поле свойства зависимости FileNameName указанного экземпляра средства чтения XAML.</summary>
      <param name="instance">Экземпляр действия.</param>
      <returns>Объект вложенного свойства.</returns>
    </member>
    <member name="M:System.Activities.Debugger.XamlDebuggerXmlReader.GetStartColumn(System.Object)">
      <summary>Получает значение присоединенного свойства, которое указано в поле свойства зависимости StartColumnName указанного экземпляра средства чтения XAML.</summary>
      <param name="instance">Экземпляр действия.</param>
      <returns>Объект вложенного свойства.</returns>
    </member>
    <member name="M:System.Activities.Debugger.XamlDebuggerXmlReader.GetStartLine(System.Object)">
      <summary>Получает значение присоединенного свойства, которое указано в поле свойства зависимости StartLineName указанного экземпляра средства чтения XAML.</summary>
      <param name="instance">Экземпляр действия.</param>
      <returns>Объект вложенного свойства.</returns>
    </member>
    <member name="P:System.Activities.Debugger.XamlDebuggerXmlReader.HasLineInfo">
      <summary>Получает значение, указывающее, доступны ли сведения о строке.</summary>
      <returns>Значение <see langword="true" />, если сведения о строке доступны; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Activities.Debugger.XamlDebuggerXmlReader.IsEof">
      <summary>Возвращает значение, указывающее, был ли достигнут базовым средством чтения конец XAML-файл, синтаксический анализ которого выполняется.</summary>
      <returns>Значение <see langword="true" />, если конец файла, синтаксический анализ которого выполняется, был достигнут средством чтения; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Activities.Debugger.XamlDebuggerXmlReader.LineNumber">
      <summary>Возвращает строку в XAML-файле, который в настоящее время анализируется средством чтения.</summary>
      <returns>Строка в XAML-файле, который в настоящее время анализируется средством чтения.</returns>
    </member>
    <member name="P:System.Activities.Debugger.XamlDebuggerXmlReader.LinePosition">
      <summary>Возвращает местоположение строки в XAML-файле, который в настоящее время анализируется средством чтения XAML.</summary>
      <returns>Местоположение строки в XAML-файле, который в настоящее время анализируется средством чтения XAML.</returns>
    </member>
    <member name="P:System.Activities.Debugger.XamlDebuggerXmlReader.Member">
      <summary>Получает начальный элемент документа, который преобразуется в базу членов XAML.</summary>
      <returns>Начальный член документа, который преобразуется в базу членов XAML.</returns>
    </member>
    <member name="P:System.Activities.Debugger.XamlDebuggerXmlReader.Namespace">
      <summary>Возвращает путь, который используется в корневом элементе XAML-документа для установления связи между кодом XAML и его схемой.</summary>
      <returns>Объявление пространства имен для использования в корневом элементе XAML-документа.</returns>
    </member>
    <member name="P:System.Activities.Debugger.XamlDebuggerXmlReader.NodeType">
      <summary>Возвращает тип узла, чтение которого в настоящее время выполняется в XAML-файле.</summary>
      <returns>Одно из значений перечисления <see cref="T:System.Xaml.XamlNodeType" />.</returns>
    </member>
    <member name="M:System.Activities.Debugger.XamlDebuggerXmlReader.Read">
      <summary>Предоставляет следующий узел XAML из загруженного источника, если узел XAML доступен.</summary>
      <returns>Значение <see langword="true" />, если узел доступен; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Activities.Debugger.XamlDebuggerXmlReader.SchemaContext">
      <summary>Возвращает контекст схемы для базового средства чтения XAML.</summary>
      <returns>Сведения о контексте схемы.</returns>
    </member>
    <member name="M:System.Activities.Debugger.XamlDebuggerXmlReader.SetEndColumn(System.Object,System.Object)">
      <summary>Задает значение присоединенного свойства, которое указано в поле свойства зависимости EndColumnName указанного экземпляра средства чтения XAML.</summary>
      <param name="instance">Текущий экземпляр средства чтения XAML.</param>
      <param name="value">Идентификатор или имя свойства EndColumnName.</param>
    </member>
    <member name="M:System.Activities.Debugger.XamlDebuggerXmlReader.SetEndLine(System.Object,System.Object)">
      <summary>Задает значение присоединенного свойства, которое указано в поле свойства зависимости EndLineName указанного экземпляра средства чтения XAML.</summary>
      <param name="instance">Текущий экземпляр средства чтения XAML.</param>
      <param name="value">Имя или идентификатор EndLineName.</param>
    </member>
    <member name="M:System.Activities.Debugger.XamlDebuggerXmlReader.SetFileName(System.Object,System.Object)">
      <summary>Задает значение присоединенного свойства, которое указано в поле свойства зависимости FileNameName указанного экземпляра средства чтения XAML.</summary>
      <param name="instance">Текущий экземпляр средства чтения XAML.</param>
      <param name="value">Идентификатор или имя свойства FileNameName.</param>
    </member>
    <member name="M:System.Activities.Debugger.XamlDebuggerXmlReader.SetStartColumn(System.Object,System.Object)">
      <summary>Задает значение присоединенного свойства, которое указано в поле свойства зависимости StartColumnName указанного экземпляра средства чтения XAML.</summary>
      <param name="instance">Текущий экземпляр средства чтения XAML.</param>
      <param name="value">Идентификатор или имя свойства StartColumnName.</param>
    </member>
    <member name="M:System.Activities.Debugger.XamlDebuggerXmlReader.SetStartLine(System.Object,System.Object)">
      <summary>Задает значение присоединенного свойства, которое указано в поле свойства зависимости StartLineName указанного экземпляра средства чтения XAML.</summary>
      <param name="instance">Текущий экземпляр средства чтения XAML.</param>
      <param name="value">Идентификатор или имя свойства StartLineName.</param>
    </member>
    <member name="E:System.Activities.Debugger.XamlDebuggerXmlReader.SourceLocationFound">
      <summary>Возникает при нахождении расположения в исходном коде.</summary>
    </member>
    <member name="F:System.Activities.Debugger.XamlDebuggerXmlReader.StartColumnName">
      <summary>Имя вложенного свойства, представляющее начальный столбец действия в его XAML-форме.</summary>
    </member>
    <member name="F:System.Activities.Debugger.XamlDebuggerXmlReader.StartLineName">
      <summary>Имя вложенного свойства, представляющее начальную строку действия в его XAML-форме.</summary>
    </member>
    <member name="P:System.Activities.Debugger.XamlDebuggerXmlReader.Type">
      <summary>Возвращает тип записи в начальном узле XAML.</summary>
      <returns>Тип записи XAML.</returns>
    </member>
    <member name="P:System.Activities.Debugger.XamlDebuggerXmlReader.Value">
      <summary>Возвращает элемент в узле, чтение которого выполняется в настоящий момент.</summary>
      <returns>Элемент XAML-файла.</returns>
    </member>
    <member name="T:System.Activities.DelegateArgument">
      <summary>Абстрактный базовый класс, представляющий конечную точку привязки, которая поддерживает поток данных в <see cref="T:System.Activities.ActivityDelegate" /> и из него.</summary>
    </member>
    <member name="P:System.Activities.DelegateArgument.Direction">
      <summary>Возвращает объект <see cref="T:System.Activities.ArgumentDirection" />, который указывает направление потока данных, представляемого <see cref="T:System.Activities.DelegateArgument" />: в делегат <see cref="T:System.Activities.ActivityDelegate" />, из делегата <see cref="T:System.Activities.ActivityDelegate" /> или в обоих направлениях<see cref="T:System.Activities.ActivityDelegate" />.</summary>
      <returns>Одно из значений перечисления, указывающее направление потока данных через объект <see cref="T:System.Activities.DelegateArgument" />.</returns>
    </member>
    <member name="M:System.Activities.DelegateArgument.Get(System.Activities.ActivityContext)">
      <summary>Возвращает значение аргумента, используя указанный контекст действия.</summary>
      <param name="context">Контекст текущего действия.</param>
      <returns>Значение аргумента.</returns>
    </member>
    <member name="M:System.Activities.DelegateArgument.GetLocation(System.Activities.ActivityContext)">
      <summary>Возвращает расположение <see cref="T:System.Activities.Location" /> для значения, на которое ссылается аргумент <see cref="T:System.Activities.DelegateArgument" />.</summary>
      <param name="context">Контекст текущего действия.</param>
      <returns>Расположение значения, на которое ссылается аргумент <see cref="T:System.Activities.DelegateArgument" />.</returns>
    </member>
    <member name="P:System.Activities.DelegateArgument.Name">
      <summary>Возвращает или задает имя таблицы для объекта <see cref="T:System.Activities.DelegateArgument" />.</summary>
      <returns>Имя <see cref="T:System.Activities.DelegateArgument" />.</returns>
    </member>
    <member name="P:System.Activities.DelegateArgument.NameCore">
      <summary>Возвращает строковое значение, используемое <see cref="P:System.Activities.DelegateArgument.Name" />.</summary>
      <returns>Имя <see cref="T:System.Activities.DelegateArgument" />.</returns>
    </member>
    <member name="T:System.Activities.DelegateCompletionCallback">
      <summary>Представляет метод, который вызывается после завершения <see cref="T:System.Activities.ActivityDelegate" />.</summary>
      <param name="context">Среда выполнения действия, обрабатывающего обратный вызов.</param>
      <param name="completedInstance">Завершенный экземпляр действия для обработчика <see cref="T:System.Activities.ActivityDelegate" />.</param>
      <param name="outArguments">Выходные аргументы завершенного <see cref="T:System.Activities.ActivityDelegate" />.</param>
    </member>
    <member name="T:System.Activities.DelegateInArgument">
      <summary>Абстрактный базовый класс, представляющий конечную точку привязки, которая поддерживает поток данных в <see cref="T:System.Activities.ActivityDelegate" />.</summary>
    </member>
    <member name="T:System.Activities.DelegateInArgument`1">
      <summary>Конечная точка привязки, представляющая поток данных в <see cref="T:System.Activities.ActivityDelegate" />.</summary>
      <typeparam name="T">Тип данных объекта <see cref="T:System.Activities.DelegateInArgument`1" />.</typeparam>
    </member>
    <member name="M:System.Activities.DelegateInArgument`1.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.DelegateInArgument`1" />.</summary>
    </member>
    <member name="M:System.Activities.DelegateInArgument`1.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.DelegateInArgument`1" />, используя указанное имя.</summary>
      <param name="name">Имя объекта <see cref="T:System.Activities.DelegateInArgument`1" />.</param>
    </member>
    <member name="M:System.Activities.DelegateInArgument`1.Get(System.Activities.ActivityContext)">
      <summary>Получает значение объекта <see cref="T:System.Activities.DelegateInArgument`1" />.</summary>
      <param name="context">Контекст текущего действия.</param>
      <returns>Значение <see cref="T:System.Activities.DelegateInArgument`1" />.</returns>
    </member>
    <member name="M:System.Activities.DelegateInArgument`1.Set(System.Activities.ActivityContext,`0)">
      <summary>Задает значение аргумента <see cref="T:System.Activities.DelegateInArgument`1" />.</summary>
      <param name="context">Контекст текущего действия.</param>
      <param name="value">Новое значение.</param>
    </member>
    <member name="T:System.Activities.DelegateOutArgument">
      <summary>Абстрактный базовый класс, представляющий конечную точку привязки, которая поддерживает поток данных из <see cref="T:System.Activities.ActivityDelegate" />.</summary>
    </member>
    <member name="T:System.Activities.DelegateOutArgument`1">
      <summary>Конечная точка привязки, представляющая поток данных из <see cref="T:System.Activities.ActivityDelegate" />.</summary>
      <typeparam name="T">Тип данных объекта <see cref="T:System.Activities.DelegateOutArgument`1" />.</typeparam>
    </member>
    <member name="M:System.Activities.DelegateOutArgument`1.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.DelegateOutArgument`1" />.</summary>
    </member>
    <member name="M:System.Activities.DelegateOutArgument`1.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.DelegateOutArgument`1" /> с указанным именем.</summary>
      <param name="name">Имя объекта <see cref="T:System.Activities.DelegateOutArgument`1" />.</param>
    </member>
    <member name="M:System.Activities.DelegateOutArgument`1.Get(System.Activities.ActivityContext)">
      <summary>Получает значение объекта <see cref="T:System.Activities.DelegateOutArgument`1" />.</summary>
      <param name="context">Контекст текущего действия.</param>
      <returns>Значение <see cref="T:System.Activities.DelegateOutArgument`1" />.</returns>
    </member>
    <member name="M:System.Activities.DelegateOutArgument`1.GetLocation(System.Activities.ActivityContext)">
      <summary>Возвращает расположение <see cref="T:System.Activities.Location`1" /> для этого аргумента <see cref="T:System.Activities.DelegateOutArgument`1" />.</summary>
      <param name="context">Контекст действия, который содержит расположение для этого <see cref="T:System.Activities.DelegateOutArgument`1" />.</param>
      <returns>Расположение данного аргумента <see cref="T:System.Activities.DelegateOutArgument`1" />.</returns>
    </member>
    <member name="M:System.Activities.DelegateOutArgument`1.Set(System.Activities.ActivityContext,`0)">
      <summary>Задает значение аргумента <see cref="T:System.Activities.DelegateOutArgument`1" />.</summary>
      <param name="context">Контекст текущего действия.</param>
      <param name="value">Новое значение.</param>
    </member>
    <member name="T:System.Activities.DurableInstancing.ActivatableWorkflowsQueryResult">
      <summary>Содержит результаты выполнения команды <see cref="T:System.Activities.DurableInstancing.QueryActivatableWorkflowsComm*******" /> в хранилище экземпляров.</summary>
    </member>
    <member name="M:System.Activities.DurableInstancing.ActivatableWorkflowsQueryResult.#ctor">
      <summary>Инициализирует экземпляр класса <see cref="T:System.Activities.DurableInstancing.ActivatableWorkflowsQueryResult" />.</summary>
    </member>
    <member name="M:System.Activities.DurableInstancing.ActivatableWorkflowsQueryResult.#ctor(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object})">
      <summary>Создает экземпляр класса <see cref="T:System.Activities.DurableInstancing.ActivatableWorkflowsQueryResult" /> и инициализирует свойство <see cref="P:System.Activities.DurableInstancing.ActivatableWorkflowsQueryResult.ActivationParameters" /> с помощью данных в объекте словаря, переданном в качестве параметра.</summary>
      <param name="parameters">Объект словаря, содержащий параметры активации.</param>
    </member>
    <member name="M:System.Activities.DurableInstancing.ActivatableWorkflowsQueryResult.#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object}})">
      <summary>Создает экземпляр класса <see cref="T:System.Activities.DurableInstancing.ActivatableWorkflowsQueryResult" /> и инициализирует свойство <see cref="P:System.Activities.DurableInstancing.ActivatableWorkflowsQueryResult.ActivationParameters" /> с помощью данных в перечислимом объекте словаря, переданном в качестве параметра.</summary>
      <param name="parameters">Перечислимый объект словаря, содержащий параметры активации.</param>
    </member>
    <member name="P:System.Activities.DurableInstancing.ActivatableWorkflowsQueryResult.ActivationParameters">
      <summary>Список параметров активации, используемый универсальным узлом при создании узла рабочего процесса.</summary>
      <returns>Объект списка, содержащий параметры активации.</returns>
    </member>
    <member name="T:System.Activities.DurableInstancing.CreateWorkflowOwnerComm*******">
      <summary>Используйте эту команду сохраняемости для регистрации узла службы рабочего процесса в качестве владельца блокировки в базе данных сохраняемости.</summary>
    </member>
    <member name="M:System.Activities.DurableInstancing.CreateWorkflowOwnerComm*******.#ctor">
      <summary>Инициализирует экземпляр класса <see cref="T:System.Activities.DurableInstancing.CreateWorkflowOwnerComm*******" />.</summary>
    </member>
    <member name="P:System.Activities.DurableInstancing.CreateWorkflowOwnerComm*******.InstanceOwnerMetadata">
      <summary>Возвращает метаданные о владельце экземпляра (в настоящее время имеется взаимно-однозначное сопоставление с узлом службы) в словаре с объектом XName в качестве ключа и объект <see cref="T:System.Runtime.DurableInstancing.InstanceValue" /> в качестве значения.</summary>
      <returns>Метаданные о владельце экземпляра.</returns>
    </member>
    <member name="T:System.Activities.DurableInstancing.CreateWorkflowOwnerWithIdentityComm*******">
      <summary>Определяет создание владельца рабочего процесса с удостоверением команды.</summary>
    </member>
    <member name="M:System.Activities.DurableInstancing.CreateWorkflowOwnerWithIdentityComm*******.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.DurableInstancing.CreateWorkflowOwnerWithIdentityComm*******" />.</summary>
    </member>
    <member name="P:System.Activities.DurableInstancing.CreateWorkflowOwnerWithIdentityComm*******.InstanceOwnerMetadata">
      <summary>Получает метаданные о владельце экземпляра в словаре с объектом XName в качестве ключа и объектом InstanceValue в качестве значения.</summary>
      <returns>Метаданные о владельце экземпляра.</returns>
    </member>
    <member name="T:System.Activities.DurableInstancing.DeleteWorkflowOwnerComm*******">
      <summary>Удаляет данные владельца блокировки из база данных сохраняемости.</summary>
    </member>
    <member name="M:System.Activities.DurableInstancing.DeleteWorkflowOwnerComm*******.#ctor">
      <summary>Инициализирует экземпляр класса <see cref="T:System.Activities.DurableInstancing.DeleteWorkflowOwnerComm*******" />.</summary>
    </member>
    <member name="T:System.Activities.DurableInstancing.HasActivatableWorkflowEvent">
      <summary>Представляет событие, вызываемое хранилищем экземпляров для уведомления универсальных узлов о существовании доступных для активации экземпляров в базе данных сохраняемости.</summary>
    </member>
    <member name="M:System.Activities.DurableInstancing.HasActivatableWorkflowEvent.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.DurableInstancing.HasActivatableWorkflowEvent" />.</summary>
    </member>
    <member name="T:System.Activities.DurableInstancing.HasRunnableWorkflowEvent">
      <summary>Представляет событие, вызываемое хранилищем экземпляров рабочих процессов SQL для уведомления узлов рабочих процессов о существовании запускаемых экземпляров в базе данных сохраняемости.</summary>
    </member>
    <member name="M:System.Activities.DurableInstancing.HasRunnableWorkflowEvent.#ctor">
      <summary>Инициализирует экземпляр класса <see cref="T:System.Activities.DurableInstancing.HasRunnableWorkflowEvent" />.</summary>
    </member>
    <member name="T:System.Activities.DurableInstancing.LoadWorkflowByInstanceKeyComm*******">
      <summary>Команда сохраняемости, загружающая экземпляр рабочего процесса с помощью ключа экземпляра, связанного с экземпляром.</summary>
    </member>
    <member name="M:System.Activities.DurableInstancing.LoadWorkflowByInstanceKeyComm*******.#ctor">
      <summary>Инициализирует экземпляр класса <see cref="T:System.Activities.DurableInstancing.LoadWorkflowByInstanceKeyComm*******" />.</summary>
    </member>
    <member name="P:System.Activities.DurableInstancing.LoadWorkflowByInstanceKeyComm*******.AcceptUninitializedInstance">
      <summary>Возвращает значение, указывающее, разрешена ли загрузка экземпляра рабочего процесса в неинициализированном состоянии.</summary>
      <returns>Значение <see langword="true" />, если загрузка экземпляра рабочего процесса в неинициализированном состоянии разрешена; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Activities.DurableInstancing.LoadWorkflowByInstanceKeyComm*******.AssociateInstanceKeyToInstanceId">
      <summary>Возвращает или задает идентификатор экземпляра, связанного с ключом экземпляра.</summary>
      <returns>Идентификатор экземпляра.</returns>
    </member>
    <member name="P:System.Activities.DurableInstancing.LoadWorkflowByInstanceKeyComm*******.InstanceKeysToAssociate">
      <summary>Возвращает ключи экземпляра, которые должны быть связаны с экземпляром в хранилище сохраняемости.</summary>
      <returns>Ключи экземпляра.</returns>
    </member>
    <member name="P:System.Activities.DurableInstancing.LoadWorkflowByInstanceKeyComm*******.LookupInstanceKey">
      <summary>Возвращает ключ экземпляра, используемый для идентификации загружаемого экземпляра.</summary>
      <returns>Ключ экземпляра.</returns>
    </member>
    <member name="T:System.Activities.DurableInstancing.LoadWorkflowComm*******">
      <summary>Команда сохраняемости, загружающая экземпляр рабочего процесса на основе данных о состоянии экземпляра в хранилище сохраняемости.</summary>
    </member>
    <member name="M:System.Activities.DurableInstancing.LoadWorkflowComm*******.#ctor">
      <summary>Инициализирует экземпляр класса <see cref="T:System.Activities.DurableInstancing.LoadWorkflowComm*******" />.</summary>
    </member>
    <member name="P:System.Activities.DurableInstancing.LoadWorkflowComm*******.AcceptUninitializedInstance">
      <summary>Возвращает значение, указывающее, разрешена ли загрузка инициализированного экземпляра.</summary>
      <returns>Значение <see langword="true" />, если загрузка инициализированного экземпляра разрешена; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="T:System.Activities.DurableInstancing.QueryActivatableWorkflowsComm*******">
      <summary>Представляет команду, выполняемую универсальным узлом в хранилище экземпляров для извлечения параметров активации. Универсальный узел использует эти параметры активации для создания узла рабочего процесса, который в свою очередь загружает запускаемый экземпляр службы.</summary>
    </member>
    <member name="M:System.Activities.DurableInstancing.QueryActivatableWorkflowsComm*******.#ctor">
      <summary>Инициализирует экземпляр класса <see cref="T:System.Activities.DurableInstancing.QueryActivatableWorkflowsComm*******" />.</summary>
    </member>
    <member name="T:System.Activities.DurableInstancing.SaveWorkflowComm*******">
      <summary>Команда сохраняемости, которая позволяет сохранять данные о состоянии экземпляра в хранилище сохраняемости.</summary>
    </member>
    <member name="M:System.Activities.DurableInstancing.SaveWorkflowComm*******.#ctor">
      <summary>Инициализирует экземпляр класса <see cref="T:System.Activities.DurableInstancing.SaveWorkflowComm*******" />.</summary>
    </member>
    <member name="P:System.Activities.DurableInstancing.SaveWorkflowComm*******.CompleteInstance">
      <summary>Задает для состояния экземпляра в базе данных сохраняемости значение "Completed"и удаляет данные о состоянии из базы данных, если для свойства <see cref="P:System.Activities.DurableInstancing.SqlWorkflowInstanceStore.InstanceCompletionAction" /> не задано значение "Delete Nothing".</summary>
      <returns>
        <see langword="true" /> Если состояние экземпляра — «Завершено» и сведения о состоянии удаляется; в противном случае <see langword="false" />.</returns>
    </member>
    <member name="P:System.Activities.DurableInstancing.SaveWorkflowComm*******.InstanceData">
      <summary>Возвращает данные экземпляра, которые необходимо сохранить в хранилище сохраняемости. Словарь, который содержит имена свойств и их значения.</summary>
      <returns>Словарь, который содержит имена свойств и их значения.</returns>
    </member>
    <member name="P:System.Activities.DurableInstancing.SaveWorkflowComm*******.InstanceKeyMetadataChanges">
      <summary>Возвращает словарь, в котором в качестве ключа используется ключ экземпляра, а в качестве значения — словарь с парами «XName и <see cref="T:System.Runtime.DurableInstancing.InstanceValue" />».</summary>
      <returns>Словари с парами «ключ-значение».</returns>
    </member>
    <member name="P:System.Activities.DurableInstancing.SaveWorkflowComm*******.InstanceKeysToAssociate">
      <summary>Содержит ключи экземпляров, которые должны быть связаны с экземпляром. Словарь, который содержит идентификатор GUID, связанный с ключом экземпляра, и метаданные, связанные с этим ключом экземпляра.</summary>
      <returns>Ключи экземпляра, которые должны быть связаны с экземпляром.</returns>
    </member>
    <member name="P:System.Activities.DurableInstancing.SaveWorkflowComm*******.InstanceKeysToComplete">
      <summary>Возвращает коллекцию ключей экземпляра, для которых связь с экземпляром должна быть разорвана.</summary>
      <returns>Коллекция ключей экземпляра, для которых связь с экземпляром должна быть разорвана.</returns>
    </member>
    <member name="P:System.Activities.DurableInstancing.SaveWorkflowComm*******.InstanceKeysToFree">
      <summary>Возвращает коллекцию ключей экземпляра, которые необходимо удалить из хранилища сохраняемости.</summary>
      <returns>Коллекция ключей экземпляра, которые необходимо удалить из хранилища сохраняемости.</returns>
    </member>
    <member name="P:System.Activities.DurableInstancing.SaveWorkflowComm*******.InstanceMetadataChanges">
      <summary>Возвращает словарь, содержащий изменения метаданных экземпляра.</summary>
      <returns>Изменения метаданных экземпляра.</returns>
    </member>
    <member name="P:System.Activities.DurableInstancing.SaveWorkflowComm*******.UnlockInstance">
      <summary>Удаляет блокировку экземпляра. Задает для экземпляра значение <see langword="null" /> для владельца блокировки.</summary>
      <returns>Значение <see langword="true" />, если блокировка экземпляра удалена; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="T:System.Activities.DurableInstancing.TryLoadRunnableWorkflowComm*******">
      <summary>Представляет команду, выполняемую узлом рабочего процесса в хранилище экземпляров для загрузки запускаемых экземпляров в хранилище сохраняемости в память.</summary>
    </member>
    <member name="M:System.Activities.DurableInstancing.TryLoadRunnableWorkflowComm*******.#ctor">
      <summary>Инициализирует экземпляр класса <see cref="T:System.Activities.DurableInstancing.TryLoadRunnableWorkflowComm*******" />.</summary>
    </member>
    <member name="T:System.Activities.DynamicActivity">
      <summary>Предоставляет объектную модель, которая позволяет динамически создавать действия, взаимодействующие с конструктором Workflow Foundation и средой выполнения с помощью <see cref="T:System.ComponentModel.ICustomTypeDescriptor" />.</summary>
    </member>
    <member name="M:System.Activities.DynamicActivity.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.DynamicActivity" />.</summary>
    </member>
    <member name="P:System.Activities.DynamicActivity.Attributes">
      <summary>Возвращает коллекцию атрибутов динамически формируемого действия.</summary>
      <returns>Коллекция атрибутов.</returns>
    </member>
    <member name="P:System.Activities.DynamicActivity.Constraints">
      <summary>Возвращает коллекцию действий <see cref="T:System.Activities.Validation.Constraint" />, настроенных для проверки объекта <see cref="T:System.Activities.DynamicActivity" />.</summary>
      <returns>Коллекция ограничений.</returns>
    </member>
    <member name="P:System.Activities.DynamicActivity.Implementation">
      <summary>Возвращает или задает логику выполнения действия.</summary>
      <returns>Логика выполнения.</returns>
    </member>
    <member name="P:System.Activities.DynamicActivity.ImplementationVersion">
      <summary>Получает или задает версию реализации действия.</summary>
      <returns>Версия реализации действия.</returns>
    </member>
    <member name="P:System.Activities.DynamicActivity.Name">
      <summary>Имя, отображаемое для действия в конструкторе рабочих процессов.</summary>
      <returns>Имя действия.</returns>
    </member>
    <member name="P:System.Activities.DynamicActivity.Properties">
      <summary>Возвращает коллекцию свойств, сопоставленных с аргументами динамически формируемого действия.</summary>
      <returns>Коллекция свойств.</returns>
    </member>
    <member name="M:System.Activities.DynamicActivity.System#ComponentModel#ICustomTypeDescriptor#GetAttributes">
      <summary>Возвращает коллекцию атрибутов динамического действия.</summary>
      <returns>Атрибуты динамического действия.</returns>
    </member>
    <member name="M:System.Activities.DynamicActivity.System#ComponentModel#ICustomTypeDescriptor#GetClassName">
      <summary>Возвращает имя класса динамического действия.</summary>
      <returns>Имя класса.</returns>
    </member>
    <member name="M:System.Activities.DynamicActivity.System#ComponentModel#ICustomTypeDescriptor#GetComponentName">
      <summary>Возвращает имя компонента динамического действия.</summary>
      <returns>Имя компонента.</returns>
    </member>
    <member name="M:System.Activities.DynamicActivity.System#ComponentModel#ICustomTypeDescriptor#GetConverter">
      <summary>Возвращает преобразователь типов для динамического действия.</summary>
      <returns>Преобразователь типов для данного экземпляра динамического действия.</returns>
    </member>
    <member name="M:System.Activities.DynamicActivity.System#ComponentModel#ICustomTypeDescriptor#GetDefaultEvent">
      <summary>Возвращает событие по умолчанию для динамического действия.</summary>
      <returns>Событие по умолчанию.</returns>
    </member>
    <member name="M:System.Activities.DynamicActivity.System#ComponentModel#ICustomTypeDescriptor#GetDefaultProperty">
      <summary>Возвращает свойство по умолчанию для динамического действия.</summary>
      <returns>Свойство по умолчанию.</returns>
    </member>
    <member name="M:System.Activities.DynamicActivity.System#ComponentModel#ICustomTypeDescriptor#GetEditor(System.Type)">
      <summary>Возвращает редактор с заданным базовым типом.</summary>
      <param name="editorBaseType">Базовый тип искомого редактора.</param>
      <returns>Экземпляр редактора, который может быть приведен к заданному типу редактора, или значение <see langword="null" />, если не удается найти редактор запрошенного типа.</returns>
    </member>
    <member name="M:System.Activities.DynamicActivity.System#ComponentModel#ICustomTypeDescriptor#GetEvents">
      <summary>Возвращает коллекцию событий динамического действия.</summary>
      <returns>Коллекция событий.</returns>
    </member>
    <member name="M:System.Activities.DynamicActivity.System#ComponentModel#ICustomTypeDescriptor#GetEvents(System.Attribute[])">
      <summary>Возвращает коллекцию событий для динамического действия, используя указанный массив атрибутов в качестве фильтра.</summary>
      <param name="attributes">Массив, который можно использовать в качестве фильтра.</param>
      <returns>Коллекция событий, соответствующая указанным атрибутам.</returns>
    </member>
    <member name="M:System.Activities.DynamicActivity.System#ComponentModel#ICustomTypeDescriptor#GetProperties">
      <summary>Возвращает коллекцию свойств динамического действия.</summary>
      <returns>Коллекция свойств.</returns>
    </member>
    <member name="M:System.Activities.DynamicActivity.System#ComponentModel#ICustomTypeDescriptor#GetProperties(System.Attribute[])">
      <summary>Возвращает коллекцию свойств динамического действия, используя указанный массив атрибутов в качестве фильтра.</summary>
      <param name="attributes">Массив, который можно использовать в качестве фильтра.</param>
      <returns>Коллекция свойств, соответствующая указанным атрибутам.</returns>
    </member>
    <member name="M:System.Activities.DynamicActivity.System#ComponentModel#ICustomTypeDescriptor#GetPropertyOwner(System.ComponentModel.PropertyDescriptor)">
      <summary>Возвращает данный экземпляр класса <see cref="T:System.Activities.DynamicActivity" />.</summary>
      <param name="pd">Свойство, для которого требуется найти владельца.</param>
      <returns>Этот экземпляр <see cref="T:System.Activities.DynamicActivity" />.</returns>
    </member>
    <member name="T:System.Activities.DynamicActivity`1">
      <summary>Предоставляет методику, согласующуюся с моделью DOM и предназначенную для динамического построения действий, которые взаимодействуют с конструктором Workflow Foundation и средой выполнения рабочих процессов с помощью <see cref="T:System.ComponentModel.ICustomTypeDescriptor" />.</summary>
      <typeparam name="TResult">Результат, возвращаемый действием.</typeparam>
    </member>
    <member name="M:System.Activities.DynamicActivity`1.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.DynamicActivity`1" />.</summary>
    </member>
    <member name="P:System.Activities.DynamicActivity`1.Attributes">
      <summary>Возвращает коллекцию атрибутов динамически формируемого действия.</summary>
      <returns>Коллекция атрибутов.</returns>
    </member>
    <member name="P:System.Activities.DynamicActivity`1.Constraints">
      <summary>Возвращает коллекцию действий <see cref="T:System.Activities.Validation.Constraint" />, настроенных для проверки объекта <see cref="T:System.Activities.DynamicActivity`1" />.</summary>
      <returns>Коллекция ограничений.</returns>
    </member>
    <member name="P:System.Activities.DynamicActivity`1.Implementation">
      <summary>Возвращает или задает логику выполнения действия.</summary>
      <returns>Логика выполнения.</returns>
    </member>
    <member name="P:System.Activities.DynamicActivity`1.ImplementationVersion">
      <summary>Получает или задает версию реализации действия.</summary>
      <returns>Версия реализации действия.</returns>
    </member>
    <member name="P:System.Activities.DynamicActivity`1.Name">
      <summary>Возвращает имя, отображаемое для действия в конструкторе рабочих процессов.</summary>
      <returns>Имя действия.</returns>
    </member>
    <member name="P:System.Activities.DynamicActivity`1.Properties">
      <summary>Возвращает коллекцию свойств, сопоставленных с аргументами динамически формируемого действия.</summary>
      <returns>Коллекция свойств.</returns>
    </member>
    <member name="M:System.Activities.DynamicActivity`1.System#ComponentModel#ICustomTypeDescriptor#GetAttributes">
      <summary>Возвращает коллекцию атрибутов динамического действия.</summary>
      <returns>Атрибуты динамического действия.</returns>
    </member>
    <member name="M:System.Activities.DynamicActivity`1.System#ComponentModel#ICustomTypeDescriptor#GetClassName">
      <summary>Возвращает имя класса динамического действия.</summary>
      <returns>Имя класса.</returns>
    </member>
    <member name="M:System.Activities.DynamicActivity`1.System#ComponentModel#ICustomTypeDescriptor#GetComponentName">
      <summary>Возвращает имя компонента динамического действия.</summary>
      <returns>Имя компонента.</returns>
    </member>
    <member name="M:System.Activities.DynamicActivity`1.System#ComponentModel#ICustomTypeDescriptor#GetConverter">
      <summary>Возвращает преобразователь типов для динамического действия.</summary>
      <returns>Преобразователь типов для данного экземпляра динамического действия.</returns>
    </member>
    <member name="M:System.Activities.DynamicActivity`1.System#ComponentModel#ICustomTypeDescriptor#GetDefaultEvent">
      <summary>Возвращает событие по умолчанию для динамического действия.</summary>
      <returns>Событие по умолчанию.</returns>
    </member>
    <member name="M:System.Activities.DynamicActivity`1.System#ComponentModel#ICustomTypeDescriptor#GetDefaultProperty">
      <summary>Возвращает свойство по умолчанию для динамического действия.</summary>
      <returns>Свойство по умолчанию.</returns>
    </member>
    <member name="M:System.Activities.DynamicActivity`1.System#ComponentModel#ICustomTypeDescriptor#GetEditor(System.Type)">
      <summary>Возвращает редактор с заданным базовым типом.</summary>
      <param name="editorBaseType">Базовый тип искомого редактора.</param>
      <returns>Экземпляр редактора, который может быть приведен к заданному типу редактора, или <see langword="null" />, если не удается найти редактор запрошенного типа.</returns>
    </member>
    <member name="M:System.Activities.DynamicActivity`1.System#ComponentModel#ICustomTypeDescriptor#GetEvents">
      <summary>Возвращает коллекцию событий динамического действия.</summary>
      <returns>Коллекция событий.</returns>
    </member>
    <member name="M:System.Activities.DynamicActivity`1.System#ComponentModel#ICustomTypeDescriptor#GetEvents(System.Attribute[])">
      <summary>Возвращает коллекцию событий для динамического действия, используя указанный массив атрибутов в качестве фильтра.</summary>
      <param name="attributes">Массив, который можно использовать в качестве фильтра.</param>
      <returns>Коллекция событий, соответствующая указанным атрибутам.</returns>
    </member>
    <member name="M:System.Activities.DynamicActivity`1.System#ComponentModel#ICustomTypeDescriptor#GetProperties">
      <summary>Возвращает коллекцию свойств динамического действия.</summary>
      <returns>Коллекция свойств.</returns>
    </member>
    <member name="M:System.Activities.DynamicActivity`1.System#ComponentModel#ICustomTypeDescriptor#GetProperties(System.Attribute[])">
      <summary>Возвращает коллекцию свойств динамического действия, используя указанный массив атрибутов в качестве фильтра.</summary>
      <param name="attributes">Массив, который можно использовать в качестве фильтра.</param>
      <returns>Коллекция свойств, соответствующая указанным атрибутам.</returns>
    </member>
    <member name="M:System.Activities.DynamicActivity`1.System#ComponentModel#ICustomTypeDescriptor#GetPropertyOwner(System.ComponentModel.PropertyDescriptor)">
      <summary>Возвращает данный экземпляр класса <see cref="T:System.Activities.DynamicActivity`1" />.</summary>
      <param name="pd">Свойство, для которого требуется найти владельца.</param>
      <returns>Этот экземпляр <see cref="T:System.Activities.DynamicActivity`1" />.</returns>
    </member>
    <member name="T:System.Activities.DynamicActivityProperty">
      <summary>Представляет свойство действия <see cref="T:System.Activities.DynamicActivity" />, которое создается во время выполнения и выполняется в контексте <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" />.</summary>
    </member>
    <member name="M:System.Activities.DynamicActivityProperty.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.DynamicActivityProperty" />.</summary>
    </member>
    <member name="P:System.Activities.DynamicActivityProperty.Attributes">
      <summary>Возвращает атрибуты объекта <see cref="T:System.Activities.DynamicActivityProperty" />.</summary>
      <returns>Коллекция атрибутов.</returns>
    </member>
    <member name="P:System.Activities.DynamicActivityProperty.Name">
      <summary>Возвращает или задает имя объекта <see cref="T:System.Activities.DynamicActivityProperty" />.</summary>
      <returns>Имя свойства.</returns>
    </member>
    <member name="M:System.Activities.DynamicActivityProperty.ToString">
      <summary>Возвращает строковое сообщение, которое содержит тип и имя экземпляра <see cref="T:System.Activities.DynamicActivityProperty" />.</summary>
      <returns>Строковое сообщение.</returns>
    </member>
    <member name="P:System.Activities.DynamicActivityProperty.Type">
      <summary>Возвращает или задает тип объекта <see cref="T:System.Activities.DynamicActivityProperty" />.</summary>
      <returns>Объект типа <see cref="T:System.Type" />.</returns>
    </member>
    <member name="P:System.Activities.DynamicActivityProperty.Value">
      <summary>Возвращает или задает значение объекта <see cref="T:System.Activities.DynamicActivityProperty" />.</summary>
      <returns>Объект типа <see cref="T:System.Object" />.</returns>
    </member>
    <member name="T:System.Activities.DynamicUpdate.ActivityBlockingUpdate">
      <summary>Представляет действие обновления блокировки.</summary>
    </member>
    <member name="M:System.Activities.DynamicUpdate.ActivityBlockingUpdate.#ctor(System.Activities.Activity,System.String,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.DynamicUpdate.ActivityBlockingUpdate" /> с указанным действием, исходным идентификатором действия и причиной.</summary>
      <param name="activity">Определение рабочего процесса действия.</param>
      <param name="originalActivityId">Исходный идентификатор действия.</param>
      <param name="reason">Причина блокировки действий.</param>
    </member>
    <member name="M:System.Activities.DynamicUpdate.ActivityBlockingUpdate.#ctor(System.Activities.Activity,System.String,System.String,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.DynamicUpdate.ActivityBlockingUpdate" /> указанным действием, исходным идентификатором действия, причиной и идентификатором экземпляра действия.</summary>
      <param name="activity">Определение рабочего процесса действия.</param>
      <param name="originalActivityId">Исходный идентификатор действия.</param>
      <param name="reason">Причина блокировки действий.</param>
      <param name="activityInstanceId">Идентификатор выполнения экземпляра действия.</param>
    </member>
    <member name="M:System.Activities.DynamicUpdate.ActivityBlockingUpdate.#ctor(System.String,System.String,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.DynamicUpdate.ActivityBlockingUpdate" /> указанным обновленным идентификатором действия, исходным идентификатором действия и причиной.</summary>
      <param name="updatedActivityId">Обновленный идентификатор действия.</param>
      <param name="originalActivityId">Исходный идентификатор действия.</param>
      <param name="reason">Причина блокировки действий.</param>
    </member>
    <member name="M:System.Activities.DynamicUpdate.ActivityBlockingUpdate.#ctor(System.String,System.String,System.String,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.DynamicUpdate.ActivityBlockingUpdate" /> указанным обновленным идентификатором действия, исходным идентификатором действия, причиной и идентификатором экземпляра действия.</summary>
      <param name="updatedActivityId">Обновленный идентификатор действия.</param>
      <param name="originalActivityId">Исходный идентификатор действия.</param>
      <param name="reason">Причина блокировки действий.</param>
      <param name="activityInstanceId">Идентификатор выполнения экземпляра действия.</param>
    </member>
    <member name="P:System.Activities.DynamicUpdate.ActivityBlockingUpdate.Activity">
      <summary>Получает действие определения рабочего процесса.</summary>
      <returns>Действие определения рабочего процесса.</returns>
    </member>
    <member name="P:System.Activities.DynamicUpdate.ActivityBlockingUpdate.ActivityInstanceId">
      <summary>Получает или задает уникальный идентификатор выполняющегося в данный момент экземпляра действия.</summary>
      <returns>Уникальный идентификатор выполняющегося в данный момент экземпляра действия.</returns>
    </member>
    <member name="P:System.Activities.DynamicUpdate.ActivityBlockingUpdate.OriginalActivityId">
      <summary>Получает или задает идентификатор исходного действия в определении рабочего процесса.</summary>
      <returns>Идентификатор исходного действия в определении рабочего процесса.</returns>
    </member>
    <member name="P:System.Activities.DynamicUpdate.ActivityBlockingUpdate.Reason">
      <summary>Получает или задает причину блокировки действия.</summary>
      <returns>Причина блокировки действия.</returns>
    </member>
    <member name="P:System.Activities.DynamicUpdate.ActivityBlockingUpdate.UpdatedActivityId">
      <summary>Получает или задает обновленный идентификатор действия в определении рабочего процесса.</summary>
      <returns>Обновленный идентификатор действия в определении рабочего процесса.</returns>
    </member>
    <member name="T:System.Activities.DynamicUpdate.DynamicUpdateInfo">
      <summary>Указывает данные динамического обновления.</summary>
    </member>
    <member name="M:System.Activities.DynamicUpdate.DynamicUpdateInfo.GetMapItem(System.Object)">
      <summary>Получает элемент сопоставления для <see cref="T:System.Activities.DynamicUpdate.DynamicUpdateInfo" />.</summary>
      <param name="instance">Экземпляр указанного объекта.</param>
      <returns>Элемент сопоставления.</returns>
    </member>
    <member name="M:System.Activities.DynamicUpdate.DynamicUpdateInfo.GetOriginalActivityBuilder(System.Object)">
      <summary>Получает исходный построитель действий для <see cref="T:System.Activities.DynamicUpdate.DynamicUpdateInfo" />.</summary>
      <param name="instance">Экземпляр указанного объекта.</param>
      <returns>Исходный построитель действий.</returns>
    </member>
    <member name="M:System.Activities.DynamicUpdate.DynamicUpdateInfo.GetOriginalDefinition(System.Object)">
      <summary>Получает исходное определение для <see cref="T:System.Activities.DynamicUpdate.DynamicUpdateInfo" />.</summary>
      <param name="instance">Экземпляр указанного объекта.</param>
      <returns>Исходное определение.</returns>
    </member>
    <member name="M:System.Activities.DynamicUpdate.DynamicUpdateInfo.SetMapItem(System.Object,System.Activities.DynamicUpdate.DynamicUpdateMapItem)">
      <summary>Задает элемент сопоставления для <see cref="T:System.Activities.DynamicUpdate.DynamicUpdateInfo" />.</summary>
      <param name="instance">Экземпляр указанного объекта.</param>
      <param name="mapItem">Элемент сопоставления, который требуется задать.</param>
    </member>
    <member name="M:System.Activities.DynamicUpdate.DynamicUpdateInfo.SetOriginalActivityBuilder(System.Object,System.Activities.ActivityBuilder)">
      <summary>Задает исходный построитель действий для <see cref="T:System.Activities.DynamicUpdate.DynamicUpdateInfo" />.</summary>
      <param name="instance">Экземпляр указанного объекта.</param>
      <param name="originalActivityBuilder">Задаваемый исходный построитель действий.</param>
    </member>
    <member name="M:System.Activities.DynamicUpdate.DynamicUpdateInfo.SetOriginalDefinition(System.Object,System.Activities.Activity)">
      <summary>Задает исходное определение для <see cref="T:System.Activities.DynamicUpdate.DynamicUpdateInfo" />.</summary>
      <param name="instance">Экземпляр указанного объекта.</param>
      <param name="originalDefinition">Задаваемое исходное определение.</param>
    </member>
    <member name="T:System.Activities.DynamicUpdate.DynamicUpdateMap">
      <summary>Указывает параметры для карты динамического обновления.</summary>
    </member>
    <member name="M:System.Activities.DynamicUpdate.DynamicUpdateMap.CalculateImplementationMapItems(System.Activities.Activity)">
      <summary>Вычисляет элементы карты, используемые в реализации <see cref="T:System.Activities.DynamicUpdate.DynamicUpdateMap" /> с указанным определением действия.</summary>
      <param name="activityDefinitionToBeUpdated">Определение действия, которое требуется обновить.</param>
      <returns>Вычисляемые элементы сопоставления.</returns>
    </member>
    <member name="M:System.Activities.DynamicUpdate.DynamicUpdateMap.CalculateImplementationMapItems(System.Activities.Activity,System.Activities.LocationReferenceEnvironment)">
      <summary>Вычисляет элементы карты, используемые в реализации <see cref="T:System.Activities.DynamicUpdate.DynamicUpdateMap" /> с указанным определением действия и средой.</summary>
      <param name="activityDefinitionToBeUpdated">Определение действия, которое требуется обновить.</param>
      <param name="environment">Среда.</param>
      <returns>Вычисляемые элементы сопоставления.</returns>
    </member>
    <member name="M:System.Activities.DynamicUpdate.DynamicUpdateMap.CalculateMapItems(System.Activities.Activity)">
      <summary>Вычисляет элементы карты, используемые в <see cref="T:System.Activities.DynamicUpdate.DynamicUpdateMap" /> с указанным определением рабочего процесса.</summary>
      <param name="workflowDefinitionToBeUpdated">Определение действия, которое требуется обновить.</param>
      <returns>Вычисляемые элементы сопоставления.</returns>
    </member>
    <member name="M:System.Activities.DynamicUpdate.DynamicUpdateMap.CalculateMapItems(System.Activities.Activity,System.Activities.LocationReferenceEnvironment)">
      <summary>Вычисляет элементы карты, используемые в <see cref="T:System.Activities.DynamicUpdate.DynamicUpdateMap" /> с указанным определением рабочего процесса и средой.</summary>
      <param name="workflowDefinitionToBeUpdated">Определение действия, которое требуется обновить.</param>
      <param name="environment">Среда.</param>
      <returns>Вычисляемые элементы сопоставления.</returns>
    </member>
    <member name="M:System.Activities.DynamicUpdate.DynamicUpdateMap.Merge(System.Activities.DynamicUpdate.DynamicUpdateMap[])">
      <summary>Объединяет сопоставление динамического обновления.</summary>
      <param name="maps">Коллекция сопоставлений для объединения.</param>
      <returns>Объединенное сопоставление динамического обновления.</returns>
    </member>
    <member name="M:System.Activities.DynamicUpdate.DynamicUpdateMap.Merge(System.Collections.Generic.IEnumerable{System.Activities.DynamicUpdate.DynamicUpdateMap})">
      <summary>Объединяет сопоставление динамического обновления.</summary>
      <param name="maps">Сопоставления для слияния.</param>
      <returns>Объединенное сопоставление динамического обновления.</returns>
    </member>
    <member name="P:System.Activities.DynamicUpdate.DynamicUpdateMap.NoChanges">
      <summary>Получает сопоставление динамического обновления без изменений.</summary>
      <returns>Сопоставление динамического обновления без изменений.</returns>
    </member>
    <member name="M:System.Activities.DynamicUpdate.DynamicUpdateMap.Query(System.Activities.Activity,System.Activities.Activity)">
      <summary>Отображает запрос сопоставления динамического обновления.</summary>
      <param name="updatedWorkflowDefinition">Обновленные сведения рабочего процесса.</param>
      <param name="originalWorkflowDefinition">Исходное определение рабочего процесса.</param>
      <returns>Запрос сопоставления динамического обновления.</returns>
    </member>
    <member name="T:System.Activities.DynamicUpdate.DynamicUpdateMapBuilder">
      <summary>Представляет построитель сопоставления динамического обновления.</summary>
    </member>
    <member name="M:System.Activities.DynamicUpdate.DynamicUpdateMapBuilder.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.DynamicUpdate.DynamicUpdateMapBuilder" />.</summary>
    </member>
    <member name="M:System.Activities.DynamicUpdate.DynamicUpdateMapBuilder.CreateMap">
      <summary>Создает сопоставление для объекта <see cref="T:System.Activities.DynamicUpdate.DynamicUpdateMapBuilder" />.</summary>
      <returns>Созданное сопоставление.</returns>
    </member>
    <member name="M:System.Activities.DynamicUpdate.DynamicUpdateMapBuilder.CreateMap(System.Collections.Generic.IList{System.Activities.DynamicUpdate.ActivityBlockingUpdate}@)">
      <summary>Создает сопоставление для <see cref="T:System.Activities.DynamicUpdate.DynamicUpdateMapBuilder" /> с указанными действиями, блокирующими обновление.</summary>
      <param name="activitiesBlockingUpdate">Действия, блокирующие обновление.</param>
      <returns>Созданное сопоставление.</returns>
    </member>
    <member name="P:System.Activities.DynamicUpdate.DynamicUpdateMapBuilder.DisallowUpdateInside">
      <summary>Получает запрет выполнять обновление внутри для <see cref="T:System.Activities.DynamicUpdate.DynamicUpdateMapBuilder" />.</summary>
      <returns>Запрет обновления внутри.</returns>
    </member>
    <member name="P:System.Activities.DynamicUpdate.DynamicUpdateMapBuilder.ForImplementation">
      <summary>Получает или задает значение, указывающее, предназначен ли <see cref="T:System.Activities.DynamicUpdate.DynamicUpdateMapBuilder" /> для реализации.</summary>
      <returns>Значение <see langword="true" />, если объект <see cref="T:System.Activities.DynamicUpdate.DynamicUpdateMapBuilder" /> предназначен для реализации; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Activities.DynamicUpdate.DynamicUpdateMapBuilder.LookupImplementationMap">
      <summary>Получает или задает карту реализации поиска для <see cref="T:System.Activities.DynamicUpdate.DynamicUpdateMapBuilder" />.</summary>
      <returns>Сопоставление реализации поиска.</returns>
    </member>
    <member name="P:System.Activities.DynamicUpdate.DynamicUpdateMapBuilder.LookupMapItem">
      <summary>Получает или задает элемент карты поиска для <see cref="T:System.Activities.DynamicUpdate.DynamicUpdateMapBuilder" />.</summary>
      <returns>Элемент карты поиска.</returns>
    </member>
    <member name="P:System.Activities.DynamicUpdate.DynamicUpdateMapBuilder.OriginalEnvironment">
      <summary>Получает или задает среду, на которое ссылается расположение для <see cref="T:System.Activities.DynamicUpdate.DynamicUpdateMapBuilder" />.</summary>
      <returns>Среда ссылок на расположение.</returns>
    </member>
    <member name="P:System.Activities.DynamicUpdate.DynamicUpdateMapBuilder.OriginalWorkflowDefinition">
      <summary>Получает или задает исходное определение рабочего процесса.</summary>
      <returns>Исходное определение рабочего процесса.</returns>
    </member>
    <member name="P:System.Activities.DynamicUpdate.DynamicUpdateMapBuilder.UpdatedEnvironment">
      <summary>Получает или задает обновленную среду для <see cref="T:System.Activities.DynamicUpdate.DynamicUpdateMapBuilder" />.</summary>
      <returns>Обновленная среда.</returns>
    </member>
    <member name="P:System.Activities.DynamicUpdate.DynamicUpdateMapBuilder.UpdatedWorkflowDefinition">
      <summary>Получает или задает обновленное определение рабочего процесса для <see cref="T:System.Activities.DynamicUpdate.DynamicUpdateMapBuilder" />.</summary>
      <returns>Обновленное определение рабочего процесса.</returns>
    </member>
    <member name="T:System.Activities.DynamicUpdate.DynamicUpdateMapItem">
      <summary>Представляет один элемент сопоставления, содержащийся в сопоставлении динамического обновления.</summary>
    </member>
    <member name="T:System.Activities.DynamicUpdate.DynamicUpdateMapQuery">
      <summary>Представляет запрос сопоставления динамического обновления.</summary>
    </member>
    <member name="M:System.Activities.DynamicUpdate.DynamicUpdateMapQuery.CanApplyUpdateWhileRunning(System.Activities.Activity)">
      <summary>Указывает, может ли <see cref="T:System.Activities.DynamicUpdate.DynamicUpdateMapQuery" /> обновляться во время выполнения.</summary>
      <param name="activity">Текущее действие.</param>
      <returns>Значение <see langword="true" />, если объект <see cref="T:System.Activities.DynamicUpdate.DynamicUpdateMapQuery" /> может обновляться во время выполнения; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Activities.DynamicUpdate.DynamicUpdateMapQuery.FindMatch(System.Activities.Activity)">
      <summary>Поиск совпадения с <see cref="T:System.Activities.DynamicUpdate.DynamicUpdateMapQuery" /> с использованием заданных действий.</summary>
      <param name="activity">Действие для поиска совпадения.</param>
      <returns>Совпадение для действия.</returns>
    </member>
    <member name="M:System.Activities.DynamicUpdate.DynamicUpdateMapQuery.FindMatch(System.Activities.Variable)">
      <summary>Поиск совпадения с <see cref="T:System.Activities.DynamicUpdate.DynamicUpdateMapQuery" /> с использованием заданной переменной.</summary>
      <param name="variable">Переменная для поиска совпадения.</param>
      <returns>Соответствие для переменной.</returns>
    </member>
    <member name="T:System.Activities.DynamicUpdate.DynamicUpdateServices">
      <summary>Представляет службы динамического обновления.</summary>
    </member>
    <member name="M:System.Activities.DynamicUpdate.DynamicUpdateServices.CreateUpdateMap(System.Activities.Activity)">
      <summary>Создает сопоставление операции обновления с указанным определением рабочего процесса.</summary>
      <param name="updatedWorkflowDefinition">Обновленное определение рабочего процесса.</param>
      <returns>Созданное сопоставление обновления.</returns>
    </member>
    <member name="M:System.Activities.DynamicUpdate.DynamicUpdateServices.CreateUpdateMap(System.Activities.Activity,System.Collections.Generic.IEnumerable{System.Activities.Activity})">
      <summary>Создает сопоставление обновления с указанным определением рабочего процесса и списком, запрещающим выполнять обновление внутри действий.</summary>
      <param name="updatedWorkflowDefinition">Обновленное определение рабочего процесса.</param>
      <param name="disallowUpdateInsideActivities">Список действий.</param>
      <returns>Созданное сопоставление обновления.</returns>
    </member>
    <member name="M:System.Activities.DynamicUpdate.DynamicUpdateServices.CreateUpdateMap(System.Activities.Activity,System.Collections.Generic.IEnumerable{System.Activities.Activity},System.Collections.Generic.IList{System.Activities.DynamicUpdate.ActivityBlockingUpdate}@)">
      <summary>Создает сопоставление обновления с указанным определением рабочего процесса и списком, запрещающим выполнять обновление внутри действий и блокирующих обновлений.</summary>
      <param name="updatedWorkflowDefinition">Обновленное определение рабочего процесса.</param>
      <param name="disallowUpdateInsideActivities">Список действий.</param>
      <param name="activitiesBlockingUpdate">Список блокирующего обновления.</param>
      <returns>Созданное сопоставление обновления.</returns>
    </member>
    <member name="M:System.Activities.DynamicUpdate.DynamicUpdateServices.CreateUpdateMap(System.Activities.ActivityBuilder)">
      <summary>Создает сопоставление операции обновления с указанным определением действия.</summary>
      <param name="updatedActivityDefinition">Обновленное определение действия.</param>
      <returns>Созданное сопоставление обновления.</returns>
    </member>
    <member name="M:System.Activities.DynamicUpdate.DynamicUpdateServices.CreateUpdateMap(System.Activities.ActivityBuilder,System.Collections.Generic.IEnumerable{System.Activities.Activity})">
      <summary>Создает сопоставление обновления с указанным определением действия и списком, запрещающим выполнять обновление внутри действий.</summary>
      <param name="updatedActivityDefinition">Обновленное определение действия.</param>
      <param name="disallowUpdateInsideActivities">Список действий.</param>
      <returns>Созданное сопоставление обновления.</returns>
    </member>
    <member name="M:System.Activities.DynamicUpdate.DynamicUpdateServices.CreateUpdateMap(System.Activities.ActivityBuilder,System.Collections.Generic.IEnumerable{System.Activities.Activity},System.Collections.Generic.IList{System.Activities.DynamicUpdate.ActivityBlockingUpdate}@)">
      <summary>Создает сопоставление обновления с указанным определением действия и списком, запрещающим выполнять обновление внутри действий и блокирующих обновлений.</summary>
      <param name="updatedActivityDefinition">Обновленное определение действия.</param>
      <param name="disallowUpdateInsideActivities">Список действий.</param>
      <param name="activitiesBlockingUpdate">Список блокирующего обновления.</param>
      <returns>Созданное сопоставление обновления.</returns>
    </member>
    <member name="M:System.Activities.DynamicUpdate.DynamicUpdateServices.GetImplementationMap(System.Activities.Activity)">
      <summary>Получает карту реализации для <see cref="T:System.Activities.DynamicUpdate.DynamicUpdateServices" />.</summary>
      <param name="targetActivity">Целевое действие.</param>
      <returns>Извлеченное сопоставление реализации.</returns>
    </member>
    <member name="M:System.Activities.DynamicUpdate.DynamicUpdateServices.PrepareForUpdate(System.Activities.Activity)">
      <summary>Подготавливает определение рабочего процесса, которое требуется обновить.</summary>
      <param name="workflowDefinitionToBeUpdated">Обновляемый рабочий процесс.</param>
    </member>
    <member name="M:System.Activities.DynamicUpdate.DynamicUpdateServices.PrepareForUpdate(System.Activities.ActivityBuilder)">
      <summary>Подготавливает определение рабочего процесса, которое требуется обновить.</summary>
      <param name="activityDefinitionToBeUpdated">Подлежащее обновлению действие.</param>
    </member>
    <member name="M:System.Activities.DynamicUpdate.DynamicUpdateServices.SetImplementationMap(System.Activities.Activity,System.Activities.DynamicUpdate.DynamicUpdateMap)">
      <summary>Задает карту реализации для <see cref="T:System.Activities.DynamicUpdate.DynamicUpdateServices" />.</summary>
      <param name="targetActivity">Целевое действие.</param>
      <param name="implementationMap">Сопоставление реализации набора.</param>
    </member>
    <member name="T:System.Activities.DynamicUpdate.InstanceUpdateException">
      <summary>Представляет исключение обновления экземпляра.</summary>
    </member>
    <member name="M:System.Activities.DynamicUpdate.InstanceUpdateException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.DynamicUpdate.InstanceUpdateException" />.</summary>
    </member>
    <member name="M:System.Activities.DynamicUpdate.InstanceUpdateException.#ctor(System.Collections.Generic.IList{System.Activities.DynamicUpdate.ActivityBlockingUpdate})">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.DynamicUpdate.InstanceUpdateException" /> с указанными действиями блокировки.</summary>
      <param name="blockingActivities">Действия, которые требуется блокировать в данном экземпляре.</param>
    </member>
    <member name="M:System.Activities.DynamicUpdate.InstanceUpdateException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.DynamicUpdate.InstanceUpdateException" /> с сериализованными данными.</summary>
      <param name="info">Объект, содержащий сериализованные данные объекта.</param>
      <param name="context">Контекстные сведения об источнике или назначении.</param>
    </member>
    <member name="M:System.Activities.DynamicUpdate.InstanceUpdateException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.DynamicUpdate.InstanceUpdateException" /> указанным сообщением.</summary>
      <param name="message">Сообщение, описывающее ошибку.</param>
    </member>
    <member name="M:System.Activities.DynamicUpdate.InstanceUpdateException.#ctor(System.String,System.Collections.Generic.IList{System.Activities.DynamicUpdate.ActivityBlockingUpdate})">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.DynamicUpdate.InstanceUpdateException" /> с указанным сообщением и действиями блокировки.</summary>
      <param name="message">Сообщение об ошибке, указывающее причину создания исключения.</param>
      <param name="blockingActivities">Действия, которые требуется блокировать в данном экземпляре.</param>
    </member>
    <member name="M:System.Activities.DynamicUpdate.InstanceUpdateException.#ctor(System.String,System.Collections.Generic.IList{System.Activities.DynamicUpdate.ActivityBlockingUpdate},System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.DynamicUpdate.InstanceUpdateException" />.</summary>
      <param name="message">Сообщение об ошибке, указывающее причину создания исключения.</param>
      <param name="blockingActivities">Действия, которые требуется блокировать в данном экземпляре.</param>
      <param name="innerException">Исключение, которое является причиной текущего исключения.</param>
    </member>
    <member name="M:System.Activities.DynamicUpdate.InstanceUpdateException.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.DynamicUpdate.InstanceUpdateException" /> с указанным сообщением об ошибке и ссылкой на внутреннее исключение, которое стало причиной данного исключения.</summary>
      <param name="message">Сообщение об ошибке, указывающее причину создания исключения.</param>
      <param name="innerException">Исключение, которое является причиной текущего исключения.</param>
    </member>
    <member name="P:System.Activities.DynamicUpdate.InstanceUpdateException.BlockingActivities">
      <summary>Получает коллекцию блокирующих действий для экземпляра.</summary>
      <returns>Коллекция блокирующих действий для экземпляра.</returns>
    </member>
    <member name="M:System.Activities.DynamicUpdate.InstanceUpdateException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Задает в объекте SerializationInfo дополнительные сведения об исключениях.</summary>
      <param name="info">Объект, содержащий сериализованные данные объекта.</param>
      <param name="context">Контекстные сведения об источнике или назначении.</param>
    </member>
    <member name="T:System.Activities.DynamicUpdate.NativeActivityUpdateContext">
      <summary>Представляет контекст обновления встроенных действий.</summary>
    </member>
    <member name="P:System.Activities.DynamicUpdate.NativeActivityUpdateContext.ActivityInstanceId">
      <summary>Возвращает уникальный идентификатор выполняющегося в данный момент экземпляра действия.</summary>
      <returns>Уникальный идентификатор выполняющегося в данный момент экземпляра действия.</returns>
    </member>
    <member name="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.CreateBookmark">
      <summary>Создает точку, в которой NativeActivity может пассивно ожидать возобновления.</summary>
      <returns>Закладка.</returns>
    </member>
    <member name="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.CreateBookmark(System.Activities.BookmarkCallback)">
      <summary>Создает точку, в которой NativeActivity может пассивно ожидать возобновления, и планирует указанный метод для выполнения после уведомления о завершении операции возобновления.</summary>
      <param name="callback">Метод, вызываемый при поступлении уведомления, сигнализирующего о возобновлении действия NativeActivity.</param>
      <returns>Метод обратного вызова</returns>
    </member>
    <member name="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.CreateBookmark(System.Activities.BookmarkCallback,System.Activities.BookmarkOptions)">
      <summary>Создает точку, в которой действие NativeActivity может пассивно ожидать возобновления, с указанным методом, выполняемым после уведомления о завершении операции возобновления, и с указанным параметром, который управляет использованием закладки в ходе выполнения текущего действия NativeActivity.</summary>
      <param name="callback">Метод, вызываемый при поступлении уведомления, сигнализирующего о возобновлении действия NativeActivity.</param>
      <param name="options">Перечисляемый параметр, который управляет работой закладки по отношению к другим потокам в ходе выполнения текущего объекта NativeActivity.</param>
      <returns>Закладка, которая включает метод обратного вызова и параметр выполнения закладки.</returns>
    </member>
    <member name="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.CreateBookmark(System.String)">
      <summary>Создает точку с указанным именем, в которой NativeActivity может пассивно ожидать возобновления.</summary>
      <param name="name">Имя закладки.</param>
      <returns>Закладка, включающая имя закладки.</returns>
    </member>
    <member name="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.CreateBookmark(System.String,System.Activities.BookmarkCallback)">
      <summary>Создает точку, в которой действие NativeActivity может пассивно ожидать возобновления, с указанным именем и с указанным методом для выполнения после уведомления о завершении операции возобновления.</summary>
      <param name="name">Имя закладки.</param>
      <param name="callback">Метод, вызываемый при поступлении уведомления, сигнализирующего о возобновлении действия NativeActivity.</param>
      <returns>Закладка, которая включает имя закладки и метод обратного вызова.</returns>
    </member>
    <member name="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.CreateBookmark(System.String,System.Activities.BookmarkCallback,System.Activities.BookmarkOptions)">
      <summary>Создает точку, в которой действие NativeActivity может пассивно ожидать возобновления, с указанным именем, указанным методом, выполняемым после уведомления о завершении операции возобновления, и с указанным параметром, который управляет использованием закладки в ходе выполнения текущего действия NativeActivity.</summary>
      <param name="name">Имя закладки.</param>
      <param name="callback">Метод, вызываемый при поступлении уведомления, сигнализирующего о возобновлении действия NativeActivity.</param>
      <param name="options">Параметры закладки, управляющие использованием закладки во время выполнения текущего NativeActivity.</param>
      <returns>Закладка, которая включает имя закладки, метод обратного вызова и параметр выполнения закладки.</returns>
    </member>
    <member name="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.CreateBookmark(System.String,System.Activities.BookmarkCallback,System.Activities.BookmarkScope)">
      <summary>Создает точку, в которой действие NativeActivity может пассивно ожидать возобновления, с указанным именем, с указанным методом для выполнения после уведомления о завершении операции возобновления и с указанной областью закладки.</summary>
      <param name="name">Имя закладки.</param>
      <param name="callback">Метод, вызываемый при поступлении уведомления, сигнализирующего о возобновлении действия NativeActivity.</param>
      <param name="scope">Идентификатор, применяемый к группе закладок, работающих под одним протоколом во время выполнения рабочего процесса.</param>
      <returns>Закладка, которая включает имя закладки, метод обратного вызова и область закладки.</returns>
    </member>
    <member name="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.CreateBookmark(System.String,System.Activities.BookmarkCallback,System.Activities.BookmarkScope,System.Activities.BookmarkOptions)">
      <summary>Создает точку, в которой действие NativeActivity может пассивно ожидать возобновления, с указанным именем, указанным методом, выполняемым после уведомления о завершении операции возобновления, с указанной областью закладки и указанным параметром, который управляет использованием закладки в ходе выполнения текущего действия NativeActivity.</summary>
      <param name="name">Имя закладки.</param>
      <param name="callback">Метод, вызываемый при поступлении уведомления, сигнализирующего о возобновлении действия NativeActivity.</param>
      <param name="scope">Идентификатор, применяемый к группе закладок, работающих под одним протоколом во время выполнения рабочего процесса.</param>
      <param name="options">Параметры закладки, управляющие использованием закладки во время выполнения текущего NativeActivity.</param>
      <returns>Закладка, которая включает имя закладки, метод обратного вызова, область закладки и параметр выполнения закладки.</returns>
    </member>
    <member name="P:System.Activities.DynamicUpdate.NativeActivityUpdateContext.DefaultBookmarkScope">
      <summary>Возвращает область закладки, связанную с корневым элементом рабочего процесса.</summary>
      <returns>Область закладки, связанная с корневым элементом рабочего процесса.</returns>
    </member>
    <member name="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.DisallowUpdate(System.String)">
      <summary>Запрещает обновление <see cref="T:System.Activities.DynamicUpdate.NativeActivityUpdateContext" />.</summary>
      <param name="reason">Причина запрещения контекста.</param>
    </member>
    <member name="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.FindExecutionProperty(System.String)">
      <summary>Находит свойство выполнения рабочего процесса с указанным именем.</summary>
      <param name="name">Имя свойства выполнения рабочего процесса.</param>
      <returns>Свойство выполнения рабочего процесса с указанным именем.</returns>
    </member>
    <member name="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.GetLocation``1(System.Activities.Variable)">
      <summary>Возвращает Типизированное расположение для заданного указанного по ссылке расположения.</summary>
      <param name="variable">Переменная из расположения.</param>
      <typeparam name="T">Тип возвращаемого расположения.</typeparam>
      <returns>Типизированное расположение для заданного указанного по ссылке расположения.</returns>
    </member>
    <member name="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.GetSavedOriginalValue(System.Activities.Activity)">
      <summary>Указывает объект для сохранения исходного значения для текущей активности.</summary>
      <param name="childActivity">Дочернее действие.</param>
      <returns>Объект для сохранения исходного значения для текущего действия.</returns>
    </member>
    <member name="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.GetSavedOriginalValue(System.String)">
      <summary>Указывает объект для сохранения исходного значения для текущей активности.</summary>
      <param name="propertyName">Имя свойства.</param>
      <returns>Объект для сохранения исходного значения для текущего действия.</returns>
    </member>
    <member name="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.GetValue(System.Activities.Argument)">
      <summary>Получает значение указанного Argument.</summary>
      <param name="argument">Аргумент для проверки.</param>
      <returns>Значение указанного аргумента.</returns>
    </member>
    <member name="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.GetValue(System.Activities.RuntimeArgument)">
      <summary>Получает значение указанного RuntimeArgument.</summary>
      <param name="runtimeArgument">Аргумент для проверки.</param>
      <returns>Значение указанного RuntimeArgument.</returns>
    </member>
    <member name="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.GetValue(System.Activities.Variable)">
      <summary>Получает значение указанной переменной в текущем экземпляре NativeActivity.</summary>
      <param name="variable">Переменная, значение которой получается во время выполнения текущего экземпляра NativeActivity.</param>
      <returns>Значение указанной переменной в текущем экземпляре NativeActivity.</returns>
    </member>
    <member name="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.GetValue``1(System.Activities.Variable{``0})">
      <summary>Возвращает значение указанной универсальной переменной в текущем экземпляре NativeActivity.</summary>
      <param name="variable">Универсальная переменная, значение которой получается во время выполнения текущего экземпляра NativeActivity.</param>
      <typeparam name="T">Тип переменной, значение которой получается.</typeparam>
      <returns>Значение указанной универсальной переменной в текущем экземпляре NativeActivity.</returns>
    </member>
    <member name="P:System.Activities.DynamicUpdate.NativeActivityUpdateContext.IsCancellationRequested">
      <summary>Получает или задает значение, которое показывает, запрошена ли отмена экземпляра NativeActivity, выполняющегося в данный момент.</summary>
      <returns>Значение <see langword="true" />, если запрошена отмена экземпляра NativeActivity, выполняющегося в данный момент; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.IsNewlyAdded(System.Activities.Activity)">
      <summary>Инициализирует <see cref="T:System.Activities.DynamicUpdate.NativeActivityUpdateContext" /> значением, указывающим, является ли он вновь добавленным.</summary>
      <param name="childActivity">Дочернее действие.</param>
      <returns>Значение <see langword="true" />, если объект <see cref="T:System.Activities.DynamicUpdate.NativeActivityUpdateContext" /> только что добавлен; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.RemoveAllBookmarks">
      <summary>Удаляет все закладки, связанные с экземпляром NativeActivity, выполняющимся в данный момент.</summary>
    </member>
    <member name="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.RemoveBookmark(System.Activities.Bookmark)">
      <summary>Удаляет указанную закладку из выполняемого в настоящий момент экземпляра NativeActivity.</summary>
      <param name="bookmark">Точка, в которой экземпляр NativeActivity может пассивно ожидать возобновления.</param>
      <returns>Значение <see langword="true" />, если указанная закладка была удалена из выполняемого в настоящий момент экземпляра NativeActivity; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.RemoveBookmark(System.String)">
      <summary>Удаляет закладку с указанным именем.</summary>
      <param name="name">Имя закладки.</param>
      <returns>Значение <see langword="true" />, если закладка с указанным именем удалена; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.RemoveBookmark(System.String,System.Activities.BookmarkScope)">
      <summary>Удаляет закладку с указанным именем и указанной областью закладки.</summary>
      <param name="name">Имя закладки.</param>
      <param name="scope">Уникальный идентификатор GUID для группы объектов Bookmark, которые работают по одному протоколу.</param>
      <returns>Значение <see langword="true" />, если закладка с указанным именем и указанная область закладки были удалены; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.ScheduleAction(System.Activities.ActivityAction,System.Activities.CompletionCallback,System.Activities.FaultCallback)">
      <summary>Планирует выполнение указанного ActivityAction, не имеющего параметров, и создает закладки в указанных расположениях обратного вызова, где родительский процесс возобновляется после завершения ActivityAction.</summary>
      <param name="activityAction">Действие, выполняемое при возникновении определенного события в родительском действии.</param>
      <param name="onCompleted">Закладка, показывающая, откуда по завершении действия ActivityAction будет возобновлено выполнение родительского действия.</param>
      <param name="onFaulted">Закладка, которая показывает, откуда в случае завершения ActivityAction по ошибке будет возобновлено выполнение родительского действия.</param>
    </member>
    <member name="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.ScheduleAction``1(System.Activities.ActivityAction{``0},``0,System.Activities.CompletionCallback,System.Activities.FaultCallback)">
      <summary>Планирует выполнение указанного действия ActivityAction&lt;T&gt; с одним параметром для входного аргумента и создает закладки для указанных расположений обратного вызова, где родительский процесс возобновляется после завершения ActivityAction&lt;T&gt;.</summary>
      <param name="activityAction">Действие, выполняемое при возникновении определенного события в родительском действии.</param>
      <param name="argument">Аргумент, передающий данные в действие.</param>
      <param name="onCompleted">Закладка, показывающая, откуда по завершении действия ActivityAction&lt;T&gt; будет возобновлено выполнение родительского действия.</param>
      <param name="onFaulted">Закладка, которая показывает, откуда в случае завершения действия ActivityAction&lt;T&gt; из-за ошибки будет возобновлено выполнение родительского действия.</param>
      <typeparam name="T">Данные, передаваемые в действие.</typeparam>
    </member>
    <member name="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.ScheduleAction``10(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,System.Activities.CompletionCallback,System.Activities.FaultCallback)">
      <summary>Планирует выполнение указанного действия ActivityAction&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10&gt; с десятью параметрами для входных аргументов и создает закладки для указанных расположений обратного вызова, где родительский процесс возобновляется после завершения ActivityAction&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10&gt;.</summary>
      <param name="activityAction">Действие, выполняемое при возникновении определенного события в родительском действии.</param>
      <param name="argument1">Аргумент, передающий данные в действие.</param>
      <param name="argument2">Аргумент, передающий данные в действие.</param>
      <param name="argument3">Аргумент, передающий данные в действие.</param>
      <param name="argument4">Аргумент, передающий данные в действие.</param>
      <param name="argument5">Аргумент, передающий данные в действие.</param>
      <param name="argument6">Аргумент, передающий данные в действие.</param>
      <param name="argument7">Аргумент, передающий данные в действие.</param>
      <param name="argument8">Аргумент, передающий данные в действие.</param>
      <param name="argument9">Аргумент, передающий данные в действие.</param>
      <param name="argument10">Аргумент, передающий данные в действие.</param>
      <param name="onCompleted">Закладка, показывающая, откуда по завершении действия ActivityAction&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10&gt; будет возобновлено выполнение родительского действия.</param>
      <param name="onFaulted">Закладка, которая показывает, откуда в случае завершения действия ActivityAction&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10&gt; из-за ошибки будет возобновлено выполнение родительского действия.</param>
      <typeparam name="T1">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T2">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T3">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T4">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T5">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T6">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T7">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T8">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T9">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T10">Данные, передаваемые в действие.</typeparam>
    </member>
    <member name="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.ScheduleAction``11(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,System.Activities.CompletionCallback,System.Activities.FaultCallback)">
      <summary>Планирует выполнение указанного действия ActivityAction&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11&gt; с одиннадцатью параметрами для входных аргументов и создает закладки для указанных расположений обратного вызова, где родительский процесс возобновляется после завершения ActivityAction&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11&gt;.</summary>
      <param name="activityAction">Действие, выполняемое при возникновении определенного события в родительском действии.</param>
      <param name="argument1">Аргумент, передающий данные в действие.</param>
      <param name="argument2">Аргумент, передающий данные в действие.</param>
      <param name="argument3">Аргумент, передающий данные в действие.</param>
      <param name="argument4">Аргумент, передающий данные в действие.</param>
      <param name="argument5">Аргумент, передающий данные в действие.</param>
      <param name="argument6">Аргумент, передающий данные в действие.</param>
      <param name="argument7">Аргумент, передающий данные в действие.</param>
      <param name="argument8">Аргумент, передающий данные в действие.</param>
      <param name="argument9">Аргумент, передающий данные в действие.</param>
      <param name="argument10">Аргумент, передающий данные в действие.</param>
      <param name="argument11">Аргумент, передающий данные в действие.</param>
      <param name="onCompleted">Закладка, показывающая, откуда по завершении действия ActivityAction&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11&gt; будет возобновлено выполнение родительского действия.</param>
      <param name="onFaulted">Закладка, которая показывает, откуда в случае завершения действия ActivityAction&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11&gt; из-за ошибки будет возобновлено выполнение родительского действия.</param>
      <typeparam name="T1">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T2">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T3">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T4">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T5">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T6">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T7">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T8">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T9">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T10">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T11">Данные, передаваемые в действие.</typeparam>
    </member>
    <member name="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.ScheduleAction``12(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,System.Activities.CompletionCallback,System.Activities.FaultCallback)">
      <summary>Планирует выполнение указанного действия ActivityAction&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12&gt; с двенадцатью параметрами для входных аргументов и создает закладки для указанных расположений обратного вызова, где родительский процесс возобновляется после завершения ActivityAction&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12&gt;.</summary>
      <param name="activityAction">Действие, выполняемое при возникновении определенного события в родительском действии.</param>
      <param name="argument1">Аргумент, передающий данные в действие.</param>
      <param name="argument2">Аргумент, передающий данные в действие.</param>
      <param name="argument3">Аргумент, передающий данные в действие.</param>
      <param name="argument4">Аргумент, передающий данные в действие.</param>
      <param name="argument5">Аргумент, передающий данные в действие.</param>
      <param name="argument6">Аргумент, передающий данные в действие.</param>
      <param name="argument7">Аргумент, передающий данные в действие.</param>
      <param name="argument8">Аргумент, передающий данные в действие.</param>
      <param name="argument9">Аргумент, передающий данные в действие.</param>
      <param name="argument10">Аргумент, передающий данные в действие.</param>
      <param name="argument11">Аргумент, передающий данные в действие.</param>
      <param name="argument12">Аргумент, передающий данные в действие.</param>
      <param name="onCompleted">Закладка, показывающая, откуда по завершении действия ActivityAction&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12&gt; будет возобновлено выполнение родительского действия.</param>
      <param name="onFaulted">Закладка, которая показывает, откуда в случае завершения действия ActivityAction&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12&gt; из-за ошибки будет возобновлено выполнение родительского действия.</param>
      <typeparam name="T1">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T2">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T3">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T4">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T5">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T6">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T7">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T8">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T9">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T10">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T11">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T12">Данные, передаваемые в действие.</typeparam>
    </member>
    <member name="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.ScheduleAction``13(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,System.Activities.CompletionCallback,System.Activities.FaultCallback)">
      <summary>Планирует выполнение указанного действия ActivityAction&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13&gt; с тринадцатью параметрами для входных аргументов и создает закладки для указанных расположений обратного вызова, где родительский процесс возобновляется после завершения ActivityAction&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13&gt;.</summary>
      <param name="activityAction">Действие, выполняемое при возникновении определенного события в родительском действии.</param>
      <param name="argument1">Аргумент, передающий данные в действие.</param>
      <param name="argument2">Аргумент, передающий данные в действие.</param>
      <param name="argument3">Аргумент, передающий данные в действие.</param>
      <param name="argument4">Аргумент, передающий данные в действие.</param>
      <param name="argument5">Аргумент, передающий данные в действие.</param>
      <param name="argument6">Аргумент, передающий данные в действие.</param>
      <param name="argument7">Аргумент, передающий данные в действие.</param>
      <param name="argument8">Аргумент, передающий данные в действие.</param>
      <param name="argument9">Аргумент, передающий данные в действие.</param>
      <param name="argument10">Аргумент, передающий данные в действие.</param>
      <param name="argument11">Аргумент, передающий данные в действие.</param>
      <param name="argument12">Аргумент, передающий данные в действие.</param>
      <param name="argument13">Аргумент, передающий данные в действие.</param>
      <param name="onCompleted">Закладка, показывающая, откуда по завершении действия ActivityAction&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13&gt; будет возобновлено выполнение родительского действия.</param>
      <param name="onFaulted">Закладка, которая показывает, откуда в случае завершения действия ActivityAction&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13&gt; из-за ошибки будет возобновлено выполнение родительского действия.</param>
      <typeparam name="T1">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T2">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T3">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T4">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T5">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T6">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T7">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T8">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T9">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T10">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T11">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T12">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T13">Данные, передаваемые в действие.</typeparam>
    </member>
    <member name="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.ScheduleAction``14(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,System.Activities.CompletionCallback,System.Activities.FaultCallback)">
      <summary>Планирует выполнение указанного действия ActivityAction&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14&gt; с четырнадцатью параметрами для входных аргументов и создает закладки для указанных расположений обратного вызова, где родительский процесс возобновляется после завершения ActivityAction&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14&gt;.</summary>
      <param name="activityAction">Действие, выполняемое при возникновении определенного события в родительском действии.</param>
      <param name="argument1">Аргумент, передающий данные в действие.</param>
      <param name="argument2">Аргумент, передающий данные в действие.</param>
      <param name="argument3">Аргумент, передающий данные в действие.</param>
      <param name="argument4">Аргумент, передающий данные в действие.</param>
      <param name="argument5">Аргумент, передающий данные в действие.</param>
      <param name="argument6">Аргумент, передающий данные в действие.</param>
      <param name="argument7">Аргумент, передающий данные в действие.</param>
      <param name="argument8">Аргумент, передающий данные в действие.</param>
      <param name="argument9">Аргумент, передающий данные в действие.</param>
      <param name="argument10">Аргумент, передающий данные в действие.</param>
      <param name="argument11">Аргумент, передающий данные в действие.</param>
      <param name="argument12">Аргумент, передающий данные в действие.</param>
      <param name="argument13">Аргумент, передающий данные в действие.</param>
      <param name="argument14">Аргумент, передающий данные в действие.</param>
      <param name="onCompleted">Закладка, показывающая, откуда по завершении действия ActivityAction&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14&gt; будет возобновлено выполнение родительского действия.</param>
      <param name="onFaulted">Закладка, которая показывает, откуда в случае завершения действия ActivityAction&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14&gt; из-за ошибки будет возобновлено выполнение родительского действия.</param>
      <typeparam name="T1">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T2">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T3">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T4">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T5">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T6">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T7">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T8">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T9">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T10">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T11">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T12">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T13">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T14">Данные, передаваемые в действие.</typeparam>
    </member>
    <member name="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.ScheduleAction``15(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,System.Activities.CompletionCallback,System.Activities.FaultCallback)">
      <summary>Планирует выполнение указанного действия ActivityAction&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15&gt; с пятнадцатью параметрами для входных аргументов и создает закладки для указанных расположений обратного вызова, где родительский процесс возобновляется после завершения ActivityAction&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15&gt;.</summary>
      <param name="activityAction">Действие, выполняемое при возникновении определенного события в родительском действии.</param>
      <param name="argument1">Аргумент, передающий данные в действие.</param>
      <param name="argument2">Аргумент, передающий данные в действие.</param>
      <param name="argument3">Аргумент, передающий данные в действие.</param>
      <param name="argument4">Аргумент, передающий данные в действие.</param>
      <param name="argument5">Аргумент, передающий данные в действие.</param>
      <param name="argument6">Аргумент, передающий данные в действие.</param>
      <param name="argument7">Аргумент, передающий данные в действие.</param>
      <param name="argument8">Аргумент, передающий данные в действие.</param>
      <param name="argument9">Аргумент, передающий данные в действие.</param>
      <param name="argument10">Аргумент, передающий данные в действие.</param>
      <param name="argument11">Аргумент, передающий данные в действие.</param>
      <param name="argument12">Аргумент, передающий данные в действие.</param>
      <param name="argument13">Аргумент, передающий данные в действие.</param>
      <param name="argument14">Аргумент, передающий данные в действие.</param>
      <param name="argument15">Аргумент, передающий данные в действие.</param>
      <param name="onCompleted">Закладка, показывающая, откуда по завершении действия ActivityAction&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15&gt; будет возобновлено выполнение родительского действия.</param>
      <param name="onFaulted">Закладка, которая показывает, откуда в случае завершения действия ActivityAction&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15&gt; из-за ошибки будет возобновлено выполнение родительского действия.</param>
      <typeparam name="T1">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T2">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T3">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T4">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T5">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T6">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T7">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T8">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T9">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T10">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T11">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T12">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T13">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T14">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T15">Данные, передаваемые в действие.</typeparam>
    </member>
    <member name="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.ScheduleAction``16(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,System.Activities.CompletionCallback,System.Activities.FaultCallback)">
      <summary>Планирует выполнение указанного действия ActivityAction&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16&gt; с шестнадцатью параметрами для входных аргументов и создает закладки для указанных расположений обратного вызова, где родительский процесс возобновляется после завершения ActivityAction&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16&gt;.</summary>
      <param name="activityAction">Действие, выполняемое при возникновении определенного события в родительском действии.</param>
      <param name="argument1">Аргумент, передающий данные в действие.</param>
      <param name="argument2">Аргумент, передающий данные в действие.</param>
      <param name="argument3">Аргумент, передающий данные в действие.</param>
      <param name="argument4">Аргумент, передающий данные в действие.</param>
      <param name="argument5">Аргумент, передающий данные в действие.</param>
      <param name="argument6">Аргумент, передающий данные в действие.</param>
      <param name="argument7">Аргумент, передающий данные в действие.</param>
      <param name="argument8">Аргумент, передающий данные в действие.</param>
      <param name="argument9">Аргумент, передающий данные в действие.</param>
      <param name="argument10">Аргумент, передающий данные в действие.</param>
      <param name="argument11">Аргумент, передающий данные в действие.</param>
      <param name="argument12">Аргумент, передающий данные в действие.</param>
      <param name="argument13">Аргумент, передающий данные в действие.</param>
      <param name="argument14">Аргумент, передающий данные в действие.</param>
      <param name="argument15">Аргумент, передающий данные в действие.</param>
      <param name="argument16">Аргумент, передающий данные в действие.</param>
      <param name="onCompleted">Закладка, показывающая, откуда по завершении действия ActivityAction&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16&gt; будет возобновлено выполнение родительского действия.</param>
      <param name="onFaulted">Закладка, которая показывает, откуда в случае завершения действия ActivityAction&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16&gt; из-за ошибки будет возобновлено выполнение родительского действия.</param>
      <typeparam name="T1">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T2">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T3">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T4">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T5">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T6">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T7">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T8">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T9">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T10">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T11">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T12">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T13">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T14">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T15">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T16">Данные, передаваемые в действие.</typeparam>
    </member>
    <member name="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.ScheduleAction``2(System.Activities.ActivityAction{``0,``1},``0,``1,System.Activities.CompletionCallback,System.Activities.FaultCallback)">
      <summary>Планирует выполнение указанного действия ActivityAction&lt;T1, T2&gt; с двумя параметрами для входных аргументов и создает закладки для указанных расположений обратного вызова, где родительский процесс возобновляется после завершения ActivityAction&lt;T1, T2&gt;.</summary>
      <param name="activityAction">Действие, выполняемое при возникновении определенного события в родительском действии.</param>
      <param name="argument1">Аргумент, передающий данные в действие.</param>
      <param name="argument2">Аргумент, передающий данные в действие.</param>
      <param name="onCompleted">Закладка, показывающая, откуда по завершении действия ActivityAction&lt;T1, T2&gt; будет возобновлено выполнение родительского действия.</param>
      <param name="onFaulted">Закладка, которая показывает, откуда в случае завершения действия ActivityAction&lt;T1, T2&gt; из-за ошибки будет возобновлено выполнение родительского действия.</param>
      <typeparam name="T1">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T2">Данные, передаваемые в действие.</typeparam>
    </member>
    <member name="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.ScheduleAction``3(System.Activities.ActivityAction{``0,``1,``2},``0,``1,``2,System.Activities.CompletionCallback,System.Activities.FaultCallback)">
      <summary>Планирует выполнение указанного действия ActivityAction&lt;T1, T2, T3&gt; с тремя параметрами для входных аргументов и создает закладки для указанных расположений обратного вызова, где родительский процесс возобновляется после завершения ActivityAction&lt;T1, T2, T3&gt;.</summary>
      <param name="activityAction">Действие, выполняемое при возникновении определенного события в родительском действии.</param>
      <param name="argument1">Аргумент, передающий данные в действие.</param>
      <param name="argument2">Аргумент, передающий данные в действие.</param>
      <param name="argument3">Аргумент, передающий данные в действие.</param>
      <param name="onCompleted">Закладка, показывающая, откуда по завершении действия ActivityAction&lt;T1, T2, T3&gt; будет возобновлено выполнение родительского действия.</param>
      <param name="onFaulted">Закладка, которая показывает, откуда в случае завершения действия ActivityAction&lt;T1, T2, T3&gt; из-за ошибки будет возобновлено выполнение родительского действия.</param>
      <typeparam name="T1">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T2">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T3">Данные, передаваемые в действие.</typeparam>
    </member>
    <member name="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.ScheduleAction``4(System.Activities.ActivityAction{``0,``1,``2,``3},``0,``1,``2,``3,System.Activities.CompletionCallback,System.Activities.FaultCallback)">
      <summary>Планирует выполнение указанного действия ActivityAction&lt;T1, T2, T3, T4&gt; с четырьмя параметрами для входных аргументов и создает закладки для указанных расположений обратного вызова, где родительский процесс возобновляется после завершения ActivityAction&lt;T1, T2, T3, T4&gt;.</summary>
      <param name="activityAction">Действие, выполняемое при возникновении определенного события в родительском действии.</param>
      <param name="argument1">Аргумент, передающий данные в действие.</param>
      <param name="argument2">Аргумент, передающий данные в действие.</param>
      <param name="argument3">Аргумент, передающий данные в действие.</param>
      <param name="argument4">Аргумент, передающий данные в действие.</param>
      <param name="onCompleted">Закладка, показывающая, откуда по завершении действия ActivityAction&lt;T1, T2, T3, T4&gt; будет возобновлено выполнение родительского действия.</param>
      <param name="onFaulted">Закладка, которая показывает, откуда в случае завершения действия ActivityAction&lt;T1, T2, T3, T4&gt; из-за ошибки будет возобновлено выполнение родительского действия.</param>
      <typeparam name="T1">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T2">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T3">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T4">Данные, передаваемые в действие.</typeparam>
    </member>
    <member name="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.ScheduleAction``5(System.Activities.ActivityAction{``0,``1,``2,``3,``4},``0,``1,``2,``3,``4,System.Activities.CompletionCallback,System.Activities.FaultCallback)">
      <summary>Планирует выполнение указанного действия ActivityAction&lt;T1, T2, T3, T4, T5&gt; с пятью параметрами для входных аргументов и создает закладки для указанных расположений обратного вызова, где родительский процесс возобновляется после завершения ActivityAction&lt;T1, T2, T3, T4, T5&gt;.</summary>
      <param name="activityAction">Действие, выполняемое при возникновении определенного события в родительском действии.</param>
      <param name="argument1">Аргумент, передающий данные в действие.</param>
      <param name="argument2">Аргумент, передающий данные в действие.</param>
      <param name="argument3">Аргумент, передающий данные в действие.</param>
      <param name="argument4">Аргумент, передающий данные в действие.</param>
      <param name="argument5">Аргумент, передающий данные в действие.</param>
      <param name="onCompleted">Закладка, показывающая, откуда по завершении действия ActivityAction&lt;T1, T2, T3, T4, T5&gt; будет возобновлено выполнение родительского действия.</param>
      <param name="onFaulted">Закладка, которая показывает, откуда в случае завершения действия ActivityAction&lt;T1, T2, T3, T4, T5&gt; из-за ошибки будет возобновлено выполнение родительского действия.</param>
      <typeparam name="T1">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T2">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T3">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T4">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T5">Данные, передаваемые в действие.</typeparam>
    </member>
    <member name="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.ScheduleAction``6(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5},``0,``1,``2,``3,``4,``5,System.Activities.CompletionCallback,System.Activities.FaultCallback)">
      <summary>Планирует выполнение указанного действия ActivityAction&lt;T1, T2, T3, T4, T5, T6&gt; с шестью параметрами для входных аргументов и создает закладки для указанных расположений обратного вызова, где родительский процесс возобновляется после завершения ActivityAction&lt;T1, T2, T3, T4, T5, T6&gt;.</summary>
      <param name="activityAction">Действие, выполняемое при возникновении определенного события в родительском действии.</param>
      <param name="argument1">Аргумент, передающий данные в действие.</param>
      <param name="argument2">Аргумент, передающий данные в действие.</param>
      <param name="argument3">Аргумент, передающий данные в действие.</param>
      <param name="argument4">Аргумент, передающий данные в действие.</param>
      <param name="argument5">Аргумент, передающий данные в действие.</param>
      <param name="argument6">Аргумент, передающий данные в действие.</param>
      <param name="onCompleted">Закладка, показывающая, откуда по завершении действия ActivityAction&lt;T1, T2, T3, T4, T5, T6&gt; будет возобновлено выполнение родительского действия.</param>
      <param name="onFaulted">Закладка, которая показывает, откуда в случае завершения действия ActivityAction&lt;T1, T2, T3, T4, T5, T6&gt; из-за ошибки будет возобновлено выполнение родительского действия.</param>
      <typeparam name="T1">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T2">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T3">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T4">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T5">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T6">Данные, передаваемые в действие.</typeparam>
    </member>
    <member name="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.ScheduleAction``7(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6},``0,``1,``2,``3,``4,``5,``6,System.Activities.CompletionCallback,System.Activities.FaultCallback)">
      <summary>Планирует выполнение указанного действия ActivityAction&lt;T1, T2, T3, T4, T5, T6, T7&gt; с семью параметрами для входных аргументов и создает закладки для указанных расположений обратного вызова, где родительский процесс возобновляется после завершения ActivityAction&lt;T1, T2, T3, T4, T5, T6, T7&gt;.</summary>
      <param name="activityAction">Действие, выполняемое при возникновении определенного события в родительском действии.</param>
      <param name="argument1">Аргумент, передающий данные в действие.</param>
      <param name="argument2">Аргумент, передающий данные в действие.</param>
      <param name="argument3">Аргумент, передающий данные в действие.</param>
      <param name="argument4">Аргумент, передающий данные в действие.</param>
      <param name="argument5">Аргумент, передающий данные в действие.</param>
      <param name="argument6">Аргумент, передающий данные в действие.</param>
      <param name="argument7">Аргумент, передающий данные в действие.</param>
      <param name="onCompleted">Закладка, показывающая, откуда по завершении действия ActivityAction&lt;T1, T2, T3, T4, T5, T6, T7&gt; будет возобновлено выполнение родительского действия.</param>
      <param name="onFaulted">Закладка, которая показывает, откуда в случае завершения действия ActivityAction&lt;T1, T2, T3, T4, T5, T6, T7&gt; из-за ошибки будет возобновлено выполнение родительского действия.</param>
      <typeparam name="T1">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T2">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T3">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T4">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T5">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T6">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T7">Данные, передаваемые в действие.</typeparam>
    </member>
    <member name="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.ScheduleAction``8(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7},``0,``1,``2,``3,``4,``5,``6,``7,System.Activities.CompletionCallback,System.Activities.FaultCallback)">
      <summary>Планирует выполнение указанного действия ActivityAction&lt;T1, T2, T3, T4, T5, T6, T7, T8&gt; с восемью параметрами для входных аргументов и создает закладки для указанных расположений обратного вызова, где родительский процесс возобновляется после завершения ActivityAction&lt;T1, T2, T3, T4, T5, T6, T7, T8&gt;.</summary>
      <param name="activityAction">Действие, выполняемое при возникновении определенного события в родительском действии.</param>
      <param name="argument1">Аргумент, передающий данные в действие.</param>
      <param name="argument2">Аргумент, передающий данные в действие.</param>
      <param name="argument3">Аргумент, передающий данные в действие.</param>
      <param name="argument4">Аргумент, передающий данные в действие.</param>
      <param name="argument5">Аргумент, передающий данные в действие.</param>
      <param name="argument6">Аргумент, передающий данные в действие.</param>
      <param name="argument7">Аргумент, передающий данные в действие.</param>
      <param name="argument8">Аргумент, передающий данные в действие.</param>
      <param name="onCompleted">Закладка, показывающая, откуда по завершении действия ActivityAction&lt;T1, T2, T3, T4, T5, T6, T7, T8&gt; будет возобновлено выполнение родительского действия.</param>
      <param name="onFaulted">Закладка, которая показывает, откуда в случае завершения действия ActivityAction&lt;T1, T2, T3, T4, T5, T6, T7, T8&gt; из-за ошибки будет возобновлено выполнение родительского действия.</param>
      <typeparam name="T1">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T2">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T3">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T4">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T5">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T6">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T7">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T8">Данные, передаваемые в действие.</typeparam>
    </member>
    <member name="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.ScheduleAction``9(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8},``0,``1,``2,``3,``4,``5,``6,``7,``8,System.Activities.CompletionCallback,System.Activities.FaultCallback)">
      <summary>Планирует выполнение указанного действия ActivityAction&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9&gt; с девятью параметрами для входных аргументов и создает закладки для указанных расположений обратного вызова, где родительский процесс возобновляется после завершения ActivityAction&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9&gt;.</summary>
      <param name="activityAction">Действие, выполняемое при возникновении определенного события в родительском действии.</param>
      <param name="argument1">Аргумент, передающий данные в действие.</param>
      <param name="argument2">Аргумент, передающий данные в действие.</param>
      <param name="argument3">Аргумент, передающий данные в действие.</param>
      <param name="argument4">Аргумент, передающий данные в действие.</param>
      <param name="argument5">Аргумент, передающий данные в действие.</param>
      <param name="argument6">Аргумент, передающий данные в действие.</param>
      <param name="argument7">Аргумент, передающий данные в действие.</param>
      <param name="argument8">Аргумент, передающий данные в действие.</param>
      <param name="argument9">Аргумент, передающий данные в действие.</param>
      <param name="onCompleted">Закладка, показывающая, откуда по завершении действия ActivityAction&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9&gt; будет возобновлено выполнение родительского действия.</param>
      <param name="onFaulted">Закладка, которая показывает, откуда в случае завершения действия ActivityAction&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9&gt; из-за ошибки будет возобновлено выполнение родительского действия.</param>
      <typeparam name="T1">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T2">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T3">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T4">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T5">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T6">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T7">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T8">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T9">Данные, передаваемые в действие.</typeparam>
    </member>
    <member name="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.ScheduleActivity(System.Activities.Activity)">
      <summary>Планирует выполнение указанного дочернего действия NativeActivity.</summary>
      <param name="activity">Дочернее действие, запускаемое событием, которое возникает в процессе выполнения родительского действия NativeActivity.</param>
    </member>
    <member name="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.ScheduleActivity(System.Activities.Activity,System.Activities.CompletionCallback)">
      <summary>Планирует выполнение указанного дочернего действия NativeActivity с использованием указанного расположения обратного вызова, где родительский процесс возобновляется после завершения действия.</summary>
      <param name="activity">Дочернее действие, запускаемое событием, которое возникает в процессе выполнения родительского действия NativeActivity.</param>
      <param name="onCompleted">Закладка, показывающая, откуда по завершении действия ActivityAction будет возобновлено выполнение родительского действия.</param>
    </member>
    <member name="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.ScheduleActivity(System.Activities.Activity,System.Activities.CompletionCallback,System.Activities.FaultCallback)">
      <summary>Планирует выполнение указанного дочернего действия NativeActivity с использованием указанного расположения обратного вызова после сбоя, где родительский процесс возобновляется, когда действие переходит в состояние сбоя.</summary>
      <param name="activity">Дочернее действие, запускаемое событием, которое возникает в процессе выполнения родительского действия NativeActivity.</param>
      <param name="onCompleted">Закладка, показывающая, откуда по завершении действия ActivityAction будет возобновлено выполнение родительского действия.</param>
      <param name="onFaulted">Закладка, которая показывает, откуда в случае завершения ActivityAction по ошибке будет возобновлено выполнение NativeActivity.</param>
    </member>
    <member name="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.ScheduleActivity(System.Activities.Activity,System.Activities.FaultCallback)">
      <summary>Планирует выполнение указанного дочернего действия NativeActivity с использованием указанного расположения обратного вызова после сбоя, где родительский процесс возобновляется, когда действие переходит в состояние сбоя.</summary>
      <param name="activity">Дочернее действие, запускаемое событием, которое возникает в процессе выполнения родительского действия NativeActivity.</param>
      <param name="onFaulted">Закладка, которая показывает, откуда в случае завершения ActivityAction по ошибке будет возобновлено выполнение NativeActivity.</param>
    </member>
    <member name="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.ScheduleActivity``1(System.Activities.Activity{``0},System.Activities.CompletionCallback{``0},System.Activities.FaultCallback)">
      <summary>Планирует выполнение указанного дочернего действия NativeActivity с одним параметром для входного аргумента и создает закладки для указанных расположений обратного вызова, где родительский процесс возобновляется после завершения ActivityAction&lt;T&gt;.</summary>
      <param name="activity">Дочернее действие, запускаемое событием, которое возникает в процессе выполнения родительского действия NativeActivity.</param>
      <param name="onCompleted">Закладка, показывающая, откуда по завершении действия ActivityAction&lt;T&gt; будет возобновлено выполнение действия NativeActivity.</param>
      <param name="onFaulted">Закладка, которая показывает, откуда в случае завершения ActivityAction по ошибке будет возобновлено выполнение NativeActivity.</param>
      <typeparam name="TResult">Тип выходного аргумента дочернего действия NativeActivity.</typeparam>
    </member>
    <member name="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.ScheduleDelegate(System.Activities.ActivityDelegate,System.Collections.Generic.IDictionary{System.String,System.Object},System.Activities.DelegateCompletionCallback,System.Activities.FaultCallback)">
      <summary>Отправляет метод обратного вызова для действия в пул рабочих элементов.</summary>
      <param name="activityDelegate">Метод обратного вызова, в который действие возвращает результат, когда завершается указанная операция действия.</param>
      <param name="inputParameters">Словарный список имен и значений аргументов действия.</param>
      <param name="onCompleted">Закладка, показывающая, откуда по завершении действия ActivityAction будет возобновлено выполнение родительского действия.</param>
      <param name="onFaulted">Закладка, которая показывает, откуда в случае завершения ActivityAction по ошибке будет возобновлено выполнение родительского действия.</param>
    </member>
    <member name="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.ScheduleFunc``1(System.Activities.ActivityFunc{``0},System.Activities.CompletionCallback{``0},System.Activities.FaultCallback)">
      <summary>Планирует выполнение указанного действия ActivityFunc&lt;TResult&gt; с одним параметром, содержащим возвращаемое значение, и создает закладки для указанных расположений обратного вызова, где родительский процесс возобновляется после завершения ActivityFunc&lt;TResult&gt;.</summary>
      <param name="activityFunc">Дочернее действие, которое выполняется и возвращает значение, когда в родительском действии возникает определенное событие.</param>
      <param name="onCompleted">Закладка, показывающая, откуда по завершении действия ActivityFunc&lt;TResult&gt; будет возобновлено выполнение родительского действия.</param>
      <param name="onFaulted">Закладка, которая показывает, откуда в случае завершения ActivityFunc&lt;TResult&gt; из-за ошибки будет возобновлено выполнение родительского действия.</param>
      <typeparam name="TResult">Тип выходного аргумента дочернего действия NativeActivity.</typeparam>
    </member>
    <member name="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.ScheduleFunc``10(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9},``0,``1,``2,``3,``4,``5,``6,``7,``8,System.Activities.CompletionCallback{``9},System.Activities.FaultCallback)">
      <summary>Планирует выполнение указанного действия ActivityFunc&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult&gt; с десятью параметрами для возвращаемого значения и входных аргументов и создает закладки для указанных расположений обратного вызова, где родительский процесс возобновляется после завершения ActivityFunc&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult&gt;.</summary>
      <param name="activityFunc">Дочернее действие, которое выполняется и возвращает значение, когда в родительском действии возникает определенное событие.</param>
      <param name="argument1">Аргумент, передающий данные в действие.</param>
      <param name="argument2">Аргумент, передающий данные в действие.</param>
      <param name="argument3">Аргумент, передающий данные в действие.</param>
      <param name="argument4">Аргумент, передающий данные в действие.</param>
      <param name="argument5">Аргумент, передающий данные в действие.</param>
      <param name="argument6">Аргумент, передающий данные в действие.</param>
      <param name="argument7">Аргумент, передающий данные в действие.</param>
      <param name="argument8">Аргумент, передающий данные в действие.</param>
      <param name="argument9">Аргумент, передающий данные в действие.</param>
      <param name="onCompleted">Закладка, показывающая, откуда по завершении действия ActivityFunc&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult&gt; будет возобновлено выполнение родительского действия.</param>
      <param name="onFaulted">Закладка, которая показывает, откуда в случае завершения ActivityFunc&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult&gt; из-за ошибки будет возобновлено выполнение родительского действия.</param>
      <typeparam name="T1">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T2">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T3">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T4">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T5">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T6">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T7">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T8">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T9">Данные, передаваемые в действие.</typeparam>
      <typeparam name="TResult">Тип выходного аргумента дочернего действия NativeActivity.</typeparam>
    </member>
    <member name="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.ScheduleFunc``11(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,System.Activities.CompletionCallback{``10},System.Activities.FaultCallback)">
      <summary>Планирует выполнение указанного действия ActivityFunc&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult&gt; с одиннадцатью параметрами для возвращаемого значения и входных аргументов и создает закладки для указанных расположений обратного вызова, где родительский процесс возобновляется после завершения ActivityFunc&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult&gt;.</summary>
      <param name="activityFunc">Дочернее действие, которое выполняется и возвращает значение, когда в родительском действии возникает определенное событие.</param>
      <param name="argument1">Аргумент, передающий данные в действие.</param>
      <param name="argument2">Аргумент, передающий данные в действие.</param>
      <param name="argument3">Аргумент, передающий данные в действие.</param>
      <param name="argument4">Аргумент, передающий данные в действие.</param>
      <param name="argument5">Аргумент, передающий данные в действие.</param>
      <param name="argument6">Аргумент, передающий данные в действие.</param>
      <param name="argument7">Аргумент, передающий данные в действие.</param>
      <param name="argument8">Аргумент, передающий данные в действие.</param>
      <param name="argument9">Аргумент, передающий данные в действие.</param>
      <param name="argument10">Аргумент, передающий данные в действие.</param>
      <param name="onCompleted">Закладка, показывающая, откуда по завершении действия ActivityFunc&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult&gt; будет возобновлено выполнение родительского действия.</param>
      <param name="onFaulted">Закладка, которая показывает, откуда в случае завершения ActivityFunc&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult&gt; из-за ошибки будет возобновлено выполнение родительского действия.</param>
      <typeparam name="T1">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T2">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T3">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T4">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T5">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T6">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T7">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T8">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T9">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T10">Данные, передаваемые в действие.</typeparam>
      <typeparam name="TResult">Тип выходного аргумента дочернего действия NativeActivity.</typeparam>
    </member>
    <member name="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.ScheduleFunc``12(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,System.Activities.CompletionCallback{``11},System.Activities.FaultCallback)">
      <summary>Планирует выполнение указанного действия ActivityFunc&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult&gt; с двенадцатью параметрами для возвращаемого значения и входных аргументов и создает закладки для указанных расположений обратного вызова, где родительский процесс возобновляется после завершения ActivityFunc&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult&gt;.</summary>
      <param name="activityFunc">Дочернее действие, которое выполняется и возвращает значение, когда в родительском действии возникает определенное событие.</param>
      <param name="argument1">Аргумент, передающий данные в действие.</param>
      <param name="argument2">Аргумент, передающий данные в действие.</param>
      <param name="argument3">Аргумент, передающий данные в действие.</param>
      <param name="argument4">Аргумент, передающий данные в действие.</param>
      <param name="argument5">Аргумент, передающий данные в действие.</param>
      <param name="argument6">Аргумент, передающий данные в действие.</param>
      <param name="argument7">Аргумент, передающий данные в действие.</param>
      <param name="argument8">Аргумент, передающий данные в действие.</param>
      <param name="argument9">Аргумент, передающий данные в действие.</param>
      <param name="argument10">Аргумент, передающий данные в действие.</param>
      <param name="argument11">Аргумент, передающий данные в действие.</param>
      <param name="onCompleted">Закладка, показывающая, откуда по завершении действия ActivityFunc&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult&gt; будет возобновлено выполнение родительского действия.</param>
      <param name="onFaulted">Закладка, которая показывает, откуда в случае завершения ActivityFunc&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult&gt; из-за ошибки будет возобновлено выполнение родительского действия.</param>
      <typeparam name="T1">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T2">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T3">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T4">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T5">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T6">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T7">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T8">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T9">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T10">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T11">Данные, передаваемые в действие.</typeparam>
      <typeparam name="TResult">Тип выходного аргумента дочернего действия NativeActivity.</typeparam>
    </member>
    <member name="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.ScheduleFunc``13(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,System.Activities.CompletionCallback{``12},System.Activities.FaultCallback)">
      <summary>Планирует выполнение указанного действия ActivityFunc&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult&gt; с тринадцатью параметрами для возвращаемого значения и входных аргументов и создает закладки для указанных расположений обратного вызова, где родительский процесс возобновляется после завершения ActivityFunc&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult&gt;.</summary>
      <param name="activityFunc">Дочернее действие, которое выполняется и возвращает значение, когда в родительском действии возникает определенное событие.</param>
      <param name="argument1">Аргумент, передающий данные в действие.</param>
      <param name="argument2">Аргумент, передающий данные в действие.</param>
      <param name="argument3">Аргумент, передающий данные в действие.</param>
      <param name="argument4">Аргумент, передающий данные в действие.</param>
      <param name="argument5">Аргумент, передающий данные в действие.</param>
      <param name="argument6">Аргумент, передающий данные в действие.</param>
      <param name="argument7">Аргумент, передающий данные в действие.</param>
      <param name="argument8">Аргумент, передающий данные в действие.</param>
      <param name="argument9">Аргумент, передающий данные в действие.</param>
      <param name="argument10">Аргумент, передающий данные в действие.</param>
      <param name="argument11">Аргумент, передающий данные в действие.</param>
      <param name="argument12">Аргумент, передающий данные в действие.</param>
      <param name="onCompleted">Закладка, показывающая, откуда по завершении действия ActivityFunc&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult&gt; будет возобновлено выполнение родительского действия.</param>
      <param name="onFaulted">Закладка, которая показывает, откуда в случае завершения ActivityFunc&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult&gt; из-за ошибки будет возобновлено выполнение родительского действия.</param>
      <typeparam name="T1">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T2">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T3">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T4">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T5">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T6">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T7">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T8">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T9">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T10">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T11">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T12">Данные, передаваемые в действие.</typeparam>
      <typeparam name="TResult">Тип выходного аргумента дочернего действия NativeActivity.</typeparam>
    </member>
    <member name="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.ScheduleFunc``14(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,System.Activities.CompletionCallback{``13},System.Activities.FaultCallback)">
      <summary>Планирует выполнение указанного действия ActivityFunc&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult&gt; с четырнадцатью параметрами для возвращаемого значения и входных аргументов и создает закладки для указанных расположений обратного вызова, где родительский процесс возобновляется после завершения ActivityFunc&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult&gt;.</summary>
      <param name="activityFunc">Дочернее действие, которое выполняется и возвращает значение, когда в родительском действии возникает определенное событие.</param>
      <param name="argument1">Аргумент, передающий данные в действие.</param>
      <param name="argument2">Аргумент, передающий данные в действие.</param>
      <param name="argument3">Аргумент, передающий данные в действие.</param>
      <param name="argument4">Аргумент, передающий данные в действие.</param>
      <param name="argument5">Аргумент, передающий данные в действие.</param>
      <param name="argument6">Аргумент, передающий данные в действие.</param>
      <param name="argument7">Аргумент, передающий данные в действие.</param>
      <param name="argument8">Аргумент, передающий данные в действие.</param>
      <param name="argument9">Аргумент, передающий данные в действие.</param>
      <param name="argument10">Аргумент, передающий данные в действие.</param>
      <param name="argument11">Аргумент, передающий данные в действие.</param>
      <param name="argument12">Аргумент, передающий данные в действие.</param>
      <param name="argument13">Аргумент, передающий данные в действие.</param>
      <param name="onCompleted">Закладка, показывающая, откуда по завершении действия ActivityFunc&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult&gt; будет возобновлено выполнение родительского действия.</param>
      <param name="onFaulted">Закладка, которая показывает, откуда в случае завершения ActivityFunc&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult&gt; из-за ошибки будет возобновлено выполнение родительского действия.</param>
      <typeparam name="T1">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T2">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T3">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T4">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T5">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T6">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T7">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T8">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T9">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T10">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T11">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T12">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T13">Данные, передаваемые в действие.</typeparam>
      <typeparam name="TResult">Тип выходного аргумента дочернего действия NativeActivity.</typeparam>
    </member>
    <member name="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.ScheduleFunc``15(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,System.Activities.CompletionCallback{``14},System.Activities.FaultCallback)">
      <summary>Планирует выполнение указанного действия ActivityFunc&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult&gt; с пятнадцатью параметрами для возвращаемого значения и входных аргументов и создает закладки для указанных расположений обратного вызова, где родительский процесс возобновляется после завершения ActivityFunc&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult&gt;.</summary>
      <param name="activityFunc">Дочернее действие, которое выполняется и возвращает значение, когда в родительском действии возникает определенное событие.</param>
      <param name="argument1">Аргумент, передающий данные в действие.</param>
      <param name="argument2">Аргумент, передающий данные в действие.</param>
      <param name="argument3">Аргумент, передающий данные в действие.</param>
      <param name="argument4">Аргумент, передающий данные в действие.</param>
      <param name="argument5">Аргумент, передающий данные в действие.</param>
      <param name="argument6">Аргумент, передающий данные в действие.</param>
      <param name="argument7">Аргумент, передающий данные в действие.</param>
      <param name="argument8">Аргумент, передающий данные в действие.</param>
      <param name="argument9">Аргумент, передающий данные в действие.</param>
      <param name="argument10">Аргумент, передающий данные в действие.</param>
      <param name="argument11">Аргумент, передающий данные в действие.</param>
      <param name="argument12">Аргумент, передающий данные в действие.</param>
      <param name="argument13">Аргумент, передающий данные в действие.</param>
      <param name="argument14">Аргумент, передающий данные в действие.</param>
      <param name="onCompleted">Закладка, показывающая, откуда по завершении действия ActivityFunc&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult&gt; будет возобновлено выполнение родительского действия.</param>
      <param name="onFaulted">Закладка, которая показывает, откуда в случае завершения ActivityFunc&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult&gt; из-за ошибки будет возобновлено выполнение родительского действия.</param>
      <typeparam name="T1">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T2">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T3">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T4">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T5">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T6">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T7">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T8">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T9">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T10">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T11">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T12">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T13">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T14">Данные, передаваемые в действие.</typeparam>
      <typeparam name="TResult">Тип выходного аргумента дочернего действия NativeActivity.</typeparam>
    </member>
    <member name="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.ScheduleFunc``16(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,System.Activities.CompletionCallback{``15},System.Activities.FaultCallback)">
      <summary>Планирует выполнение указанного действия ActivityFunc&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult&gt; с шестнадцатью параметрами для возвращаемого значения и входных аргументов и создает закладки для указанных расположений обратного вызова, где родительский процесс возобновляется после завершения ActivityFunc&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult&gt;.</summary>
      <param name="activityFunc">Дочернее действие, которое выполняется и возвращает значение, когда в родительском действии возникает определенное событие.</param>
      <param name="argument1">Аргумент, передающий данные в действие.</param>
      <param name="argument2">Аргумент, передающий данные в действие.</param>
      <param name="argument3">Аргумент, передающий данные в действие.</param>
      <param name="argument4">Аргумент, передающий данные в действие.</param>
      <param name="argument5">Аргумент, передающий данные в действие.</param>
      <param name="argument6">Аргумент, передающий данные в действие.</param>
      <param name="argument7">Аргумент, передающий данные в действие.</param>
      <param name="argument8">Аргумент, передающий данные в действие.</param>
      <param name="argument9">Аргумент, передающий данные в действие.</param>
      <param name="argument10">Аргумент, передающий данные в действие.</param>
      <param name="argument11">Аргумент, передающий данные в действие.</param>
      <param name="argument12">Аргумент, передающий данные в действие.</param>
      <param name="argument13">Аргумент, передающий данные в действие.</param>
      <param name="argument14">Аргумент, передающий данные в действие.</param>
      <param name="argument15">Аргумент, передающий данные в действие.</param>
      <param name="onCompleted">Закладка, показывающая, откуда по завершении действия ActivityFunc&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult&gt; будет возобновлено выполнение родительского действия.</param>
      <param name="onFaulted">Закладка, которая показывает, откуда в случае завершения ActivityFunc&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult&gt; из-за ошибки будет возобновлено выполнение родительского действия.</param>
      <typeparam name="T1">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T2">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T3">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T4">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T5">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T6">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T7">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T8">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T9">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T10">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T11">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T12">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T13">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T14">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T15">Данные, передаваемые в действие.</typeparam>
      <typeparam name="TResult">Тип выходного аргумента дочернего действия NativeActivity.</typeparam>
    </member>
    <member name="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.ScheduleFunc``17(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,System.Activities.CompletionCallback{``16},System.Activities.FaultCallback)">
      <summary>Планирует выполнение указанного действия ActivityFunc&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TResult&gt; с семнадцатью параметрами для возвращаемого значения и входных аргументов и создает закладки для указанных расположений обратного вызова, где родительский процесс возобновляется после завершения ActivityFunc&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TResult&gt;.</summary>
      <param name="activityFunc">Дочернее действие, которое выполняется и возвращает значение, когда в родительском действии возникает определенное событие.</param>
      <param name="argument1">Аргумент, передающий данные в действие.</param>
      <param name="argument2">Аргумент, передающий данные в действие.</param>
      <param name="argument3">Аргумент, передающий данные в действие.</param>
      <param name="argument4">Аргумент, передающий данные в действие.</param>
      <param name="argument5">Аргумент, передающий данные в действие.</param>
      <param name="argument6">Аргумент, передающий данные в действие.</param>
      <param name="argument7">Аргумент, передающий данные в действие.</param>
      <param name="argument8">Аргумент, передающий данные в действие.</param>
      <param name="argument9">Аргумент, передающий данные в действие.</param>
      <param name="argument10">Аргумент, передающий данные в действие.</param>
      <param name="argument11">Аргумент, передающий данные в действие.</param>
      <param name="argument12">Аргумент, передающий данные в действие.</param>
      <param name="argument13">Аргумент, передающий данные в действие.</param>
      <param name="argument14">Аргумент, передающий данные в действие.</param>
      <param name="argument15">Аргумент, передающий данные в действие.</param>
      <param name="argument16">Аргумент, передающий данные в действие.</param>
      <param name="onCompleted">Закладка, показывающая, откуда по завершении действия ActivityFunc&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TResult&gt; будет возобновлено выполнение родительского действия.</param>
      <param name="onFaulted">Закладка, которая показывает, откуда в случае завершения ActivityFunc&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TResult&gt; из-за ошибки будет возобновлено выполнение родительского действия.</param>
      <typeparam name="T1">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T2">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T3">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T4">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T5">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T6">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T7">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T8">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T9">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T10">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T11">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T12">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T13">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T14">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T15">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T16">Данные, передаваемые в действие.</typeparam>
      <typeparam name="TResult">Тип выходного аргумента дочернего действия NativeActivity.</typeparam>
    </member>
    <member name="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.ScheduleFunc``2(System.Activities.ActivityFunc{``0,``1},``0,System.Activities.CompletionCallback{``1},System.Activities.FaultCallback)">
      <summary>Планирует выполнение указанного действия ActivityFunc&lt;T, TResult&gt; с двумя параметрами для возвращаемого значения и входного аргумента и создает закладки для указанных расположений обратного вызова, где родительский процесс возобновляется после завершения ActivityFunc&lt;T, TResult&gt;.</summary>
      <param name="activityFunc">Дочернее действие, которое выполняется и возвращает значение, когда в родительском действии возникает определенное событие.</param>
      <param name="argument">Аргумент, передающий данные в действие.</param>
      <param name="onCompleted">Закладка, показывающая, откуда по завершении действия ActivityFunc&lt;T, TResult&gt; будет возобновлено выполнение родительского действия.</param>
      <param name="onFaulted">Закладка, которая показывает, откуда в случае завершения ActivityFunc&lt;T, TResult&gt; из-за ошибки будет возобновлено выполнение родительского действия.</param>
      <typeparam name="T">Данные, передаваемые в действие.</typeparam>
      <typeparam name="TResult">Тип выходного аргумента дочернего действия NativeActivity.</typeparam>
    </member>
    <member name="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.ScheduleFunc``3(System.Activities.ActivityFunc{``0,``1,``2},``0,``1,System.Activities.CompletionCallback{``2},System.Activities.FaultCallback)">
      <summary>Планирует выполнение указанного действия ActivityFunc&lt;T1, T2, TResult&gt; с тремя параметрами для возвращаемого значения и входных аргументов и создает закладки для указанных расположений обратного вызова, где родительский процесс возобновляется после завершения ActivityFunc&lt;T1, T2, TResult&gt;.</summary>
      <param name="activityFunc">Дочернее действие, которое выполняется и возвращает значение, когда в родительском действии возникает определенное событие.</param>
      <param name="argument1">Аргумент, передающий данные в действие.</param>
      <param name="argument2">Аргумент, передающий данные в действие.</param>
      <param name="onCompleted">Закладка, показывающая, откуда по завершении действия ActivityFunc&lt;T1, T2, TResult&gt; будет возобновлено выполнение родительского действия.</param>
      <param name="onFaulted">Закладка, которая показывает, откуда в случае завершения ActivityFunc&lt;T1, T2, TResult&gt; из-за ошибки будет возобновлено выполнение родительского действия.</param>
      <typeparam name="T1">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T2">Данные, передаваемые в действие.</typeparam>
      <typeparam name="TResult">Тип выходного аргумента дочернего действия NativeActivity.</typeparam>
    </member>
    <member name="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.ScheduleFunc``4(System.Activities.ActivityFunc{``0,``1,``2,``3},``0,``1,``2,System.Activities.CompletionCallback{``3},System.Activities.FaultCallback)">
      <summary>Планирует выполнение указанного действия ActivityFunc&lt;T1, T2, T3, TResult&gt; с четырьмя параметрами для возвращаемого значения и входных аргументов и создает закладки для указанных расположений обратного вызова, где родительский процесс возобновляется после завершения ActivityFunc&lt;T1, T2, T3, TResult&gt;.</summary>
      <param name="activityFunc">Дочернее действие, которое выполняется и возвращает значение, когда в родительском действии возникает определенное событие.</param>
      <param name="argument1">Аргумент, передающий данные в действие.</param>
      <param name="argument2">Аргумент, передающий данные в действие.</param>
      <param name="argument3">Аргумент, передающий данные в действие.</param>
      <param name="onCompleted">Закладка, показывающая, откуда по завершении действия ActivityFunc&lt;T1, T2, T3, TResult&gt; будет возобновлено выполнение родительского действия.</param>
      <param name="onFaulted">Закладка, которая показывает, откуда в случае завершения ActivityFunc&lt;T1, T2, T3, TResult&gt; из-за ошибки будет возобновлено выполнение родительского действия.</param>
      <typeparam name="T1">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T2">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T3">Данные, передаваемые в действие.</typeparam>
      <typeparam name="TResult">Тип выходного аргумента дочернего действия NativeActivity.</typeparam>
    </member>
    <member name="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.ScheduleFunc``5(System.Activities.ActivityFunc{``0,``1,``2,``3,``4},``0,``1,``2,``3,System.Activities.CompletionCallback{``4},System.Activities.FaultCallback)">
      <summary>Планирует выполнение указанного действия ActivityFunc&lt;T1, T2, T3, T4, TResult&gt; с пятью параметрами для возвращаемого значения и входных аргументов и создает закладки для указанных расположений обратного вызова, где родительский процесс возобновляется после завершения ActivityFunc&lt;T1, T2, T3, T4, TResult&gt;.</summary>
      <param name="activityFunc">Дочернее действие, которое выполняется и возвращает значение, когда в родительском действии возникает определенное событие.</param>
      <param name="argument1">Аргумент, передающий данные в действие.</param>
      <param name="argument2">Аргумент, передающий данные в действие.</param>
      <param name="argument3">Аргумент, передающий данные в действие.</param>
      <param name="argument4">Аргумент, передающий данные в действие.</param>
      <param name="onCompleted">Закладка, показывающая, откуда по завершении действия ActivityFunc&lt;T1, T2, T3, T4, TResult&gt; будет возобновлено выполнение родительского действия.</param>
      <param name="onFaulted">Закладка, которая показывает, откуда в случае завершения ActivityFunc&lt;T1, T2, T3, T4, TResult&gt; из-за ошибки будет возобновлено выполнение родительского действия.</param>
      <typeparam name="T1">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T2">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T3">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T4">Данные, передаваемые в действие.</typeparam>
      <typeparam name="TResult">Тип выходного аргумента дочернего действия NativeActivity.</typeparam>
    </member>
    <member name="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.ScheduleFunc``6(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5},``0,``1,``2,``3,``4,System.Activities.CompletionCallback{``5},System.Activities.FaultCallback)">
      <summary>Планирует выполнение указанного действия ActivityFunc&lt;T1, T2, T3, T4, T5, TResult&gt; с шестью параметрами для возвращаемого значения и входных аргументов и создает закладки для указанных расположений обратного вызова, где родительский процесс возобновляется после завершения ActivityFunc&lt;T1, T2, T3, T4, T5, TResult&gt;.</summary>
      <param name="activityFunc">Дочернее действие, которое выполняется и возвращает значение, когда в родительском действии возникает определенное событие.</param>
      <param name="argument1">Аргумент, передающий данные в действие.</param>
      <param name="argument2">Аргумент, передающий данные в действие.</param>
      <param name="argument3">Аргумент, передающий данные в действие.</param>
      <param name="argument4">Аргумент, передающий данные в действие.</param>
      <param name="argument5">Аргумент, передающий данные в действие.</param>
      <param name="onCompleted">Закладка, показывающая, откуда по завершении действия ActivityFunc&lt;T1, T2, T3, T4, T5, TResult&gt; будет возобновлено выполнение родительского действия.</param>
      <param name="onFaulted">Закладка, которая показывает, откуда в случае завершения ActivityFunc&lt;T1, T2, T3, T4, T5, TResult&gt; из-за ошибки будет возобновлено выполнение родительского действия.</param>
      <typeparam name="T1">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T2">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T3">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T4">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T5">Данные, передаваемые в действие.</typeparam>
      <typeparam name="TResult">Тип выходного аргумента дочернего действия NativeActivity.</typeparam>
    </member>
    <member name="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.ScheduleFunc``7(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6},``0,``1,``2,``3,``4,``5,System.Activities.CompletionCallback{``6},System.Activities.FaultCallback)">
      <summary>Планирует выполнение указанного действия ActivityAction&lt;T1, T2, T3, T4, T5, T6, T7&gt; с семью параметрами для входных аргументов и создает закладки для указанных расположений обратного вызова, где родительский процесс возобновляется после завершения ActivityAction&lt;T1, T2, T3, T4, T5, T6, T7&gt;.</summary>
      <param name="activityFunc">Дочернее действие, которое выполняется и возвращает значение, когда в родительском действии возникает определенное событие.</param>
      <param name="argument1">Аргумент, передающий данные в действие.</param>
      <param name="argument2">Аргумент, передающий данные в действие.</param>
      <param name="argument3">Аргумент, передающий данные в действие.</param>
      <param name="argument4">Аргумент, передающий данные в действие.</param>
      <param name="argument5">Аргумент, передающий данные в действие.</param>
      <param name="argument6">Аргумент, передающий данные в действие.</param>
      <param name="onCompleted">Закладка, показывающая, откуда по завершении действия ActivityFunc&lt;T1, T2, T3, T4, T5, T6, TResult&gt; будет возобновлено выполнение родительского действия.</param>
      <param name="onFaulted">Закладка, которая показывает, откуда в случае завершения ActivityFunc&lt;T1, T2, T3, T4, T5, T6, TResult&gt; из-за ошибки будет возобновлено выполнение родительского действия.</param>
      <typeparam name="T1">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T2">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T3">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T4">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T5">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T6">Данные, передаваемые в действие.</typeparam>
      <typeparam name="TResult">Тип выходного аргумента дочернего действия NativeActivity.</typeparam>
    </member>
    <member name="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.ScheduleFunc``8(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7},``0,``1,``2,``3,``4,``5,``6,System.Activities.CompletionCallback{``7},System.Activities.FaultCallback)">
      <summary>Планирует выполнение указанного действия ActivityFunc&lt;T1, T2, T3, T4, T5, T6, T7, TResult&gt; с восемью параметрами для возвращаемого значения и входных аргументов и создает закладки для указанных расположений обратного вызова, где родительский процесс возобновляется после завершения ActivityFunc&lt;T1, T2, T3, T4, T5, T6, T7, TResult&gt;.</summary>
      <param name="activityFunc">Дочернее действие, которое выполняется и возвращает значение, когда в родительском действии возникает определенное событие.</param>
      <param name="argument1">Аргумент, передающий данные в действие.</param>
      <param name="argument2">Аргумент, передающий данные в действие.</param>
      <param name="argument3">Аргумент, передающий данные в действие.</param>
      <param name="argument4">Аргумент, передающий данные в действие.</param>
      <param name="argument5">Аргумент, передающий данные в действие.</param>
      <param name="argument6">Аргумент, передающий данные в действие.</param>
      <param name="argument7">Аргумент, передающий данные в действие.</param>
      <param name="onCompleted">Закладка, показывающая, откуда по завершении действия ActivityFunc&lt;T1, T2, T3, T4, T5, T6, T7, TResult&gt; будет возобновлено выполнение родительского действия.</param>
      <param name="onFaulted">Закладка, которая показывает, откуда в случае завершения ActivityFunc&lt;T1, T2, T3, T4, T5, T6, T7, TResult&gt; из-за ошибки будет возобновлено выполнение родительского действия.</param>
      <typeparam name="T1">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T2">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T3">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T4">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T5">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T6">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T7">Данные, передаваемые в действие.</typeparam>
      <typeparam name="TResult">Тип выходного аргумента дочернего действия NativeActivity.</typeparam>
    </member>
    <member name="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.ScheduleFunc``9(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8},``0,``1,``2,``3,``4,``5,``6,``7,System.Activities.CompletionCallback{``8},System.Activities.FaultCallback)">
      <summary>Планирует выполнение указанного действия ActivityFunc&lt;T1, T2, T3, T4, T5, T6, T7, T8, TResult&gt; с девятью параметрами для возвращаемого значения и входных аргументов и создает закладки для указанных расположений обратного вызова, где родительский процесс возобновляется после завершения ActivityFunc&lt;T1, T2, T3, T4, T5, T6, T7, T8, TResult&gt;.</summary>
      <param name="activityFunc">Дочернее действие, которое выполняется и возвращает значение, когда в родительском действии возникает определенное событие.</param>
      <param name="argument1">Аргумент, передающий данные в действие.</param>
      <param name="argument2">Аргумент, передающий данные в действие.</param>
      <param name="argument3">Аргумент, передающий данные в действие.</param>
      <param name="argument4">Аргумент, передающий данные в действие.</param>
      <param name="argument5">Аргумент, передающий данные в действие.</param>
      <param name="argument6">Аргумент, передающий данные в действие.</param>
      <param name="argument7">Аргумент, передающий данные в действие.</param>
      <param name="argument8">Аргумент, передающий данные в действие.</param>
      <param name="onCompleted">Закладка, показывающая, откуда по завершении действия ActivityFunc&lt;T1, T2, T3, T4, T5, T6, T7, T8, TResult&gt; будет возобновлено выполнение родительского действия.</param>
      <param name="onFaulted">Закладка, которая показывает, откуда в случае завершения ActivityFunc&lt;T1, T2, T3, T4, T5, T6, T7, T8, TResult&gt; из-за ошибки будет возобновлено выполнение родительского действия.</param>
      <typeparam name="T1">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T2">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T3">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T4">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T5">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T6">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T7">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T8">Данные, передаваемые в действие.</typeparam>
      <typeparam name="TResult">Тип выходного аргумента дочернего действия NativeActivity.</typeparam>
    </member>
    <member name="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.SetValue(System.Activities.Argument,System.Object)">
      <summary>Присваивает значение указанному аргументу.</summary>
      <param name="argument">Аргумент, который получит новое значение.</param>
      <param name="value">Новое значение аргумента.</param>
    </member>
    <member name="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.SetValue(System.Activities.Variable,System.Object)">
      <summary>Назначает указанный объект значения указанному объекту переменной.</summary>
      <param name="variable">Объект-переменная без указанного типа, которому можно присвоить объект-значение.</param>
      <param name="value">Объект без указанного типа, который можно присвоить объекту-переменной.</param>
    </member>
    <member name="M:System.Activities.DynamicUpdate.NativeActivityUpdateContext.SetValue``1(System.Activities.Variable{``0},``0)">
      <summary>Присваивает указанный универсальный объект-значение универсальному объекту-переменной.</summary>
      <param name="variable">Объект-переменная с указанным типом, которому можно присвоить объект-значение.</param>
      <param name="value">Объект с указанным типом, который можно присвоить объекту-переменной.</param>
      <typeparam name="T">Тип переменной.</typeparam>
    </member>
    <member name="T:System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata">
      <summary>Представляет метаданные сопоставления обновления встроенных действий.</summary>
    </member>
    <member name="M:System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata.SaveOriginalValue(System.Activities.Activity,System.Object)">
      <summary>Указывает объект для сохранения исходного значения для текущей активности.</summary>
      <param name="updatedChildActivity">Обновленное дочернее действие.</param>
      <param name="originalValue">Исходное значение.</param>
    </member>
    <member name="M:System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata.SaveOriginalValue(System.String,System.Object)">
      <summary>Указывает объект для сохранения исходного значения для текущей активности.</summary>
      <param name="propertyName">Имя свойства.</param>
      <param name="originalValue">Исходное значение.</param>
    </member>
    <member name="T:System.Activities.DynamicUpdate.UpdateMapMetadata">
      <summary>Указывает параметры для метаданных карты обновления.</summary>
    </member>
    <member name="M:System.Activities.DynamicUpdate.UpdateMapMetadata.AddMatch(System.Activities.Activity,System.Activities.Activity)">
      <summary>Добавляет сопоставление для <see cref="T:System.Activities.DynamicUpdate.UpdateMapMetadata" /> с заданным дочерним элементом.</summary>
      <param name="updatedChild">Обновленный дочерний элемент.</param>
      <param name="originalChild">Исходный дочерний элемент.</param>
    </member>
    <member name="M:System.Activities.DynamicUpdate.UpdateMapMetadata.AddMatch(System.Activities.Variable,System.Activities.Variable)">
      <summary>Добавляет сопоставление для <see cref="T:System.Activities.DynamicUpdate.UpdateMapMetadata" /> с заданной переменной.</summary>
      <param name="updatedVariable">Обновленная переменная.</param>
      <param name="originalVariable">Исходная переменная.</param>
    </member>
    <member name="M:System.Activities.DynamicUpdate.UpdateMapMetadata.AllowUpdateInsideThisActivity">
      <summary>Разрешает обновление метаданных сопоставления в рамках текущего действия.</summary>
    </member>
    <member name="M:System.Activities.DynamicUpdate.UpdateMapMetadata.DisallowUpdateInsideThisActivity(System.String)">
      <summary>Запрещает обновление метаданных сопоставления в рамках текущего действия.</summary>
      <param name="reason">Причина запрета.</param>
    </member>
    <member name="M:System.Activities.DynamicUpdate.UpdateMapMetadata.GetMatch(System.Activities.Activity)">
      <summary>Получает сопоставление для <see cref="T:System.Activities.DynamicUpdate.UpdateMapMetadata" /> с заданным дочерним элементом.</summary>
      <param name="updatedChild">Обновленный дочерний элемент.</param>
      <returns>Соответствие для <see cref="T:System.Activities.DynamicUpdate.UpdateMapMetadata" />.</returns>
    </member>
    <member name="M:System.Activities.DynamicUpdate.UpdateMapMetadata.GetMatch(System.Activities.Variable)">
      <summary>Получает сопоставление для <see cref="T:System.Activities.DynamicUpdate.UpdateMapMetadata" /> с заданной переменной.</summary>
      <param name="updatedVariable">Обновленная переменная.</param>
      <returns>Соответствие для <see cref="T:System.Activities.DynamicUpdate.UpdateMapMetadata" />.</returns>
    </member>
    <member name="M:System.Activities.DynamicUpdate.UpdateMapMetadata.IsReferenceToImportedChild(System.Activities.Activity)">
      <summary>Указывает, является ли <see cref="T:System.Activities.DynamicUpdate.UpdateMapMetadata" /> ссылкой на импортированный дочерний объект.</summary>
      <param name="childActivity">Дочернее действие.</param>
      <returns>Значение <see langword="true" />, если объект <see cref="T:System.Activities.DynamicUpdate.UpdateMapMetadata" /> является ссылкой на импортированный дочерний объект; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="T:System.Activities.ExceptionPersistenceExtension">
      <summary>Определяет сохраняемость исключения.</summary>
    </member>
    <member name="M:System.Activities.ExceptionPersistenceExtension.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.ExceptionPersistenceExtension" />.</summary>
    </member>
    <member name="P:System.Activities.ExceptionPersistenceExtension.PersistExceptions">
      <summary>Получает или задает значение, указывающее, будут ли сохранены исключения.</summary>
      <returns>Значение <see langword="true" />, если исключения сохраняются; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="T:System.Activities.ExclusiveH*******le">
      <summary>Добавляет к закладке сопроводительные сведения, которые позволяют закладке получать доступ к подмножеству дескрипторов областей, исключая ненужные дескрипторы.</summary>
    </member>
    <member name="M:System.Activities.ExclusiveH*******le.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.ExclusiveH*******le" />.</summary>
    </member>
    <member name="M:System.Activities.ExclusiveH*******le.OnInitialize(System.Activities.H*******leInitializationContext)">
      <summary>Создает список объектов <see cref="T:System.Activities.BookmarkScopeH*******le" /> по умолчанию из переменных дескрипторов в указанном контексте инициализации дескрипторов.</summary>
      <param name="context">Среда, в которой создается дескриптор.</param>
    </member>
    <member name="M:System.Activities.ExclusiveH*******le.RegisterBookmarkScope(System.Activities.NativeActivityContext,System.Activities.BookmarkScopeH*******le)">
      <summary>Добавляет указанный дескриптор области закладки в коллекцию <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> объектов <see cref="T:System.Activities.BookmarkScopeH*******le" /> с использованием указанного контекста.</summary>
      <param name="context">Среда, в которой создается дескриптор.</param>
      <param name="bookmarkScopeH*******le">Маркер, используемый для определения группы закладок, работающих по одному протоколу в операции действия рабочего процесса, и для доступа к этой группе.</param>
    </member>
    <member name="P:System.Activities.ExclusiveH*******le.RegisteredBookmarkScopes">
      <summary>Возвращает новую или существующую коллекцию <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> объектов <see cref="T:System.Activities.BookmarkScopeH*******le" />.</summary>
      <returns>Доступная только для чтения коллекция дескрипторов области закладки.</returns>
    </member>
    <member name="M:System.Activities.ExclusiveH*******le.Reinitialize(System.Activities.NativeActivityContext)">
      <summary>Возвращает значения по умолчанию для зарегистрированных дескрипторов области закладки.</summary>
      <param name="context">Среда, в которой создается дескриптор.</param>
    </member>
    <member name="T:System.Activities.ExecutionProperties">
      <summary>Представляет коллекцию свойств в определенной области.</summary>
    </member>
    <member name="M:System.Activities.ExecutionProperties.Add(System.String,System.Object)">
      <summary>Регистрирует новое свойство с использованием указанного имени.</summary>
      <param name="name">Имя свойства.</param>
      <param name="property">Объект, представляющий свойство.</param>
    </member>
    <member name="M:System.Activities.ExecutionProperties.Add(System.String,System.Object,System.Boolean)">
      <summary>Регистрирует свойство, используя указанное имя и видимость для дочерних элементов.</summary>
      <param name="name">Имя свойства.</param>
      <param name="property">Объект, представляющий свойство.</param>
      <param name="onlyVisibleToPublicChildren">Значение, которое определяет, является ли это свойство видимым для дочерних элементов действия, которому принадлежит свойство.</param>
    </member>
    <member name="M:System.Activities.ExecutionProperties.Find(System.String)">
      <summary>Возвращает ближайшее свойство с заданным именем.</summary>
      <param name="name">Имя свойства.</param>
      <returns>Ближайшее свойство с заданным именем.</returns>
    </member>
    <member name="M:System.Activities.ExecutionProperties.GetEnumerator">
      <summary>Возвращает перечислитель, выполняющий итерацию коллекции свойств.</summary>
      <returns>Перечислитель, выполняющий итерацию коллекции свойств.</returns>
    </member>
    <member name="P:System.Activities.ExecutionProperties.IsEmpty">
      <summary>Возвращает значение, которое показывает, существуют ли свойства, зарегистрированные в текущей области.</summary>
      <returns>Значение <see langword="true" />, если присутствуют зарегистрированные свойства; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Activities.ExecutionProperties.Remove(System.String)">
      <summary>Отменяет регистрацию свойства с указанным именем.</summary>
      <param name="name">Имя свойства, регистрация которого отменяется.</param>
      <returns>Значение <see langword="true" />, если регистрация свойства была отменена; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Activities.ExecutionProperties.System#Collections#IEnumerable#GetEnumerator">
      <summary>Возвращает перечислитель, выполняющий итерацию коллекции свойств.</summary>
      <returns>Перечислитель, выполняющий итерацию коллекции свойств.</returns>
    </member>
    <member name="T:System.Activities.ExpressionParser.SourceExpressionException">
      <summary>Представляет исключение, формируемое в случаях, когда невозможно выполнить преобразование текстового выражения в форму исполняемого объекта.</summary>
    </member>
    <member name="M:System.Activities.ExpressionParser.SourceExpressionException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.ExpressionParser.SourceExpressionException" />.</summary>
    </member>
    <member name="M:System.Activities.ExpressionParser.SourceExpressionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.ExpressionParser.SourceExpressionException" /> с сериализованными данными.</summary>
      <param name="info">Объект, содержащий сериализованные данные объекта о возникающем исключении.</param>
      <param name="context">Объект, содержащий контекстные сведения об источнике или назначении.</param>
    </member>
    <member name="M:System.Activities.ExpressionParser.SourceExpressionException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.ExpressionParser.SourceExpressionException" /> с указанным сообщением об ошибке.</summary>
      <param name="message">Сообщение об ошибке, указывающее причину создания исключения.</param>
    </member>
    <member name="M:System.Activities.ExpressionParser.SourceExpressionException.#ctor(System.String,System.CodeDom.Compiler.CompilerErrorCollection)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.ExpressionParser.SourceExpressionException" /> с указанным сообщением об ошибке и коллекцией ошибок компилятора.</summary>
      <param name="message">Сообщение об ошибке, указывающее причину создания исключения.</param>
      <param name="errors">Коллекция данных ошибок компилятора.</param>
    </member>
    <member name="M:System.Activities.ExpressionParser.SourceExpressionException.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.ExpressionParser.SourceExpressionException" /> указанным сообщением об ошибке и ссылкой на внутреннее исключение, вызвавшее данное исключение.</summary>
      <param name="message">Сообщение об ошибке, указывающее причину создания исключения.</param>
      <param name="innerException">Исключение, которое является причиной текущего исключения.</param>
    </member>
    <member name="P:System.Activities.ExpressionParser.SourceExpressionException.Errors">
      <summary>Возвращает перечислимую коллекцию типов ошибок компилятора.</summary>
      <returns>Перечислимая коллекция ошибок компилятора.</returns>
    </member>
    <member name="M:System.Activities.ExpressionParser.SourceExpressionException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>При переопределении в производном классе задает объект <see cref="T:System.Runtime.Serialization.SerializationInfo" />, содержащий сведения об исключении.</summary>
      <param name="info">Объект, содержащий сериализованные данные объекта о возникающем исключении.</param>
      <param name="context">Объект, содержащий контекстные сведения об источнике или назначении.</param>
    </member>
    <member name="T:System.Activities.Expressions.Add`3">
      <summary>Вычисляет сумму двух значений.</summary>
      <typeparam name="TLeft">Тип левого операнда.</typeparam>
      <typeparam name="TRight">Тип правого операнда.</typeparam>
      <typeparam name="TResult">Тип результата.</typeparam>
    </member>
    <member name="M:System.Activities.Expressions.Add`3.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Expressions.Add`3" />.</summary>
    </member>
    <member name="P:System.Activities.Expressions.Add`3.Checked">
      <summary>Возвращает или задает значение, указывающее, выполняется ли операция сложения в проверяемом контексте.</summary>
      <returns>Значение <see langword="true" />, если операция сложения выполняется в проверяемом контексте; в противном случае — значение <see langword="false" />. Значение по умолчанию — <see langword="true" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.Add`3.Left">
      <summary>Возвращает или задает левый операнд.</summary>
      <returns>Левый операнд.</returns>
    </member>
    <member name="P:System.Activities.Expressions.Add`3.Right">
      <summary>Возвращает или задает правый операнд.</summary>
      <returns>Правый операнд.</returns>
    </member>
    <member name="T:System.Activities.Expressions.And`3">
      <summary>Выполняет побитовую операцию логического «И» для двух значений.</summary>
      <typeparam name="TLeft">Тип левого операнда.</typeparam>
      <typeparam name="TRight">Тип правого операнда.</typeparam>
      <typeparam name="TResult">Тип результата.</typeparam>
    </member>
    <member name="M:System.Activities.Expressions.And`3.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Expressions.And`3" />.</summary>
    </member>
    <member name="P:System.Activities.Expressions.And`3.Left">
      <summary>Возвращает или задает левый операнд.</summary>
      <returns>Аргумент <see cref="F:System.Activities.Presentation.View.PropertyKind.InArgument" />, который представляет левый операнд.</returns>
    </member>
    <member name="P:System.Activities.Expressions.And`3.Right">
      <summary>Возвращает или задает правый операнд.</summary>
      <returns>Аргумент <see cref="F:System.Activities.Presentation.View.PropertyKind.InArgument" />, который представляет правый операнд.</returns>
    </member>
    <member name="T:System.Activities.Expressions.AndAlso">
      <summary>Выполняет операцию логического «И» для двух значений. Оба значения преобразуются в логические, если они имеют значение true, выражение возвращает значение <see langword="true" />. Если одно или оба значения имеют значение false, выражение возвращает значение <see langword="false" />. <see cref="T:System.Activities.Expressions.AndAlso" /> является "сокращенной" версией логического оператора И, которая возвращает значение false, как только в результате оценки одного из операндов будет получено значение <see langword="false" />.</summary>
    </member>
    <member name="M:System.Activities.Expressions.AndAlso.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Expressions.AndAlso" />.</summary>
    </member>
    <member name="P:System.Activities.Expressions.AndAlso.Left">
      <summary>Возвращает или задает левый операнд.</summary>
      <returns>Левый операнд.</returns>
    </member>
    <member name="P:System.Activities.Expressions.AndAlso.Right">
      <summary>Возвращает или задает правый операнд.</summary>
      <returns>Правый операнд.</returns>
    </member>
    <member name="T:System.Activities.Expressions.ArgumentReference`1">
      <summary>Представляет аргумент <see cref="T:System.Activities.Argument" />, используемый в выражении в качестве левостороннего значения.</summary>
      <typeparam name="T">Тип аргумента, возвращаемого <see cref="T:System.Activities.Expressions.ArgumentReference`1" />.</typeparam>
    </member>
    <member name="M:System.Activities.Expressions.ArgumentReference`1.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Expressions.ArgumentReference`1" />.</summary>
    </member>
    <member name="M:System.Activities.Expressions.ArgumentReference`1.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Expressions.ArgumentReference`1" /> с заданным именем аргумента.</summary>
      <param name="argumentName">Имя аргумента.</param>
    </member>
    <member name="P:System.Activities.Expressions.ArgumentReference`1.ArgumentName">
      <summary>Возвращает или задает имя аргумента, ссылка на который должна быть возвращена.</summary>
      <returns>Имя аргумента.</returns>
    </member>
    <member name="P:System.Activities.Expressions.ArgumentReference`1.LocationReference">
      <summary>Получает ссылку на расположение.</summary>
      <returns>Ссылка на расположение.</returns>
    </member>
    <member name="M:System.Activities.Expressions.ArgumentReference`1.ToString">
      <summary>Возвращает представление <see cref="T:System.String" /> для <see cref="T:System.Activities.Expressions.ArgumentReference`1" />.</summary>
      <returns>Имя аргумента, если было задано значение <see cref="P:System.Activities.Expressions.ArgumentReference`1.ArgumentName" />; в противном случае — идентификатор и имя действия.</returns>
    </member>
    <member name="T:System.Activities.Expressions.ArgumentValue`1">
      <summary>Представляет аргумент <see cref="T:System.Activities.Argument" />, используемый в выражении в качестве правостороннего значения.</summary>
      <typeparam name="T">Тип значения, возвращаемого <see cref="T:System.Activities.Expressions.ArgumentValue`1" />.</typeparam>
    </member>
    <member name="M:System.Activities.Expressions.ArgumentValue`1.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Expressions.ArgumentValue`1" />.</summary>
    </member>
    <member name="M:System.Activities.Expressions.ArgumentValue`1.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Expressions.ArgumentValue`1" /> с заданным именем аргумента.</summary>
      <param name="argumentName">Имя аргумента.</param>
    </member>
    <member name="P:System.Activities.Expressions.ArgumentValue`1.ArgumentName">
      <summary>Возвращает или задает имя аргумента, значение которого должно быть возвращено.</summary>
      <returns>Имя аргумента.</returns>
    </member>
    <member name="P:System.Activities.Expressions.ArgumentValue`1.LocationReference">
      <summary>Получает ссылку на расположение значения аргумента.</summary>
      <returns>Ссылка на расположение значения аргумента.</returns>
    </member>
    <member name="M:System.Activities.Expressions.ArgumentValue`1.ToString">
      <summary>Представление <see cref="T:System.String" /> для <see cref="T:System.Activities.Expressions.ArgumentValue`1" />.</summary>
      <returns>Имя аргумента, если было задано значение <see cref="P:System.Activities.Expressions.ArgumentValue`1.ArgumentName" />; в противном случае — идентификатор и имя действия.</returns>
    </member>
    <member name="T:System.Activities.Expressions.ArrayItemReference`1">
      <summary>Ссылка на элемент в массиве.</summary>
      <typeparam name="TItem">Тип элементов в массиве.</typeparam>
    </member>
    <member name="M:System.Activities.Expressions.ArrayItemReference`1.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Expressions.ArrayItemReference`1" />.</summary>
    </member>
    <member name="P:System.Activities.Expressions.ArrayItemReference`1.Array">
      <summary>Возвращает или задает массив, на элемент которого приведена ссылка.</summary>
      <returns>Массив, на элемент которого приведена ссылка.</returns>
    </member>
    <member name="P:System.Activities.Expressions.ArrayItemReference`1.Index">
      <summary>Возвращает или задает номер индекса массива, на элемент которого приведена ссылка.</summary>
      <returns>Номер индекса массива, на элемент которого приведена ссылка.</returns>
    </member>
    <member name="T:System.Activities.Expressions.ArrayItemValue`1">
      <summary>Элемент в массиве.</summary>
      <typeparam name="TItem">Тип элементов в массиве.</typeparam>
    </member>
    <member name="M:System.Activities.Expressions.ArrayItemValue`1.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Expressions.ArrayItemValue`1" />.</summary>
    </member>
    <member name="P:System.Activities.Expressions.ArrayItemValue`1.Array">
      <summary>Возвращает или задает массив, к которому принадлежит элемент.</summary>
      <returns>Массив, которому принадлежит элемент.</returns>
    </member>
    <member name="P:System.Activities.Expressions.ArrayItemValue`1.Index">
      <summary>Возвращает или задает номер индекса элемента в массиве.</summary>
      <returns>Индекс элемента в массиве.</returns>
    </member>
    <member name="T:System.Activities.Expressions.As`2">
      <summary>Пытается преобразовать операнд в заданный тип. Если преобразование нельзя выполнить, для результата задается значение <see langword="null" />.</summary>
      <typeparam name="TOper*******">Тип операнда.</typeparam>
      <typeparam name="TResult">Тип результата.</typeparam>
    </member>
    <member name="M:System.Activities.Expressions.As`2.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Expressions.As`2" />.</summary>
    </member>
    <member name="P:System.Activities.Expressions.As`2.Oper*******">
      <summary>Возвращает или задает операнд.</summary>
      <returns>Операнд.</returns>
    </member>
    <member name="T:System.Activities.Expressions.AssemblyReference">
      <summary>Представляет ссылку на сборку.</summary>
    </member>
    <member name="M:System.Activities.Expressions.AssemblyReference.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Expressions.AssemblyReference" />.</summary>
    </member>
    <member name="P:System.Activities.Expressions.AssemblyReference.Assembly">
      <summary>Получает или задает сборку ссылки на сборку.</summary>
      <returns>Сборка ссылки на сборку.</returns>
    </member>
    <member name="P:System.Activities.Expressions.AssemblyReference.AssemblyName">
      <summary>Получает или задает имя сборки.</summary>
      <returns>Имя сборки.</returns>
    </member>
    <member name="M:System.Activities.Expressions.AssemblyReference.LoadAssembly">
      <summary>Производит попытку загрузить сборку.</summary>
    </member>
    <member name="M:System.Activities.Expressions.AssemblyReference.op_Implicit(System.Reflection.Assembly)~System.Activities.Expressions.AssemblyReference">
      <summary>Преобразует указанную ссылку на сборку.</summary>
      <param name="assembly">Сборка.</param>
      <returns>Экземпляр объекта <see cref="T:System.Activities.Expressions.AssemblyReference" />.</returns>
    </member>
    <member name="M:System.Activities.Expressions.AssemblyReference.op_Implicit(System.Reflection.AssemblyName)~System.Activities.Expressions.AssemblyReference">
      <summary>Преобразует указанную ссылку на сборку с указанным именем сборки.</summary>
      <param name="assemblyName">Имя сборки.</param>
      <returns>Экземпляр объекта <see cref="T:System.Activities.Expressions.AssemblyReference" />.</returns>
    </member>
    <member name="T:System.Activities.Expressions.Cast`2">
      <summary>Пытается преобразовать операнд в заданный тип. Если преобразование невозможно выполнить, во время выполнения возникает ошибка.</summary>
      <typeparam name="TOper*******">Тип операнда.</typeparam>
      <typeparam name="TResult">Тип результата.</typeparam>
    </member>
    <member name="M:System.Activities.Expressions.Cast`2.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Expressions.Cast`2" />.</summary>
    </member>
    <member name="P:System.Activities.Expressions.Cast`2.Checked">
      <summary>Возвращает или задает значение, указывающее, выполняется ли операция приведения в проверяемом контексте.</summary>
      <returns>Значение <see langword="true" />, если операция приведения выполняется в проверяемом контексте; в противном случае — значение <see langword="false" />. Значение по умолчанию: <see langword="true" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.Cast`2.Oper*******">
      <summary>Возвращает или задает операнд.</summary>
      <returns>Операнд.</returns>
    </member>
    <member name="T:System.Activities.Expressions.CompiledExpressionInvoker">
      <summary>Представляет компилированное средство вызова выражения.</summary>
    </member>
    <member name="M:System.Activities.Expressions.CompiledExpressionInvoker.#ctor(System.Activities.Expressions.ITextExpression,System.Boolean,System.Activities.CodeActivityMetadata)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Expressions.CompiledExpressionInvoker" /> с помощью выражения, isReference и метаданных.</summary>
      <param name="expression">Выражение.</param>
      <param name="isReference">Значение <see langword="true" />, если требуется сохранить данные ссылки на объект; в противном случае — значение <see langword="false" />.</param>
      <param name="metadata">Метаданные действия.</param>
    </member>
    <member name="M:System.Activities.Expressions.CompiledExpressionInvoker.GetCompiledExpressionRoot(System.Object)">
      <summary>Задает корень скомпилированного выражения.</summary>
      <param name="target">Целевой объект.</param>
      <returns>Корень скомпилированного выражения.</returns>
    </member>
    <member name="M:System.Activities.Expressions.CompiledExpressionInvoker.GetCompiledExpressionRootForImplementation(System.Object)">
      <summary>Получает корень скомпилированного выражения для реализации <see cref="T:System.Activities.Expressions.CompiledExpressionInvoker" />.</summary>
      <param name="target">Целевой объект.</param>
      <returns>Корень скомпилированного выражения.</returns>
    </member>
    <member name="M:System.Activities.Expressions.CompiledExpressionInvoker.InvokeExpression(System.Activities.ActivityContext)">
      <summary>Вызывает скомпилированное выражение.</summary>
      <param name="activityContext">Контекст действия.</param>
      <returns>Вызванное выражение.</returns>
    </member>
    <member name="P:System.Activities.Expressions.CompiledExpressionInvoker.IsStaticallyCompiled">
      <summary>Получает или задает, значение, указывающее, является ли скомпилированное средство вызова выражений скомпилированным статически.</summary>
      <returns>Значение <see langword="true" />, если скомпилированное средство вызова выражений скомпилировано статически; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Activities.Expressions.CompiledExpressionInvoker.SetCompiledExpressionRoot(System.Object,System.Activities.XamlIntegration.ICompiledExpressionRoot)">
      <summary>Задает корень скомпилированного выражения.</summary>
      <param name="target">Целевой объект.</param>
      <param name="compiledExpressionRoot">Корень скомпилированного выражения, который требуется задать.</param>
    </member>
    <member name="M:System.Activities.Expressions.CompiledExpressionInvoker.SetCompiledExpressionRootForImplementation(System.Object,System.Activities.XamlIntegration.ICompiledExpressionRoot)">
      <summary>Задает корень скомпилированного выражения для реализации <see cref="T:System.Activities.Expressions.CompiledExpressionInvoker" />.</summary>
      <param name="target">Целевой объект.</param>
      <param name="compiledExpressionRoot">Корень скомпилированного выражения, который требуется задать.</param>
    </member>
    <member name="T:System.Activities.Expressions.DelegateArgumentReference`1">
      <summary>Представляет переменную <see cref="T:System.Activities.DelegateArgument" />, используемую в выражении в качестве левого операнда.</summary>
      <typeparam name="T">Тип данных объекта <see cref="T:System.Activities.DelegateArgument" />.</typeparam>
    </member>
    <member name="M:System.Activities.Expressions.DelegateArgumentReference`1.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Expressions.DelegateArgumentReference`1" />.</summary>
    </member>
    <member name="M:System.Activities.Expressions.DelegateArgumentReference`1.#ctor(System.Activities.DelegateArgument)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Expressions.DelegateArgumentReference`1" /> с использованием указанного объекта <see cref="T:System.Activities.DelegateArgument" />.</summary>
      <param name="delegateArgument">Значение выражения.</param>
    </member>
    <member name="P:System.Activities.Expressions.DelegateArgumentReference`1.DelegateArgument">
      <summary>Возвращает или задает аргумент <see cref="T:System.Activities.DelegateArgument" />, представленный значением <see cref="T:System.Activities.Expressions.DelegateArgumentReference`1" />.</summary>
      <returns>Аргумент <see cref="T:System.Activities.DelegateArgument" />, представленный значением <see cref="T:System.Activities.Expressions.DelegateArgumentReference`1" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.DelegateArgumentReference`1.LocationReference">
      <summary>Получает ссылку на расположение аргумента делегата.</summary>
      <returns>Ссылка на расположение аргумента делегата.</returns>
    </member>
    <member name="T:System.Activities.Expressions.DelegateArgumentValue`1">
      <summary>Представляет переменную <see cref="T:System.Activities.DelegateArgument" />, используемую в выражении в качестве правого операнда.</summary>
      <typeparam name="T">Тип данных объекта <see cref="T:System.Activities.DelegateArgument" />.</typeparam>
    </member>
    <member name="M:System.Activities.Expressions.DelegateArgumentValue`1.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Expressions.DelegateArgumentValue`1" />.</summary>
    </member>
    <member name="M:System.Activities.Expressions.DelegateArgumentValue`1.#ctor(System.Activities.DelegateArgument)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Expressions.DelegateArgumentValue`1" /> с использованием указанного объекта <see cref="T:System.Activities.DelegateArgument" />.</summary>
      <param name="delegateArgument">Значение выражения.</param>
    </member>
    <member name="P:System.Activities.Expressions.DelegateArgumentValue`1.DelegateArgument">
      <summary>Возвращает или задает аргумент <see cref="T:System.Activities.DelegateArgument" />, представленный значением <see cref="T:System.Activities.Expressions.DelegateArgumentValue`1" />.</summary>
      <returns>Аргумент <see cref="T:System.Activities.DelegateArgument" />, представленный значением <see cref="T:System.Activities.Expressions.DelegateArgumentValue`1" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.DelegateArgumentValue`1.LocationReference">
      <summary>Получает ссылку на расположение объекта <see cref="T:System.Activities.Expressions.DelegateArgumentValue`1" />.</summary>
      <returns>Ссылка на расположение.</returns>
    </member>
    <member name="T:System.Activities.Expressions.Divide`3">
      <summary>Вычисляет частное операции деления.</summary>
      <typeparam name="TLeft">Тип левого операнда.</typeparam>
      <typeparam name="TRight">Тип правого операнда.</typeparam>
      <typeparam name="TResult">Тип результата.</typeparam>
    </member>
    <member name="M:System.Activities.Expressions.Divide`3.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Expressions.Divide`3" />.</summary>
    </member>
    <member name="P:System.Activities.Expressions.Divide`3.Left">
      <summary>Возвращает или задает левый операнд. Левый операнд — делитель.</summary>
      <returns>Левый операнд.</returns>
    </member>
    <member name="P:System.Activities.Expressions.Divide`3.Right">
      <summary>Возвращает или задает правый операнд. Правый операнд — делимое.</summary>
      <returns>Правый операнд.</returns>
    </member>
    <member name="T:System.Activities.Expressions.EnvironmentLocationReference`1">
      <summary>Представляет ссылку местоположения среды.</summary>
      <typeparam name="T">Тип данных <see cref="T:System.Activities.Expressions.EnvironmentLocationReference`1" />.</typeparam>
    </member>
    <member name="M:System.Activities.Expressions.EnvironmentLocationReference`1.CacheMetadata(System.Activities.CodeActivityMetadata)">
      <summary>Создает и проверяет описание аргументов, переменных, дочерних действий и делегатов действия.</summary>
      <param name="metadata">Метаданные действия, инкапсулирующие аргументы, переменные, дочерние действия и делегаты для действия.</param>
    </member>
    <member name="M:System.Activities.Expressions.EnvironmentLocationReference`1.Execute(System.Activities.CodeActivityContext)">
      <summary>Выполняет действие.</summary>
      <param name="context">Контекст выполнения, в котором выполняется действие.</param>
      <returns>Выполнение действия.</returns>
    </member>
    <member name="P:System.Activities.Expressions.EnvironmentLocationReference`1.LocationReference">
      <summary>Получает значение ссылки на расположение.</summary>
      <returns>Значение ссылки на расположение.</returns>
    </member>
    <member name="T:System.Activities.Expressions.EnvironmentLocationValue`1">
      <summary>Представляет значение местоположения среды.</summary>
      <typeparam name="T">Тип данных объекта <see cref="T:System.Activities.Expressions.EnvironmentLocationValue`1" />.</typeparam>
    </member>
    <member name="M:System.Activities.Expressions.EnvironmentLocationValue`1.CacheMetadata(System.Activities.CodeActivityMetadata)">
      <summary>Создает и проверяет описание аргументов, переменных, дочерних действий и делегатов действия.</summary>
      <param name="metadata">Метаданные действия, инкапсулирующие аргументы, переменные, дочерние действия и делегаты для действия.</param>
    </member>
    <member name="M:System.Activities.Expressions.EnvironmentLocationValue`1.Execute(System.Activities.CodeActivityContext)">
      <summary>Выполняет действие.</summary>
      <param name="context">Контекст выполнения, в котором выполняется действие.</param>
      <returns>Выполнение действия.</returns>
    </member>
    <member name="P:System.Activities.Expressions.EnvironmentLocationValue`1.LocationReference">
      <summary>Получает значение ссылки на расположение.</summary>
      <returns>Значение ссылки на расположение.</returns>
    </member>
    <member name="T:System.Activities.Expressions.Equal`3">
      <summary>Выполняет проверку двух значений на равенство. Если два значения равны, выражение возвращает значение <see langword="true" />; в противном случае — значение <see langword="false" />.</summary>
      <typeparam name="TLeft">Тип левого операнда.</typeparam>
      <typeparam name="TRight">Тип правого операнда.</typeparam>
      <typeparam name="TResult">Тип результата.</typeparam>
    </member>
    <member name="M:System.Activities.Expressions.Equal`3.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Expressions.Equal`3" />.</summary>
    </member>
    <member name="P:System.Activities.Expressions.Equal`3.Left">
      <summary>Возвращает или задает левый операнд.</summary>
      <returns>Левый операнд.</returns>
    </member>
    <member name="P:System.Activities.Expressions.Equal`3.Right">
      <summary>Возвращает или задает правый операнд.</summary>
      <returns>Правый операнд.</returns>
    </member>
    <member name="T:System.Activities.Expressions.ExpressionServices">
      <summary>API, используемый для преобразования выражений, учитывающих среду, в дерево действий.</summary>
    </member>
    <member name="M:System.Activities.Expressions.ExpressionServices.Convert``1(System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,``0}})">
      <summary>Преобразует выражение, учитывающее среду рабочего процесса, в дерево действий.</summary>
      <param name="expression">Выражение для преобразования.</param>
      <typeparam name="TResult">Тип, в который преобразуется выражение.</typeparam>
      <returns>Преобразованное выражение.</returns>
    </member>
    <member name="M:System.Activities.Expressions.ExpressionServices.ConvertReference``1(System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,``0}})">
      <summary>Преобразует ссылку на выражение, учитывающее среду рабочего процесса, в дерево действий.</summary>
      <param name="expression">Выражение для преобразования.</param>
      <typeparam name="TResult">Тип, в который преобразуется выражение.</typeparam>
      <returns>Преобразованное выражение.</returns>
    </member>
    <member name="M:System.Activities.Expressions.ExpressionServices.TryConvert``1(System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,``0}},System.Activities.Activity{``0}@)">
      <summary>Преобразует выражение, учитывающее среду рабочего процесса, в дерево действий.</summary>
      <param name="expression">Выражение для преобразования.</param>
      <param name="result">Преобразованное выражение.</param>
      <typeparam name="TResult">Тип, в который преобразуется выражение.</typeparam>
      <returns>Значение <see langword="true" />, если выражение может быть преобразовано; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Activities.Expressions.ExpressionServices.TryConvertReference``1(System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,``0}},System.Activities.Activity{System.Activities.Location{``0}}@)">
      <summary>Преобразует ссылку на выражение, учитывающее среду рабочего процесса, в дерево действий.</summary>
      <param name="expression">Выражение для преобразования.</param>
      <param name="result">Преобразованное выражение.</param>
      <typeparam name="TResult">Тип, в который преобразуется выражение.</typeparam>
      <returns>Значение <see langword="true" />, если выражение может быть преобразовано; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="T:System.Activities.Expressions.FieldReference`2">
      <summary>Ссылка на поле.</summary>
      <typeparam name="TOper*******">Тип операнда.</typeparam>
      <typeparam name="TResult">Тип результата.</typeparam>
    </member>
    <member name="M:System.Activities.Expressions.FieldReference`2.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Expressions.FieldReference`2" />.</summary>
    </member>
    <member name="P:System.Activities.Expressions.FieldReference`2.FieldName">
      <summary>Возвращает или задает имя поля, на которое приведена ссылка.</summary>
      <returns>Имя поля, на которое приведена ссылка.</returns>
    </member>
    <member name="P:System.Activities.Expressions.FieldReference`2.Oper*******">
      <summary>Возвращает или задает ссылку на поле.</summary>
      <returns>Ссылка на поле.</returns>
    </member>
    <member name="T:System.Activities.Expressions.FieldValue`2">
      <summary>Значение поля.</summary>
      <typeparam name="TOper*******">Тип операнда.</typeparam>
      <typeparam name="TResult">Тип результата.</typeparam>
    </member>
    <member name="M:System.Activities.Expressions.FieldValue`2.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Expressions.FieldValue`2" />.</summary>
    </member>
    <member name="P:System.Activities.Expressions.FieldValue`2.FieldName">
      <summary>Возвращает или задает имя поля.</summary>
      <returns>Имя поля.</returns>
    </member>
    <member name="P:System.Activities.Expressions.FieldValue`2.Oper*******">
      <summary>Возвращает или задает значение поля.</summary>
      <returns>Значение поля.</returns>
    </member>
    <member name="T:System.Activities.Expressions.GreaterThan`3">
      <summary>Выполняет проверку отношения между двумя значениями. Если левый операнд больше правого, выражение возвращает значение <see langword="true" />. В противном случае возвращает значение <see langword="false" />.</summary>
      <typeparam name="TLeft">Тип левого операнда.</typeparam>
      <typeparam name="TRight">Тип правого операнда.</typeparam>
      <typeparam name="TResult">Тип результата.</typeparam>
    </member>
    <member name="M:System.Activities.Expressions.GreaterThan`3.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Expressions.GreaterThan`3" />.</summary>
    </member>
    <member name="P:System.Activities.Expressions.GreaterThan`3.Left">
      <summary>Возвращает или задает левый операнд.</summary>
      <returns>Аргумент <see cref="F:System.Activities.Presentation.View.PropertyKind.InArgument" />, который представляет левый операнд.</returns>
    </member>
    <member name="P:System.Activities.Expressions.GreaterThan`3.Right">
      <summary>Возвращает или задает правый операнд.</summary>
      <returns>Аргумент <see cref="F:System.Activities.Presentation.View.PropertyKind.InArgument" />, который представляет правый операнд.</returns>
    </member>
    <member name="T:System.Activities.Expressions.GreaterThanOrEqual`3">
      <summary>Выполняет проверку отношения между двумя значениями. Если левый операнд больше или равен правому, выражение возвращает значение <see langword="true" />; в противном случае — значение <see langword="false" />.</summary>
      <typeparam name="TLeft">Тип левого операнда.</typeparam>
      <typeparam name="TRight">Тип правого операнда.</typeparam>
      <typeparam name="TResult">Тип результата.</typeparam>
    </member>
    <member name="M:System.Activities.Expressions.GreaterThanOrEqual`3.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Expressions.GreaterThanOrEqual`3" />.</summary>
    </member>
    <member name="P:System.Activities.Expressions.GreaterThanOrEqual`3.Left">
      <summary>Возвращает или задает левый операнд.</summary>
      <returns>Левый операнд.</returns>
    </member>
    <member name="P:System.Activities.Expressions.GreaterThanOrEqual`3.Right">
      <summary>Возвращает или задает правый операнд.</summary>
      <returns>Правый операнд.</returns>
    </member>
    <member name="T:System.Activities.Expressions.IndexerReference`2">
      <summary>Представляет элемент, на который ссылается индексатор объекта, который можно использовать в качестве левостороннего значения в выражении.</summary>
      <typeparam name="TOper*******">Тип в индексаторе.</typeparam>
      <typeparam name="TItem">Тип массива индексатора.</typeparam>
    </member>
    <member name="M:System.Activities.Expressions.IndexerReference`2.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Expressions.IndexerReference`2" />.</summary>
    </member>
    <member name="P:System.Activities.Expressions.IndexerReference`2.Indices">
      <summary>Возвращает коллекцию аргументов, которые представляют индексы элемента в массиве индексатора.</summary>
      <returns>Индексы элемента в массиве индексатора.</returns>
    </member>
    <member name="P:System.Activities.Expressions.IndexerReference`2.Oper*******">
      <summary>Возвращает или задает объект, содержащий индексатор.</summary>
      <returns>Объект, содержащий индексатор.</returns>
    </member>
    <member name="T:System.Activities.Expressions.InvokeFunc`1">
      <summary>Вызывает <see cref="T:System.Activities.ActivityFunc`1" />.</summary>
      <typeparam name="TResult">Тип возвращаемого аргумента <see cref="T:System.Activities.OutArgument`1" />, значение которого возвращается от функции <see cref="T:System.Activities.ActivityFunc`1" />.</typeparam>
    </member>
    <member name="M:System.Activities.Expressions.InvokeFunc`1.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Expressions.InvokeFunc`1" />.</summary>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`1.Func">
      <summary>Возвращает или задает вызываемую функцию <see cref="T:System.Activities.ActivityFunc`1" />.</summary>
      <returns>Вызываемая функция действия.</returns>
    </member>
    <member name="T:System.Activities.Expressions.InvokeFunc`10">
      <summary>Вызывает <see cref="T:System.Activities.ActivityFunc`10" />.</summary>
      <typeparam name="T1">Тип первого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`10" />.</typeparam>
      <typeparam name="T2">Тип второго аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`10" />.</typeparam>
      <typeparam name="T3">Тип третьего аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается в функцию <see cref="T:System.Activities.ActivityFunc`10" />.</typeparam>
      <typeparam name="T4">Тип четвертого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`10" />.</typeparam>
      <typeparam name="T5">Тип пятого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`10" />.</typeparam>
      <typeparam name="T6">Тип шестого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`10" />.</typeparam>
      <typeparam name="T7">Тип седьмого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`10" />.</typeparam>
      <typeparam name="T8">Тип восьмого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`10" />.</typeparam>
      <typeparam name="T9">Тип девятого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`10" />.</typeparam>
      <typeparam name="TResult">Тип возвращаемого аргумента <see cref="T:System.Activities.OutArgument`1" />, значение которого возвращается от функции <see cref="T:System.Activities.ActivityFunc`10" />.</typeparam>
    </member>
    <member name="M:System.Activities.Expressions.InvokeFunc`10.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Expressions.InvokeFunc`10" />.</summary>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`10.Argument1">
      <summary>Возвращает или задает первый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`10" />.</summary>
      <returns>Первый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`10" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`10.Argument2">
      <summary>Возвращает или задает второй аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`10" />.</summary>
      <returns>Второй аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`10" />. Возвращает аргумент <see cref="T:System.Activities.InArgument`1" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`10.Argument3">
      <summary>Возвращает или задает третий аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`10" />.</summary>
      <returns>Третий аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`10" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`10.Argument4">
      <summary>Возвращает или задает четвертый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`10" />.</summary>
      <returns>Четвертый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`10" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`10.Argument5">
      <summary>Возвращает или задает пятый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`10" />.</summary>
      <returns>Пятый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`10" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`10.Argument6">
      <summary>Возвращает или задает шестой аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`10" />.</summary>
      <returns>Шестой аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`10" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`10.Argument7">
      <summary>Возвращает или задает седьмой аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`10" />.</summary>
      <returns>Седьмой аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`10" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`10.Argument8">
      <summary>Возвращает или задает восьмой аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`10" />.</summary>
      <returns>Восьмой аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`10" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`10.Argument9">
      <summary>Возвращает или задает девятый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`10" />.</summary>
      <returns>Девятый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`10" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`10.Func">
      <summary>Возвращает или задает вызываемую функцию <see cref="T:System.Activities.ActivityFunc`10" />.</summary>
      <returns>Вызываемая функция действия.</returns>
    </member>
    <member name="T:System.Activities.Expressions.InvokeFunc`11">
      <summary>Вызывает <see cref="T:System.Activities.ActivityFunc`11" />.</summary>
      <typeparam name="T1">Тип первого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`11" />.</typeparam>
      <typeparam name="T2">Тип второго аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`11" />.</typeparam>
      <typeparam name="T3">Тип третьего аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается в функцию <see cref="T:System.Activities.ActivityFunc`11" />.</typeparam>
      <typeparam name="T4">Тип четвертого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`11" />.</typeparam>
      <typeparam name="T5">Тип пятого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`11" />.</typeparam>
      <typeparam name="T6">Тип шестого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`11" />.</typeparam>
      <typeparam name="T7">Тип седьмого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`11" />.</typeparam>
      <typeparam name="T8">Тип восьмого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`11" />.</typeparam>
      <typeparam name="T9">Тип девятого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`11" />.</typeparam>
      <typeparam name="T10">Тип десятого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`11" />.</typeparam>
      <typeparam name="TResult">Тип возвращаемого аргумента <see cref="T:System.Activities.OutArgument`1" />, значение которого возвращается от функции <see cref="T:System.Activities.ActivityFunc`11" />.</typeparam>
    </member>
    <member name="M:System.Activities.Expressions.InvokeFunc`11.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Expressions.InvokeFunc`11" />.</summary>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`11.Argument1">
      <summary>Возвращает или задает первый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`11" />.</summary>
      <returns>Первый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`11" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`11.Argument10">
      <summary>Возвращает или задает десятый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`11" />.</summary>
      <returns>Десятый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`11" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`11.Argument2">
      <summary>Возвращает или задает второй аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`11" />.</summary>
      <returns>Второй аргумент, передаваемый объекту <see cref="T:System.Activities.ActivityFunc`11" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`11.Argument3">
      <summary>Возвращает или задает третий аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`11" />.</summary>
      <returns>Третий аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`11" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`11.Argument4">
      <summary>Возвращает или задает четвертый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`11" />.</summary>
      <returns>Четвертый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`11" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`11.Argument5">
      <summary>Возвращает или задает пятый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`11" />.</summary>
      <returns>Пятый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`11" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`11.Argument6">
      <summary>Возвращает или задает шестой аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`11" />.</summary>
      <returns>Шестой аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`11" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`11.Argument7">
      <summary>Возвращает или задает седьмой аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`11" />.</summary>
      <returns>Седьмой аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`11" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`11.Argument8">
      <summary>Возвращает или задает восьмой аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`11" />.</summary>
      <returns>Восьмой аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`11" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`11.Argument9">
      <summary>Возвращает или задает девятый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`11" />.</summary>
      <returns>Девятый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`11" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`11.Func">
      <summary>Возвращает или задает вызываемую функцию <see cref="T:System.Activities.ActivityFunc`11" />.</summary>
      <returns>Вызываемая функция действия.</returns>
    </member>
    <member name="T:System.Activities.Expressions.InvokeFunc`12">
      <summary>Вызывает функцию <see cref="T:System.Activities.ActivityFunc`12" />.</summary>
      <typeparam name="T1">Тип первого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`12" />.</typeparam>
      <typeparam name="T2">Тип второго аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`12" />.</typeparam>
      <typeparam name="T3">Тип третьего аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`12" />.</typeparam>
      <typeparam name="T4">Тип четвертого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`12" />.</typeparam>
      <typeparam name="T5">Тип пятого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`12" />.</typeparam>
      <typeparam name="T6">Тип шестого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`12" />.</typeparam>
      <typeparam name="T7">Тип седьмого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`12" />.</typeparam>
      <typeparam name="T8">Тип восьмого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`12" />.</typeparam>
      <typeparam name="T9">Тип девятого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`12" />.</typeparam>
      <typeparam name="T10">Тип десятого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`12" />.</typeparam>
      <typeparam name="T11">Тип одиннадцатого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`12" />.</typeparam>
      <typeparam name="TResult">Тип возвращаемого аргумента <see cref="T:System.Activities.OutArgument`1" />, значение которого возвращается от функции <see cref="T:System.Activities.ActivityFunc`12" />.</typeparam>
    </member>
    <member name="M:System.Activities.Expressions.InvokeFunc`12.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Expressions.InvokeFunc`12" />.</summary>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`12.Argument1">
      <summary>Возвращает или задает первый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`12" />.</summary>
      <returns>Первый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`12" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`12.Argument10">
      <summary>Возвращает или задает десятый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`12" />.</summary>
      <returns>Десятый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`12" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`12.Argument11">
      <summary>Возвращает или задает одиннадцатый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`12" />.</summary>
      <returns>Одиннадцатый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`12" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`12.Argument2">
      <summary>Возвращает или задает второй аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`12" />.</summary>
      <returns>Второй аргумент, передаваемый объекту <see cref="T:System.Activities.ActivityFunc`12" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`12.Argument3">
      <summary>Возвращает или задает третий аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`12" />.</summary>
      <returns>Третий аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`12" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`12.Argument4">
      <summary>Возвращает или задает четвертый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`12" />.</summary>
      <returns>Четвертый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`12" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`12.Argument5">
      <summary>Возвращает или задает пятый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`12" />.</summary>
      <returns>Пятый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`12" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`12.Argument6">
      <summary>Возвращает или задает шестой аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`12" />.</summary>
      <returns>Шестой аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`12" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`12.Argument7">
      <summary>Возвращает или задает седьмой аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`12" />.</summary>
      <returns>Седьмой аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`12" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`12.Argument8">
      <summary>Возвращает или задает восьмой аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`12" />.</summary>
      <returns>Восьмой аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`12" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`12.Argument9">
      <summary>Возвращает или задает девятый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`12" />.</summary>
      <returns>Девятый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`12" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`12.Func">
      <summary>Возвращает или задает вызываемую функцию <see cref="T:System.Activities.ActivityFunc`12" />.</summary>
      <returns>Вызываемая функция действия.</returns>
    </member>
    <member name="T:System.Activities.Expressions.InvokeFunc`13">
      <summary>Вызывает <see cref="T:System.Activities.ActivityFunc`13" />.</summary>
      <typeparam name="T1">Тип первого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`13" />.</typeparam>
      <typeparam name="T2">Тип второго аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`13" />.</typeparam>
      <typeparam name="T3">Тип третьего аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается в функцию <see cref="T:System.Activities.ActivityFunc`13" />.</typeparam>
      <typeparam name="T4">Тип четвертого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`13" />.</typeparam>
      <typeparam name="T5">Тип пятого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`13" />.</typeparam>
      <typeparam name="T6">Тип шестого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`13" />.</typeparam>
      <typeparam name="T7">Тип седьмого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`13" />.</typeparam>
      <typeparam name="T8">Тип восьмого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`13" />.</typeparam>
      <typeparam name="T9">Тип девятого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`13" />.</typeparam>
      <typeparam name="T10">Тип десятого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`13" />.</typeparam>
      <typeparam name="T11">Тип одиннадцатого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается в функцию <see cref="T:System.Activities.ActivityFunc`13" />.</typeparam>
      <typeparam name="T12">Тип двенадцатого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`13" />.</typeparam>
      <typeparam name="TResult">Тип возвращаемого аргумента <see cref="T:System.Activities.OutArgument`1" />, значение которого возвращается от функции <see cref="T:System.Activities.ActivityFunc`13" />.</typeparam>
    </member>
    <member name="M:System.Activities.Expressions.InvokeFunc`13.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Expressions.InvokeFunc`13" />.</summary>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`13.Argument1">
      <summary>Возвращает или задает первый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`13" />.</summary>
      <returns>Первый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`13" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`13.Argument10">
      <summary>Возвращает или задает десятый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`13" />.</summary>
      <returns>Десятый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`13" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`13.Argument11">
      <summary>Возвращает или задает одиннадцатый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`13" />.</summary>
      <returns>Одиннадцатый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`13" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`13.Argument12">
      <summary>Возвращает или задает двенадцатый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`13" />.</summary>
      <returns>Двенадцатый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`13" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`13.Argument2">
      <summary>Возвращает или задает второй аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`13" />.</summary>
      <returns>Второй аргумент, передаваемый объекту <see cref="T:System.Activities.ActivityFunc`13" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`13.Argument3">
      <summary>Возвращает или задает третий аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`13" />.</summary>
      <returns>Третий аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`13" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`13.Argument4">
      <summary>Возвращает или задает четвертый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`13" />.</summary>
      <returns>Четвертый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`13" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`13.Argument5">
      <summary>Возвращает или задает пятый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`13" />.</summary>
      <returns>Пятый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`13" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`13.Argument6">
      <summary>Возвращает или задает шестой аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`13" />.</summary>
      <returns>Шестой аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`13" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`13.Argument7">
      <summary>Возвращает или задает седьмой аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`13" />.</summary>
      <returns>Седьмой аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`13" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`13.Argument8">
      <summary>Возвращает или задает восьмой аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`13" />.</summary>
      <returns>Восьмой аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`13" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`13.Argument9">
      <summary>Возвращает или задает девятый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`13" />.</summary>
      <returns>Девятый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`13" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`13.Func">
      <summary>Возвращает или задает вызываемую функцию <see cref="T:System.Activities.ActivityFunc`13" />.</summary>
      <returns>Вызываемая функция действия.</returns>
    </member>
    <member name="T:System.Activities.Expressions.InvokeFunc`14">
      <summary>Вызывает <see cref="T:System.Activities.ActivityFunc`14" />.</summary>
      <typeparam name="T1">Тип первого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`14" />.</typeparam>
      <typeparam name="T2">Тип второго аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`14" />.</typeparam>
      <typeparam name="T3">Тип третьего аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается в функцию <see cref="T:System.Activities.ActivityFunc`14" />.</typeparam>
      <typeparam name="T4">Тип четвертого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`14" />.</typeparam>
      <typeparam name="T5">Тип пятого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`14" />.</typeparam>
      <typeparam name="T6">Тип шестого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`14" />.</typeparam>
      <typeparam name="T7">Тип седьмого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`14" />.</typeparam>
      <typeparam name="T8">Тип восьмого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`14" />.</typeparam>
      <typeparam name="T9">Тип девятого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`14" />.</typeparam>
      <typeparam name="T10">Тип десятого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`14" />.</typeparam>
      <typeparam name="T11">Тип одиннадцатого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается в функцию <see cref="T:System.Activities.ActivityFunc`14" />.</typeparam>
      <typeparam name="T12">Тип двенадцатого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`14" />.</typeparam>
      <typeparam name="T13">Тип тринадцатого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`14" />.</typeparam>
      <typeparam name="TResult">Тип возвращаемого аргумента <see cref="T:System.Activities.OutArgument`1" />, значение которого возвращается от функции <see cref="T:System.Activities.ActivityFunc`14" />.</typeparam>
    </member>
    <member name="M:System.Activities.Expressions.InvokeFunc`14.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Expressions.InvokeFunc`14" />.</summary>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`14.Argument1">
      <summary>Возвращает или задает первый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`14" />.</summary>
      <returns>Первый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`14" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`14.Argument10">
      <summary>Возвращает или задает десятый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`14" />.</summary>
      <returns>Десятый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`14" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`14.Argument11">
      <summary>Возвращает или задает одиннадцатый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`14" />.</summary>
      <returns>Одиннадцатый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`14" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`14.Argument12">
      <summary>Возвращает или задает двенадцатый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`14" />.</summary>
      <returns>Двенадцатый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`14" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`14.Argument13">
      <summary>Возвращает или задает тринадцатый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`14" />.</summary>
      <returns>Тринадцатый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`14" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`14.Argument2">
      <summary>Возвращает или задает второй аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`14" />.</summary>
      <returns>Второй аргумент, передаваемый объекту <see cref="T:System.Activities.ActivityFunc`14" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`14.Argument3">
      <summary>Возвращает или задает третий аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`14" />.</summary>
      <returns>Третий аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`14" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`14.Argument4">
      <summary>Возвращает или задает четвертый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`14" />.</summary>
      <returns>Четвертый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`14" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`14.Argument5">
      <summary>Возвращает или задает пятый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`14" />.</summary>
      <returns>Пятый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`14" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`14.Argument6">
      <summary>Возвращает или задает шестой аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`14" />.</summary>
      <returns>Шестой аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`14" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`14.Argument7">
      <summary>Возвращает или задает седьмой аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`14" />.</summary>
      <returns>Седьмой аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`14" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`14.Argument8">
      <summary>Возвращает или задает восьмой аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`14" />.</summary>
      <returns>Восьмой аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`14" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`14.Argument9">
      <summary>Возвращает или задает девятый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`14" />.</summary>
      <returns>Девятый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`14" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`14.Func">
      <summary>Возвращает или задает вызываемую функцию <see cref="T:System.Activities.ActivityFunc`14" />.</summary>
      <returns>Вызываемая функция действия.</returns>
    </member>
    <member name="T:System.Activities.Expressions.InvokeFunc`15">
      <summary>Вызывает <see cref="T:System.Activities.ActivityFunc`15" />.</summary>
      <typeparam name="T1">Тип первого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`15" />.</typeparam>
      <typeparam name="T2">Тип второго аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`15" />.</typeparam>
      <typeparam name="T3">Тип третьего аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается в функцию <see cref="T:System.Activities.ActivityFunc`15" />.</typeparam>
      <typeparam name="T4">Тип четвертого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`15" />.</typeparam>
      <typeparam name="T5">Тип пятого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`15" />.</typeparam>
      <typeparam name="T6">Тип шестого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`15" />.</typeparam>
      <typeparam name="T7">Тип седьмого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`15" />.</typeparam>
      <typeparam name="T8">Тип восьмого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`15" />.</typeparam>
      <typeparam name="T9">Тип девятого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`15" />.</typeparam>
      <typeparam name="T10">Тип десятого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`15" />.</typeparam>
      <typeparam name="T11">Тип одиннадцатого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается в функцию <see cref="T:System.Activities.ActivityFunc`15" />.</typeparam>
      <typeparam name="T12">Тип двенадцатого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`15" />.</typeparam>
      <typeparam name="T13">Тип тринадцатого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`15" />.</typeparam>
      <typeparam name="T14">Тип четырнадцатого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`15" />.</typeparam>
      <typeparam name="TResult">Тип возвращаемого аргумента <see cref="T:System.Activities.OutArgument`1" />, значение которого возвращается от функции <see cref="T:System.Activities.ActivityFunc`15" />.</typeparam>
    </member>
    <member name="M:System.Activities.Expressions.InvokeFunc`15.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Expressions.InvokeFunc`15" />.</summary>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`15.Argument1">
      <summary>Возвращает или задает первый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`15" />.</summary>
      <returns>Первый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`15" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`15.Argument10">
      <summary>Возвращает или задает десятый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`15" />.</summary>
      <returns>Десятый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`15" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`15.Argument11">
      <summary>Возвращает или задает одиннадцатый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`15" />.</summary>
      <returns>Одиннадцатый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`15" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`15.Argument12">
      <summary>Возвращает или задает двенадцатый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`15" />.</summary>
      <returns>Двенадцатый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`15" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`15.Argument13">
      <summary>Возвращает или задает тринадцатый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`15" />.</summary>
      <returns>Тринадцатый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`15" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`15.Argument14">
      <summary>Возвращает или задает четырнадцатый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`15" />.</summary>
      <returns>Четырнадцатый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`15" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`15.Argument2">
      <summary>Возвращает или задает второй аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`15" />.</summary>
      <returns>Второй аргумент, передаваемый объекту <see cref="T:System.Activities.ActivityFunc`15" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`15.Argument3">
      <summary>Возвращает или задает третий аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`15" />.</summary>
      <returns>Третий аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`15" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`15.Argument4">
      <summary>Возвращает или задает четвертый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`15" />.</summary>
      <returns>Четвертый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`15" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`15.Argument5">
      <summary>Возвращает или задает пятый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`15" />.</summary>
      <returns>Пятый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`15" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`15.Argument6">
      <summary>Возвращает или задает шестой аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`15" />.</summary>
      <returns>Шестой аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`15" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`15.Argument7">
      <summary>Возвращает или задает седьмой аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`15" />.</summary>
      <returns>Седьмой аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`15" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`15.Argument8">
      <summary>Возвращает или задает восьмой аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`15" />.</summary>
      <returns>Восьмой аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`15" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`15.Argument9">
      <summary>Возвращает или задает девятый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`15" />.</summary>
      <returns>Девятый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`15" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`15.Func">
      <summary>Возвращает или задает вызываемую функцию <see cref="T:System.Activities.ActivityFunc`15" />.</summary>
      <returns>Вызываемая функция действия.</returns>
    </member>
    <member name="T:System.Activities.Expressions.InvokeFunc`16">
      <summary>Вызывает <see cref="T:System.Activities.ActivityFunc`16" />.</summary>
      <typeparam name="T1">Тип первого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`16" />.</typeparam>
      <typeparam name="T2">Тип второго аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`16" />.</typeparam>
      <typeparam name="T3">Тип третьего аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается в функцию <see cref="T:System.Activities.ActivityFunc`16" />.</typeparam>
      <typeparam name="T4">Тип четвертого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`16" />.</typeparam>
      <typeparam name="T5">Тип пятого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`16" />.</typeparam>
      <typeparam name="T6">Тип шестого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`16" />.</typeparam>
      <typeparam name="T7">Тип седьмого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`16" />.</typeparam>
      <typeparam name="T8">Тип восьмого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`16" />.</typeparam>
      <typeparam name="T9">Тип девятого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`16" />.</typeparam>
      <typeparam name="T10">Тип десятого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`16" />.</typeparam>
      <typeparam name="T11">Тип одиннадцатого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается в функцию <see cref="T:System.Activities.ActivityFunc`16" />.</typeparam>
      <typeparam name="T12">Тип двенадцатого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`16" />.</typeparam>
      <typeparam name="T13">Тип тринадцатого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`16" />.</typeparam>
      <typeparam name="T14">Тип четырнадцатого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`16" />.</typeparam>
      <typeparam name="T15">Тип пятнадцатого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`16" />.</typeparam>
      <typeparam name="TResult">Тип возвращаемого аргумента <see cref="T:System.Activities.OutArgument`1" />, значение которого возвращается от функции <see cref="T:System.Activities.ActivityFunc`16" />.</typeparam>
    </member>
    <member name="M:System.Activities.Expressions.InvokeFunc`16.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Expressions.InvokeFunc`16" />.</summary>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`16.Argument1">
      <summary>Возвращает или задает первый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`16" />.</summary>
      <returns>Первый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`16" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`16.Argument10">
      <summary>Возвращает или задает десятый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`16" />.</summary>
      <returns>Десятый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`16" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`16.Argument11">
      <summary>Возвращает или задает одиннадцатый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`16" />.</summary>
      <returns>Одиннадцатый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`16" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`16.Argument12">
      <summary>Возвращает или задает двенадцатый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`16" />.</summary>
      <returns>Двенадцатый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`16" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`16.Argument13">
      <summary>Возвращает или задает тринадцатый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`16" />.</summary>
      <returns>Тринадцатый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`16" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`16.Argument14">
      <summary>Возвращает или задает четырнадцатый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`16" />.</summary>
      <returns>Четырнадцатый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`16" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`16.Argument15">
      <summary>Возвращает или задает пятнадцатый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`16" />.</summary>
      <returns>Пятнадцатый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`16" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`16.Argument2">
      <summary>Возвращает или задает второй аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`16" />.</summary>
      <returns>Второй аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`16" />. Возвращает аргумент <see cref="T:System.Activities.InArgument`1" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`16.Argument3">
      <summary>Возвращает или задает третий аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`16" />.</summary>
      <returns>Третий аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`16" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`16.Argument4">
      <summary>Возвращает или задает четвертый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`16" />.</summary>
      <returns>Четвертый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`16" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`16.Argument5">
      <summary>Возвращает или задает пятый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`16" />.</summary>
      <returns>Пятый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`16" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`16.Argument6">
      <summary>Возвращает или задает шестой аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`16" />.</summary>
      <returns>Шестой аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`16" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`16.Argument7">
      <summary>Возвращает или задает седьмой аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`16" />.</summary>
      <returns>Седьмой аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`16" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`16.Argument8">
      <summary>Возвращает или задает восьмой аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`16" />.</summary>
      <returns>Восьмой аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`16" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`16.Argument9">
      <summary>Возвращает или задает девятый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`16" />.</summary>
      <returns>Девятый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`16" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`16.Func">
      <summary>Возвращает или задает вызываемую функцию <see cref="T:System.Activities.ActivityFunc`16" />.</summary>
      <returns>Вызываемая функция действия.</returns>
    </member>
    <member name="T:System.Activities.Expressions.InvokeFunc`17">
      <summary>Вызывает <see cref="T:System.Activities.ActivityFunc`17" />.</summary>
      <typeparam name="T1">Тип первого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`17" />.</typeparam>
      <typeparam name="T2">Тип второго аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`17" />.</typeparam>
      <typeparam name="T3">Тип третьего аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается в функцию <see cref="T:System.Activities.ActivityFunc`17" />.</typeparam>
      <typeparam name="T4">Тип четвертого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`17" />.</typeparam>
      <typeparam name="T5">Тип пятого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`17" />.</typeparam>
      <typeparam name="T6">Тип шестого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`17" />.</typeparam>
      <typeparam name="T7">Тип седьмого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`17" />.</typeparam>
      <typeparam name="T8">Тип восьмого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`17" />.</typeparam>
      <typeparam name="T9">Тип девятого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`17" />.</typeparam>
      <typeparam name="T10">Тип десятого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`17" />.</typeparam>
      <typeparam name="T11">Тип одиннадцатого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается в функцию <see cref="T:System.Activities.ActivityFunc`17" />.</typeparam>
      <typeparam name="T12">Тип двенадцатого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`17" />.</typeparam>
      <typeparam name="T13">Тип тринадцатого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`17" />.</typeparam>
      <typeparam name="T14">Тип четырнадцатого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`17" />.</typeparam>
      <typeparam name="T15">Тип пятнадцатого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`17" />.</typeparam>
      <typeparam name="T16">Тип шестнадцатого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`17" />.</typeparam>
      <typeparam name="TResult">Тип возвращаемого аргумента <see cref="T:System.Activities.OutArgument`1" />, значение которого возвращается от функции <see cref="T:System.Activities.ActivityFunc`17" />.</typeparam>
    </member>
    <member name="M:System.Activities.Expressions.InvokeFunc`17.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Expressions.InvokeFunc`17" />.</summary>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`17.Argument1">
      <summary>Возвращает или задает первый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`17" />.</summary>
      <returns>Первый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`17" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`17.Argument10">
      <summary>Возвращает или задает десятый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`17" />.</summary>
      <returns>Десятый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`17" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`17.Argument11">
      <summary>Возвращает или задает одиннадцатый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`17" />.</summary>
      <returns>Одиннадцатый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`17" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`17.Argument12">
      <summary>Возвращает или задает двенадцатый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`17" />.</summary>
      <returns>Двенадцатый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`17" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`17.Argument13">
      <summary>Возвращает или задает тринадцатый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`17" />.</summary>
      <returns>Тринадцатый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`17" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`17.Argument14">
      <summary>Возвращает или задает четырнадцатый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`17" />.</summary>
      <returns>Четырнадцатый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`17" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`17.Argument15">
      <summary>Возвращает или задает пятнадцатый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`17" />.</summary>
      <returns>Пятнадцатый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`17" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`17.Argument16">
      <summary>Возвращает или задает шестнадцатый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`17" />.</summary>
      <returns>Шестнадцатый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`17" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`17.Argument2">
      <summary>Возвращает или задает второй аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`17" />.</summary>
      <returns>Второй аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`17" />. Возвращает аргумент <see cref="T:System.Activities.InArgument`1" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`17.Argument3">
      <summary>Возвращает или задает третий аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`17" />.</summary>
      <returns>Третий аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`17" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`17.Argument4">
      <summary>Возвращает или задает четвертый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`17" />.</summary>
      <returns>Четвертый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`17" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`17.Argument5">
      <summary>Возвращает или задает пятый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`17" />.</summary>
      <returns>Пятый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`17" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`17.Argument6">
      <summary>Возвращает или задает шестой аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`17" />.</summary>
      <returns>Шестой аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`17" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`17.Argument7">
      <summary>Возвращает или задает седьмой аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`17" />.</summary>
      <returns>Седьмой аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`17" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`17.Argument8">
      <summary>Возвращает или задает восьмой аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`17" />.</summary>
      <returns>Восьмой аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`17" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`17.Argument9">
      <summary>Возвращает или задает девятый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`17" />.</summary>
      <returns>Девятый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`17" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`17.Func">
      <summary>Возвращает или задает вызываемую функцию <see cref="T:System.Activities.ActivityFunc`17" />.</summary>
      <returns>Вызываемые функции действия.</returns>
    </member>
    <member name="T:System.Activities.Expressions.InvokeFunc`2">
      <summary>Вызывает <see cref="T:System.Activities.ActivityFunc`2" />.</summary>
      <typeparam name="T">Тип аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`2" />.</typeparam>
      <typeparam name="TResult">Тип возвращаемого аргумента <see cref="T:System.Activities.OutArgument`1" />, значение которого возвращается от функции <see cref="T:System.Activities.ActivityFunc`2" />.</typeparam>
    </member>
    <member name="M:System.Activities.Expressions.InvokeFunc`2.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Expressions.InvokeFunc`2" />.</summary>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`2.Argument">
      <summary>Возвращает или задает аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`2" />.</summary>
      <returns>Аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`2" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`2.Func">
      <summary>Возвращает или задает вызываемую функцию <see cref="T:System.Activities.ActivityFunc`2" />.</summary>
      <returns>Вызываемый объект <see cref="T:System.Activities.ActivityFunc`2" />.</returns>
    </member>
    <member name="T:System.Activities.Expressions.InvokeFunc`3">
      <summary>Вызывает <see cref="T:System.Activities.ActivityFunc`3" />.</summary>
      <typeparam name="T1">Тип первого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`3" />.</typeparam>
      <typeparam name="T2">Тип второго аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`3" />.</typeparam>
      <typeparam name="TResult">Тип возвращаемого аргумента <see cref="T:System.Activities.OutArgument`1" />, значение которого возвращается от функции <see cref="T:System.Activities.ActivityFunc`3" />.</typeparam>
    </member>
    <member name="M:System.Activities.Expressions.InvokeFunc`3.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Expressions.InvokeFunc`3" />.</summary>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`3.Argument1">
      <summary>Возвращает или задает первый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`3" />.</summary>
      <returns>Первый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`3" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`3.Argument2">
      <summary>Возвращает или задает второй аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`3" />.</summary>
      <returns>Второй аргумент, передаваемый объекту <see cref="T:System.Activities.ActivityFunc`3" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`3.Func">
      <summary>Возвращает или задает вызываемую функцию <see cref="T:System.Activities.ActivityFunc`3" />.</summary>
      <returns>Вызываемая функция действия.</returns>
    </member>
    <member name="T:System.Activities.Expressions.InvokeFunc`4">
      <summary>Вызывает <see cref="T:System.Activities.ActivityFunc`4" />.</summary>
      <typeparam name="T1">Тип первого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`4" />.</typeparam>
      <typeparam name="T2">Тип второго аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`4" />.</typeparam>
      <typeparam name="T3">Тип третьего аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается в функцию <see cref="T:System.Activities.ActivityFunc`4" />.</typeparam>
      <typeparam name="TResult">Тип возвращаемого аргумента <see cref="T:System.Activities.OutArgument`1" />, значение которого возвращается от функции <see cref="T:System.Activities.ActivityFunc`4" />.</typeparam>
    </member>
    <member name="M:System.Activities.Expressions.InvokeFunc`4.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Expressions.InvokeFunc`4" />.</summary>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`4.Argument1">
      <summary>Возвращает или задает первый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`4" />.</summary>
      <returns>Первый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`4" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`4.Argument2">
      <summary>Возвращает или задает второй аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`4" />.</summary>
      <returns>Второй аргумент, передаваемый объекту <see cref="T:System.Activities.ActivityFunc`4" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`4.Argument3">
      <summary>Возвращает или задает третий аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`4" />.</summary>
      <returns>Третий аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`4" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`4.Func">
      <summary>Возвращает или задает вызываемую функцию <see cref="T:System.Activities.ActivityFunc`4" />.</summary>
      <returns>Вызываемая функция действия.</returns>
    </member>
    <member name="T:System.Activities.Expressions.InvokeFunc`5">
      <summary>Вызывает <see cref="T:System.Activities.ActivityFunc`5" />.</summary>
      <typeparam name="T1">Тип первого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`5" />.</typeparam>
      <typeparam name="T2">Тип второго аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`5" />.</typeparam>
      <typeparam name="T3">Тип третьего аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается в функцию <see cref="T:System.Activities.ActivityFunc`5" />.</typeparam>
      <typeparam name="T4">Тип четвертого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`5" />.</typeparam>
      <typeparam name="TResult">Тип возвращаемого аргумента <see cref="T:System.Activities.OutArgument`1" />, значение которого возвращается от функции <see cref="T:System.Activities.ActivityFunc`5" />.</typeparam>
    </member>
    <member name="M:System.Activities.Expressions.InvokeFunc`5.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Expressions.InvokeFunc`5" />.</summary>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`5.Argument1">
      <summary>Возвращает или задает первый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`5" />.</summary>
      <returns>Первый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`5" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`5.Argument2">
      <summary>Возвращает или задает второй аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`5" />.</summary>
      <returns>Второй аргумент, передаваемый объекту <see cref="T:System.Activities.ActivityFunc`5" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`5.Argument3">
      <summary>Возвращает или задает третий аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`5" />.</summary>
      <returns>Третий аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`5" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`5.Argument4">
      <summary>Возвращает или задает четвертый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`5" />.</summary>
      <returns>Четвертый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`5" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`5.Func">
      <summary>Возвращает или задает вызываемую функцию <see cref="T:System.Activities.ActivityFunc`5" />.</summary>
      <returns>Вызываемая функция действия.</returns>
    </member>
    <member name="T:System.Activities.Expressions.InvokeFunc`6">
      <summary>Вызывает <see cref="T:System.Activities.ActivityFunc`6" />.</summary>
      <typeparam name="T1">Тип первого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`6" />.</typeparam>
      <typeparam name="T2">Тип второго аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`6" />.</typeparam>
      <typeparam name="T3">Тип третьего аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается в функцию <see cref="T:System.Activities.ActivityFunc`6" />.</typeparam>
      <typeparam name="T4">Тип четвертого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`6" />.</typeparam>
      <typeparam name="T5">Тип пятого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`6" />.</typeparam>
      <typeparam name="TResult">Тип возвращаемого аргумента <see cref="T:System.Activities.OutArgument`1" />, значение которого возвращается от функции <see cref="T:System.Activities.ActivityFunc`6" />.</typeparam>
    </member>
    <member name="M:System.Activities.Expressions.InvokeFunc`6.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Expressions.InvokeFunc`6" />.</summary>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`6.Argument1">
      <summary>Возвращает или задает первый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`6" />.</summary>
      <returns>Первый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`6" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`6.Argument2">
      <summary>Возвращает или задает второй аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`6" />.</summary>
      <returns>Второй аргумент, передаваемый объекту <see cref="T:System.Activities.ActivityFunc`6" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`6.Argument3">
      <summary>Возвращает или задает третий аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`6" />.</summary>
      <returns>Третий аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`6" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`6.Argument4">
      <summary>Возвращает или задает четвертый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`6" />.</summary>
      <returns>Четвертый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`6" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`6.Argument5">
      <summary>Возвращает или задает пятый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`6" />.</summary>
      <returns>Пятый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`6" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`6.Func">
      <summary>Возвращает или задает вызываемую функцию <see cref="T:System.Activities.ActivityFunc`6" />.</summary>
      <returns>Вызываемая функция действия.</returns>
    </member>
    <member name="T:System.Activities.Expressions.InvokeFunc`7">
      <summary>Вызывает <see cref="T:System.Activities.ActivityFunc`7" />.</summary>
      <typeparam name="T1">Тип первого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`7" />.</typeparam>
      <typeparam name="T2">Тип второго аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`7" />.</typeparam>
      <typeparam name="T3">Тип третьего аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается в функцию <see cref="T:System.Activities.ActivityFunc`7" />.</typeparam>
      <typeparam name="T4">Тип четвертого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`7" />.</typeparam>
      <typeparam name="T5">Тип пятого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`7" />.</typeparam>
      <typeparam name="T6">Тип шестого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`7" />.</typeparam>
      <typeparam name="TResult">Тип возвращаемого аргумента <see cref="T:System.Activities.OutArgument`1" />, значение которого возвращается от функции <see cref="T:System.Activities.ActivityFunc`7" />.</typeparam>
    </member>
    <member name="M:System.Activities.Expressions.InvokeFunc`7.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Expressions.InvokeFunc`7" />.</summary>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`7.Argument1">
      <summary>Возвращает или задает первый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`7" />.</summary>
      <returns>Первый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`7" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`7.Argument2">
      <summary>Возвращает или задает второй аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`7" />.</summary>
      <returns>Второй аргумент, передаваемый объекту <see cref="T:System.Activities.ActivityFunc`7" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`7.Argument3">
      <summary>Возвращает или задает третий аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`7" />.</summary>
      <returns>Третий аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`7" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`7.Argument4">
      <summary>Возвращает или задает четвертый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`7" />.</summary>
      <returns>Четвертый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`7" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`7.Argument5">
      <summary>Возвращает или задает пятый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`7" />.</summary>
      <returns>Пятый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`7" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`7.Argument6">
      <summary>Возвращает или задает шестой аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`7" />.</summary>
      <returns>Шестой аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`7" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`7.Func">
      <summary>Возвращает или задает вызываемую функцию <see cref="T:System.Activities.ActivityFunc`7" />.</summary>
      <returns>Вызываемая функция действия.</returns>
    </member>
    <member name="T:System.Activities.Expressions.InvokeFunc`8">
      <summary>Вызывает <see cref="T:System.Activities.ActivityFunc`8" />.</summary>
      <typeparam name="T1">Тип первого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`8" />.</typeparam>
      <typeparam name="T2">Тип второго аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`8" />.</typeparam>
      <typeparam name="T3">Тип третьего аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается в функцию <see cref="T:System.Activities.ActivityFunc`8" />.</typeparam>
      <typeparam name="T4">Тип четвертого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`8" />.</typeparam>
      <typeparam name="T5">Тип пятого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`8" />.</typeparam>
      <typeparam name="T6">Тип шестого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`8" />.</typeparam>
      <typeparam name="T7">Тип седьмого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`8" />.</typeparam>
      <typeparam name="TResult">Тип возвращаемого аргумента <see cref="T:System.Activities.OutArgument`1" />, значение которого возвращается от функции <see cref="T:System.Activities.ActivityFunc`8" />.</typeparam>
    </member>
    <member name="M:System.Activities.Expressions.InvokeFunc`8.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Expressions.InvokeFunc`8" />.</summary>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`8.Argument1">
      <summary>Возвращает или задает первый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`8" />.</summary>
      <returns>Первый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`8" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`8.Argument2">
      <summary>Возвращает или задает второй аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`8" />.</summary>
      <returns>Второй аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`8" />. Возвращает аргумент <see cref="T:System.Activities.InArgument`1" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`8.Argument3">
      <summary>Возвращает или задает третий аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`8" />.</summary>
      <returns>Третий аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`8" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`8.Argument4">
      <summary>Возвращает или задает четвертый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`8" />.</summary>
      <returns>Четвертый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`8" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`8.Argument5">
      <summary>Возвращает или задает пятый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`8" />.</summary>
      <returns>Пятый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`8" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`8.Argument6">
      <summary>Возвращает или задает шестой аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`8" />.</summary>
      <returns>Шестой аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`8" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`8.Argument7">
      <summary>Возвращает или задает седьмой аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`8" />.</summary>
      <returns>Седьмой аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`8" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`8.Func">
      <summary>Возвращает или задает вызываемую функцию <see cref="T:System.Activities.ActivityFunc`8" />.</summary>
      <returns>Вызываемая функция действия.</returns>
    </member>
    <member name="T:System.Activities.Expressions.InvokeFunc`9">
      <summary>Вызывает <see cref="T:System.Activities.ActivityFunc`9" />.</summary>
      <typeparam name="T1">Тип первого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`9" />.</typeparam>
      <typeparam name="T2">Тип второго аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`9" />.</typeparam>
      <typeparam name="T3">Тип третьего аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается в функцию <see cref="T:System.Activities.ActivityFunc`9" />.</typeparam>
      <typeparam name="T4">Тип четвертого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`9" />.</typeparam>
      <typeparam name="T5">Тип пятого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`9" />.</typeparam>
      <typeparam name="T6">Тип шестого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`9" />.</typeparam>
      <typeparam name="T7">Тип седьмого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`9" />.</typeparam>
      <typeparam name="T8">Тип восьмого аргумента <see cref="T:System.Activities.InArgument`1" />, значение которого передается функции <see cref="T:System.Activities.ActivityFunc`9" />.</typeparam>
      <typeparam name="TResult">Тип возвращаемого аргумента <see cref="T:System.Activities.OutArgument`1" />, значение которого возвращается от функции <see cref="T:System.Activities.ActivityFunc`9" />.</typeparam>
    </member>
    <member name="M:System.Activities.Expressions.InvokeFunc`9.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Expressions.InvokeFunc`9" />.</summary>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`9.Argument1">
      <summary>Возвращает или задает первый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`9" />.</summary>
      <returns>Первый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`9" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`9.Argument2">
      <summary>Возвращает или задает второй аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`9" />.</summary>
      <returns>Второй аргумент, передаваемый объекту <see cref="T:System.Activities.ActivityFunc`9" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`9.Argument3">
      <summary>Возвращает или задает третий аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`9" />.</summary>
      <returns>Третий аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`9" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`9.Argument4">
      <summary>Возвращает или задает четвертый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`9" />.</summary>
      <returns>Четвертый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`9" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`9.Argument5">
      <summary>Возвращает или задает пятый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`9" />.</summary>
      <returns>Пятый аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`9" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`9.Argument6">
      <summary>Возвращает или задает шестой аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`9" />.</summary>
      <returns>Шестой аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`9" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`9.Argument7">
      <summary>Возвращает или задает седьмой аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`9" />.</summary>
      <returns>Седьмой аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`9" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`9.Argument8">
      <summary>Возвращает или задает восьмой аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`9" />.</summary>
      <returns>Восьмой аргумент, передаваемый функции <see cref="T:System.Activities.ActivityFunc`9" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeFunc`9.Func">
      <summary>Возвращает или задает вызываемую функцию <see cref="T:System.Activities.ActivityFunc`9" />.</summary>
      <returns>Вызываемая функция действия.</returns>
    </member>
    <member name="T:System.Activities.Expressions.InvokeMethod`1">
      <summary>Вызывает открытый метод заданного объекта или типа.</summary>
      <typeparam name="TResult">Тип значения, возвращаемого действием.</typeparam>
    </member>
    <member name="M:System.Activities.Expressions.InvokeMethod`1.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Expressions.InvokeMethod`1" />.</summary>
    </member>
    <member name="P:System.Activities.Expressions.InvokeMethod`1.GenericTypeArguments">
      <summary>Аргументы универсального типа содержащегося метода.</summary>
      <returns>Аргументы.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeMethod`1.MethodName">
      <summary>Имя метода, вызываемого при выполнении действия.</summary>
      <returns>Имя метода.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeMethod`1.Parameters">
      <summary>Коллекция параметров вызываемого метода.</summary>
      <returns>Коллекция параметров.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeMethod`1.RunAsynchronously">
      <summary>Возвращает или задает значение, которое показывает, вызван ли метод действия асинхронно.</summary>
      <returns>Значение <see langword="true" />, если метод выполняется асинхронно; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeMethod`1.TargetObject">
      <summary>Возвращает или задает объект, содержащий вызываемый метод.</summary>
      <returns>Вызываемый метод.</returns>
    </member>
    <member name="P:System.Activities.Expressions.InvokeMethod`1.TargetType">
      <summary>Возвращает или задает тип <see cref="P:System.Activities.Expressions.InvokeMethod`1.TargetObject" />.</summary>
      <returns>Тип целевого объекта.</returns>
    </member>
    <member name="T:System.Activities.Expressions.ITextExpression">
      <summary>Представляет текстовое выражение.</summary>
    </member>
    <member name="P:System.Activities.Expressions.ITextExpression.ExpressionText">
      <summary>Получает текст выражения для вычисления.</summary>
      <returns>Текст вычисляемого выражения.</returns>
    </member>
    <member name="M:System.Activities.Expressions.ITextExpression.GetExpressionTree">
      <summary>Получает дерево выражения.</summary>
      <returns>Дерево выражения.</returns>
    </member>
    <member name="P:System.Activities.Expressions.ITextExpression.Language">
      <summary>Получает сведения о языке, которые применяются к текстовому выражению интерфейса.</summary>
      <returns>Сведения о языке, которые применяются к выражению текста интерфейса.</returns>
    </member>
    <member name="P:System.Activities.Expressions.ITextExpression.RequiresCompilation">
      <summary>Получает значение, указывающее, требует ли ITextExpression компиляцию.</summary>
      <returns>Значение <see langword="true" />, если объект ITextExpression требует компиляции; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="T:System.Activities.Expressions.LambdaReference`1">
      <summary>Представляет лямбда-выражение, используемое в качестве левостороннего значения, поддерживающего привязку аргументов <see cref="F:System.Activities.ArgumentDirection.Out" />.</summary>
      <typeparam name="T">Тип значения, возвращаемого выражением.</typeparam>
    </member>
    <member name="M:System.Activities.Expressions.LambdaReference`1.#ctor(System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,`0}})">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Expressions.LambdaReference`1" />.</summary>
      <param name="locationExpression">Значение выражения.</param>
    </member>
    <member name="M:System.Activities.Expressions.LambdaReference`1.CanConvertToString(System.Windows.Markup.IValueSerializerContext)">
      <summary>Этот метод всегда возвращает значение <see langword="true" /> и используется совместно с методом <see cref="M:System.Activities.Expressions.LambdaReference`1.ConvertToString(System.Windows.Markup.IValueSerializerContext)" /> для создания содержательных сообщений об ошибках при попытке сериализовать это действие в XAML.</summary>
      <param name="context">Контекстная информация, используемая при выполнении преобразования.</param>
      <returns>Этот метод всегда возвращает значение <see langword="true" />.</returns>
    </member>
    <member name="M:System.Activities.Expressions.LambdaReference`1.ConvertToString(System.Windows.Markup.IValueSerializerContext)">
      <summary>Вызывает исключение <see cref="T:System.Activities.Expressions.LambdaSerializationException" /> и используется совместно с методом <see cref="M:System.Activities.Expressions.LambdaReference`1.CanConvertToString(System.Windows.Markup.IValueSerializerContext)" /> для создания описательных сообщений об ошибках при попытке сериализовать это действие в XAML.</summary>
      <param name="context">Контекстные сведения, используемые для преобразования.</param>
      <returns>При вызове этого метода возникает исключение <see cref="T:System.Activities.Expressions.LambdaSerializationException" />.</returns>
    </member>
    <member name="T:System.Activities.Expressions.LambdaSerializationException">
      <summary>Исключение, вызываемое при попытке сериализации в формат XAML для <see cref="T:System.Activities.Expressions.LambdaValue`1" /> или <see cref="T:System.Activities.Expressions.LambdaReference`1" />.</summary>
    </member>
    <member name="M:System.Activities.Expressions.LambdaSerializationException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Expressions.LambdaSerializationException" />.</summary>
    </member>
    <member name="M:System.Activities.Expressions.LambdaSerializationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Expressions.LambdaSerializationException" /> с сериализованными данными.</summary>
      <param name="info">Данные сериализованного объекта о вызываемом исключении.</param>
      <param name="context">Контекстные сведения об источнике или назначении.</param>
    </member>
    <member name="M:System.Activities.Expressions.LambdaSerializationException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Expressions.LambdaSerializationException" /> с указанным сообщением об ошибке.</summary>
      <param name="message">Сообщение об ошибке, указывающее причину создания исключения.</param>
    </member>
    <member name="M:System.Activities.Expressions.LambdaSerializationException.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Expressions.LambdaSerializationException" /> указанным сообщением об ошибке и ссылкой на внутреннее исключение, вызвавшее данное исключение.</summary>
      <param name="message">Сообщение об ошибке, указывающее причину создания исключения.</param>
      <param name="innerException">Исключение, вызвавшее текущее исключение, или пустая ссылка (<see langword="Nothing" /> в Visual Basic), если внутреннее исключение не задано.</param>
    </member>
    <member name="T:System.Activities.Expressions.LambdaValue`1">
      <summary>Представляет лямбда-выражение, используемое в качестве правостороннего значения, поддерживающего привязку аргументов <see cref="F:System.Activities.ArgumentDirection.In" />.</summary>
      <typeparam name="TResult">Тип значения, возвращаемого выражением.</typeparam>
    </member>
    <member name="M:System.Activities.Expressions.LambdaValue`1.#ctor(System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,`0}})">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Expressions.LambdaValue`1" />, используя заданное выражение.</summary>
      <param name="lambdaValue">Лямбда-выражение, представляющее значение <see cref="T:System.Activities.Expressions.LambdaValue`1" />.</param>
    </member>
    <member name="M:System.Activities.Expressions.LambdaValue`1.CanConvertToString(System.Windows.Markup.IValueSerializerContext)">
      <summary>Этот метод всегда возвращает значение <see langword="true" /> и используется совместно с методом <see cref="M:System.Activities.Expressions.LambdaValue`1.ConvertToString(System.Windows.Markup.IValueSerializerContext)" /> для создания содержательных сообщений об ошибках при попытке сериализовать это действие в XAML.</summary>
      <param name="context">Контекстная информация, используемая при выполнении преобразования.</param>
      <returns>Этот метод всегда возвращает значение <see langword="true" />.</returns>
    </member>
    <member name="M:System.Activities.Expressions.LambdaValue`1.ConvertToString(System.Windows.Markup.IValueSerializerContext)">
      <summary>Вызывает исключение <see cref="T:System.Activities.Expressions.LambdaSerializationException" /> и используется совместно с методом <see cref="M:System.Activities.Expressions.LambdaValue`1.CanConvertToString(System.Windows.Markup.IValueSerializerContext)" /> для создания описательных сообщений об ошибках при попытке сериализовать это действие в XAML.</summary>
      <param name="context">Контекстная информация, используемая при выполнении преобразования.</param>
      <returns>Вызывает исключение <see cref="T:System.Activities.Expressions.LambdaSerializationException" /> при вызове.</returns>
    </member>
    <member name="T:System.Activities.Expressions.LessThan`3">
      <summary>Выполняет проверку отношения между двумя значениями. Если левый операнд меньше правого, выражение возвращает значение <see langword="true" />. В противном случае возвращает значение <see langword="false" />.</summary>
      <typeparam name="TLeft">Тип левого операнда.</typeparam>
      <typeparam name="TRight">Тип правого операнда.</typeparam>
      <typeparam name="TResult">Тип результата.</typeparam>
    </member>
    <member name="M:System.Activities.Expressions.LessThan`3.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Expressions.LessThan`3" />.</summary>
    </member>
    <member name="P:System.Activities.Expressions.LessThan`3.Left">
      <summary>Возвращает или задает левый операнд.</summary>
      <returns>Левый операнд.</returns>
    </member>
    <member name="P:System.Activities.Expressions.LessThan`3.Right">
      <summary>Возвращает или задает правый операнд.</summary>
      <returns>Правый операнд.</returns>
    </member>
    <member name="T:System.Activities.Expressions.LessThanOrEqual`3">
      <summary>Выполняет проверку отношения между двумя значениями. Если левый операнд меньше или равен правому, выражение возвращает значение <see langword="true" />. В противном случае возвращается значение <see langword="false" />.</summary>
      <typeparam name="TLeft">Тип левого операнда.</typeparam>
      <typeparam name="TRight">Тип правого операнда.</typeparam>
      <typeparam name="TResult">Тип результата.</typeparam>
    </member>
    <member name="M:System.Activities.Expressions.LessThanOrEqual`3.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Expressions.LessThanOrEqual`3" />.</summary>
    </member>
    <member name="P:System.Activities.Expressions.LessThanOrEqual`3.Left">
      <summary>Возвращает или задает левый операнд.</summary>
      <returns>Аргумент <see cref="F:System.Activities.Presentation.View.PropertyKind.InArgument" />, который представляет левый операнд.</returns>
    </member>
    <member name="P:System.Activities.Expressions.LessThanOrEqual`3.Right">
      <summary>Возвращает или задает правый операнд.</summary>
      <returns>Аргумент <see cref="F:System.Activities.Presentation.View.PropertyKind.InArgument" />, который представляет правый операнд.</returns>
    </member>
    <member name="T:System.Activities.Expressions.Literal`1">
      <summary>Представляет действие выражения, возвращающее литеральное значение указанного типа.</summary>
      <typeparam name="T">Тип значения.</typeparam>
    </member>
    <member name="M:System.Activities.Expressions.Literal`1.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Expressions.Literal`1" />.</summary>
    </member>
    <member name="M:System.Activities.Expressions.Literal`1.#ctor(`0)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Expressions.Literal`1" />, используя указанное значение.</summary>
      <param name="value">Литеральное значение выражения.</param>
    </member>
    <member name="M:System.Activities.Expressions.Literal`1.CanConvertToString(System.Windows.Markup.IValueSerializerContext)">
      <summary>Возвращает значение, указывающее, можно ли преобразовать значение <see cref="T:System.Activities.Expressions.Literal`1" /> в объект типа <see cref="T:System.String" />.</summary>
      <param name="context">Контекстные сведения, используемые для преобразования.</param>
      <returns>Значение <see langword="true" />, если значение можно преобразовать в <see cref="T:System.String" />; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Activities.Expressions.Literal`1.ConvertToString(System.Windows.Markup.IValueSerializerContext)">
      <summary>Преобразует объект <see cref="T:System.Activities.Expressions.Literal`1" /> в значение типа <see cref="T:System.String" />.</summary>
      <param name="context">Контекстная информация, используемая при выполнении преобразования.</param>
      <returns>Литеральное выражение.</returns>
    </member>
    <member name="M:System.Activities.Expressions.Literal`1.ShouldSerializeValue">
      <summary>Возвращает значение, указывающее, изменилось ли значение свойства <see cref="P:System.Activities.Expressions.Literal`1.Value" /> относительно значения по умолчанию и нужно ли его сериализовать.</summary>
      <returns>Значение <see langword="true" />, если значение свойства <see cref="P:System.Activities.Expressions.Literal`1.Value" /> подлежит сериализации, в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Activities.Expressions.Literal`1.ToString">
      <summary>Возвращает строку <see cref="T:System.String" />, представляющую значение литерала.</summary>
      <returns>Строковое представление значения литерала.</returns>
    </member>
    <member name="P:System.Activities.Expressions.Literal`1.Value">
      <summary>Возвращает или задает значение литерального выражения.</summary>
      <returns>Значение литерального выражения.</returns>
    </member>
    <member name="T:System.Activities.Expressions.MultidimensionalArrayItemReference`1">
      <summary>Представляет элемент в многомерном массиве, который можно использовать в качестве левостороннего значения в выражении.</summary>
      <typeparam name="TItem">Тип элементов массива.</typeparam>
    </member>
    <member name="M:System.Activities.Expressions.MultidimensionalArrayItemReference`1.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Expressions.MultidimensionalArrayItemReference`1" />.</summary>
    </member>
    <member name="P:System.Activities.Expressions.MultidimensionalArrayItemReference`1.Array">
      <summary>Возвращает или задает массив, на который ссылается <see cref="T:System.Activities.Expressions.MultidimensionalArrayItemReference`1" />.</summary>
      <returns>Массив, на который ссылается <see cref="T:System.Activities.Expressions.MultidimensionalArrayItemReference`1" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.MultidimensionalArrayItemReference`1.Indices">
      <summary>Возвращает коллекцию аргументов, которые представляют индексы элемента в массиве.</summary>
      <returns>Индекс элемента в массиве.</returns>
    </member>
    <member name="T:System.Activities.Expressions.Multiply`3">
      <summary>Вычисляет произведение двух значений.</summary>
      <typeparam name="TLeft">Тип левого операнда.</typeparam>
      <typeparam name="TRight">Тип правого операнда.</typeparam>
      <typeparam name="TResult">Тип результата.</typeparam>
    </member>
    <member name="M:System.Activities.Expressions.Multiply`3.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Expressions.Multiply`3" />.</summary>
    </member>
    <member name="P:System.Activities.Expressions.Multiply`3.Checked">
      <summary>Возвращает или задает значение, указывающее, выполняется ли операция умножения в проверяемом контексте.</summary>
      <returns>Значение <see langword="true" />, если операция умножения выполняется в проверяемом контексте; в противном случае — значение <see langword="false" />. Значение по умолчанию: <see langword="true" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.Multiply`3.Left">
      <summary>Возвращает или задает левый операнд.</summary>
      <returns>Левый операнд.</returns>
    </member>
    <member name="P:System.Activities.Expressions.Multiply`3.Right">
      <summary>Возвращает или задает правый операнд.</summary>
      <returns>Правый операнд.</returns>
    </member>
    <member name="T:System.Activities.Expressions.New`1">
      <summary>Создает новый экземпляр типа, указанного с помощью типа <paramref name="TResult" />.</summary>
      <typeparam name="TResult">Тип создаваемого экземпляра.</typeparam>
    </member>
    <member name="M:System.Activities.Expressions.New`1.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Expressions.New`1" />.</summary>
    </member>
    <member name="P:System.Activities.Expressions.New`1.Arguments">
      <summary>Возвращает аргументы, необходимые конструктору.</summary>
      <returns>Аргументы, необходимые конструктору.</returns>
    </member>
    <member name="T:System.Activities.Expressions.NewArray`1">
      <summary>Создает новый экземпляр типа массива, указанного с помощью типа <paramref name="Tresult" />.</summary>
      <typeparam name="TResult">Тип создаваемого экземпляра.</typeparam>
    </member>
    <member name="M:System.Activities.Expressions.NewArray`1.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Expressions.NewArray`1" />.</summary>
    </member>
    <member name="P:System.Activities.Expressions.NewArray`1.Bounds">
      <summary>Возвращает границы для всех измерений массива.</summary>
      <returns>Границы для всех измерений массива.</returns>
    </member>
    <member name="T:System.Activities.Expressions.Not`2">
      <summary>Вычисляет логическое отрицание выражения значения.</summary>
      <typeparam name="TOper*******">Тип выражения значения.</typeparam>
      <typeparam name="TResult">Тип результата.</typeparam>
    </member>
    <member name="M:System.Activities.Expressions.Not`2.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Expressions.Not`2" />.</summary>
    </member>
    <member name="P:System.Activities.Expressions.Not`2.Oper*******">
      <summary>Возвращает инвертированное выражение значения.</summary>
      <returns>Инвертированное выражение значения.</returns>
    </member>
    <member name="T:System.Activities.Expressions.NotEqual`3">
      <summary>Выполняет проверку двух значений на неравенство. Если два значения не равны, выражение возвращает значение <see langword="true" />; в противном случае — значение <see langword="false" />.</summary>
      <typeparam name="TLeft">Тип левого операнда.</typeparam>
      <typeparam name="TRight">Тип правого операнда.</typeparam>
      <typeparam name="TResult">Тип результата.</typeparam>
    </member>
    <member name="M:System.Activities.Expressions.NotEqual`3.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Expressions.NotEqual`3" />.</summary>
    </member>
    <member name="P:System.Activities.Expressions.NotEqual`3.Left">
      <summary>Возвращает или задает левый операнд.</summary>
      <returns>Левый операнд.</returns>
    </member>
    <member name="P:System.Activities.Expressions.NotEqual`3.Right">
      <summary>Возвращает или задает правый операнд.</summary>
      <returns>Правый операнд.</returns>
    </member>
    <member name="T:System.Activities.Expressions.Or`3">
      <summary>Выполняет побитовую операцию логического «ИЛИ» для двух значений.</summary>
      <typeparam name="TLeft">Тип левого операнда.</typeparam>
      <typeparam name="TRight">Тип правого операнда.</typeparam>
      <typeparam name="TResult">Тип результата.</typeparam>
    </member>
    <member name="M:System.Activities.Expressions.Or`3.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Expressions.Or`3" />.</summary>
    </member>
    <member name="P:System.Activities.Expressions.Or`3.Left">
      <summary>Возвращает или задает левый операнд.</summary>
      <returns>Левый операнд.</returns>
    </member>
    <member name="P:System.Activities.Expressions.Or`3.Right">
      <summary>Возвращает или задает правый операнд.</summary>
      <returns>Правый операнд.</returns>
    </member>
    <member name="T:System.Activities.Expressions.OrElse">
      <summary>Выполняет операцию логического «ИЛИ» для двух значений. Для этого оба операнда приводятся к логическим значениям. Если оба операнда имеют значение <see langword="false" />, то выражение возвращает значение <see langword="false" />. Если один или оба операнда имеют значение <see langword="true" />, выражение возвращает значение <see langword="true" />.</summary>
    </member>
    <member name="M:System.Activities.Expressions.OrElse.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Expressions.OrElse" />.</summary>
    </member>
    <member name="P:System.Activities.Expressions.OrElse.Left">
      <summary>Возвращает или задает левый операнд.</summary>
      <returns>Аргумент <see cref="T:System.Activities.Activity" />, который представляет левый операнд.</returns>
    </member>
    <member name="P:System.Activities.Expressions.OrElse.Right">
      <summary>Возвращает или задает правый операнд.</summary>
      <returns>Аргумент <see cref="T:System.Activities.Activity" />, который представляет правый операнд.</returns>
    </member>
    <member name="T:System.Activities.Expressions.PropertyReference`2">
      <summary>Ссылка на свойство.</summary>
      <typeparam name="TOper*******">Тип операнда.</typeparam>
      <typeparam name="TResult">Тип результата.</typeparam>
    </member>
    <member name="M:System.Activities.Expressions.PropertyReference`2.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Expressions.PropertyReference`2" />.</summary>
    </member>
    <member name="P:System.Activities.Expressions.PropertyReference`2.Oper*******">
      <summary>Возвращает или задает ссылку на свойство.</summary>
      <returns>Ссылка на свойство.</returns>
    </member>
    <member name="P:System.Activities.Expressions.PropertyReference`2.PropertyName">
      <summary>Возвращает или задает имя свойства, на которое приведена ссылка.</summary>
      <returns>Имя свойства, на которое приведена ссылка.</returns>
    </member>
    <member name="T:System.Activities.Expressions.PropertyValue`2">
      <summary>Значение свойства.</summary>
      <typeparam name="TOper*******">Тип операнда.</typeparam>
      <typeparam name="TResult">Тип результата.</typeparam>
    </member>
    <member name="M:System.Activities.Expressions.PropertyValue`2.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Expressions.PropertyValue`2" />.</summary>
    </member>
    <member name="P:System.Activities.Expressions.PropertyValue`2.Oper*******">
      <summary>Возвращает или задает значение свойства.</summary>
      <returns>Значение свойства.</returns>
    </member>
    <member name="P:System.Activities.Expressions.PropertyValue`2.PropertyName">
      <summary>Возвращает или задает имя свойства.</summary>
      <returns>Имя свойства.</returns>
    </member>
    <member name="T:System.Activities.Expressions.Subtract`3">
      <summary>Вычисляет разницу между двумя значениями.</summary>
      <typeparam name="TLeft">Тип левого операнда.</typeparam>
      <typeparam name="TRight">Тип правого операнда.</typeparam>
      <typeparam name="TResult">Тип результата.</typeparam>
    </member>
    <member name="M:System.Activities.Expressions.Subtract`3.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Expressions.Subtract`3" />.</summary>
    </member>
    <member name="P:System.Activities.Expressions.Subtract`3.Checked">
      <summary>Возвращает или задает значение, указывающее, выполняется ли операция вычитания в проверяемом контексте.</summary>
      <returns>Значение <see langword="true" />, если операция вычитания выполняется в проверяемом контексте; в противном случае — значение <see langword="false" />. Значение по умолчанию: <see langword="true" />.</returns>
    </member>
    <member name="P:System.Activities.Expressions.Subtract`3.Left">
      <summary>Возвращает или задает левый операнд.</summary>
      <returns>Левый операнд.</returns>
    </member>
    <member name="P:System.Activities.Expressions.Subtract`3.Right">
      <summary>Возвращает или задает правый операнд.</summary>
      <returns>Правый операнд.</returns>
    </member>
    <member name="T:System.Activities.Expressions.TextExpression">
      <summary>Представляет текстовое выражение.</summary>
    </member>
    <member name="P:System.Activities.Expressions.TextExpression.DefaultNamespaces">
      <summary>Получает пространства имен по умолчанию в пределах действия.</summary>
      <returns>Пространства имен по умолчанию в пределах действия.</returns>
    </member>
    <member name="P:System.Activities.Expressions.TextExpression.DefaultReferences">
      <summary>Получает ссылки умолчанию в пределах действия.</summary>
      <returns>Ссылки умолчанию в пределах действия.</returns>
    </member>
    <member name="M:System.Activities.Expressions.TextExpression.GetNamespaces(System.Object)">
      <summary>Получает коллекцию пространств имен, используемых в текстовом выражении.</summary>
      <param name="target">Целевой объект.</param>
      <returns>Коллекция пространств имен.</returns>
    </member>
    <member name="M:System.Activities.Expressions.TextExpression.GetNamespacesForImplementation(System.Object)">
      <summary>Получите коллекцию пространств имен для реализации выражения текста.</summary>
      <param name="target">Целевой объект.</param>
      <returns>Коллекция пространств имен.</returns>
    </member>
    <member name="M:System.Activities.Expressions.TextExpression.GetNamespacesInScope(System.Activities.Activity)">
      <summary>Получает пространства имен, используемые в этой области.</summary>
      <param name="activity">Действие для области.</param>
      <returns>Пространства имен, используемые в этой области.</returns>
    </member>
    <member name="M:System.Activities.Expressions.TextExpression.GetReferences(System.Object)">
      <summary>Получает список ссылок, используемых для текстового выражения.</summary>
      <param name="target">Целевой объект.</param>
      <returns>Список используемых ссылок.</returns>
    </member>
    <member name="M:System.Activities.Expressions.TextExpression.GetReferencesForImplementation(System.Object)">
      <summary>Получает список ссылок, используемых для реализации текстового выражения.</summary>
      <param name="target">Целевой объект.</param>
      <returns>Список используемых ссылок.</returns>
    </member>
    <member name="M:System.Activities.Expressions.TextExpression.GetReferencesInScope(System.Activities.Activity)">
      <summary>Получает ссылки, используемые в этой области.</summary>
      <param name="activity">Действие для области.</param>
      <returns>Ссылки, используемые в этой области.</returns>
    </member>
    <member name="M:System.Activities.Expressions.TextExpression.SetNamespaces(System.Object,System.Collections.Generic.IList{System.String})">
      <summary>Задает пространство имен для текстового выражения с указанными целевым объектом и пространствами имен.</summary>
      <param name="target">Целевой объект.</param>
      <param name="namespaces">Универсальный список пространств имен.</param>
    </member>
    <member name="M:System.Activities.Expressions.TextExpression.SetNamespaces(System.Object,System.String[])">
      <summary>Задает пространство имен для текстового выражения с указанными целевым объектом и пространствами имен.</summary>
      <param name="target">Целевой объект.</param>
      <param name="namespaces">Массив пространств имен.</param>
    </member>
    <member name="M:System.Activities.Expressions.TextExpression.SetNamespacesForImplementation(System.Object,System.Collections.Generic.IList{System.String})">
      <summary>Представляет объект для задания пространств имен для реализации текстового выражения с указанным целевым объектом и пространствами имен.</summary>
      <param name="target">Целевой объект.</param>
      <param name="namespaces">Список пространств имен.</param>
    </member>
    <member name="M:System.Activities.Expressions.TextExpression.SetNamespacesForImplementation(System.Object,System.String[])">
      <summary>Представляет объект для задания пространств имен для реализации текстового выражения с указанным целевым объектом и пространствами имен.</summary>
      <param name="target">Целевой объект.</param>
      <param name="namespaces">Коллекция пространств имен.</param>
    </member>
    <member name="M:System.Activities.Expressions.TextExpression.SetReferences(System.Object,System.Activities.Expressions.AssemblyReference[])">
      <summary>Представляет объект для задания ссылок текстового выражения с указанным целевым объектом и ссылкой.</summary>
      <param name="target">Целевой объект.</param>
      <param name="references">Коллекция ссылок.</param>
    </member>
    <member name="M:System.Activities.Expressions.TextExpression.SetReferences(System.Object,System.Collections.Generic.IList{System.Activities.Expressions.AssemblyReference})">
      <summary>Представляет объект для задания ссылок текстового выражения с указанным целевым объектом и ссылкой.</summary>
      <param name="target">Целевой объект.</param>
      <param name="references">Универсальный список ссылок.</param>
    </member>
    <member name="M:System.Activities.Expressions.TextExpression.SetReferencesForImplementation(System.Object,System.Activities.Expressions.AssemblyReference[])">
      <summary>Представляет объект для задания ссылок для реализации текстового выражения с указанным целевым объектом и ссылкой.</summary>
      <param name="target">Целевой объект.</param>
      <param name="references">Коллекция ссылки на сборку.</param>
    </member>
    <member name="M:System.Activities.Expressions.TextExpression.SetReferencesForImplementation(System.Object,System.Collections.Generic.IList{System.Activities.Expressions.AssemblyReference})">
      <summary>Представляет объект для задания ссылок для реализации текстового выражения с указанным целевым объектом и ссылкой.</summary>
      <param name="target">Целевой объект.</param>
      <param name="references">Универсальный список ссылок сборки.</param>
    </member>
    <member name="M:System.Activities.Expressions.TextExpression.ShouldSerializeNamespaces(System.Object)">
      <summary>Представляет значение, которое указывает, должен ли объект сериализовать пространства имен.</summary>
      <param name="target">Целевой объект.</param>
      <returns>Значение <see langword="true" />, если объект должен сериализовывать пространства имен; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Activities.Expressions.TextExpression.ShouldSerializeNamespacesForImplementation(System.Object)">
      <summary>Представляет значение, которое указывает, должен ли целевой объект сериализовать пространства имен для реализации.</summary>
      <param name="target">Целевой объект.</param>
      <returns>Значение <see langword="true" />, если целевой объект должен выполнять сериализацию пространств имен для реализации; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Activities.Expressions.TextExpression.ShouldSerializeReferences(System.Object)">
      <summary>Представляет значение, которое указывает, должен ли объект сериализовать ссылки.</summary>
      <param name="target">Целевой объект.</param>
      <returns>Значение <see langword="true" />, если объект должен сериализовывать ссылки; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Activities.Expressions.TextExpression.ShouldSerializeReferencesForImplementation(System.Object)">
      <summary>Представляет значение, которое указывает, должен ли текстовое выражение сериализовать пространства имен для реализации.</summary>
      <param name="target">Целевой объект.</param>
      <returns>Значение <see langword="true" />, если текстовое выражение должно выполнять сериализацию пространств имен для реализации; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="T:System.Activities.Expressions.ValueTypeFieldReference`2">
      <summary>Представляет тип значения поля, которое может быть использовано в качестве левостороннего значения в выражении.</summary>
      <typeparam name="TOper*******">Тип значения.</typeparam>
      <typeparam name="TResult">Тип поля.</typeparam>
    </member>
    <member name="M:System.Activities.Expressions.ValueTypeFieldReference`2.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Expressions.ValueTypeFieldReference`2" />.</summary>
    </member>
    <member name="P:System.Activities.Expressions.ValueTypeFieldReference`2.FieldName">
      <summary>Возвращает или задает имя поля.</summary>
      <returns>Имя поля.</returns>
    </member>
    <member name="P:System.Activities.Expressions.ValueTypeFieldReference`2.Oper*******Location">
      <summary>Возвращает или задает экземпляр типа значения, содержащегося в поле.</summary>
      <returns>Экземпляр типа значения, содержащегося в поле.</returns>
    </member>
    <member name="T:System.Activities.Expressions.ValueTypeIndexerReference`2">
      <summary>Представляет элемент, на который ссылается индексатор, для типа значения, которое можно использовать в качестве левостороннего значения в выражении.</summary>
      <typeparam name="TOper*******">Тип значения в индексаторе.</typeparam>
      <typeparam name="TItem">Тип массива индексатора.</typeparam>
    </member>
    <member name="M:System.Activities.Expressions.ValueTypeIndexerReference`2.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Expressions.ValueTypeIndexerReference`2" />.</summary>
    </member>
    <member name="P:System.Activities.Expressions.ValueTypeIndexerReference`2.Indices">
      <summary>Возвращает коллекцию аргументов, которые представляют индексы элемента в массиве индексатора.</summary>
      <returns>Индексы элемента в массиве индексатора.</returns>
    </member>
    <member name="P:System.Activities.Expressions.ValueTypeIndexerReference`2.Oper*******Location">
      <summary>Возвращает или задает экземпляр типа значения, содержащего индексатор.</summary>
      <returns>Экземпляр типа значения, содержащего индексатор.</returns>
    </member>
    <member name="T:System.Activities.Expressions.ValueTypePropertyReference`2">
      <summary>Представляет свойство типа значения, которое может быть использовано в качестве левостороннего значения в выражении.</summary>
      <typeparam name="TOper*******">Тип значения.</typeparam>
      <typeparam name="TResult">Тип свойства.</typeparam>
    </member>
    <member name="M:System.Activities.Expressions.ValueTypePropertyReference`2.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Expressions.ValueTypePropertyReference`2" />.</summary>
    </member>
    <member name="P:System.Activities.Expressions.ValueTypePropertyReference`2.Oper*******Location">
      <summary>Возвращает или задает экземпляр типа значения, содержащегося в свойстве.</summary>
      <returns>Экземпляр типа значения, содержащегося в свойстве.</returns>
    </member>
    <member name="P:System.Activities.Expressions.ValueTypePropertyReference`2.PropertyName">
      <summary>Возвращает или задает имя свойства.</summary>
      <returns>Имя свойства.</returns>
    </member>
    <member name="T:System.Activities.Expressions.VariableReference`1">
      <summary>Представляет переменную <see cref="T:System.Activities.Variable" />, используемую в выражении в качестве левого операнда.</summary>
      <typeparam name="T">Тип <see cref="T:System.Activities.Expressions.VariableReference`1" />.</typeparam>
    </member>
    <member name="M:System.Activities.Expressions.VariableReference`1.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Expressions.VariableReference`1" />.</summary>
    </member>
    <member name="M:System.Activities.Expressions.VariableReference`1.#ctor(System.Activities.Variable)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Expressions.VariableReference`1" />, используя указанную переменную.</summary>
      <param name="variable">Значение выражения.</param>
    </member>
    <member name="P:System.Activities.Expressions.VariableReference`1.LocationReference">
      <summary>Получает ссылку на переменную <see cref="T:System.Activities.Expressions.VariableReference`1" />.</summary>
      <returns>Ссылка на переменную.</returns>
    </member>
    <member name="M:System.Activities.Expressions.VariableReference`1.ToString">
      <summary>Возвращает представление типа <see cref="T:System.String" /> объекта <see cref="T:System.Activities.Expressions.VariableReference`1" />.</summary>
      <returns>Ссылка на переменную.</returns>
    </member>
    <member name="P:System.Activities.Expressions.VariableReference`1.Variable">
      <summary>Возвращает или задает аргумент <see cref="T:System.Activities.Variable" />, представленный значением <see cref="T:System.Activities.Expressions.VariableReference`1" />.</summary>
      <returns>Переменная.</returns>
    </member>
    <member name="T:System.Activities.Expressions.VariableValue`1">
      <summary>Представляет переменную <see cref="T:System.Activities.Variable" />, используемую в выражении в качестве правого операнда.</summary>
      <typeparam name="T">Тип <see cref="T:System.Activities.Expressions.VariableValue`1" />.</typeparam>
    </member>
    <member name="M:System.Activities.Expressions.VariableValue`1.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Expressions.VariableValue`1" />.</summary>
    </member>
    <member name="M:System.Activities.Expressions.VariableValue`1.#ctor(System.Activities.Variable)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Expressions.VariableValue`1" />, используя указанную переменную.</summary>
      <param name="variable">Значение выражения.</param>
    </member>
    <member name="P:System.Activities.Expressions.VariableValue`1.LocationReference">
      <summary>Получает ссылку на расположение объекта <see cref="T:System.Activities.Expressions.VariableValue`1" />.</summary>
      <returns>Ссылка на расположение.</returns>
    </member>
    <member name="M:System.Activities.Expressions.VariableValue`1.ToString">
      <summary>Возвращает представление типа <see cref="T:System.String" /> объекта <see cref="T:System.Activities.Expressions.VariableValue`1" />.</summary>
      <returns>Значение переменной.</returns>
    </member>
    <member name="P:System.Activities.Expressions.VariableValue`1.Variable">
      <summary>Возвращает или задает аргумент <see cref="T:System.Activities.Variable" />, представленный значением <see cref="T:System.Activities.Expressions.VariableValue`1" />.</summary>
      <returns>Переменная.</returns>
    </member>
    <member name="T:System.Activities.FaultCallback">
      <summary>Представляет метод, который вызывается, когда запланированное действие или одно из его дочерних действий переходит в состояние <see cref="F:System.Activities.ActivityInstanceState.Faulted" />.</summary>
      <param name="faultContext">Контекст <see cref="T:System.Activities.NativeActivityFaultContext" /> предоставляется для изучения причин сбоя рабочего процесса.</param>
      <param name="propagatedException">Исключение, вызвавшее сбой.</param>
      <param name="propagatedFrom">Действие, которое вызвало исключение и стало причиной сбоя.</param>
    </member>
    <member name="T:System.Activities.H*******le">
      <summary>Представляет тип, время существования которого управляется средой выполнения рабочего процесса.</summary>
    </member>
    <member name="M:System.Activities.H*******le.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.H*******le" />.</summary>
    </member>
    <member name="P:System.Activities.H*******le.ExecutionPropertyName">
      <summary>Возвращает имя, используемое этим дескриптором <see cref="T:System.Activities.H*******le" /> при добавлении к свойствам выполнения действия.</summary>
      <returns>Имя производного типа, указанное в свойстве <see cref="P:System.Type.FullName" />.</returns>
    </member>
    <member name="M:System.Activities.H*******le.OnInitialize(System.Activities.H*******leInitializationContext)">
      <summary>Вызывается средой выполнения рабочего процесса, когда инициализируется среда, содержащая <see cref="T:System.Activities.H*******le" />.</summary>
      <param name="context">Среда, в которой создается дескриптор.</param>
    </member>
    <member name="M:System.Activities.H*******le.OnUninitialize(System.Activities.H*******leInitializationContext)">
      <summary>Вызывается средой выполнения рабочего процесса, когда переменная <see cref="T:System.Activities.Variable" /> для <see cref="T:System.Activities.H*******le" /> выходит за пределы области.</summary>
      <param name="context">Среда, в которой создан дескриптор.</param>
    </member>
    <member name="P:System.Activities.H*******le.Owner">
      <summary>Возвращает экземпляр <see cref="T:System.Activities.ActivityInstance" />, содержащий переменную <see cref="T:System.Activities.Variable" />, которая содержит дескриптор <see cref="T:System.Activities.H*******le" />.</summary>
      <returns>Экземпляр действия, содержащий переменную <see cref="T:System.Activities.Variable" />, которая содержит дескриптор <see cref="T:System.Activities.H*******le" />.</returns>
    </member>
    <member name="M:System.Activities.H*******le.ThrowIfUninitialized">
      <summary>Вызывает исключение <see cref="T:System.InvalidOperationException" />, если дескриптор <see cref="T:System.Activities.H*******le" /> не инициализирован.</summary>
    </member>
    <member name="T:System.Activities.H*******leInitializationContext">
      <summary>Представляет среду инициализации <see cref="T:System.Activities.H*******le" />.</summary>
    </member>
    <member name="M:System.Activities.H*******leInitializationContext.Create*******InitializeH*******le``1">
      <summary>Создает и инициализирует новый экземпляр типа обработчика, указанного в параметре типа.</summary>
      <typeparam name="TH*******le">Тип создаваемого и инициализируемого обработчика <see cref="T:System.Activities.H*******le" />.</typeparam>
      <returns>Инициализированный новый экземпляр типа обработчика, указанного в параметре типа.</returns>
    </member>
    <member name="M:System.Activities.H*******leInitializationContext.GetExtension``1">
      <summary>Извлекает расширение класса.</summary>
      <typeparam name="T">Класс.</typeparam>
      <returns>Расширение класса.</returns>
    </member>
    <member name="M:System.Activities.H*******leInitializationContext.UninitializeH*******le(System.Activities.H*******le)">
      <summary>Отменяет инициализацию указанного объекта <see cref="T:System.Activities.H*******le" />.</summary>
      <param name="h*******le">Объект <see cref="T:System.Activities.H*******le" /> для отмены инициализации.</param>
    </member>
    <member name="T:System.Activities.Hosting.BookmarkInfo">
      <summary>Представляет сведения об именованной закладке <see cref="T:System.Activities.Bookmark" />.</summary>
    </member>
    <member name="P:System.Activities.Hosting.BookmarkInfo.BookmarkName">
      <summary>Возвращает имя, связанное с <see cref="T:System.Activities.Bookmark" />.</summary>
      <returns>Имя, связанное с <see cref="T:System.Activities.Bookmark" />.</returns>
    </member>
    <member name="P:System.Activities.Hosting.BookmarkInfo.OwnerDisplayName">
      <summary>Возвращает дополнительное понятное имя, используемое для отладки, проверки, обработки исключений и отслеживания.</summary>
      <returns>Понятное имя, используемое для отладки, проверки, обработки исключений и отслеживания.</returns>
    </member>
    <member name="P:System.Activities.Hosting.BookmarkInfo.ScopeInfo">
      <summary>Возвращает свойство <see cref="T:System.Activities.Hosting.BookmarkScopeInfo" /> объекта <see cref="T:System.Activities.BookmarkScope" />, связанного с закладкой <see cref="T:System.Activities.Bookmark" />.</summary>
      <returns>Данные области закладки <see cref="T:System.Activities.BookmarkScope" />, связанной с закладкой <see cref="T:System.Activities.Bookmark" />.</returns>
    </member>
    <member name="T:System.Activities.Hosting.BookmarkScopeInfo">
      <summary>Содержит данные идентификации и инициализации объекта <see cref="T:System.Activities.BookmarkScope" />.</summary>
    </member>
    <member name="P:System.Activities.Hosting.BookmarkScopeInfo.Id">
      <summary>Возвращает уникальный идентификатор объекта <see cref="T:System.Activities.BookmarkScope" />.</summary>
      <returns>Уникальный идентификатор объекта <see cref="T:System.Activities.BookmarkScope" />.</returns>
    </member>
    <member name="P:System.Activities.Hosting.BookmarkScopeInfo.IsInitialized">
      <summary>Возвращает значение, указывающее, был ли инициализирован объект <see cref="T:System.Activities.BookmarkScope" />.</summary>
      <returns>Значение <see langword="true" />, если объект <see cref="T:System.Activities.BookmarkScope" /> инициализирован; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Activities.Hosting.BookmarkScopeInfo.TemporaryId">
      <summary>Возвращает значение, уникально идентифицирующее <see cref="T:System.Activities.BookmarkScope" />, если <see cref="T:System.Activities.BookmarkScope" /> находится в инициализированном состоянии.</summary>
      <returns>Значение, уникально идентифицирующее <see cref="T:System.Activities.BookmarkScope" />, если <see cref="T:System.Activities.BookmarkScope" /> находится в инициализированном состоянии.</returns>
    </member>
    <member name="T:System.Activities.Hosting.IWorkflowInstanceExtension">
      <summary>Этот интерфейс реализуется составными расширениями или расширениями, которым требуется доступ к экземплярам рабочего процесса. Реализации этого интерфейса будут вызываться экземпляром <see cref="T:System.Activities.Hosting.WorkflowInstance" /> до выполнения для предоставления дополнительных расширений или для получения доступа к <see cref="T:System.Activities.Hosting.WorkflowInstance" /> с помощью <see cref="T:System.Activities.Hosting.WorkflowInstanceProxy" />.</summary>
    </member>
    <member name="M:System.Activities.Hosting.IWorkflowInstanceExtension.GetAdditionalExtensions">
      <summary>При реализации возвращает все дополнительные расширения, необходимые для реализующего класса.</summary>
      <returns>Коллекция дополнительных расширений рабочего процесса.</returns>
    </member>
    <member name="M:System.Activities.Hosting.IWorkflowInstanceExtension.SetInstance(System.Activities.Hosting.WorkflowInstanceProxy)">
      <summary>Задает указанный целевой <see cref="T:System.Activities.Hosting.WorkflowInstanceProxy" />.</summary>
      <param name="instance">Задаваемый целевой экземпляр рабочего процесса.</param>
    </member>
    <member name="T:System.Activities.Hosting.LocationInfo">
      <summary>Содержит сведения о связанном <see cref="T:System.Activities.Location" />.</summary>
    </member>
    <member name="P:System.Activities.Hosting.LocationInfo.Name">
      <summary>Возвращает значение <see cref="T:System.String" />, определяющее связанный объект <see cref="T:System.Activities.Location" />.</summary>
      <returns>Связанное местоположение.</returns>
    </member>
    <member name="P:System.Activities.Hosting.LocationInfo.OwnerDisplayName">
      <summary>Возвращает дополнительное понятное имя, используемое для отладки, проверки, обработки исключений и отслеживания.</summary>
      <returns>Необязательное понятное имя, используемое для отладки, проверки, обработки исключений и отслеживания.</returns>
    </member>
    <member name="P:System.Activities.Hosting.LocationInfo.Value">
      <summary>Возвращает значение, хранящееся в связанном объекте <see cref="T:System.Activities.Location" />.</summary>
      <returns>Значение, хранящееся в связанном <see cref="T:System.Activities.Location" />.</returns>
    </member>
    <member name="T:System.Activities.Hosting.SymbolResolver">
      <summary>Объект <see cref="T:System.Activities.Hosting.SymbolResolver" /> является расширением, предоставляющим узел <see cref="T:System.Activities.LocationReferenceEnvironment" />, содержащий объекты, которые можно идентифицировать с помощью строкового имени.  Значения, предоставленные с помощью <see cref="T:System.Activities.Hosting.SymbolResolver" />, не являются сохраняемыми.  Сохраняемость значений <see cref="T:System.Activities.Hosting.SymbolResolver" /> выполняется узлом.</summary>
    </member>
    <member name="M:System.Activities.Hosting.SymbolResolver.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Hosting.SymbolResolver" />.</summary>
    </member>
    <member name="M:System.Activities.Hosting.SymbolResolver.Add(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>Добавляет символ с помощью указания пары «ключ-значение».</summary>
      <param name="item">Добавляемый символ.</param>
    </member>
    <member name="M:System.Activities.Hosting.SymbolResolver.Add(System.String,System.Object)">
      <summary>Добавляет символ с помощью указания имени и значения символа.</summary>
      <param name="key">Имя символа.</param>
      <param name="value">Значение символа, на который дана ссылка.</param>
    </member>
    <member name="M:System.Activities.Hosting.SymbolResolver.Add(System.String,System.Object,System.Type)">
      <summary>Добавляет символ с помощью указания имени, значения и типа символа.</summary>
      <param name="key">Имя символа.</param>
      <param name="value">Значение символа, на который дана ссылка.</param>
      <param name="type">Тип значения символа.</param>
    </member>
    <member name="M:System.Activities.Hosting.SymbolResolver.Add(System.String,System.Type)">
      <summary>Добавляет символ с помощью указания имени и типа символа.</summary>
      <param name="key">Имя символа.</param>
      <param name="type">Тип значения символа.</param>
    </member>
    <member name="M:System.Activities.Hosting.SymbolResolver.AsLocationReferenceEnvironment">
      <summary>Возвращает экземпляр <see cref="T:System.Activities.LocationReferenceEnvironment" />, обеспечивающий доступ <see cref="T:System.Activities.Hosting.SymbolResolver" /> к ссылкам на значения символов, представленным объектами <see cref="T:System.Activities.LocationReference" />.</summary>
      <returns>Ссылка на расположение, обеспечивающая доступ <see cref="T:System.Activities.Hosting.SymbolResolver" /> к ссылкам на значения символов, представленным объектами <see cref="T:System.Activities.LocationReference" />.</returns>
    </member>
    <member name="M:System.Activities.Hosting.SymbolResolver.Clear">
      <summary>Удаляет все символы из <see cref="T:System.Activities.Hosting.SymbolResolver" />.</summary>
    </member>
    <member name="M:System.Activities.Hosting.SymbolResolver.Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>Возвращает значение, указывающее, содержит ли <see cref="T:System.Activities.Hosting.SymbolResolver" /> указанный символ.</summary>
      <param name="item">Символ, представленный парой «ключ-значение», который необходимо найти в <see cref="T:System.Activities.Hosting.SymbolResolver" />.</param>
      <returns>Значение <see langword="true" />, если <see cref="T:System.Activities.Hosting.SymbolResolver" /> содержит указанный символ; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Activities.Hosting.SymbolResolver.ContainsKey(System.String)">
      <summary>Возвращает значение, указывающее, содержит ли <see cref="T:System.Activities.Hosting.SymbolResolver" /> символ с указанным ключом.</summary>
      <param name="key">Ключ символа, который требуется найти.</param>
      <returns>Значение <see langword="true" />, если <see cref="T:System.Activities.Hosting.SymbolResolver" /> содержит символ с указанным ключом; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Activities.Hosting.SymbolResolver.CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Object}[],System.Int32)">
      <summary>Копирует символы, содержащиеся в <see cref="T:System.Activities.Hosting.SymbolResolver" />, в существующий одномерный массив пар «ключ-значение», начиная с указанного индекса массива.</summary>
      <param name="array">Одномерный массив пар «ключ-значение», в который необходимо скопировать символы. Индекс в массиве должен начинаться с нуля.</param>
      <param name="arrayIndex">Начинающийся с ноля индекс в целевом массиве, с которого начинается копирование.</param>
    </member>
    <member name="P:System.Activities.Hosting.SymbolResolver.Count">
      <summary>Возвращает число символов, содержащихся в <see cref="T:System.Activities.Hosting.SymbolResolver" />.</summary>
      <returns>Число символов, содержащихся в <see cref="T:System.Activities.Hosting.SymbolResolver" />.</returns>
    </member>
    <member name="M:System.Activities.Hosting.SymbolResolver.GetEnumerator">
      <summary>Возвращает перечислитель, который используется для итерации по коллекции пар «ключ-значение», где ключами являются имена символов, а значениями — значения символов.</summary>
      <returns>Перечислитель, который последовательно просматривает коллекцию пар «ключ-значение».</returns>
    </member>
    <member name="P:System.Activities.Hosting.SymbolResolver.IsReadOnly">
      <summary>Возвращает значение, указывающее, доступен ли словарь символов в <see cref="T:System.Activities.Hosting.SymbolResolver" /> только для чтения.</summary>
      <returns>
        <see langword="false" />.</returns>
    </member>
    <member name="P:System.Activities.Hosting.SymbolResolver.Item(System.String)">
      <summary>Возвращает или задает значение элемента, связанного с указанным ключом.</summary>
      <param name="key">Ключ элемента.</param>
      <returns>Значение элемента, связанного с указанным ключом.</returns>
    </member>
    <member name="P:System.Activities.Hosting.SymbolResolver.Keys">
      <summary>Возвращает коллекцию всех ключей в <see cref="T:System.Activities.Hosting.SymbolResolver" />.</summary>
      <returns>Коллекция всех ключей в <see cref="T:System.Activities.Hosting.SymbolResolver" />.</returns>
    </member>
    <member name="M:System.Activities.Hosting.SymbolResolver.Remove(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>Удаляет указанный символ из <see cref="T:System.Activities.Hosting.SymbolResolver" />.</summary>
      <param name="item">Символ, который необходимо удалить.</param>
      <returns>Значение <see langword="true" />, если символ успешно найден и удален; в противном случае — значение <see langword="false" />. Данный метод возвращает значение <see langword="false" />, если символ отсутствует.</returns>
    </member>
    <member name="M:System.Activities.Hosting.SymbolResolver.Remove(System.String)">
      <summary>Удаляет символ из <see cref="T:System.Activities.Hosting.SymbolResolver" /> с помощью указанного ключа.</summary>
      <param name="key">Ключ символа, который требуется удалить.</param>
      <returns>Значение <see langword="true" />, если символ успешно найден и удален; в противном случае — значение <see langword="false" />. Данный метод возвращает значение <see langword="false" />, если символ отсутствует.</returns>
    </member>
    <member name="M:System.Activities.Hosting.SymbolResolver.System#Collections#IEnumerable#GetEnumerator">
      <summary>Возвращает перечислитель, который используется для итерации по коллекции пар «ключ-значение», где ключами являются имена символов, а значениями — значения символов.</summary>
      <returns>Перечислитель, который последовательно просматривает коллекцию пар «ключ-значение».</returns>
    </member>
    <member name="M:System.Activities.Hosting.SymbolResolver.TryGetValue(System.String,System.Object@)">
      <summary>Возвращает значение, связанное с заданным ключом.</summary>
      <param name="key">Ключ значения, которое необходимо получить.</param>
      <param name="value">Возвращаемое значение, связанное с указанном ключом, если он найден; в противном случае — значение по умолчанию для данного типа параметра значения. Этот параметр передается неинициализированным.</param>
      <returns>
        <see langword="true" />, если <see cref="T:System.Activities.Hosting.SymbolResolver" /> содержит элемент с указанным ключом, в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="P:System.Activities.Hosting.SymbolResolver.Values">
      <summary>Возвращает коллекцию всех значений в <see cref="T:System.Activities.Hosting.SymbolResolver" />.</summary>
      <returns>Коллекция всех значений в <see cref="T:System.Activities.Hosting.SymbolResolver" />.</returns>
    </member>
    <member name="T:System.Activities.Hosting.WorkflowInstance">
      <summary>Объект <see cref="T:System.Activities.Hosting.WorkflowInstance" /> представляет упрощенную среду выполнения для каждого экземпляра, создаваемую для выполнения программы рабочего процесса. Он может быть создан для создания нового экземпляра рабочего процесса или из существующего состояния экземпляра. API, предоставляющие класс <see cref="T:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl" />, являются минимальным набором элементов управления времени выполнения, с помощью которых могут быть реализованы операции более высокого уровня. Этот набор API предоставляет доступ ко всем функциям среды выполнения. <see cref="T:System.Activities.Hosting.WorkflowInstance" /> является абстрактным классом и зависит от реализации узлом своих абстрактных методов для обеспечения таких функций узла, как синхронизация, сохраняемость, отслеживание и расширения.</summary>
    </member>
    <member name="M:System.Activities.Hosting.WorkflowInstance.#ctor(System.Activities.Activity)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Hosting.WorkflowInstance" /> с использованием указанного определения рабочего процесса.</summary>
      <param name="workflowDefinition">Действие, определяющее рабочий процесс.</param>
    </member>
    <member name="M:System.Activities.Hosting.WorkflowInstance.#ctor(System.Activities.Activity,System.Activities.WorkflowIdentity)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Hosting.WorkflowInstance" /> с указанным определением рабочего процесса и удостоверением определения.</summary>
      <param name="workflowDefinition">Действие, определяющее рабочий процесс.</param>
      <param name="definitionIdentity">Удостоверение определения.</param>
    </member>
    <member name="M:System.Activities.Hosting.WorkflowInstance.BeginFlushTrackingRecords(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Вызывается средой выполнения рабочего процесса для начала асинхронной отправки отложенных записей отслеживания участникам отслеживания.</summary>
      <param name="timeout">Промежуток времени, по истечении которого нужно прекратить попытку.</param>
      <param name="callback">Метод, вызываемый при завершении операции отслеживания.</param>
      <param name="state">Сведения об асинхронной операции.</param>
      <returns>Состояние текущей операции отслеживания.</returns>
    </member>
    <member name="P:System.Activities.Hosting.WorkflowInstance.Controller">
      <summary>Возвращает экземпляр <see cref="T:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl" /> для этого <see cref="T:System.Activities.Hosting.WorkflowInstance" />.</summary>
      <returns>Экземпляр контроллера для данного экземпляра рабочего процесса.</returns>
    </member>
    <member name="P:System.Activities.Hosting.WorkflowInstance.DefinitionIdentity">
      <summary>Получает или задает удостоверение определения <see cref="T:System.Activities.Hosting.WorkflowInstance" />.</summary>
      <returns>Удостоверение определения <see cref="T:System.Activities.Hosting.WorkflowInstance" />.</returns>
    </member>
    <member name="M:System.Activities.Hosting.WorkflowInstance.DisposeExtensions">
      <summary>Вызывает метод <see cref="M:System.IDisposable.Dispose" /> для всех расширений, реализующих интерфейс <see cref="T:System.IDisposable" />.</summary>
    </member>
    <member name="M:System.Activities.Hosting.WorkflowInstance.EndFlushTrackingRecords(System.IAsyncResult)">
      <summary>Вызывается средой выполнения рабочего процесса для завершения операции отслеживания.</summary>
      <param name="result">Состояние асинхронной операции отслеживания.</param>
    </member>
    <member name="M:System.Activities.Hosting.WorkflowInstance.FlushTrackingRecords(System.TimeSpan)">
      <summary>Вызывается средой выполнения рабочего процесса для отправки отложенных записей отслеживания участникам отслеживания.</summary>
      <param name="timeout">Промежуток времени, по истечении которого нужно прекратить попытку.</param>
    </member>
    <member name="M:System.Activities.Hosting.WorkflowInstance.GetActivitiesBlockingUpdate(System.Object,System.Activities.DynamicUpdate.DynamicUpdateMap)">
      <summary>Извлекает Список действий, которые блокируют обновление рабочий процесса.</summary>
      <param name="deserializedRuntimeState">Десериализованное состояние среды выполнения.</param>
      <param name="updateMap">Сопоставление обновления.</param>
      <returns>Список действий, которые блокируют обновление.</returns>
    </member>
    <member name="M:System.Activities.Hosting.WorkflowInstance.GetExtension``1">
      <summary>Возвращает расширение указанного типа.</summary>
      <typeparam name="T">Тип расширения для поиска.</typeparam>
      <returns>Расширение указанного типа.</returns>
    </member>
    <member name="M:System.Activities.Hosting.WorkflowInstance.GetExtensions``1">
      <summary>Возвращает все расширения, найденные для указанного типа.</summary>
      <typeparam name="T">Тип расширения для поиска.</typeparam>
      <returns>Все расширения, найденные для указанного типа.</returns>
    </member>
    <member name="P:System.Activities.Hosting.WorkflowInstance.HostEnvironment">
      <summary>Возвращает или задает корневую среду для аргументов и переменных экземпляра рабочего процесса.</summary>
      <returns>Корневая среда для аргументов и переменных экземпляра рабочего процесса.</returns>
    </member>
    <member name="P:System.Activities.Hosting.WorkflowInstance.Id">
      <summary>Возвращает уникальный идентификатор экземпляра рабочего процесса.</summary>
      <returns>Уникальный идентификатор экземпляра рабочего процесса.</returns>
    </member>
    <member name="M:System.Activities.Hosting.WorkflowInstance.Initialize(System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IList{System.Activities.H*******le})">
      <summary>Вызывается узлом для инициализации экземпляра рабочего процесса со значениями аргументов и свойствами выполнения.</summary>
      <param name="workflowArgumentValues">Входные параметры рабочего процесса, различаемые по имени аргумента.</param>
      <param name="workflowExecutionProperties">Список выполняемых свойств рабочего процесса.</param>
    </member>
    <member name="M:System.Activities.Hosting.WorkflowInstance.Initialize(System.Object)">
      <summary>Вызывается узлом для инициализации состояния среды выполнения экземпляра рабочего процесса.</summary>
      <param name="deserializedRuntimeState">Состояние среды выполнения, используемой для выполнения рабочего процесса.</param>
    </member>
    <member name="M:System.Activities.Hosting.WorkflowInstance.Initialize(System.Object,System.Activities.DynamicUpdate.DynamicUpdateMap)">
      <summary>Вызывается узлом для инициализации экземпляра рабочего процесса с состоянием среды выполнения рабочего процесса и обновления сопоставления.</summary>
      <param name="deserializedRuntimeState">Состояние среды выполнения, используемой для выполнения рабочего процесса.</param>
      <param name="updateMap">Сопоставление обновления.</param>
    </member>
    <member name="P:System.Activities.Hosting.WorkflowInstance.IsReadOnly">
      <summary>Возвращает значение, показывающее, был ли инициализирован экземпляр рабочего процесса.</summary>
      <returns>Значение <see langword="true" />, если экземпляр рабочего процесса был инициализирован; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Activities.Hosting.WorkflowInstance.OnBeginAssociateKeys(System.Collections.Generic.ICollection{System.Runtime.DurableInstancing.InstanceKey},System.AsyncCallback,System.Object)">
      <summary>Вызывает среду выполнения рабочего процесса для уведомления узла о том, что новые ключи экземпляра должны быть связаны с этим экземпляром.</summary>
      <param name="keys">Ключи экземпляра, которые необходимо связать с этим экземпляром рабочего процесса.</param>
      <param name="callback">Метод, вызываемый при завершении этой операции.</param>
      <param name="state">Дополнительный объект, связанный с приложением, который содержит сведения об асинхронной операции.</param>
      <returns>Ссылка на асинхронную операцию связанных ключей.</returns>
    </member>
    <member name="M:System.Activities.Hosting.WorkflowInstance.OnBeginFlushTrackingRecords(System.AsyncCallback,System.Object)">
      <summary>Асинхронный вызов, запрашивающий сохранение узлом отложенных записей отслеживания на диск для участников отслеживания.</summary>
      <param name="callback">Метод, вызываемый при завершении операции отслеживания.</param>
      <param name="state">Сведения об асинхронной операции.</param>
      <returns>Состояние текущей операции отслеживания.</returns>
    </member>
    <member name="M:System.Activities.Hosting.WorkflowInstance.OnBeginPersist(System.AsyncCallback,System.Object)">
      <summary>Асинхронный вызов узла для сохранения рабочего процесса.</summary>
      <param name="callback">Метод, вызываемый при завершении операции сохранения.</param>
      <param name="state">Дополнительный объект, связанный с приложением, который содержит сведения об асинхронной операции.</param>
      <returns>Ссылка на текущую операцию сохранения.</returns>
    </member>
    <member name="M:System.Activities.Hosting.WorkflowInstance.OnBeginResumeBookmark(System.Activities.Bookmark,System.Object,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Вызывается средой выполнения рабочего процесса для уведомления узла о начале операции возобновления закладки.</summary>
      <param name="bookmark">Возобновляемая закладка.</param>
      <param name="value">Данные, передаваемые действию, создавшему закладку <see cref="T:System.Activities.Bookmark" />.</param>
      <param name="timeout">Период времени, в течение которого операция возобновления должна быть завершена, прежде чем операция отменяется и создается исключение <see cref="T:System.TimeoutException" />.</param>
      <param name="callback">Метод, вызываемый при завершении операции возобновления.</param>
      <param name="state">Дополнительный объект, связанный с приложением, который содержит сведения об асинхронной операции.</param>
      <returns>Ссылка на асинхронную операцию возобновления.</returns>
    </member>
    <member name="M:System.Activities.Hosting.WorkflowInstance.OnDisassociateKeys(System.Collections.Generic.ICollection{System.Runtime.DurableInstancing.InstanceKey})">
      <summary>Вызывает среду выполнения рабочего процесса для уведомления узла о том, что определенный набор ключей экземпляра больше не должен быть связан с этим экземпляром.</summary>
      <param name="keys">Список ключей, связь с которыми необходимо разорвать.</param>
    </member>
    <member name="M:System.Activities.Hosting.WorkflowInstance.OnEndAssociateKeys(System.IAsyncResult)">
      <summary>Вызывается средой выполнения рабочего процесса для уведомления узла о завершении операции связанных ключей.</summary>
      <param name="result">Ссылка на асинхронную операцию связанных ключей.</param>
    </member>
    <member name="M:System.Activities.Hosting.WorkflowInstance.OnEndFlushTrackingRecords(System.IAsyncResult)">
      <summary>Вызывается средой выполнения рабочего процесса для уведомления узла о завершении операции сохранения записей отслеживания на диск.</summary>
      <param name="result">Состояние асинхронной операции сохранения на диск записей отслеживания.</param>
    </member>
    <member name="M:System.Activities.Hosting.WorkflowInstance.OnEndPersist(System.IAsyncResult)">
      <summary>Вызывается средой выполнения рабочего процесса для уведомления узла о завершении операции сохранения.</summary>
      <param name="result">Ссылка на асинхронную операцию сохранения.</param>
    </member>
    <member name="M:System.Activities.Hosting.WorkflowInstance.OnEndResumeBookmark(System.IAsyncResult)">
      <summary>Вызывается средой выполнения рабочего процесса для уведомления узла о завершении операции возобновления закладки.</summary>
      <param name="result">Ссылка на асинхронную операцию возобновления закладки.</param>
      <returns>Одно из значений перечисления, указывающее результат выполнения операции возобновления <see cref="T:System.Activities.Bookmark" />.</returns>
    </member>
    <member name="M:System.Activities.Hosting.WorkflowInstance.OnNotifyPaused">
      <summary>Вызывается средой выполнения рабочего процесса для уведомления узла об изменении состояния экземпляра рабочего процесса с «выполняется» на «приостановлено».</summary>
    </member>
    <member name="M:System.Activities.Hosting.WorkflowInstance.OnNotifyUnh*******ledException(System.Exception,System.Activities.Activity,System.String)">
      <summary>Вызывается средой выполнения рабочего процесса для уведомления узла о возникновении необработанного исключения в экземпляре рабочего процесса.</summary>
      <param name="exception">Необработанное исключение.</param>
      <param name="source">Действие, вызвавшее исключение.</param>
      <param name="sourceInstanceId">Уникальный идентификатор <see cref="T:System.Activities.ActivityInstance" />, представляющий действие, вызвавшее исключение.</param>
    </member>
    <member name="M:System.Activities.Hosting.WorkflowInstance.OnRequestAbort(System.Exception)">
      <summary>Вызывается средой выполнения рабочего процесса для уведомления узла о запросе операции прерывания для экземпляра рабочего процесса.</summary>
      <param name="reason">Причина прерывания экземпляра рабочего процесса.</param>
    </member>
    <member name="M:System.Activities.Hosting.WorkflowInstance.RegisterExtensionManager(System.Activities.Hosting.WorkflowInstanceExtensionManager)">
      <summary>Вызывается узлом для регистрации указанного диспетчера расширений, проверки наличия всех необходимых расширений и инициализации коллекции используемых расширений.</summary>
      <param name="extensionManager">Регистрируемый диспетчер расширений.</param>
    </member>
    <member name="P:System.Activities.Hosting.WorkflowInstance.SupportsInstanceKeys">
      <summary>Возвращает значение, указывающее, поддерживает ли узел сопоставление <see cref="P:System.Runtime.DurableInstancing.InstanceView.InstanceKeys" /> с исполняемым экземпляром.</summary>
      <returns>Значение <see langword="true" />, если узел поддерживает связь <see cref="P:System.Runtime.DurableInstancing.InstanceView.InstanceKeys" /> с экземпляром рабочего процесса; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Activities.Hosting.WorkflowInstance.SynchronizationContext">
      <summary>Возвращает или задает тип <see cref="T:System.Threading.SynchronizationContext" />, используемый для планирования экземпляра рабочего процесса.</summary>
      <returns>Контекст синхронизации, используемый для планирования экземпляра рабочего процесса.</returns>
    </member>
    <member name="M:System.Activities.Hosting.WorkflowInstance.ThrowIfReadOnly">
      <summary>Вызывает исключение <see cref="T:System.InvalidOperationException" />, если экземпляр рабочего процесса был инициализирован со свойством <see cref="P:System.Activities.Hosting.WorkflowInstance.IsReadOnly" />.</summary>
    </member>
    <member name="P:System.Activities.Hosting.WorkflowInstance.WorkflowDefinition">
      <summary>Возвращает определение рабочего процесса для экземпляра рабочего процесса.</summary>
      <returns>Определение рабочего процесса для экземпляра рабочего процесса.</returns>
    </member>
    <member name="T:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl">
      <summary>Обеспечивает для классов, производных от <see cref="T:System.Activities.Hosting.WorkflowInstance" />, методы для доступа к функциям среды выполнения рабочих процессов.</summary>
    </member>
    <member name="M:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Abort">
      <summary>Прерывает <see cref="T:System.Activities.Hosting.WorkflowInstance" />.</summary>
    </member>
    <member name="M:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Abort(System.Exception)">
      <summary>Прерывает экземпляр <see cref="T:System.Activities.Hosting.WorkflowInstance" /> с использованием указанного исключения.</summary>
      <param name="reason">Причина прерывания экземпляра <see cref="T:System.Activities.Hosting.WorkflowInstance" />.</param>
    </member>
    <member name="M:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.BeginFlushTrackingRecords(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Вызывается средой выполнения рабочего процесса для начала асинхронной отправки отложенных записей отслеживания участникам отслеживания.</summary>
      <param name="timeout">Промежуток времени, по истечении которого нужно прекратить попытку.</param>
      <param name="callback">Метод, вызываемый при завершении операции отслеживания.</param>
      <param name="state">Сведения об асинхронной операции.</param>
      <returns>Состояние текущей операции отслеживания.</returns>
    </member>
    <member name="M:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.EndFlushTrackingRecords(System.IAsyncResult)">
      <summary>Вызывается средой выполнения рабочего процесса для завершения операции отслеживания.</summary>
      <param name="result">Состояние асинхронной операции отслеживания.</param>
    </member>
    <member name="M:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Equals(System.Object)">
      <summary>Возвращает значение, указывающее, равен ли текущий объект <see cref="T:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl" /> указанному объекту.</summary>
      <param name="obj">Объект для сравнения.</param>
      <returns>Значение <see langword="true" />, если объект равен текущему объекту <see cref="T:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl" />; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.FlushTrackingRecords(System.TimeSpan)">
      <summary>Вызывается средой выполнения рабочего процесса для отправки отложенных записей отслеживания участникам отслеживания.</summary>
      <param name="timeout">Промежуток времени, по истечении которого нужно прекратить попытку.</param>
    </member>
    <member name="M:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.GetAbortReason">
      <summary>Возвращает исключение, вызвавшее прерывание экземпляра <see cref="T:System.Activities.Hosting.WorkflowInstance" />.</summary>
      <returns>Исключение, вызвавшее прерывание <see cref="T:System.Activities.Hosting.WorkflowInstance" /> или значение <see langword="null" />, если <see cref="T:System.Activities.Hosting.WorkflowInstance" /> не был прерван.</returns>
    </member>
    <member name="M:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.GetBookmarks">
      <summary>Возвращает коллекцию доступных закладок для экземпляра <see cref="T:System.Activities.Hosting.WorkflowInstance" />.</summary>
      <returns>Коллекция закладок для экземпляра <see cref="T:System.Activities.Hosting.WorkflowInstance" />.</returns>
    </member>
    <member name="M:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.GetBookmarks(System.Activities.BookmarkScope)">
      <summary>Возвращает коллекцию доступных закладок для экземпляра <see cref="T:System.Activities.Hosting.WorkflowInstance" />, созданного в указанной области <see cref="T:System.Activities.BookmarkScope" />.</summary>
      <param name="scope">Проверяемая область закладки.</param>
      <returns>Коллекция закладок, созданная в указанной области <see cref="T:System.Activities.BookmarkScope" />.</returns>
    </member>
    <member name="M:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.GetCompletionState">
      <summary>Возвращает конечное состояние <see cref="T:System.Activities.ActivityInstanceState" /> экземпляра <see cref="T:System.Activities.Hosting.WorkflowInstance" />.</summary>
      <returns>Один из элементов перечисления, который описывает состояние экземпляра действия.</returns>
    </member>
    <member name="M:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.GetCompletionState(System.Collections.Generic.IDictionary{System.String,System.Object}@,System.Exception@)">
      <summary>Возвращает конечное состояние <see cref="T:System.Activities.ActivityInstanceState" /> экземпляра <see cref="T:System.Activities.Hosting.WorkflowInstance" />, включая выходные данные рабочего процесса и исключение завершения процесса.</summary>
      <param name="outputs">По завершении выполнения метода <paramref name="outputs" /> содержит словарь аргументов <see cref="F:System.Activities.ArgumentDirection.Out" /> рабочего процесса, ключом которых является имя аргумента. Этот параметр передается неинициализированным.</param>
      <param name="terminationException">При возврате результатов метода параметр <paramref name="terminationException" /> содержит исключение, которое вызвало завершение экземпляра <see cref="T:System.Activities.Hosting.WorkflowInstance" />, или значение <see langword="null" />, если <see cref="T:System.Activities.Hosting.WorkflowInstance" /> не был завершен. Этот параметр передается неинициализированным.</param>
      <returns>Один из элементов перечисления, который описывает состояние экземпляра действия.</returns>
    </member>
    <member name="M:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.GetCompletionState(System.Exception@)">
      <summary>Возвращает конечное состояние <see cref="T:System.Activities.ActivityInstanceState" /> экземпляра <see cref="T:System.Activities.Hosting.WorkflowInstance" />, включая исключение завершения процесса.</summary>
      <param name="terminationException">При возврате результатов метода параметр <paramref name="terminationException" /> содержит исключение, которое вызвало завершение экземпляра <see cref="T:System.Activities.Hosting.WorkflowInstance" />, или значение <see langword="null" />, если <see cref="T:System.Activities.Hosting.WorkflowInstance" /> не был завершен. Этот параметр передается неинициализированным.</param>
      <returns>Один из элементов перечисления, который описывает состояние экземпляра действия.</returns>
    </member>
    <member name="M:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.GetHashCode">
      <summary>Возвращает хэш-код для модуля чтения данных <see cref="T:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl" />.</summary>
      <returns>Хэш-код для этого экземпляра <see cref="T:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl" />.</returns>
    </member>
    <member name="M:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.GetMappedVariables">
      <summary>Возвращает словарь переменных в текущей области, указанной с помощью <see cref="F:System.Activities.VariableModifiers.Mapped" />.</summary>
      <returns>Словарь сопоставленных переменных, находящихся в настоящее время в области.</returns>
    </member>
    <member name="P:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.HasPendingTrackingRecords">
      <summary>Вызывается средой выполнения рабочего процесса для определения наличия у этого экземпляра рабочего процесса отложенных записей отслеживания и участника отслеживания.</summary>
      <returns>Значение <see langword="true" />, если экземпляр рабочего процесса содержит отложенные записи отслеживания и участник отслеживания; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.IsPersistable">
      <summary>Возвращает значение, указывающее, находится ли экземпляр <see cref="T:System.Activities.Hosting.WorkflowInstance" /> в состоянии, в котором он может быть сохранен.</summary>
      <returns>Значение <see langword="true" />, если объект <see cref="T:System.Activities.Hosting.WorkflowInstance" /> может быть постоянным; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.op_Equality(System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl,System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl)">
      <summary>Возвращает значение, указывающее, равны ли два экземпляра <see cref="T:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl" />.</summary>
      <param name="left">Первый экземпляр <see cref="T:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl" /> для сравнения.</param>
      <param name="right">Второй экземпляр <see cref="T:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl" /> для сравнения.</param>
      <returns>Значение <see langword="true" />, если два экземпляра <see cref="T:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl" /> равны, в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.op_Inequality(System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl,System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl)">
      <summary>Возвращает значение, указывающее, равны ли два экземпляра <see cref="T:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl" />.</summary>
      <param name="left">Первый экземпляр <see cref="T:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl" /> для сравнения.</param>
      <param name="right">Второй экземпляр <see cref="T:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl" /> для сравнения.</param>
      <returns>Значение <see langword="true" /> если два экземпляра <see cref="T:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl" /> не равны; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.PauseWhenPersistable">
      <summary>Запрашивает приостановку средой выполнения рабочего процесса <see cref="T:System.Activities.Hosting.WorkflowInstance" /> на следующем этапе выполнения, в котором возможно сохранение. Обратите внимание, что очередь планировщика на этом этапе может быть не пуста.</summary>
    </member>
    <member name="M:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.PrepareForSerialization">
      <summary>Подготавливает состояние экземпляра <see cref="T:System.Activities.Hosting.WorkflowInstance" /> к сериализации.</summary>
      <returns>Состояние экземпляра рабочего процесса.</returns>
    </member>
    <member name="M:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.RequestPause">
      <summary>Запрашивает прекращение работы планировщика.</summary>
    </member>
    <member name="M:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Run">
      <summary>Дает указание экземпляру <see cref="T:System.Activities.Hosting.WorkflowInstance" /> начать выполнение.</summary>
    </member>
    <member name="M:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.ScheduleBookmarkResumption(System.Activities.Bookmark,System.Object)">
      <summary>Планирует возобновление закладки с указанным значением.</summary>
      <param name="bookmark">Возобновляемая закладка.</param>
      <param name="value">Данные, передаваемые действию, создавшему закладку <see cref="T:System.Activities.Bookmark" />.</param>
      <returns>Одно из значений перечисления, которое указывает результат выполнения операции планирования <see cref="T:System.Activities.Bookmark" />.</returns>
    </member>
    <member name="M:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.ScheduleBookmarkResumption(System.Activities.Bookmark,System.Object,System.Activities.BookmarkScope)">
      <summary>Планирует возобновление закладки <see cref="T:System.Activities.Bookmark" /> из указанной области <see cref="T:System.Activities.BookmarkScope" />.</summary>
      <param name="bookmark">Возобновляемая закладка.</param>
      <param name="value">Данные, передаваемые действию, создавшему закладку <see cref="T:System.Activities.Bookmark" />.</param>
      <param name="scope">Экземпляр <see cref="T:System.Activities.Bookmark" />, с помощью которого был создан экземпляр <see cref="T:System.Activities.Bookmark" />.</param>
      <returns>Одно из значений перечисления, которое указывает результат выполнения операции планирования <see cref="T:System.Activities.Bookmark" />.</returns>
    </member>
    <member name="M:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.ScheduleCancel">
      <summary>Планирует отмену экземпляра <see cref="T:System.Activities.Hosting.WorkflowInstance" />.</summary>
    </member>
    <member name="P:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.State">
      <summary>Возвращает состояние экземпляра <see cref="T:System.Activities.Hosting.WorkflowInstance" />.</summary>
      <returns>Одно из значений из перечисления, указывающее состояние экземпляра <see cref="T:System.Activities.Hosting.WorkflowInstance" />.</returns>
    </member>
    <member name="M:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Terminate(System.Exception)">
      <summary>Переводит экземпляр <see cref="T:System.Activities.Hosting.WorkflowInstance" /> в завершающее состояние <see cref="F:System.Activities.ActivityInstanceState.Faulted" /> с помощью указанного исключения.</summary>
      <param name="reason">Исключение, являющееся причиной завершения экземпляра <see cref="T:System.Activities.Hosting.WorkflowInstance" />.</param>
    </member>
    <member name="M:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Track(System.Activities.Tracking.WorkflowInstanceRecord)">
      <summary>Вызывается средой выполнения рабочего процесса для добавления указанной отложенной записи к списку отложенной записи.</summary>
      <param name="instanceRecord">Добавляемая запись отслеживания.</param>
    </member>
    <member name="P:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.TrackingEnabled">
      <summary>Вызывается средой выполнения рабочего процесса для определения включения отслеживания в этом экземпляре рабочего процесса.</summary>
      <returns>Значение <see langword="true" />, если отслеживание в этом экземпляре рабочего процесса включено; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="T:System.Activities.Hosting.WorkflowInstanceExtensionManager">
      <summary>Управляет коллекцией расширений экземпляра <see cref="T:System.Activities.Hosting.WorkflowInstance" />.</summary>
    </member>
    <member name="M:System.Activities.Hosting.WorkflowInstanceExtensionManager.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Hosting.WorkflowInstanceExtensionManager" />.</summary>
    </member>
    <member name="M:System.Activities.Hosting.WorkflowInstanceExtensionManager.Add(System.Object)">
      <summary>Добавляет указанное расширение в коллекцию расширений.</summary>
      <param name="singletonExtension">Добавляемое расширение.</param>
    </member>
    <member name="M:System.Activities.Hosting.WorkflowInstanceExtensionManager.Add``1(System.Func{``0})">
      <summary>Регистрирует <see cref="T:System.Func`1" />, кот. используется для предоставления экземпляра расширения при запросе экземпляром рабочего процесса.</summary>
      <param name="extensionCreationFunction">Метод, создающий расширение.</param>
      <typeparam name="T">Тип добавляемого расширения.</typeparam>
    </member>
    <member name="M:System.Activities.Hosting.WorkflowInstanceExtensionManager.MakeReadOnly">
      <summary>Помечает коллекцию расширений как доступную только для чтения.</summary>
    </member>
    <member name="T:System.Activities.Hosting.WorkflowInstanceProxy">
      <summary>Класс, разрешающий расширениям <see cref="T:System.Activities.Hosting.IWorkflowInstanceExtension" /> доступ к узлу службы рабочего процесса.</summary>
    </member>
    <member name="M:System.Activities.Hosting.WorkflowInstanceProxy.BeginResumeBookmark(System.Activities.Bookmark,System.Object,System.AsyncCallback,System.Object)">
      <summary>Асинхронно возобновляет выполнение рабочего процесса с помощью указанной закладки, значения, метода обратного вызова и данных состояния, предоставленных пользователем.</summary>
      <param name="bookmark">Закладка.</param>
      <param name="value">Данные, передаваемые действию, создавшему закладку.</param>
      <param name="callback">Метод, вызываемый при завершении асинхронной операции возобновления.</param>
      <param name="state">Относящийся к необязательному приложению объект, содержащий сведения об асинхронной операции.</param>
      <returns>Ссылка на асинхронную операцию.</returns>
    </member>
    <member name="M:System.Activities.Hosting.WorkflowInstanceProxy.BeginResumeBookmark(System.Activities.Bookmark,System.Object,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Асинхронно возобновляет выполнение рабочего процесса с помощью указанной закладки, значения, интервала времени ожидания, метода обратного вызова и данных состояния, предоставленных пользователем.</summary>
      <param name="bookmark">Закладка.</param>
      <param name="value">Данные, передаваемые действию, создавшему закладку.</param>
      <param name="timeout">Период времени, в течение которого операция возобновления должна быть завершена, прежде чем операция отменяется и создается исключение <see cref="T:System.TimeoutException" />.</param>
      <param name="callback">Метод, вызываемый при завершении операции возобновления.</param>
      <param name="state">Относящийся к необязательному приложению объект, содержащий сведения об асинхронной операции.</param>
      <returns>Ссылка на асинхронную операцию.</returns>
    </member>
    <member name="M:System.Activities.Hosting.WorkflowInstanceProxy.EndResumeBookmark(System.IAsyncResult)">
      <summary>Ожидает завершения отложенной асинхронной операции <see cref="Overload:System.Activities.Hosting.WorkflowInstanceProxy.BeginResumeBookmark" />.</summary>
      <param name="result">Объект <see cref="T:System.IAsyncResult" />, который ссылается на операцию восстановления.</param>
      <returns>Возвращает <see cref="T:System.Activities.BookmarkResumptionResult" />.</returns>
    </member>
    <member name="P:System.Activities.Hosting.WorkflowInstanceProxy.Id">
      <summary>Возвращает идентификатор экземпляра рабочего процесса.</summary>
      <returns>Идентификатор экземпляра рабочего процесса.</returns>
    </member>
    <member name="P:System.Activities.Hosting.WorkflowInstanceProxy.WorkflowDefinition">
      <summary>Получает определение рабочего процесса.</summary>
      <returns>Определение рабочего процесса.</returns>
    </member>
    <member name="T:System.Activities.Hosting.WorkflowInstanceState">
      <summary>Задает состояние объекта <see cref="T:System.Activities.Hosting.WorkflowInstance" />.</summary>
    </member>
    <member name="F:System.Activities.Hosting.WorkflowInstanceState.Aborted">
      <summary>
        <see cref="T:System.Activities.Hosting.WorkflowInstance" /> прерван.</summary>
    </member>
    <member name="F:System.Activities.Hosting.WorkflowInstanceState.Complete">
      <summary>
        <see cref="T:System.Activities.Hosting.WorkflowInstance" /> завершен.</summary>
    </member>
    <member name="F:System.Activities.Hosting.WorkflowInstanceState.Idle">
      <summary>
        <see cref="T:System.Activities.Hosting.WorkflowInstance" /> находится в состоянии бездействия.</summary>
    </member>
    <member name="F:System.Activities.Hosting.WorkflowInstanceState.Runnable">
      <summary>
        <see cref="T:System.Activities.Hosting.WorkflowInstance" /> может быть запущен.</summary>
    </member>
    <member name="T:System.Activities.IExecutionProperty">
      <summary>Предоставляет свойствам выполнения механизм для настройки локального хранения потоков до и после рабочих элементов связанного действия.</summary>
    </member>
    <member name="M:System.Activities.IExecutionProperty.CleanupWorkflowThread">
      <summary>Дает свойству выполнения возможность разделять локальное хранилище потоков.</summary>
    </member>
    <member name="M:System.Activities.IExecutionProperty.SetupWorkflowThread">
      <summary>Дает свойству выполнения возможность настраивать локальное хранилище потоков.</summary>
    </member>
    <member name="T:System.Activities.InArgument">
      <summary>Абстрактный базовый класс, представляющий конечную точку привязки, которая поддерживает поток данных в действие.</summary>
    </member>
    <member name="M:System.Activities.InArgument.CreateReference(System.Activities.InArgument,System.String)">
      <summary>Создает новый аргумент <see cref="T:System.Activities.InArgument" />, который ссылается на заданный целевой аргумент <see cref="T:System.Activities.InArgument" />, с использованием имени того аргумента, на который производится ссылка.</summary>
      <param name="argumentToReference">Целевой аргумент <see langword="in" /> для ссылки.</param>
      <param name="referencedArgumentName">Имя указанного по ссылке аргумента.</param>
      <returns>Новый аргумент <see langword="in" />, ссылающийся на заданный целевой объект <see cref="T:System.Activities.InArgument" />.</returns>
    </member>
    <member name="M:System.Activities.InArgument.CreateReference(System.Activities.InOutArgument,System.String)">
      <summary>Создает новый аргумент <see cref="T:System.Activities.InArgument" />, который ссылается на заданный целевой аргумент <see cref="T:System.Activities.InOutArgument" />, с использованием имени того аргумента, на который производится ссылка.</summary>
      <param name="argumentToReference">Целевой аргумент <see langword="in/out" /> для ссылки.</param>
      <param name="referencedArgumentName">Имя указанного по ссылке аргумента.</param>
      <returns>Новый аргумент <see langword="in" />, ссылающийся на заданный целевой объект <see cref="T:System.Activities.InOutArgument" />.</returns>
    </member>
    <member name="T:System.Activities.InArgument`1">
      <summary>Конечная точка привязки, представляющая поток данных в действие.</summary>
      <typeparam name="T">Тип данных объекта <see cref="T:System.Activities.InArgument`1" />.</typeparam>
    </member>
    <member name="M:System.Activities.InArgument`1.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.InArgument`1" />, используя значения по умолчанию.</summary>
    </member>
    <member name="M:System.Activities.InArgument`1.#ctor(`0)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.InArgument`1" />, используя указанное значение.</summary>
      <param name="constValue">Значение аргумента.</param>
    </member>
    <member name="M:System.Activities.InArgument`1.#ctor(System.Activities.Activity{`0})">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.InArgument`1" /> с использованием указанного объекта <see cref="T:System.Activities.Activity`1" />.</summary>
      <param name="expression">Значение аргумента.</param>
    </member>
    <member name="M:System.Activities.InArgument`1.#ctor(System.Activities.DelegateArgument)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.InArgument`1" /> с использованием указанного объекта <see cref="T:System.Activities.DelegateArgument" />.</summary>
      <param name="delegateArgument">Значение аргумента.</param>
    </member>
    <member name="M:System.Activities.InArgument`1.#ctor(System.Activities.Variable)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.InArgument`1" /> с использованием указанного объекта <see cref="T:System.Activities.Variable" />.</summary>
      <param name="variable">Данные, передаваемые через этот аргумент.</param>
    </member>
    <member name="M:System.Activities.InArgument`1.#ctor(System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,`0}})">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.InArgument`1" />, используя заданное выражение.</summary>
      <param name="expression">Значение аргумента.</param>
    </member>
    <member name="P:System.Activities.InArgument`1.Expression">
      <summary>Возвращает объект <see cref="T:System.Activities.Activity`1" />, который представляет значение этого аргумента <see cref="T:System.Activities.InArgument`1" />.</summary>
      <returns>Действие, представляющее значение аргумента.</returns>
    </member>
    <member name="M:System.Activities.InArgument`1.FromDelegateArgument(System.Activities.DelegateArgument)">
      <summary>Инициализирует и возвращает новый аргумент <see cref="T:System.Activities.InArgument`1" /> с использованием указанного действия <see cref="T:System.Activities.DelegateArgument" />.</summary>
      <param name="delegateArgument">Значение аргумента.</param>
      <returns>Новый аргумент.</returns>
    </member>
    <member name="M:System.Activities.InArgument`1.FromExpression(System.Activities.Activity{`0})">
      <summary>Инициализирует и возвращает новый аргумент <see cref="T:System.Activities.InArgument`1" /> с использованием указанного действия <see cref="T:System.Activities.Activity`1" />.</summary>
      <param name="expression">Значение аргумента.</param>
      <returns>Новый аргумент.</returns>
    </member>
    <member name="M:System.Activities.InArgument`1.FromValue(`0)">
      <summary>Инициализирует и возвращает новый аргумент <see cref="T:System.Activities.InArgument`1" /> с использованием указанного значения.</summary>
      <param name="constValue">Значение аргумента,</param>
      <returns>Новый аргумент.</returns>
    </member>
    <member name="M:System.Activities.InArgument`1.FromVariable(System.Activities.Variable)">
      <summary>Инициализирует и возвращает новый аргумент <see cref="T:System.Activities.InArgument`1" /> с использованием указанного действия <see cref="T:System.Activities.Variable" />.</summary>
      <param name="variable">Значение аргумента.</param>
      <returns>Новый аргумент.</returns>
    </member>
    <member name="M:System.Activities.InArgument`1.Get(System.Activities.ActivityContext)">
      <summary>Возвращает значение аргумента <see cref="T:System.Activities.InArgument`1" />, используя указанный контекст действия.</summary>
      <param name="context">Контекст текущего действия.</param>
      <returns>Значение аргумента.</returns>
    </member>
    <member name="M:System.Activities.InArgument`1.op_Implicit(System.Activities.Activity{`0})~System.Activities.InArgument{`0}">
      <summary>Инициализирует и возвращает новый аргумент <see cref="T:System.Activities.InArgument`1" /> с использованием указанного действия <see cref="T:System.Activities.Activity`1" />.</summary>
      <param name="expression">Значение аргумента.</param>
      <returns>Новый аргумент.</returns>
    </member>
    <member name="M:System.Activities.InArgument`1.op_Implicit(System.Activities.DelegateArgument)~System.Activities.InArgument{`0}">
      <summary>Инициализирует и возвращает новый аргумент <see cref="T:System.Activities.InArgument`1" /> с использованием указанного действия <see cref="T:System.Activities.DelegateArgument" />.</summary>
      <param name="delegateArgument">Значение аргумента.</param>
      <returns>Новый аргумент.</returns>
    </member>
    <member name="M:System.Activities.InArgument`1.op_Implicit(System.Activities.Variable)~System.Activities.InArgument{`0}">
      <summary>Инициализирует и возвращает новый аргумент <see cref="T:System.Activities.InArgument`1" /> с использованием указанного действия <see cref="T:System.Activities.Variable" />.</summary>
      <param name="variable">Значение аргумента,</param>
      <returns>Новый аргумент.</returns>
    </member>
    <member name="M:System.Activities.InArgument`1.op_Implicit(`0)~System.Activities.InArgument{`0}">
      <summary>Инициализирует и возвращает новый аргумент <see cref="T:System.Activities.InArgument`1" /> с использованием указанного значения.</summary>
      <param name="constValue">Значение аргумента.</param>
      <returns>Новый аргумент.</returns>
    </member>
    <member name="M:System.Activities.InArgument`1.Set(System.Activities.ActivityContext,`0)">
      <summary>Задает значение аргумента <see cref="T:System.Activities.InArgument`1" /> с использованием указанного значения.</summary>
      <param name="context">Контекст текущего действия.</param>
      <param name="value">Новое значение.</param>
    </member>
    <member name="T:System.Activities.InOutArgument">
      <summary>Абстрактный базовый класс, представляющий конечную точку привязки, которая поддерживает поток данных в действие и из действия.</summary>
    </member>
    <member name="M:System.Activities.InOutArgument.CreateReference(System.Activities.InOutArgument,System.String)">
      <summary>Создает новый аргумент <see cref="T:System.Activities.InOutArgument" />, который ссылается на заданный целевой аргумент <see cref="T:System.Activities.InOutArgument" />, с использованием имени того аргумента, на который производится ссылка.</summary>
      <param name="argumentToReference">Целевой аргумент <see langword="in/out" /> для ссылки.</param>
      <param name="referencedArgumentName">Имя указанного по ссылке аргумента.</param>
      <returns>Новый аргумент <see langword="in/out" />, ссылающийся на заданный целевой объект <see cref="T:System.Activities.InOutArgument" />.</returns>
    </member>
    <member name="T:System.Activities.InOutArgument`1">
      <summary>Конечная точка привязки, представляющая поток данных в действие и из действия.</summary>
      <typeparam name="T">Тип данных объекта <see cref="T:System.Activities.InOutArgument`1" />.</typeparam>
    </member>
    <member name="M:System.Activities.InOutArgument`1.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.InOutArgument`1" />, используя значения по умолчанию.</summary>
    </member>
    <member name="M:System.Activities.InOutArgument`1.#ctor(System.Activities.Activity{System.Activities.Location{`0}})">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.InOutArgument`1" /> с использованием указанного объекта <see cref="T:System.Activities.Activity`1" />.</summary>
      <param name="expression">Значение аргумента.</param>
    </member>
    <member name="M:System.Activities.InOutArgument`1.#ctor(System.Activities.Variable)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.InOutArgument`1" /> с использованием указанного объекта <see cref="T:System.Activities.Variable" />.</summary>
      <param name="variable">Значение аргумента.</param>
    </member>
    <member name="M:System.Activities.InOutArgument`1.#ctor(System.Activities.Variable{`0})">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.InOutArgument`1" /> с использованием указанного объекта <see cref="T:System.Activities.Variable`1" />.</summary>
      <param name="variable">Значение аргумента.</param>
    </member>
    <member name="M:System.Activities.InOutArgument`1.#ctor(System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,`0}})">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.InOutArgument`1" />, используя заданное выражение.</summary>
      <param name="expression">Значение аргумента.</param>
    </member>
    <member name="P:System.Activities.InOutArgument`1.Expression">
      <summary>Возвращает объект <see cref="T:System.Activities.Activity`1" />, который представляет значение этого аргумента <see cref="T:System.Activities.InOutArgument`1" />.</summary>
      <returns>Значение аргумента.</returns>
    </member>
    <member name="M:System.Activities.InOutArgument`1.FromExpression(System.Activities.Activity{System.Activities.Location{`0}})">
      <summary>Инициализирует и возвращает новый объект <see cref="T:System.Activities.InOutArgument`1" />, созданный с указанной переменной <see cref="T:System.Activities.Activity`1" />.</summary>
      <param name="expression">Значение аргумента.</param>
      <returns>Новый аргумент.</returns>
    </member>
    <member name="M:System.Activities.InOutArgument`1.FromVariable(System.Activities.Variable{`0})">
      <summary>Инициализирует и возвращает новый аргумент <see cref="T:System.Activities.InOutArgument`1" />, созданный с использованием указанной переменной <see cref="T:System.Activities.Variable`1" />.</summary>
      <param name="variable">Значение аргумента.</param>
      <returns>Новый аргумент.</returns>
    </member>
    <member name="M:System.Activities.InOutArgument`1.Get(System.Activities.ActivityContext)">
      <summary>Возвращает значение объекта <see cref="T:System.Activities.InOutArgument`1" /> с использованием указанного объекта <see cref="T:System.Activities.ActivityContext" />.</summary>
      <param name="context">Контекст действия, содержащий значение аргумента.</param>
      <returns>Значение аргумента.</returns>
    </member>
    <member name="M:System.Activities.InOutArgument`1.GetLocation(System.Activities.ActivityContext)">
      <summary>Возвращает расположение значения для аргумента <see cref="T:System.Activities.InOutArgument`1" />.</summary>
      <param name="context">Контекст действия, содержащий расположение значения аргумента.</param>
      <returns>Ссылка на расположение, в котором хранится значение аргумента.</returns>
    </member>
    <member name="M:System.Activities.InOutArgument`1.op_Implicit(System.Activities.Activity{System.Activities.Location{`0}})~System.Activities.InOutArgument{`0}">
      <summary>Инициализирует и возвращает новый объект <see cref="T:System.Activities.InOutArgument`1" />, созданный с указанной переменной <see cref="T:System.Activities.Activity`1" />.</summary>
      <param name="expression">Значение аргумента.</param>
      <returns>Новый аргумент.</returns>
    </member>
	<member name="M:System.Activities.InOutArgument`1.op_Implicit(System.Activities.Variable{`0})~System.Activities.InOutArgument{`0}">
      <summary>Инициализирует и возвращает новый объект <see cref="T:System.Activities.InOutArgument`1" />, созданный с указанной переменной <see cref="T:System.Activities.Variable`1" />.</summary>
      <param name="variable">Значение аргумента.</param>
      <returns>Новый аргумент.</returns>
    </member>
    <member name="M:System.Activities.InArgument`1.op_Implicit(System.Activities.DelegateArgument)~System.Activities.InArgument{`0}">
      <summary>Инициализирует и возвращает новый объект <see cref="T:System.Activities.InOutArgument`1" />, созданный с указанной переменной <see cref="T:System.Activities.Variable`1" />.</summary>
      <param name="variable">Значение аргумента.</param>
      <returns>Новый аргумент.</returns>
    </member>
    <member name="M:System.Activities.InOutArgument`1.Set(System.Activities.ActivityContext,`0)">
      <summary>Задает значение аргумента с использованием указанного значения.</summary>
      <param name="context">Контекст текущего действия.</param>
      <param name="value">Новое значение.</param>
    </member>
    <member name="T:System.Activities.InvalidWorkflowException">
      <summary>Обрабатывает исключения, которые создаются, если рабочий процесс является недопустимым.</summary>
    </member>
    <member name="M:System.Activities.InvalidWorkflowException.#ctor">
      <summary>Создайте новый экземпляр класса <see cref="T:System.Activities.InvalidWorkflowException" /> со значениями по умолчанию.</summary>
    </member>
    <member name="M:System.Activities.InvalidWorkflowException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Создайте новый экземпляр класса <see cref="T:System.Activities.InvalidWorkflowException" /> с указанными сведениями о сериализации и контекстом потоковой передачи.</summary>
      <param name="info">Объект <see cref="T:System.Runtime.Serialization.SerializationInfo" />, содержащий данные сериализованного объекта о вызываемом исключении.</param>
      <param name="context">Источник и назначение сериализуемого потока.</param>
    </member>
    <member name="M:System.Activities.InvalidWorkflowException.#ctor(System.String)">
      <summary>Создайте новый экземпляр класса <see cref="T:System.Activities.InvalidWorkflowException" /> с указанным описанием исключения «недопустимый рабочий процесс».</summary>
      <param name="message">Строковое описание исключения.</param>
    </member>
    <member name="M:System.Activities.InvalidWorkflowException.#ctor(System.String,System.Exception)">
      <summary>Создайте новый экземпляр класса <see cref="T:System.Activities.InvalidWorkflowException" /> с указанным описанием исключения «недопустимый рабочий процесс» и внутренним исключением.</summary>
      <param name="message">Описание исключения.</param>
      <param name="innerException">Исключение, которое является причиной текущего исключения.</param>
    </member>
    <member name="T:System.Activities.InvokeCompletedEventArgs">
      <summary>Предоставляет данные для события <see cref="E:System.Activities.WorkflowInvoker.InvokeCompleted" />.</summary>
    </member>
    <member name="P:System.Activities.InvokeCompletedEventArgs.Outputs">
      <summary>Возвращает словарь <see cref="T:System.Collections.Generic.IDictionary`2" /> значений выходных аргументов корневого действия из завершенного рабочего процесса.</summary>
      <returns>Корневое действие словарь значений выходных аргументов из завершенного рабочего процесса.</returns>
    </member>
    <member name="T:System.Activities.IPropertyRegistrationCallback">
      <summary>Разрешает свойству выполнения рабочего процесса передавать пользовательскую логику регистрации и отмены регистрации.</summary>
    </member>
    <member name="M:System.Activities.IPropertyRegistrationCallback.Register(System.Activities.RegistrationContext)">
      <summary>Вызывается, когда свойство выполнения рабочего процесса добавляется посредством <see cref="Overload:System.Activities.ExecutionProperties.Add" />. Таким образом создается обработчик проверки для свойства.</summary>
      <param name="context">Объект <see cref="T:System.Activities.RegistrationContext" />, ссылающийся на коллекцию свойств выполнения, в которой регистрируется свойство.</param>
    </member>
    <member name="M:System.Activities.IPropertyRegistrationCallback.Unregister(System.Activities.RegistrationContext)">
      <summary>Вызывается, когда свойство выполнения рабочего процесса выходит за пределы области.</summary>
      <param name="context">Объект <see cref="T:System.Activities.RegistrationContext" />, ссылающийся на коллекцию свойств выполнения, которой принадлежит свойство.</param>
    </member>
    <member name="T:System.Activities.Location">
      <summary>Предоставляет ссылку на значение, используемое объектом <see cref="T:System.Activities.Argument" /> или <see cref="T:System.Activities.Variable" />.</summary>
    </member>
    <member name="M:System.Activities.Location.#ctor">
      <summary>Вызывается из конструкторов в производных классах, чтобы инициализировать объект.</summary>
    </member>
    <member name="P:System.Activities.Location.LocationType">
      <summary>При переопределении в производном классе возвращает тип упоминаемого объекта.</summary>
      <returns>Тип упоминаемого объекта.</returns>
    </member>
    <member name="P:System.Activities.Location.Value">
      <summary>Возвращает или задает значение указанного по ссылке объекта.</summary>
      <returns>Значение объекта.</returns>
    </member>
    <member name="P:System.Activities.Location.ValueCore">
      <summary>При переопределении в производном классе возвращает или задает значение объекта, упоминаемого по расположению.</summary>
      <returns>Значение объекта.</returns>
    </member>
    <member name="T:System.Activities.Location`1">
      <summary>Предоставляет типизированную ссылку на значение, используемое объектом <see cref="T:System.Activities.Argument" /> или <see cref="T:System.Activities.Variable" />.</summary>
      <typeparam name="T">Тип значения.</typeparam>
    </member>
    <member name="M:System.Activities.Location`1.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Location`1" />.</summary>
    </member>
    <member name="P:System.Activities.Location`1.LocationType">
      <summary>Возвращает тип значения, упоминаемого по расположению.</summary>
      <returns>Тип значения.</returns>
    </member>
    <member name="M:System.Activities.Location`1.ToString">
      <summary>Возвращает строковое представление значения упоминаемого объекта.</summary>
      <returns>Значение указанного по ссылке объекта.</returns>
    </member>
    <member name="P:System.Activities.Location`1.Value">
      <summary>Возвращает или задает значение указанного по ссылке объекта.</summary>
      <returns>Значение указанного по ссылке объекта.</returns>
    </member>
    <member name="P:System.Activities.Location`1.ValueCore">
      <summary>Возвращает или задает значение указанного по ссылке объекта.</summary>
      <returns>Значение указанного по ссылке объекта.</returns>
    </member>
    <member name="T:System.Activities.LocationReference">
      <summary>Предоставляет механизм для разрешения <see cref="T:System.Activities.Location" /> во время выполнения.</summary>
    </member>
    <member name="M:System.Activities.LocationReference.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.LocationReference" />.</summary>
    </member>
    <member name="M:System.Activities.LocationReference.GetLocation(System.Activities.ActivityContext)">
      <summary>В случае реализации в производном классе извлекает расположение для <see cref="T:System.Activities.LocationReference" /> из объекта <see cref="T:System.Activities.ActivityContext" />.</summary>
      <param name="context">Сведения о среде выполнения действия, включая значения для переменных, аргументов и аргументов делегата, связанных с этой средой.</param>
      <returns>Расположение для значения переменной, аргумента или аргумента делегата.</returns>
    </member>
    <member name="P:System.Activities.LocationReference.Name">
      <summary>Возвращает или задает имя таблицы для объекта <see cref="T:System.Activities.LocationReference" />.</summary>
      <returns>Имя <see cref="T:System.Activities.LocationReference" />.</returns>
    </member>
    <member name="P:System.Activities.LocationReference.NameCore">
      <summary>При реализации в производном классе возвращает или задает версию имени объекта <see cref="T:System.Activities.LocationReference" />, локализованную с учетом национальных стандартов.</summary>
      <returns>Локализованная версия имени <see cref="T:System.Activities.LocationReference" />.</returns>
    </member>
    <member name="P:System.Activities.LocationReference.Type">
      <summary>Возвращает или задает тип <see cref="T:System.Activities.LocationReference" />.</summary>
      <returns>Тип <see cref="T:System.Activities.LocationReference" />.</returns>
    </member>
    <member name="P:System.Activities.LocationReference.TypeCore">
      <summary>При реализации в производном классе возвращает или задает версию типа объекта <see cref="T:System.Activities.LocationReference" />, локализованную с учетом национальных стандартов.</summary>
      <returns>Локализованная версия типа <see cref="T:System.Activities.LocationReference" />.</returns>
    </member>
    <member name="T:System.Activities.LocationReferenceEnvironment">
      <summary>Дает представление среды переменных и аргументов, которая доступна для действия во время выполнения.</summary>
    </member>
    <member name="M:System.Activities.LocationReferenceEnvironment.#ctor">
      <summary>Вызывается из конструкторов в производных классах, чтобы инициализировать объект.</summary>
    </member>
    <member name="M:System.Activities.LocationReferenceEnvironment.GetLocationReferences">
      <summary>В случае переопределения в производном классе возвращает коллекцию объектов <see cref="T:System.Activities.LocationReference" /> в текущей области.</summary>
      <returns>Коллекция объектов-ссылок на расположение в текущей области.</returns>
    </member>
    <member name="M:System.Activities.LocationReferenceEnvironment.IsVisible(System.Activities.LocationReference)">
      <summary>В случае переопределения в производном классе определяет, является ли указанный объект <see cref="T:System.Activities.LocationReference" /> видимым в текущей области.</summary>
      <param name="locationReference">Расположение для проверки.</param>
      <returns>Значение <see langword="true" />, если объект <see cref="T:System.Activities.LocationReference" /> является видимым в текущей области; в противном случае — значение и значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Activities.LocationReferenceEnvironment.Parent">
      <summary>Возвращает или задает включающий объект <see cref="T:System.Activities.LocationReferenceEnvironment" />.</summary>
      <returns>Объект <see cref="T:System.Activities.LocationReferenceEnvironment" />, содержащий элемент управления.</returns>
    </member>
    <member name="P:System.Activities.LocationReferenceEnvironment.Root">
      <summary>Возвращает действие, которое определяет правила выбора области для этой среды.</summary>
      <returns>Действие, которое определяет правила выбора области для этой среды.</returns>
    </member>
    <member name="M:System.Activities.LocationReferenceEnvironment.TryGetLocationReference(System.String,System.Activities.LocationReference@)">
      <summary>В случае переопределения в производном классе пытается получить указанный объект <see cref="T:System.Activities.LocationReference" />.</summary>
      <param name="name">Имя извлекаемого объекта <see cref="T:System.Activities.LocationReference" />.</param>
      <param name="result">Если этот метод возвращает значение <see langword="true" />, параметр <paramref name="result" /> содержит объект <see cref="T:System.Activities.LocationReference" /> с указанным именем; в противном случае — значение <see langword="null" />. Этот параметр передается неинициализированным.</param>
      <returns>Значение <see langword="true" />, если присутствует объект <see cref="T:System.Activities.LocationReference" /> с указанным именем; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="T:System.Activities.NativeActivity">
      <summary>Абстрактный базовый класс для пользовательских действий, в которых логика выполнения реализуется с помощью метода <see cref="M:System.Activities.NativeActivity.Execute(System.Activities.NativeActivityContext)" />, который имеет полный доступ к возможностям среды выполнения.</summary>
    </member>
    <member name="M:System.Activities.NativeActivity.#ctor">
      <summary>При реализации в производном классе создает новый экземпляр производного класса.</summary>
    </member>
    <member name="M:System.Activities.NativeActivity.Abort(System.Activities.NativeActivityAbortContext)">
      <summary>При реализации в производном классе выполняет действия в ответ на прерывание действия.</summary>
      <param name="context">Контекст выполнения, в котором выполняется действие.</param>
    </member>
    <member name="M:System.Activities.NativeActivity.CacheMetadata(System.Activities.ActivityMetadata)">
      <summary>Не реализовано. Вместо этого рекомендуется использовать метод <see cref="M:System.Activities.NativeActivity.CacheMetadata(System.Activities.NativeActivityMetadata)" />.</summary>
      <param name="metadata">Не реализовано.</param>
    </member>
    <member name="M:System.Activities.NativeActivity.CacheMetadata(System.Activities.NativeActivityMetadata)">
      <summary>Создает и проверяет описание аргументов, переменных, дочерних действий и делегатов действия.</summary>
      <param name="metadata">Метаданные действия, инкапсулирующие аргументы, переменные, дочерние действия и делегаты для действия.</param>
    </member>
    <member name="M:System.Activities.NativeActivity.Cancel(System.Activities.NativeActivityContext)">
      <summary>При реализации в производном классе выполняет логику, обеспечивающую изящное раннее завершение действия.</summary>
      <param name="context">Контекст выполнения, в котором выполняется действие.</param>
    </member>
    <member name="P:System.Activities.NativeActivity.CanInduceIdle">
      <summary>Возвращает или задает значение, указывающее, может ли действие вызывать простой рабочего процесса.</summary>
      <returns>Значение <see langword="true" />, если в результате действия рабочий процесс может стать бездействующим. Это значение равно <see langword="false" /> по умолчанию.</returns>
    </member>
    <member name="M:System.Activities.NativeActivity.Execute(System.Activities.NativeActivityContext)">
      <summary>При реализации в производном классе запускает логику выполнения действия.</summary>
      <param name="context">Контекст выполнения, в котором выполняется действие.</param>
    </member>
    <member name="P:System.Activities.NativeActivity.Implementation">
      <summary>Логика выполнения действия.</summary>
      <returns>Логика выполнения.</returns>
    </member>
    <member name="P:System.Activities.NativeActivity.ImplementationVersion">
      <summary>Получает или задает версию реализации действия.</summary>
      <returns>Версия реализации действия.</returns>
    </member>
    <member name="M:System.Activities.NativeActivity.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata,System.Activities.Activity)">
      <summary>Вызывает событие при создании сопоставления для динамического обновления.</summary>
      <param name="metadata">Метаданные.</param>
      <param name="originalActivity">Исходное действие.</param>
    </member>
    <member name="M:System.Activities.NativeActivity.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.UpdateMapMetadata,System.Activities.Activity)">
      <summary>Вызывает событие при создании сопоставления для динамического обновления.</summary>
      <param name="metadata">Метаданные.</param>
      <param name="originalActivity">Исходное действие.</param>
    </member>
    <member name="M:System.Activities.NativeActivity.UpdateInstance(System.Activities.DynamicUpdate.NativeActivityUpdateContext)">
      <summary>Обновляет экземпляр <see cref="T:System.Activities.NativeActivity" />.</summary>
      <param name="updateContext">Контекст обновления.</param>
    </member>
    <member name="T:System.Activities.NativeActivity`1">
      <summary>Абстрактный базовый класс для пользовательских действий, в которых логика выполнения реализуется с помощью метода <see cref="M:System.Activities.NativeActivity`1.Execute(System.Activities.NativeActivityContext)" />, который имеет полный доступ к возможностям среды выполнения.</summary>
      <typeparam name="TResult">Результат, возвращаемый действием.</typeparam>
    </member>
    <member name="M:System.Activities.NativeActivity`1.#ctor">
      <summary>При реализации в производном классе создает новый экземпляр производного класса.</summary>
    </member>
    <member name="M:System.Activities.NativeActivity`1.Abort(System.Activities.NativeActivityAbortContext)">
      <summary>При реализации в производном классе выполняет действия в ответ на прерывание действия.</summary>
      <param name="context">Контекст выполнения, в котором выполняется действие.</param>
    </member>
    <member name="M:System.Activities.NativeActivity`1.CacheMetadata(System.Activities.ActivityMetadata)">
      <summary>Не реализовано. Взамен рекомендуется использовать <see cref="M:System.Activities.NativeActivity`1.CacheMetadata(System.Activities.NativeActivityMetadata)" />.</summary>
      <param name="metadata">Не реализовано.</param>
    </member>
    <member name="M:System.Activities.NativeActivity`1.CacheMetadata(System.Activities.NativeActivityMetadata)">
      <summary>Создает и проверяет описание аргументов, переменных, дочерних действий и делегатов действия.</summary>
      <param name="metadata">Метаданные действия, инкапсулирующие аргументы, переменные, дочерние действия и делегаты для действия.</param>
    </member>
    <member name="M:System.Activities.NativeActivity`1.Cancel(System.Activities.NativeActivityContext)">
      <summary>При реализации в производном классе выполняет логику, обеспечивающую изящное раннее завершение действия.</summary>
      <param name="context">Контекст выполнения, в котором выполняется действие.</param>
    </member>
    <member name="P:System.Activities.NativeActivity`1.CanInduceIdle">
      <summary>Возвращает или задает значение, указывающее, может ли действие вызывать простой рабочего процесса.</summary>
      <returns>Значение <see langword="true" />, если в результате действия рабочий процесс может стать бездействующим; в противном случае — значение <see langword="false" />. Это значение равно <see langword="false" /> по умолчанию.</returns>
    </member>
    <member name="M:System.Activities.NativeActivity`1.Execute(System.Activities.NativeActivityContext)">
      <summary>При реализации в производном классе запускает логику выполнения действия.</summary>
      <param name="context">Контекст выполнения, в котором выполняется действие.</param>
    </member>
    <member name="P:System.Activities.NativeActivity`1.Implementation">
      <summary>Логика выполнения действия.</summary>
      <returns>Логика выполнения.</returns>
    </member>
    <member name="P:System.Activities.NativeActivity`1.ImplementationVersion">
      <summary>Получает или задает версию реализации действия.</summary>
      <returns>Версия реализации действия.</returns>
    </member>
    <member name="M:System.Activities.NativeActivity`1.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata,System.Activities.Activity)">
      <summary>Вызывает событие при создании сопоставления для динамического обновления.</summary>
      <param name="metadata">Метаданные.</param>
      <param name="originalActivity">Исходное действие.</param>
    </member>
    <member name="M:System.Activities.NativeActivity`1.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.UpdateMapMetadata,System.Activities.Activity)">
      <summary>Вызывает событие при создании сопоставления для динамического обновления.</summary>
      <param name="metadata">Метаданные.</param>
      <param name="originalActivity">Исходное действие.</param>
    </member>
    <member name="M:System.Activities.NativeActivity`1.UpdateInstance(System.Activities.DynamicUpdate.NativeActivityUpdateContext)">
      <summary>Обновляет экземпляр <see cref="T:System.Activities.NativeActivity`1" />.</summary>
      <param name="updateContext">Контекст обновления.</param>
    </member>
    <member name="T:System.Activities.NativeActivityAbortContext">
      <summary>Представляет среду выполнения для прерываемого действия.</summary>
    </member>
    <member name="P:System.Activities.NativeActivityAbortContext.Reason">
      <summary>Возвращает объект <see cref="T:System.Exception" />, содержащий причину прерывания действия.</summary>
      <returns>Исключение, содержащее причину прерывания действия.</returns>
    </member>
    <member name="T:System.Activities.NativeActivityContext">
      <summary>Контекст выполнения для <see cref="T:System.Activities.NativeActivity" />.</summary>
    </member>
    <member name="M:System.Activities.NativeActivityContext.Abort">
      <summary>Прерывает текущий экземпляр рабочего процесса во время выполнения.</summary>
    </member>
    <member name="M:System.Activities.NativeActivityContext.Abort(System.Exception)">
      <summary>Прерывает выполнение текущего экземпляра рабочего процесса по указанной причине.</summary>
      <param name="reason">Ошибка, вызвавшая прерывание рабочего процесса.</param>
    </member>
    <member name="M:System.Activities.NativeActivityContext.AbortChildInstance(System.Activities.ActivityInstance)">
      <summary>Прерывает указанный экземпляр дочернего действия <see cref="T:System.Activities.NativeActivity" />.</summary>
      <param name="activity">Дочернее действие выполняемого в данный момент действия <see cref="T:System.Activities.NativeActivity" />.</param>
    </member>
    <member name="M:System.Activities.NativeActivityContext.AbortChildInstance(System.Activities.ActivityInstance,System.Exception)">
      <summary>Прерывает указанный экземпляр дочернего действия <see cref="T:System.Activities.NativeActivity" /> по указанной причине.</summary>
      <param name="activity">Дочернее действие выполняемого в данный момент действия <see cref="T:System.Activities.NativeActivity" />.</param>
      <param name="reason">Ошибка, вызвавшая прерывание дочернего действия.</param>
    </member>
    <member name="M:System.Activities.NativeActivityContext.CancelChild(System.Activities.ActivityInstance)">
      <summary>Отменяет указанный экземпляр дочернего действия.</summary>
      <param name="activityInstance">Дочернее действие выполняемого в данный момент действия <see cref="T:System.Activities.NativeActivity" />.</param>
    </member>
    <member name="M:System.Activities.NativeActivityContext.CancelChildren">
      <summary>Вызывает преждевременное завершение всех дочерних действий выполняющегося действия <see cref="T:System.Activities.NativeActivity" />.</summary>
    </member>
    <member name="M:System.Activities.NativeActivityContext.CreateBookmark">
      <summary>Создает точку, в которой действие <see cref="T:System.Activities.NativeActivity" /> может пассивно ожидать возобновления.</summary>
      <returns>Закладка.</returns>
    </member>
    <member name="M:System.Activities.NativeActivityContext.CreateBookmark(System.Activities.BookmarkCallback)">
      <summary>Создает точку, в которой действие <see cref="T:System.Activities.NativeActivity" /> может пассивно ожидать возобновления, и планирует указанный метод для выполнения после уведомления о завершении операции возобновления.</summary>
      <param name="callback">Метод, вызываемый при поступлении уведомления, сигнализирующего о возобновлении действия <see cref="T:System.Activities.NativeActivity" />.</param>
      <returns>Метод обратного вызова.</returns>
    </member>
    <member name="M:System.Activities.NativeActivityContext.CreateBookmark(System.Activities.BookmarkCallback,System.Activities.BookmarkOptions)">
      <summary>Создает точку, в которой действие <see cref="T:System.Activities.NativeActivity" /> может пассивно ожидать возобновления, с указанным методом, выполняемым после уведомления о завершении операции возобновлениям, и с указанным параметром, который управляет использованием закладки в ходе выполнения текущего действия <see cref="T:System.Activities.NativeActivity" />.</summary>
      <param name="callback">Метод, вызываемый при поступлении уведомления, сигнализирующего о возобновлении действия <see cref="T:System.Activities.NativeActivity" />.</param>
      <param name="options">Перечисляемый параметр, который управляет работой закладки в отношении к другим потокам в ходе выполнения текущего действия <see cref="T:System.Activities.NativeActivity" />.</param>
      <returns>Закладка, которая включает метод обратного вызова и параметр выполнения закладки.</returns>
    </member>
    <member name="M:System.Activities.NativeActivityContext.CreateBookmark(System.String)">
      <summary>Создает точку с указанным именем, в которой действие <see cref="T:System.Activities.NativeActivity" /> может пассивно ожидать возобновления.</summary>
      <param name="name">Имя закладки.</param>
      <returns>Закладка, включающая имя закладки.</returns>
    </member>
    <member name="M:System.Activities.NativeActivityContext.CreateBookmark(System.String,System.Activities.BookmarkCallback)">
      <summary>Создает точку, в которой действие <see cref="T:System.Activities.NativeActivity" /> может пассивно ожидать возобновления, с указанным именем и с указанным методом для выполнения после уведомления о завершении операции возобновления.</summary>
      <param name="name">Имя закладки.</param>
      <param name="callback">Метод, вызываемый при поступлении уведомления, сигнализирующего о возобновлении действия <see cref="T:System.Activities.NativeActivity" />.</param>
      <returns>Закладка, которая включает имя закладки и метод обратного вызова.</returns>
    </member>
    <member name="M:System.Activities.NativeActivityContext.CreateBookmark(System.String,System.Activities.BookmarkCallback,System.Activities.BookmarkOptions)">
      <summary>Создает точку, в которой действие <see cref="T:System.Activities.NativeActivity" /> может пассивно ожидать возобновления, с указанным именем, указанным методом, выполняемым после уведомления о завершении операции возобновления, и с указанным параметром, который управляет использованием закладки в ходе выполнения текущего действия <see cref="T:System.Activities.NativeActivity" />.</summary>
      <param name="name">Имя закладки.</param>
      <param name="callback">Метод, вызываемый при поступлении уведомления, сигнализирующего о возобновлении действия <see cref="T:System.Activities.NativeActivity" />.</param>
      <param name="options">Параметры закладки, управляющие использованием закладки во время выполнения текущего действия <see cref="T:System.Activities.NativeActivity" />.</param>
      <returns>Закладка, которая включает имя закладки, метод обратного вызова и параметр выполнения закладки.</returns>
    </member>
    <member name="M:System.Activities.NativeActivityContext.CreateBookmark(System.String,System.Activities.BookmarkCallback,System.Activities.BookmarkScope)">
      <summary>Создает точку, в которой действие <see cref="T:System.Activities.NativeActivity" /> может пассивно ожидать возобновления, с указанным именем, с указанным методом для выполнения после уведомления о завершении операции возобновления и с указанной областью закладки.</summary>
      <param name="name">Имя закладки.</param>
      <param name="callback">Метод, вызываемый при поступлении уведомления, сигнализирующего о возобновлении действия <see cref="T:System.Activities.NativeActivity" />.</param>
      <param name="scope">Идентификатор, применяемый к группе закладок, работающих под одним протоколом во время выполнения рабочего процесса.</param>
      <returns>Закладка, которая включает имя закладки, метод обратного вызова и область закладки.</returns>
    </member>
    <member name="M:System.Activities.NativeActivityContext.CreateBookmark(System.String,System.Activities.BookmarkCallback,System.Activities.BookmarkScope,System.Activities.BookmarkOptions)">
      <summary>Создает точку, в которой действие <see cref="T:System.Activities.NativeActivity" /> может пассивно ожидать возобновления, с указанным именем, указанным методом, выполняемым после уведомления о завершении операции возобновления, с указанной областью закладки и указанным параметром, который управляет использованием закладки в ходе выполнения текущего действия <see cref="T:System.Activities.NativeActivity" />.</summary>
      <param name="name">Имя закладки.</param>
      <param name="callback">Метод, вызываемый при поступлении уведомления, сигнализирующего о возобновлении действия <see cref="T:System.Activities.NativeActivity" />.</param>
      <param name="scope">Идентификатор, применяемый к группе закладок, работающих под одним протоколом во время выполнения рабочего процесса.</param>
      <param name="options">Параметры закладки, управляющие использованием закладки во время выполнения текущего действия <see cref="T:System.Activities.NativeActivity" />.</param>
      <returns>Закладка, которая включает имя закладки, метод обратного вызова, область закладки и параметр выполнения закладки.</returns>
    </member>
    <member name="P:System.Activities.NativeActivityContext.DefaultBookmarkScope">
      <summary>Возвращает область закладки, связанную с корневым элементом рабочего процесса.</summary>
      <returns>Уникальный идентификатор GUID.</returns>
    </member>
    <member name="M:System.Activities.NativeActivityContext.GetChildren">
      <summary>Возвращает коллекцию дочерних действий для текущего действия <see cref="T:System.Activities.NativeActivity" />.</summary>
      <returns>Универсальная коллекция дочерних объектов <see cref="T:System.Activities.NativeActivity" />, доступная только для чтения.</returns>
    </member>
    <member name="M:System.Activities.NativeActivityContext.GetValue(System.Activities.Variable)">
      <summary>Возвращает значение указанной переменной в текущем экземпляре <see cref="T:System.Activities.NativeActivity" />.</summary>
      <param name="variable">Переменная, значение которой получается во время выполнения текущего экземпляра <see cref="T:System.Activities.NativeActivity" />.</param>
      <returns>Значение указанной переменной.</returns>
    </member>
    <member name="M:System.Activities.NativeActivityContext.GetValue``1(System.Activities.Variable{``0})">
      <summary>Возвращает значение указанной универсальной переменной в текущем экземпляре <see cref="T:System.Activities.NativeActivity" />.</summary>
      <param name="variable">Универсальная переменная, значение которой получается во время выполнения текущего экземпляра <see cref="T:System.Activities.NativeActivity" />.</param>
      <typeparam name="T">Тип переменной, значение которой получается.</typeparam>
      <returns>Значение указанной переменной.</returns>
    </member>
    <member name="P:System.Activities.NativeActivityContext.IsCancellationRequested">
      <summary>Возвращает или задает значение, которое показывает, запрошена ли отмена экземпляра <see cref="T:System.Activities.NativeActivity" />, выполняющегося в данный момент.</summary>
      <returns>Значение <see langword="true" />, если запрошена отмена экземпляра <see cref="T:System.Activities.NativeActivity" />, выполняющегося в данный момент; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Activities.NativeActivityContext.MarkCanceled">
      <summary>Помечает экземпляр <see cref="T:System.Activities.NativeActivity" />, выполняющийся в данный момент, как отмененный.</summary>
    </member>
    <member name="P:System.Activities.NativeActivityContext.Properties">
      <summary>Возвращает объект, который обрабатывает свойства для выполнения текущего <see cref="T:System.Activities.NativeActivityContext" />.</summary>
      <returns>Объект, который обрабатывает свойства выполнения.</returns>
    </member>
    <member name="M:System.Activities.NativeActivityContext.RemoveAllBookmarks">
      <summary>Удаляет все закладки, связанные с экземпляром <see cref="T:System.Activities.NativeActivity" />, выполняющимся в данный момент.</summary>
    </member>
    <member name="M:System.Activities.NativeActivityContext.RemoveBookmark(System.Activities.Bookmark)">
      <summary>Удаляет указанную закладку из выполняемого в настоящий момент экземпляра <see cref="T:System.Activities.NativeActivity" />.</summary>
      <param name="bookmark">Точка, в которой экземпляр <see cref="T:System.Activities.NativeActivity" /> может пассивно ожидать возобновления.</param>
      <returns>Значение <see langword="true" />, если закладка была удалена; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Activities.NativeActivityContext.RemoveBookmark(System.String)">
      <summary>Удаляет закладку с указанным именем.</summary>
      <param name="name">Имя закладки.</param>
      <returns>Значение <see langword="true" />, если закладка была удалена; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Activities.NativeActivityContext.RemoveBookmark(System.String,System.Activities.BookmarkScope)">
      <summary>Удаляет закладку с указанным именем и указанной областью закладки.</summary>
      <param name="name">Имя закладки.</param>
      <param name="scope">Уникальный идентификатор GUID для группы объектов <see cref="T:System.Activities.Bookmark" />, которые работают по одному протоколу.</param>
      <returns>Значение <see langword="true" />, если закладка была удалена; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Activities.NativeActivityContext.ResumeBookmark(System.Activities.Bookmark,System.Object)">
      <summary>Возобновляет указанную закладку.</summary>
      <param name="bookmark">Точка, в которой действие <see cref="T:System.Activities.NativeActivity" /> может пассивно ожидать возобновления.</param>
      <param name="value">Сведения, относящиеся к возобновлению закладки.</param>
      <returns>Результат попытки возобновления работы <see cref="T:System.Activities.NativeActivity" /> в точке закладки.</returns>
    </member>
    <member name="M:System.Activities.NativeActivityContext.ScheduleAction(System.Activities.ActivityAction,System.Activities.CompletionCallback,System.Activities.FaultCallback)">
      <summary>Планирует выполнение указанного действия <see cref="T:System.Activities.ActivityAction" />, не имеющего параметров, и создает закладки в указанных расположениях обратного вызова, где родительский процесс возобновляется после завершения <see cref="T:System.Activities.ActivityAction" />.</summary>
      <param name="activityAction">Действие, выполняемое при возникновении определенного события в родительском действии.</param>
      <param name="onCompleted">Закладка, показывающая, откуда по завершении действия <see cref="T:System.Activities.ActivityAction" /> будет возобновлено выполнение родительского действия.</param>
      <param name="onFaulted">Закладка, которая показывает, откуда в случае завершения действия <see cref="T:System.Activities.ActivityAction" /> по ошибке будет возобновлено выполнение родительского действия.</param>
      <returns>Новый экземпляр операции действия.</returns>
    </member>
    <member name="M:System.Activities.NativeActivityContext.ScheduleAction``1(System.Activities.ActivityAction{``0},``0,System.Activities.CompletionCallback,System.Activities.FaultCallback)">
      <summary>Планирует выполнение указанного <see cref="T:System.Activities.ActivityAction`1" /> с одним параметром для аргумента <see langword="in" /> и создает закладки для указанных расположений обратного вызова, где родительский процесс возобновляется после завершения <see cref="T:System.Activities.ActivityAction`1" />.</summary>
      <param name="activityAction">Действие, выполняемое при возникновении определенного события в родительском действии.</param>
      <param name="argument">Данные, отправленные в действие.</param>
      <param name="onCompleted">Закладка, показывающая, откуда по завершении действия <see cref="T:System.Activities.ActivityAction`1" /> будет возобновлено выполнение родительского действия.</param>
      <param name="onFaulted">Закладка, которая показывает, откуда в случае завершения действия <see cref="T:System.Activities.ActivityAction`1" /> по ошибке будет возобновлено выполнение родительского действия.</param>
      <typeparam name="T">Аргумент, передающий данные в действие.</typeparam>
      <returns>Экземпляр действия.</returns>
    </member>
    <member name="M:System.Activities.NativeActivityContext.ScheduleAction``10(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,System.Activities.CompletionCallback,System.Activities.FaultCallback)">
      <summary>Планирует выполнение указанного <see cref="T:System.Activities.ActivityAction`10" /> с десятью параметрами для аргументов <see langword="in" /> и создает закладки для указанных расположений обратного вызова, где родительский процесс возобновляется после завершения <see cref="T:System.Activities.ActivityAction`10" />.</summary>
      <param name="activityAction">Действие, выполняемое при возникновении определенного события в родительском действии.</param>
      <param name="argument1">Аргумент, передающий данные в действие.</param>
      <param name="argument2">Аргумент, передающий данные в действие.</param>
      <param name="argument3">Аргумент, передающий данные в действие.</param>
      <param name="argument4">Аргумент, передающий данные в действие.</param>
      <param name="argument5">Аргумент, передающий данные в действие.</param>
      <param name="argument6">Аргумент, передающий данные в действие.</param>
      <param name="argument7">Аргумент, передающий данные в действие.</param>
      <param name="argument8">Аргумент, передающий данные в действие.</param>
      <param name="argument9">Аргумент, передающий данные в действие.</param>
      <param name="argument10">Аргумент, передающий данные в действие.</param>
      <param name="onCompleted">Закладка, показывающая, откуда по завершении действия <see cref="T:System.Activities.ActivityAction`10" /> будет возобновлено выполнение родительского действия.</param>
      <param name="onFaulted">Закладка, которая показывает, откуда в случае завершения действия <see cref="T:System.Activities.ActivityAction`10" /> по ошибке будет возобновлено выполнение родительского действия.</param>
      <typeparam name="T1">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T2">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T3">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T4">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T5">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T6">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T7">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T8">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T9">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T10">Данные, передаваемые в действие.</typeparam>
      <returns>Экземпляр действия.</returns>
    </member>
    <member name="M:System.Activities.NativeActivityContext.ScheduleAction``11(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,System.Activities.CompletionCallback,System.Activities.FaultCallback)">
      <summary>Планирует выполнение указанного <see cref="T:System.Activities.ActivityAction`11" /> с одиннадцатью параметрами для аргументов <see langword="in" /> и создает закладки для указанных расположений обратного вызова, где родительский процесс возобновляется после завершения <see cref="T:System.Activities.ActivityAction`11" />.</summary>
      <param name="activityAction">Действие, выполняемое при возникновении определенного события в родительском действии.</param>
      <param name="argument1">Аргумент, передающий данные в действие.</param>
      <param name="argument2">Аргумент, передающий данные в действие.</param>
      <param name="argument3">Аргумент, передающий данные в действие.</param>
      <param name="argument4">Аргумент, передающий данные в действие.</param>
      <param name="argument5">Аргумент, передающий данные в действие.</param>
      <param name="argument6">Аргумент, передающий данные в действие.</param>
      <param name="argument7">Аргумент, передающий данные в действие.</param>
      <param name="argument8">Аргумент, передающий данные в действие.</param>
      <param name="argument9">Аргумент, передающий данные в действие.</param>
      <param name="argument10">Аргумент, передающий данные в действие.</param>
      <param name="argument11">Аргумент, передающий данные в действие.</param>
      <param name="onCompleted">Закладка, показывающая, откуда по завершении действия <see cref="T:System.Activities.ActivityAction`11" /> будет возобновлено выполнение родительского действия.</param>
      <param name="onFaulted">Закладка, которая показывает, откуда в случае завершения действия <see cref="T:System.Activities.ActivityAction`11" /> по ошибке будет возобновлено выполнение родительского действия.</param>
      <typeparam name="T1">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T2">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T3">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T4">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T5">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T6">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T7">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T8">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T9">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T10">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T11">Данные, передаваемые в действие.</typeparam>
      <returns>Экземпляр действия.</returns>
    </member>
    <member name="M:System.Activities.NativeActivityContext.ScheduleAction``12(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,System.Activities.CompletionCallback,System.Activities.FaultCallback)">
      <summary>Планирует выполнение указанного <see cref="T:System.Activities.ActivityAction`12" /> с двенадцатью параметрами для аргументов <see langword="in" /> и создает закладки для указанных расположений обратного вызова, где родительский процесс возобновляется после завершения <see cref="T:System.Activities.ActivityAction`12" />.</summary>
      <param name="activityAction">Действие, выполняемое при возникновении определенного события в родительском действии.</param>
      <param name="argument1">Аргумент, передающий данные в действие.</param>
      <param name="argument2">Аргумент, передающий данные в действие.</param>
      <param name="argument3">Аргумент, передающий данные в действие.</param>
      <param name="argument4">Аргумент, передающий данные в действие.</param>
      <param name="argument5">Аргумент, передающий данные в действие.</param>
      <param name="argument6">Аргумент, передающий данные в действие.</param>
      <param name="argument7">Аргумент, передающий данные в действие.</param>
      <param name="argument8">Аргумент, передающий данные в действие.</param>
      <param name="argument9">Аргумент, передающий данные в действие.</param>
      <param name="argument10">Аргумент, передающий данные в действие.</param>
      <param name="argument11">Аргумент, передающий данные в действие.</param>
      <param name="argument12">Аргумент, передающий данные в действие.</param>
      <param name="onCompleted">Закладка, показывающая, откуда по завершении действия <see cref="T:System.Activities.ActivityAction`12" /> будет возобновлено выполнение родительского действия.</param>
      <param name="onFaulted">Закладка, которая показывает, откуда в случае завершения действия <see cref="T:System.Activities.ActivityAction`12" /> по ошибке будет возобновлено выполнение родительского действия.</param>
      <typeparam name="T1">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T2">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T3">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T4">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T5">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T6">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T7">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T8">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T9">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T10">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T11">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T12">Данные, передаваемые в действие.</typeparam>
      <returns>Экземпляр действия.</returns>
    </member>
    <member name="M:System.Activities.NativeActivityContext.ScheduleAction``13(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,System.Activities.CompletionCallback,System.Activities.FaultCallback)">
      <summary>Планирует выполнение указанного <see cref="T:System.Activities.ActivityAction`13" /> с тринадцатью параметрами для аргументов <see langword="in" /> и создает закладки для указанных расположений обратного вызова, где родительский процесс возобновляется после завершения <see cref="T:System.Activities.ActivityAction`13" />.</summary>
      <param name="activityAction">Действие, выполняемое при возникновении определенного события в родительском действии.</param>
      <param name="argument1">Аргумент, передающий данные в действие.</param>
      <param name="argument2">Аргумент, передающий данные в действие.</param>
      <param name="argument3">Аргумент, передающий данные в действие.</param>
      <param name="argument4">Аргумент, передающий данные в действие.</param>
      <param name="argument5">Аргумент, передающий данные в действие.</param>
      <param name="argument6">Аргумент, передающий данные в действие.</param>
      <param name="argument7">Аргумент, передающий данные в действие.</param>
      <param name="argument8">Аргумент, передающий данные в действие.</param>
      <param name="argument9">Аргумент, передающий данные в действие.</param>
      <param name="argument10">Аргумент, передающий данные в действие.</param>
      <param name="argument11">Аргумент, передающий данные в действие.</param>
      <param name="argument12">Аргумент, передающий данные в действие.</param>
      <param name="argument13">Аргумент, передающий данные в действие.</param>
      <param name="onCompleted">Закладка, показывающая, откуда по завершении действия <see cref="T:System.Activities.ActivityAction`13" /> будет возобновлено выполнение родительского действия.</param>
      <param name="onFaulted">Закладка, которая показывает, откуда в случае завершения действия <see cref="T:System.Activities.ActivityAction`13" /> по ошибке будет возобновлено выполнение родительского действия.</param>
      <typeparam name="T1">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T2">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T3">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T4">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T5">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T6">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T7">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T8">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T9">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T10">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T11">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T12">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T13">Данные, передаваемые в действие.</typeparam>
      <returns>Экземпляр действия.</returns>
    </member>
    <member name="M:System.Activities.NativeActivityContext.ScheduleAction``14(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,System.Activities.CompletionCallback,System.Activities.FaultCallback)">
      <summary>Планирует выполнение указанного <see cref="T:System.Activities.ActivityAction`14" /> с четырнадцатью параметрами для аргументов <see langword="in" /> и создает закладки для указанных расположений обратного вызова, где родительский процесс возобновляется после завершения <see cref="T:System.Activities.ActivityAction`14" />.</summary>
      <param name="activityAction">Действие, выполняемое при возникновении определенного события в родительском действии.</param>
      <param name="argument1">Аргумент, передающий данные в действие.</param>
      <param name="argument2">Аргумент, передающий данные в действие.</param>
      <param name="argument3">Аргумент, передающий данные в действие.</param>
      <param name="argument4">Аргумент, передающий данные в действие.</param>
      <param name="argument5">Аргумент, передающий данные в действие.</param>
      <param name="argument6">Аргумент, передающий данные в действие.</param>
      <param name="argument7">Аргумент, передающий данные в действие.</param>
      <param name="argument8">Аргумент, передающий данные в действие.</param>
      <param name="argument9">Аргумент, передающий данные в действие.</param>
      <param name="argument10">Аргумент, передающий данные в действие.</param>
      <param name="argument11">Аргумент, передающий данные в действие.</param>
      <param name="argument12">Аргумент, передающий данные в действие.</param>
      <param name="argument13">Аргумент, передающий данные в действие.</param>
      <param name="argument14">Аргумент, передающий данные в действие.</param>
      <param name="onCompleted">Закладка, показывающая, откуда по завершении действия <see cref="T:System.Activities.ActivityAction`14" /> будет возобновлено выполнение родительского действия.</param>
      <param name="onFaulted">Закладка, которая показывает, откуда в случае завершения действия <see cref="T:System.Activities.ActivityAction`14" /> по ошибке будет возобновлено выполнение родительского действия.</param>
      <typeparam name="T1">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T2">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T3">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T4">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T5">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T6">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T7">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T8">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T9">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T10">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T11">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T12">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T13">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T14">Данные, передаваемые в действие.</typeparam>
      <returns>Экземпляр действия.</returns>
    </member>
    <member name="M:System.Activities.NativeActivityContext.ScheduleAction``15(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,System.Activities.CompletionCallback,System.Activities.FaultCallback)">
      <summary>Планирует выполнение указанного <see cref="T:System.Activities.ActivityAction`15" /> с пятнадцатью параметрами для аргументов <see langword="in" /> и создает закладки для указанных расположений обратного вызова, где родительский процесс возобновляется после завершения <see cref="T:System.Activities.ActivityAction`15" />.</summary>
      <param name="activityAction">Действие, выполняемое при возникновении определенного события в родительском действии.</param>
      <param name="argument1">Аргумент, передающий данные в действие.</param>
      <param name="argument2">Аргумент, передающий данные в действие.</param>
      <param name="argument3">Аргумент, передающий данные в действие.</param>
      <param name="argument4">Аргумент, передающий данные в действие.</param>
      <param name="argument5">Аргумент, передающий данные в действие.</param>
      <param name="argument6">Аргумент, передающий данные в действие.</param>
      <param name="argument7">Аргумент, передающий данные в действие.</param>
      <param name="argument8">Аргумент, передающий данные в действие.</param>
      <param name="argument9">Аргумент, передающий данные в действие.</param>
      <param name="argument10">Аргумент, передающий данные в действие.</param>
      <param name="argument11">Аргумент, передающий данные в действие.</param>
      <param name="argument12">Аргумент, передающий данные в действие.</param>
      <param name="argument13">Аргумент, передающий данные в действие.</param>
      <param name="argument14">Аргумент, передающий данные в действие.</param>
      <param name="argument15">Аргумент, передающий данные в действие.</param>
      <param name="onCompleted">Закладка, показывающая, откуда по завершении действия <see cref="T:System.Activities.ActivityAction`15" /> будет возобновлено выполнение родительского действия.</param>
      <param name="onFaulted">Закладка, которая показывает, откуда в случае завершения действия <see cref="T:System.Activities.ActivityAction`15" /> по ошибке будет возобновлено выполнение родительского действия.</param>
      <typeparam name="T1">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T2">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T3">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T4">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T5">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T6">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T7">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T8">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T9">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T10">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T11">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T12">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T13">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T14">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T15">Универсальный параметр, который представляет данные, передаваемые в действие.</typeparam>
      <returns>Экземпляр действия.</returns>
    </member>
    <member name="M:System.Activities.NativeActivityContext.ScheduleAction``16(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,System.Activities.CompletionCallback,System.Activities.FaultCallback)">
      <summary>Планирует выполнение указанного <see cref="T:System.Activities.ActivityAction`16" /> с шестнадцатью параметрами для аргументов <see langword="in" /> и создает закладки для указанных расположений обратного вызова, где родительский процесс возобновляется после завершения <see cref="T:System.Activities.ActivityAction`16" />.</summary>
      <param name="activityAction">Действие, выполняемое при возникновении определенного события в родительском действии.</param>
      <param name="argument1">Аргумент, передающий данные в действие.</param>
      <param name="argument2">Аргумент, передающий данные в действие.</param>
      <param name="argument3">Аргумент, передающий данные в действие.</param>
      <param name="argument4">Аргумент, передающий данные в действие.</param>
      <param name="argument5">Аргумент, передающий данные в действие.</param>
      <param name="argument6">Аргумент, передающий данные в действие.</param>
      <param name="argument7">Аргумент, передающий данные в действие.</param>
      <param name="argument8">Аргумент, передающий данные в действие.</param>
      <param name="argument9">Аргумент, передающий данные в действие.</param>
      <param name="argument10">Аргумент, передающий данные в действие.</param>
      <param name="argument11">Аргумент, передающий данные в действие.</param>
      <param name="argument12">Аргумент, передающий данные в действие.</param>
      <param name="argument13">Аргумент, передающий данные в действие.</param>
      <param name="argument14">Аргумент, передающий данные в действие.</param>
      <param name="argument15">Аргумент, передающий данные в действие.</param>
      <param name="argument16">Аргумент, передающий данные в действие.</param>
      <param name="onCompleted">Закладка, показывающая, откуда по завершении действия <see cref="T:System.Activities.ActivityAction`16" /> будет возобновлено выполнение родительского действия.</param>
      <param name="onFaulted">Закладка, которая показывает, откуда в случае завершения действия <see cref="T:System.Activities.ActivityAction`16" /> по ошибке будет возобновлено выполнение родительского действия.</param>
      <typeparam name="T1">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T2">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T3">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T4">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T5">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T6">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T7">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T8">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T9">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T10">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T11">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T12">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T13">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T14">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T15">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T16">Данные, передаваемые в действие.</typeparam>
      <returns>Экземпляр действия.</returns>
    </member>
    <member name="M:System.Activities.NativeActivityContext.ScheduleAction``2(System.Activities.ActivityAction{``0,``1},``0,``1,System.Activities.CompletionCallback,System.Activities.FaultCallback)">
      <summary>Планирует выполнение указанного <see cref="T:System.Activities.ActivityAction`2" /> с двумя параметрами для аргументов <see langword="in" /> и создает закладки для указанных расположений обратного вызова, где родительский процесс возобновляется после завершения <see cref="T:System.Activities.ActivityAction`2" />.</summary>
      <param name="activityAction">Действие, выполняемое при возникновении определенного события в родительском действии.</param>
      <param name="argument1">Аргумент, передающий данные в действие.</param>
      <param name="argument2">Аргумент, передающий данные в действие.</param>
      <param name="onCompleted">Закладка, показывающая, откуда по завершении действия <see cref="T:System.Activities.ActivityAction`2" /> будет возобновлено выполнение родительского действия.</param>
      <param name="onFaulted">Закладка, которая показывает, откуда в случае завершения действия <see cref="T:System.Activities.ActivityAction`2" /> по ошибке будет возобновлено выполнение родительского действия.</param>
      <typeparam name="T1">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T2">Данные, передаваемые в действие.</typeparam>
      <returns>Экземпляр действия.</returns>
    </member>
    <member name="M:System.Activities.NativeActivityContext.ScheduleAction``3(System.Activities.ActivityAction{``0,``1,``2},``0,``1,``2,System.Activities.CompletionCallback,System.Activities.FaultCallback)">
      <summary>Планирует выполнение указанного <see cref="T:System.Activities.ActivityAction`3" /> с тремя параметрами для аргументов <see langword="in" /> и создает закладки для указанных расположений обратного вызова, где родительский процесс возобновляется после завершения <see cref="T:System.Activities.ActivityAction`3" />.</summary>
      <param name="activityAction">Действие, выполняемое при возникновении определенного события в родительском действии.</param>
      <param name="argument1">Аргумент, передающий данные в действие.</param>
      <param name="argument2">Аргумент, передающий данные в действие.</param>
      <param name="argument3">Аргумент, передающий данные в действие.</param>
      <param name="onCompleted">Закладка, показывающая, откуда по завершении действия <see cref="T:System.Activities.ActivityAction`3" /> будет возобновлено выполнение родительского действия.</param>
      <param name="onFaulted">Закладка, которая показывает, откуда в случае завершения действия <see cref="T:System.Activities.ActivityAction`3" /> по ошибке будет возобновлено выполнение родительского действия.</param>
      <typeparam name="T1">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T2">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T3">Данные, передаваемые в действие.</typeparam>
      <returns>Экземпляр действия.</returns>
    </member>
    <member name="M:System.Activities.NativeActivityContext.ScheduleAction``4(System.Activities.ActivityAction{``0,``1,``2,``3},``0,``1,``2,``3,System.Activities.CompletionCallback,System.Activities.FaultCallback)">
      <summary>Планирует выполнение указанного <see cref="T:System.Activities.ActivityAction`4" /> с четырьмя параметрами для аргументов <see langword="in" /> и создает закладки для указанных расположений обратного вызова, где родительский процесс возобновляется после завершения <see cref="T:System.Activities.ActivityAction`4" />.</summary>
      <param name="activityAction">Действие, выполняемое при возникновении определенного события в родительском действии.</param>
      <param name="argument1">Аргумент, передающий данные в действие.</param>
      <param name="argument2">Аргумент, передающий данные в действие.</param>
      <param name="argument3">Аргумент, передающий данные в действие.</param>
      <param name="argument4">Аргумент, передающий данные в действие.</param>
      <param name="onCompleted">Закладка, показывающая, откуда по завершении действия <see cref="T:System.Activities.ActivityAction`4" /> будет возобновлено выполнение родительского действия.</param>
      <param name="onFaulted">Закладка, которая показывает, откуда в случае завершения действия <see cref="T:System.Activities.ActivityAction`4" /> по ошибке будет возобновлено выполнение родительского действия.</param>
      <typeparam name="T1">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T2">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T3">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T4">Данные, передаваемые в действие.</typeparam>
      <returns>Экземпляр действия.</returns>
    </member>
    <member name="M:System.Activities.NativeActivityContext.ScheduleAction``5(System.Activities.ActivityAction{``0,``1,``2,``3,``4},``0,``1,``2,``3,``4,System.Activities.CompletionCallback,System.Activities.FaultCallback)">
      <summary>Планирует выполнение указанного <see cref="T:System.Activities.ActivityAction`5" /> с пятью параметрами для аргументов <see langword="in" /> и создает закладки для указанных расположений обратного вызова, где родительский процесс возобновляется после завершения <see cref="T:System.Activities.ActivityAction`5" />.</summary>
      <param name="activityAction">Действие, выполняемое при возникновении определенного события в родительском действии.</param>
      <param name="argument1">Аргумент, передающий данные в действие.</param>
      <param name="argument2">Аргумент, передающий данные в действие.</param>
      <param name="argument3">Аргумент, передающий данные в действие.</param>
      <param name="argument4">Аргумент, передающий данные в действие.</param>
      <param name="argument5">Аргумент, передающий данные в действие.</param>
      <param name="onCompleted">Закладка, показывающая, откуда по завершении действия <see cref="T:System.Activities.ActivityAction`5" /> будет возобновлено выполнение родительского действия.</param>
      <param name="onFaulted">Закладка, которая показывает, откуда в случае завершения действия <see cref="T:System.Activities.ActivityAction`5" /> по ошибке будет возобновлено выполнение родительского действия.</param>
      <typeparam name="T1">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T2">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T3">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T4">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T5">Данные, передаваемые в действие.</typeparam>
      <returns>Экземпляр действия.</returns>
    </member>
    <member name="M:System.Activities.NativeActivityContext.ScheduleAction``6(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5},``0,``1,``2,``3,``4,``5,System.Activities.CompletionCallback,System.Activities.FaultCallback)">
      <summary>Планирует выполнение указанного <see cref="T:System.Activities.ActivityAction`6" /> с шестью параметрами для аргументов <see langword="in" /> и создает закладки для указанных расположений обратного вызова, где родительский процесс возобновляется после завершения <see cref="T:System.Activities.ActivityAction`6" />.</summary>
      <param name="activityAction">Действие, выполняемое при возникновении определенного события в родительском действии.</param>
      <param name="argument1">Аргумент, передающий данные в действие.</param>
      <param name="argument2">Аргумент, передающий данные в действие.</param>
      <param name="argument3">Аргумент, передающий данные в действие.</param>
      <param name="argument4">Аргумент, передающий данные в действие.</param>
      <param name="argument5">Аргумент, передающий данные в действие.</param>
      <param name="argument6">Аргумент, передающий данные в действие.</param>
      <param name="onCompleted">Закладка, показывающая, откуда по завершении действия <see cref="T:System.Activities.ActivityAction`6" /> будет возобновлено выполнение родительского действия.</param>
      <param name="onFaulted">Закладка, которая показывает, откуда в случае завершения действия <see cref="T:System.Activities.ActivityAction`6" /> по ошибке будет возобновлено выполнение родительского действия.</param>
      <typeparam name="T1">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T2">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T3">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T4">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T5">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T6">Данные, передаваемые в действие.</typeparam>
      <returns>Экземпляр действия.</returns>
    </member>
    <member name="M:System.Activities.NativeActivityContext.ScheduleAction``7(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6},``0,``1,``2,``3,``4,``5,``6,System.Activities.CompletionCallback,System.Activities.FaultCallback)">
      <summary>Планирует выполнение указанного <see cref="T:System.Activities.ActivityAction`7" /> с семью параметрами для аргументов <see langword="in" /> и создает закладки для указанных расположений обратного вызова, где родительский процесс возобновляется после завершения <see cref="T:System.Activities.ActivityAction`7" />.</summary>
      <param name="activityAction">Действие, выполняемое при возникновении определенного события в родительском действии.</param>
      <param name="argument1">Аргумент, передающий данные в действие.</param>
      <param name="argument2">Аргумент, передающий данные в действие.</param>
      <param name="argument3">Аргумент, передающий данные в действие.</param>
      <param name="argument4">Аргумент, передающий данные в действие.</param>
      <param name="argument5">Аргумент, передающий данные в действие.</param>
      <param name="argument6">Аргумент, передающий данные в действие.</param>
      <param name="argument7">Аргумент, передающий данные в действие.</param>
      <param name="onCompleted">Закладка, показывающая, откуда по завершении действия <see cref="T:System.Activities.ActivityAction`7" /> будет возобновлено выполнение родительского действия.</param>
      <param name="onFaulted">Закладка, которая показывает, откуда в случае завершения действия <see cref="T:System.Activities.ActivityAction`7" /> по ошибке будет возобновлено выполнение родительского действия.</param>
      <typeparam name="T1">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T2">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T3">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T4">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T5">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T6">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T7">Данные, передаваемые в действие.</typeparam>
      <returns>Экземпляр действия.</returns>
    </member>
    <member name="M:System.Activities.NativeActivityContext.ScheduleAction``8(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7},``0,``1,``2,``3,``4,``5,``6,``7,System.Activities.CompletionCallback,System.Activities.FaultCallback)">
      <summary>Планирует выполнение указанного <see cref="T:System.Activities.ActivityAction`8" /> с восемью параметрами для аргументов <see langword="in" /> и создает закладки для указанных расположений обратного вызова, где родительский процесс возобновляется после завершения <see cref="T:System.Activities.ActivityAction`8" />.</summary>
      <param name="activityAction">Действие, выполняемое при возникновении определенного события в родительском действии.</param>
      <param name="argument1">Аргумент, передающий данные в действие.</param>
      <param name="argument2">Аргумент, передающий данные в действие.</param>
      <param name="argument3">Аргумент, передающий данные в действие.</param>
      <param name="argument4">Аргумент, передающий данные в действие.</param>
      <param name="argument5">Аргумент, передающий данные в действие.</param>
      <param name="argument6">Аргумент, передающий данные в действие.</param>
      <param name="argument7">Аргумент, передающий данные в действие.</param>
      <param name="argument8">Аргумент, передающий данные в действие.</param>
      <param name="onCompleted">Закладка, показывающая, откуда по завершении действия <see cref="T:System.Activities.ActivityAction`8" /> будет возобновлено выполнение родительского действия.</param>
      <param name="onFaulted">Закладка, которая показывает, откуда в случае завершения действия <see cref="T:System.Activities.ActivityAction`8" /> по ошибке будет возобновлено выполнение родительского действия.</param>
      <typeparam name="T1">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T2">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T3">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T4">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T5">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T6">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T7">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T8">Данные, передаваемые в действие.</typeparam>
      <returns>Экземпляр действия.</returns>
    </member>
    <member name="M:System.Activities.NativeActivityContext.ScheduleAction``9(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8},``0,``1,``2,``3,``4,``5,``6,``7,``8,System.Activities.CompletionCallback,System.Activities.FaultCallback)">
      <summary>Планирует выполнение указанного <see cref="T:System.Activities.ActivityAction`9" /> с девятью параметрами для аргументов <see langword="in" /> и создает закладки для указанных расположений обратного вызова, где родительский процесс возобновляется после завершения <see cref="T:System.Activities.ActivityAction`9" />.</summary>
      <param name="activityAction">Действие, выполняемое при возникновении определенного события в родительском действии.</param>
      <param name="argument1">Аргумент, передающий данные в действие.</param>
      <param name="argument2">Аргумент, передающий данные в действие.</param>
      <param name="argument3">Аргумент, передающий данные в действие.</param>
      <param name="argument4">Аргумент, передающий данные в действие.</param>
      <param name="argument5">Аргумент, передающий данные в действие.</param>
      <param name="argument6">Аргумент, передающий данные в действие.</param>
      <param name="argument7">Аргумент, передающий данные в действие.</param>
      <param name="argument8">Аргумент, передающий данные в действие.</param>
      <param name="argument9">Аргумент, передающий данные в действие.</param>
      <param name="onCompleted">Закладка, показывающая, откуда по завершении действия <see cref="T:System.Activities.ActivityAction`9" /> будет возобновлено выполнение родительского действия.</param>
      <param name="onFaulted">Закладка, которая показывает, откуда в случае завершения действия <see cref="T:System.Activities.ActivityAction`9" /> по ошибке будет возобновлено выполнение родительского действия.</param>
      <typeparam name="T1">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T2">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T3">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T4">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T5">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T6">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T7">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T8">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T9">Данные, передаваемые в действие.</typeparam>
      <returns>Экземпляр действия.</returns>
    </member>
    <member name="M:System.Activities.NativeActivityContext.ScheduleActivity(System.Activities.Activity)">
      <summary>Планирует выполнение указанного дочернего действия <see cref="T:System.Activities.NativeActivity" />.</summary>
      <param name="activity">Дочернее действие, запускаемое событием, которое возникает в процессе выполнения родительского действия <see cref="T:System.Activities.NativeActivity" />.</param>
      <returns>Экземпляр действия.</returns>
    </member>
    <member name="M:System.Activities.NativeActivityContext.ScheduleActivity(System.Activities.Activity,System.Activities.CompletionCallback)">
      <summary>Планирует выполнение указанного дочернего действия <see cref="T:System.Activities.NativeActivity" /> с использованием указанного расположения обратного вызова, где родительский процесс возобновляется после завершения действия.</summary>
      <param name="activity">Дочернее действие, запускаемое событием, которое возникает в процессе выполнения родительского действия <see cref="T:System.Activities.NativeActivity" />.</param>
      <param name="onCompleted">Закладка, показывающая, откуда по завершении действия <see cref="T:System.Activities.ActivityAction" /> будет возобновлено выполнение родительского действия.</param>
      <returns>Экземпляр действия.</returns>
    </member>
    <member name="M:System.Activities.NativeActivityContext.ScheduleActivity(System.Activities.Activity,System.Activities.CompletionCallback,System.Activities.FaultCallback)">
      <summary>Планирует выполнение указанного дочернего действия <see cref="T:System.Activities.NativeActivity" /> и создает закладки для указанных расположений обратного вызова, где родительский процесс возобновляется после завершения дочернего действия.</summary>
      <param name="activity">Дочернее действие, запускаемое событием, которое возникает в процессе выполнения родительского действия <see cref="T:System.Activities.NativeActivity" />.</param>
      <param name="onCompleted">Закладка, показывающая, откуда по завершении действия <see cref="T:System.Activities.NativeActivity" /> будет возобновлено выполнение действия <see cref="T:System.Activities.ActivityAction" />.</param>
      <param name="onFaulted">Закладка, показывающая, откуда в случае завершения действия <see cref="T:System.Activities.NativeActivity" /> из-за ошибки будет возобновлено выполнение действия <see cref="T:System.Activities.ActivityAction" />.</param>
      <returns>Экземпляр действия.</returns>
    </member>
    <member name="M:System.Activities.NativeActivityContext.ScheduleActivity(System.Activities.Activity,System.Activities.FaultCallback)">
      <summary>Планирует выполнение указанного дочернего действия <see cref="T:System.Activities.NativeActivity" /> с использованием указанного расположения обратного вызова после сбоя, где родительский процесс возобновляется, когда действие переходит в сбойное состояние.</summary>
      <param name="activity">Дочернее действие, запускаемое событием, которое возникает в процессе выполнения родительского действия <see cref="T:System.Activities.NativeActivity" />.</param>
      <param name="onFaulted">Закладка, которая показывает, откуда в случае завершения действия <see cref="T:System.Activities.ActivityAction" /> по ошибке будет возобновлено выполнение родительского действия.</param>
      <returns>Экземпляр действия.</returns>
    </member>
    <member name="M:System.Activities.NativeActivityContext.ScheduleActivity``1(System.Activities.Activity{``0},System.Activities.CompletionCallback{``0},System.Activities.FaultCallback)">
      <summary>Планирует выполнение указанного дочернего действия <see cref="T:System.Activities.NativeActivity" /> с одним параметром для аргумента <see langword="in" /> и создает закладки для указанных расположений обратного вызова, где родительский процесс возобновляется после завершения <see cref="T:System.Activities.ActivityAction`1" />.</summary>
      <param name="activity">Дочернее действие, запускаемое событием, которое возникает в процессе выполнения родительского действия <see cref="T:System.Activities.NativeActivity" />.</param>
      <param name="onCompleted">Закладка, показывающая, откуда по завершении действия <see cref="T:System.Activities.NativeActivity" /> будет возобновлено выполнение действия <see cref="T:System.Activities.ActivityAction`1" />.</param>
      <param name="onFaulted">Закладка, показывающая, откуда в случае завершения действия <see cref="T:System.Activities.NativeActivity" /> из-за ошибки будет возобновлено выполнение действия <see cref="T:System.Activities.ActivityAction" />.</param>
      <typeparam name="TResult">Тип аргумента <see langword="out" /> дочернего действия <see cref="T:System.Activities.NativeActivity" />.</typeparam>
      <returns>Экземпляр действия.</returns>
    </member>
    <member name="M:System.Activities.NativeActivityContext.ScheduleDelegate(System.Activities.ActivityDelegate,System.Collections.Generic.IDictionary{System.String,System.Object},System.Activities.DelegateCompletionCallback,System.Activities.FaultCallback)">
      <summary>Отправляет метод обратного вызова для действия в пул рабочих элементов.</summary>
      <param name="activityDelegate">Метод обратного вызова, в который действие возвращает результат, когда завершается указанная операция действия.</param>
      <param name="inputParameters">Словарный список имен и значений аргументов действия.</param>
      <param name="onCompleted">Закладка, показывающая, откуда по завершении действия <see cref="T:System.Activities.ActivityAction" /> будет возобновлено выполнение родительского действия.</param>
      <param name="onFaulted">Закладка, которая показывает, откуда в случае завершения действия <see cref="T:System.Activities.ActivityAction" /> по ошибке будет возобновлено выполнение родительского действия.</param>
      <returns>Экземпляр действия.</returns>
    </member>
    <member name="M:System.Activities.NativeActivityContext.ScheduleFunc``1(System.Activities.ActivityFunc{``0},System.Activities.CompletionCallback{``0},System.Activities.FaultCallback)">
      <summary>Планирует выполнение указанного действия <see cref="T:System.Activities.ActivityFunc`1" /> с одним параметром, содержащим возвращаемое значение, и создает закладки для указанных расположений обратного вызова, где рабочий процесс возобновляется после завершения <see cref="T:System.Activities.ActivityFunc`1" />.</summary>
      <param name="activityFunc">Дочернее действие, которое выполняется и возвращает значение, когда в родительском действии возникает определенное событие.</param>
      <param name="onCompleted">Закладка, показывающая, откуда по завершении действия <see cref="T:System.Activities.ActivityFunc`1" /> будет возобновлено выполнение родительского действия.</param>
      <param name="onFaulted">Закладка, которая показывает, откуда в случае завершения действия <see cref="T:System.Activities.ActivityFunc`1" /> по ошибке будет возобновлено выполнение родительского действия.</param>
      <typeparam name="TResult">Тип аргумента <see langword="out" /> дочернего действия <see cref="T:System.Activities.NativeActivity" />.</typeparam>
      <returns>Экземпляр действия.</returns>
    </member>
    <member name="M:System.Activities.NativeActivityContext.ScheduleFunc``10(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9},``0,``1,``2,``3,``4,``5,``6,``7,``8,System.Activities.CompletionCallback{``9},System.Activities.FaultCallback)">
      <summary>Планирует выполнение указанного <see cref="T:System.Activities.ActivityFunc`10" /> с десятью параметрами для возвращаемого значения и аргументов <see langword="in" /> и создает закладки для указанных расположений обратного вызова, где родительский процесс возобновляется после завершения <see cref="T:System.Activities.ActivityFunc`10" />.</summary>
      <param name="activityFunc">Дочернее действие, которое выполняется и возвращает значение, когда в родительском действии возникает определенное событие.</param>
      <param name="argument1">Аргумент, передающий данные в действие.</param>
      <param name="argument2">Аргумент, передающий данные в действие.</param>
      <param name="argument3">Аргумент, передающий данные в действие.</param>
      <param name="argument4">Аргумент, передающий данные в действие.</param>
      <param name="argument5">Аргумент, передающий данные в действие.</param>
      <param name="argument6">Аргумент, передающий данные в действие.</param>
      <param name="argument7">Аргумент, передающий данные в действие.</param>
      <param name="argument8">Аргумент, передающий данные в действие.</param>
      <param name="argument9">Аргумент, передающий данные в действие.</param>
      <param name="onCompleted">Закладка, показывающая, откуда по завершении действия <see cref="T:System.Activities.ActivityFunc`10" /> будет возобновлено выполнение родительского действия.</param>
      <param name="onFaulted">Закладка, которая показывает, откуда в случае завершения действия <see cref="T:System.Activities.ActivityFunc`10" /> по ошибке будет возобновлено выполнение родительского действия.</param>
      <typeparam name="T1">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T2">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T3">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T4">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T5">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T6">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T7">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T8">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T9">Данные, передаваемые в действие.</typeparam>
      <typeparam name="TResult">Тип выходного аргумента дочернего действия.</typeparam>
      <returns>Экземпляр действия.</returns>
    </member>
    <member name="M:System.Activities.NativeActivityContext.ScheduleFunc``11(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,System.Activities.CompletionCallback{``10},System.Activities.FaultCallback)">
      <summary>Планирует выполнение указанного действия <see cref="T:System.Activities.ActivityFunc`11" /> с одиннадцатью параметрами для возвращаемого значения и входных аргументов и создает закладки для указанных расположений обратного вызова, где родительский процесс возобновляется после завершения <see cref="T:System.Activities.ActivityFunc`11" />.</summary>
      <param name="activityFunc">Дочернее действие, которое выполняется и возвращает значение, когда в родительском действии возникает определенное событие.</param>
      <param name="argument1">Аргумент, передающий данные в действие.</param>
      <param name="argument2">Аргумент, передающий данные в действие.</param>
      <param name="argument3">Аргумент, передающий данные в действие.</param>
      <param name="argument4">Аргумент, передающий данные в действие.</param>
      <param name="argument5">Аргумент, передающий данные в действие.</param>
      <param name="argument6">Аргумент, передающий данные в действие.</param>
      <param name="argument7">Аргумент, передающий данные в действие.</param>
      <param name="argument8">Аргумент, передающий данные в действие.</param>
      <param name="argument9">Аргумент, передающий данные в действие.</param>
      <param name="argument10">Аргумент, передающий данные в действие.</param>
      <param name="onCompleted">Закладка, показывающая, откуда по завершении действия <see cref="T:System.Activities.ActivityFunc`11" /> будет возобновлено выполнение родительского действия.</param>
      <param name="onFaulted">Закладка, которая показывает, откуда в случае завершения действия <see cref="T:System.Activities.ActivityFunc`11" /> по ошибке будет возобновлено выполнение родительского действия.</param>
      <typeparam name="T1">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T2">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T3">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T4">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T5">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T6">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T7">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T8">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T9">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T10">Данные, передаваемые в действие.</typeparam>
      <typeparam name="TResult">Тип выходного аргумента дочернего действия <see cref="T:System.Activities.NativeActivity" />.</typeparam>
      <returns>Экземпляр действия.</returns>
    </member>
    <member name="M:System.Activities.NativeActivityContext.ScheduleFunc``12(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,System.Activities.CompletionCallback{``11},System.Activities.FaultCallback)">
      <summary>Планирует выполнение указанного <see cref="T:System.Activities.ActivityFunc`12" /> с двенадцатью параметрами для возвращаемого значения и аргументов <see langword="in" /> и создает закладки для указанных расположений обратного вызова, где родительский процесс возобновляется после завершения <see cref="T:System.Activities.ActivityFunc`12" />.</summary>
      <param name="activityFunc">Дочернее действие, которое выполняется и возвращает значение, когда в родительском действии возникает определенное событие.</param>
      <param name="argument1">Аргумент, передающий данные в действие.</param>
      <param name="argument2">Аргумент, передающий данные в действие.</param>
      <param name="argument3">Аргумент, передающий данные в действие.</param>
      <param name="argument4">Аргумент, передающий данные в действие.</param>
      <param name="argument5">Аргумент, передающий данные в действие.</param>
      <param name="argument6">Аргумент, передающий данные в действие.</param>
      <param name="argument7">Аргумент, передающий данные в действие.</param>
      <param name="argument8">Аргумент, передающий данные в действие.</param>
      <param name="argument9">Аргумент, передающий данные в действие.</param>
      <param name="argument10">Аргумент, передающий данные в действие.</param>
      <param name="argument11">Аргумент, передающий данные в действие.</param>
      <param name="onCompleted">Закладка, показывающая, откуда по завершении действия <see cref="T:System.Activities.ActivityFunc`12" /> будет возобновлено выполнение родительского действия.</param>
      <param name="onFaulted">Закладка, которая показывает, откуда в случае завершения действия <see cref="T:System.Activities.ActivityFunc`12" /> по ошибке будет возобновлено выполнение родительского действия.</param>
      <typeparam name="T1">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T2">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T3">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T4">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T5">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T6">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T7">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T8">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T9">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T10">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T11">Данные, передаваемые в действие.</typeparam>
      <typeparam name="TResult">Тип выходного аргумента дочернего действия.</typeparam>
      <returns>Экземпляр действия.</returns>
    </member>
    <member name="M:System.Activities.NativeActivityContext.ScheduleFunc``13(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,System.Activities.CompletionCallback{``12},System.Activities.FaultCallback)">
      <summary>Планирует выполнение указанного <see cref="T:System.Activities.ActivityFunc`13" /> с тринадцатью параметрами для возвращаемого значения и аргументов <see langword="in" /> и создает закладки для указанных расположений обратного вызова, где родительский процесс возобновляется после завершения <see cref="T:System.Activities.ActivityFunc`13" />.</summary>
      <param name="activityFunc">Дочернее действие, которое выполняется и возвращает значение, когда в родительском действии возникает определенное событие.</param>
      <param name="argument1">Аргумент, передающий данные в действие.</param>
      <param name="argument2">Аргумент, передающий данные в действие.</param>
      <param name="argument3">Аргумент, передающий данные в действие.</param>
      <param name="argument4">Аргумент, передающий данные в действие.</param>
      <param name="argument5">Аргумент, передающий данные в действие.</param>
      <param name="argument6">Аргумент, передающий данные в действие.</param>
      <param name="argument7">Аргумент, передающий данные в действие.</param>
      <param name="argument8">Аргумент, передающий данные в действие.</param>
      <param name="argument9">Аргумент, передающий данные в действие.</param>
      <param name="argument10">Аргумент, передающий данные в действие.</param>
      <param name="argument11">Аргумент, передающий данные в действие.</param>
      <param name="argument12">Аргумент, передающий данные в действие.</param>
      <param name="onCompleted">Закладка, показывающая, откуда по завершении действия <see cref="T:System.Activities.ActivityFunc`13" /> будет возобновлено выполнение родительского действия.</param>
      <param name="onFaulted">Закладка, которая показывает, откуда в случае завершения действия <see cref="T:System.Activities.ActivityFunc`13" /> по ошибке будет возобновлено выполнение родительского действия.</param>
      <typeparam name="T1">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T2">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T3">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T4">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T5">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T6">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T7">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T8">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T9">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T10">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T11">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T12">Данные, передаваемые в действие.</typeparam>
      <typeparam name="TResult">Тип выходного аргумента дочернего действия <see cref="T:System.Activities.NativeActivity" />.</typeparam>
      <returns>Экземпляр действия.</returns>
    </member>
    <member name="M:System.Activities.NativeActivityContext.ScheduleFunc``14(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,System.Activities.CompletionCallback{``13},System.Activities.FaultCallback)">
      <summary>Планирует выполнение указанного действия <see cref="T:System.Activities.ActivityFunc`14" /> с четырнадцатью параметрами для возвращаемого значения и аргументов <see langword="in" /> и создает закладки для указанных расположений обратного вызова, где родительский процесс возобновляется после завершения <see cref="T:System.Activities.ActivityFunc`14" />.</summary>
      <param name="activityFunc">Дочернее действие, которое выполняется и возвращает значение, когда в родительском действии возникает определенное событие.</param>
      <param name="argument1">Аргумент, передающий данные в действие.</param>
      <param name="argument2">Аргумент, передающий данные в действие.</param>
      <param name="argument3">Аргумент, передающий данные в действие.</param>
      <param name="argument4">Аргумент, передающий данные в действие.</param>
      <param name="argument5">Аргумент, передающий данные в действие.</param>
      <param name="argument6">Аргумент, передающий данные в действие.</param>
      <param name="argument7">Аргумент, передающий данные в действие.</param>
      <param name="argument8">Аргумент, передающий данные в действие.</param>
      <param name="argument9">Аргумент, передающий данные в действие.</param>
      <param name="argument10">Аргумент, передающий данные в действие.</param>
      <param name="argument11">Аргумент, передающий данные в действие.</param>
      <param name="argument12">Аргумент, передающий данные в действие.</param>
      <param name="argument13">Аргумент, передающий данные в действие.</param>
      <param name="onCompleted">Закладка, показывающая, откуда по завершении действия <see cref="T:System.Activities.ActivityFunc`14" /> будет возобновлено выполнение родительского действия.</param>
      <param name="onFaulted">Закладка, которая показывает, откуда в случае завершения действия <see cref="T:System.Activities.ActivityFunc`14" /> по ошибке будет возобновлено выполнение родительского действия.</param>
      <typeparam name="T1">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T2">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T3">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T4">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T5">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T6">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T7">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T8">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T9">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T10">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T11">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T12">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T13">Данные, передаваемые в действие.</typeparam>
      <typeparam name="TResult">Тип выходного аргумента дочернего действия <see cref="T:System.Activities.NativeActivity" />.</typeparam>
      <returns>Экземпляр действия.</returns>
    </member>
    <member name="M:System.Activities.NativeActivityContext.ScheduleFunc``15(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,System.Activities.CompletionCallback{``14},System.Activities.FaultCallback)">
      <summary>Планирует выполнение указанного действия <see cref="T:System.Activities.ActivityFunc`15" /> с пятнадцатью параметрами для возвращаемого значения и аргументов <see langword="in" /> и создает закладки для указанных расположений обратного вызова, где родительский процесс возобновляется после завершения <see cref="T:System.Activities.ActivityFunc`15" />.</summary>
      <param name="activityFunc">Дочернее действие, которое выполняется и возвращает значение, когда в родительском действии возникает определенное событие.</param>
      <param name="argument1">Аргумент, передающий данные в действие.</param>
      <param name="argument2">Аргумент, передающий данные в действие.</param>
      <param name="argument3">Аргумент, передающий данные в действие.</param>
      <param name="argument4">Аргумент, передающий данные в действие.</param>
      <param name="argument5">Аргумент, передающий данные в действие.</param>
      <param name="argument6">Аргумент, передающий данные в действие.</param>
      <param name="argument7">Аргумент, передающий данные в действие.</param>
      <param name="argument8">Аргумент, передающий данные в действие.</param>
      <param name="argument9">Аргумент, передающий данные в действие.</param>
      <param name="argument10">Аргумент, передающий данные в действие.</param>
      <param name="argument11">Аргумент, передающий данные в действие.</param>
      <param name="argument12">Аргумент, передающий данные в действие.</param>
      <param name="argument13">Аргумент, передающий данные в действие.</param>
      <param name="argument14">Аргумент, передающий данные в действие.</param>
      <param name="onCompleted">Закладка, показывающая, откуда по завершении действия <see cref="T:System.Activities.ActivityFunc`15" /> будет возобновлено выполнение родительского действия.</param>
      <param name="onFaulted">Закладка, которая показывает, откуда в случае завершения действия <see cref="T:System.Activities.ActivityFunc`15" /> по ошибке будет возобновлено выполнение родительского действия.</param>
      <typeparam name="T1">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T2">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T3">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T4">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T5">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T6">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T7">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T8">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T9">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T10">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T11">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T12">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T13">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T14">Данные, передаваемые в действие.</typeparam>
      <typeparam name="TResult">Тип выходного аргумента дочернего действия <see cref="T:System.Activities.NativeActivity" />.</typeparam>
      <returns>Экземпляр действия.</returns>
    </member>
    <member name="M:System.Activities.NativeActivityContext.ScheduleFunc``16(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,System.Activities.CompletionCallback{``15},System.Activities.FaultCallback)">
      <summary>Планирует выполнение указанного <see cref="T:System.Activities.ActivityFunc`16" /> с шестнадцатью параметрами для возвращаемого значения и аргументов <see langword="in" /> и создает закладки для указанных расположений обратного вызова, где родительский процесс возобновляется после завершения <see cref="T:System.Activities.ActivityFunc`16" />.</summary>
      <param name="activityFunc">Дочернее действие, которое выполняется и возвращает значение, когда в родительском действии возникает определенное событие.</param>
      <param name="argument1">Аргумент, передающий данные в действие.</param>
      <param name="argument2">Аргумент, передающий данные в действие.</param>
      <param name="argument3">Аргумент, передающий данные в действие.</param>
      <param name="argument4">Аргумент, передающий данные в действие.</param>
      <param name="argument5">Аргумент, передающий данные в действие.</param>
      <param name="argument6">Аргумент, передающий данные в действие.</param>
      <param name="argument7">Аргумент, передающий данные в действие.</param>
      <param name="argument8">Аргумент, передающий данные в действие.</param>
      <param name="argument9">Аргумент, передающий данные в действие.</param>
      <param name="argument10">Аргумент, передающий данные в действие.</param>
      <param name="argument11">Аргумент, передающий данные в действие.</param>
      <param name="argument12">Аргумент, передающий данные в действие.</param>
      <param name="argument13">Аргумент, передающий данные в действие.</param>
      <param name="argument14">Аргумент, передающий данные в действие.</param>
      <param name="argument15">Аргумент, передающий данные в действие.</param>
      <param name="onCompleted">Закладка, показывающая, откуда по завершении действия <see cref="T:System.Activities.ActivityFunc`16" /> будет возобновлено выполнение родительского действия.</param>
      <param name="onFaulted">Закладка, которая показывает, откуда в случае завершения действия <see cref="T:System.Activities.ActivityFunc`16" /> по ошибке будет возобновлено выполнение родительского действия.</param>
      <typeparam name="T1">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T2">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T3">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T4">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T5">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T6">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T7">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T8">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T9">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T10">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T11">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T12">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T13">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T14">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T15">Данные, передаваемые в действие.</typeparam>
      <typeparam name="TResult">Тип выходного аргумента дочернего действия <see cref="T:System.Activities.NativeActivity" />.</typeparam>
      <returns>Экземпляр действия.</returns>
    </member>
    <member name="M:System.Activities.NativeActivityContext.ScheduleFunc``17(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,System.Activities.CompletionCallback{``16},System.Activities.FaultCallback)">
      <summary>Планирует выполнение указанного <see cref="T:System.Activities.ActivityFunc`17" /> с семнадцатью параметрами для возвращаемого значения и аргументов <see langword="in" /> и создает закладки для указанных расположений обратного вызова, где родительский процесс возобновляется после завершения <see cref="T:System.Activities.ActivityFunc`17" />.</summary>
      <param name="activityFunc">Дочернее действие, которое выполняется, когда в родительском действии происходит определенное событие, и возвращает значение.</param>
      <param name="argument1">Аргумент, передающий данные в действие.</param>
      <param name="argument2">Аргумент, передающий данные в действие.</param>
      <param name="argument3">Аргумент, передающий данные в действие.</param>
      <param name="argument4">Аргумент, передающий данные в действие.</param>
      <param name="argument5">Аргумент, передающий данные в действие.</param>
      <param name="argument6">Аргумент, передающий данные в действие.</param>
      <param name="argument7">Аргумент, передающий данные в действие.</param>
      <param name="argument8">Аргумент, передающий данные в действие.</param>
      <param name="argument9">Аргумент, передающий данные в действие.</param>
      <param name="argument10">Аргумент, передающий данные в действие.</param>
      <param name="argument11">Аргумент, передающий данные в действие.</param>
      <param name="argument12">Аргумент, передающий данные в действие.</param>
      <param name="argument13">Аргумент, передающий данные в действие.</param>
      <param name="argument14">Аргумент, передающий данные в действие.</param>
      <param name="argument15">Аргумент, передающий данные в действие.</param>
      <param name="argument16">Аргумент, передающий данные в действие.</param>
      <param name="onCompleted">Закладка, показывающая, откуда по завершении действия <see cref="T:System.Activities.ActivityFunc`17" /> будет возобновлено выполнение родительского действия.</param>
      <param name="onFaulted">Закладка, которая показывает, откуда в случае завершения действия <see cref="T:System.Activities.ActivityFunc`17" /> по ошибке будет возобновлено выполнение родительского действия.</param>
      <typeparam name="T1">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T2">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T3">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T4">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T5">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T6">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T7">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T8">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T9">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T10">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T11">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T12">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T13">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T14">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T15">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T16">Данные, передаваемые в действие.</typeparam>
      <typeparam name="TResult">Тип аргумента <see langword="out" /> дочернего действия <see cref="T:System.Activities.NativeActivity" />.</typeparam>
      <returns>Экземпляр действия.</returns>
    </member>
    <member name="M:System.Activities.NativeActivityContext.ScheduleFunc``2(System.Activities.ActivityFunc{``0,``1},``0,System.Activities.CompletionCallback{``1},System.Activities.FaultCallback)">
      <summary>Планирует выполнение указанного <see cref="T:System.Activities.ActivityFunc`2" /> с двумя параметрами для возвращаемого значения и аргумента <see langword="in" /> и создает закладки для указанных расположений обратного вызова, где родительский процесс возобновляется после завершения <see cref="T:System.Activities.ActivityFunc`2" />.</summary>
      <param name="activityFunc">Дочернее действие, которое выполняется и возвращает значение, когда в родительском действии возникает определенное событие.</param>
      <param name="argument">Аргумент, передающий данные в действие.</param>
      <param name="onCompleted">Закладка, показывающая, откуда по завершении действия <see cref="T:System.Activities.ActivityFunc`2" /> будет возобновлено выполнение родительского действия.</param>
      <param name="onFaulted">Закладка, которая показывает, откуда в случае завершения действия <see cref="T:System.Activities.ActivityFunc`2" /> по ошибке будет возобновлено выполнение родительского действия.</param>
      <typeparam name="T">Данные, передаваемые в действие.</typeparam>
      <typeparam name="TResult">Тип аргумента <see langword="out" /> дочернего действия <see cref="T:System.Activities.NativeActivity" />.</typeparam>
      <returns>Экземпляр действия.</returns>
    </member>
    <member name="M:System.Activities.NativeActivityContext.ScheduleFunc``3(System.Activities.ActivityFunc{``0,``1,``2},``0,``1,System.Activities.CompletionCallback{``2},System.Activities.FaultCallback)">
      <summary>Планирует выполнение указанного <see cref="T:System.Activities.ActivityFunc`3" /> с тремя параметрами для возвращаемого значения и аргументов <see langword="in" /> и создает закладки для указанных расположений обратного вызова, где родительский процесс возобновляется после завершения <see cref="T:System.Activities.ActivityFunc`3" />.</summary>
      <param name="activityFunc">Дочернее действие, которое выполняется и возвращает значение, когда в родительском действии возникает определенное событие.</param>
      <param name="argument1">Аргумент, передающий данные в действие.</param>
      <param name="argument2">Аргумент, передающий данные в действие.</param>
      <param name="onCompleted">Закладка, показывающая, откуда по завершении действия <see cref="T:System.Activities.ActivityFunc`3" /> будет возобновлено выполнение родительского действия.</param>
      <param name="onFaulted">Закладка, которая показывает, откуда в случае завершения действия <see cref="T:System.Activities.ActivityFunc`3" /> по ошибке будет возобновлено выполнение родительского действия.</param>
      <typeparam name="T1">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T2">Данные, передаваемые в действие.</typeparam>
      <typeparam name="TResult">Тип аргумента <see langword="out" /> дочернего действия <see cref="T:System.Activities.NativeActivity" />.</typeparam>
      <returns>Экземпляр действия.</returns>
    </member>
    <member name="M:System.Activities.NativeActivityContext.ScheduleFunc``4(System.Activities.ActivityFunc{``0,``1,``2,``3},``0,``1,``2,System.Activities.CompletionCallback{``3},System.Activities.FaultCallback)">
      <summary>Планирует выполнение указанного <see cref="T:System.Activities.ActivityFunc`4" /> с четырьмя параметрами для возвращаемого значения и аргументов <see langword="in" /> и создает закладки для указанных расположений обратного вызова, где родительский процесс возобновляется после завершения <see cref="T:System.Activities.ActivityFunc`4" />.</summary>
      <param name="activityFunc">Дочернее действие, которое выполняется и возвращает значение, когда в родительском действии возникает определенное событие.</param>
      <param name="argument1">Аргумент, передающий данные в действие.</param>
      <param name="argument2">Аргумент, передающий данные в действие.</param>
      <param name="argument3">Аргумент, передающий данные в действие.</param>
      <param name="onCompleted">Закладка, показывающая, откуда по завершении действия <see cref="T:System.Activities.ActivityFunc`4" /> будет возобновлено выполнение родительского действия.</param>
      <param name="onFaulted">Закладка, которая показывает, откуда в случае завершения действия <see cref="T:System.Activities.ActivityFunc`4" /> по ошибке будет возобновлено выполнение родительского действия.</param>
      <typeparam name="T1">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T2">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T3">Данные, передаваемые в действие.</typeparam>
      <typeparam name="TResult">Тип аргумента <see langword="out" /> дочернего действия <see cref="T:System.Activities.NativeActivity" />.</typeparam>
      <returns>Экземпляр действия.</returns>
    </member>
    <member name="M:System.Activities.NativeActivityContext.ScheduleFunc``5(System.Activities.ActivityFunc{``0,``1,``2,``3,``4},``0,``1,``2,``3,System.Activities.CompletionCallback{``4},System.Activities.FaultCallback)">
      <summary>Планирует выполнение указанного <see cref="T:System.Activities.ActivityFunc`5" /> с пятью параметрами для возвращаемого значения и аргументов <see langword="in" /> и создает закладки для указанных расположений обратного вызова, где родительский процесс возобновляется после завершения <see cref="T:System.Activities.ActivityFunc`5" />.</summary>
      <param name="activityFunc">Дочернее действие, которое выполняется и возвращает значение, когда в родительском действии возникает определенное событие.</param>
      <param name="argument1">Аргумент, передающий данные в действие.</param>
      <param name="argument2">Аргумент, передающий данные в действие.</param>
      <param name="argument3">Аргумент, передающий данные в действие.</param>
      <param name="argument4">Аргумент, передающий данные в действие.</param>
      <param name="onCompleted">Закладка, показывающая, откуда по завершении действия <see cref="T:System.Activities.ActivityFunc`5" /> будет возобновлено выполнение родительского действия.</param>
      <param name="onFaulted">Закладка, которая показывает, откуда в случае завершения действия <see cref="T:System.Activities.ActivityFunc`5" /> по ошибке будет возобновлено выполнение родительского действия.</param>
      <typeparam name="T1">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T2">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T3">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T4">Данные, передаваемые в действие.</typeparam>
      <typeparam name="TResult">Тип аргумента <see langword="out" /> дочернего действия <see cref="T:System.Activities.NativeActivity" />.</typeparam>
      <returns>Экземпляр действия.</returns>
    </member>
    <member name="M:System.Activities.NativeActivityContext.ScheduleFunc``6(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5},``0,``1,``2,``3,``4,System.Activities.CompletionCallback{``5},System.Activities.FaultCallback)">
      <summary>Планирует выполнение указанного <see cref="T:System.Activities.ActivityFunc`6" /> с шестью параметрами для возвращаемого значения и аргументов <see langword="in" /> и создает закладки для указанных расположений обратного вызова, где родительский процесс возобновляется после завершения <see cref="T:System.Activities.ActivityFunc`6" />.</summary>
      <param name="activityFunc">Дочернее действие, которое выполняется и возвращает значение, когда в родительском действии возникает определенное событие.</param>
      <param name="argument1">Аргумент, передающий данные в действие.</param>
      <param name="argument2">Аргумент, передающий данные в действие.</param>
      <param name="argument3">Аргумент, передающий данные в действие.</param>
      <param name="argument4">Аргумент, передающий данные в действие.</param>
      <param name="argument5">Аргумент, передающий данные в действие.</param>
      <param name="onCompleted">Закладка, показывающая, откуда по завершении действия <see cref="T:System.Activities.ActivityFunc`6" /> будет возобновлено выполнение родительского действия.</param>
      <param name="onFaulted">Закладка, которая показывает, откуда в случае завершения действия <see cref="T:System.Activities.ActivityFunc`6" /> по ошибке будет возобновлено выполнение родительского действия.</param>
      <typeparam name="T1">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T2">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T3">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T4">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T5">Данные, передаваемые в действие.</typeparam>
      <typeparam name="TResult">Тип аргумента <see langword="out" /> дочернего действия <see cref="T:System.Activities.NativeActivity" />.</typeparam>
      <returns>Экземпляр действия.</returns>
    </member>
    <member name="M:System.Activities.NativeActivityContext.ScheduleFunc``7(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6},``0,``1,``2,``3,``4,``5,System.Activities.CompletionCallback{``6},System.Activities.FaultCallback)">
      <summary>Планирует выполнение указанного <see cref="T:System.Activities.ActivityFunc`7" /> с семью параметрами для возвращаемого значения и аргументов <see langword="in" /> и создает закладки для указанных расположений обратного вызова, где родительский процесс возобновляется после завершения <see cref="T:System.Activities.ActivityFunc`7" />.</summary>
      <param name="activityFunc">Дочернее действие, которое выполняется и возвращает значение, когда в родительском действии возникает определенное событие.</param>
      <param name="argument1">Аргумент, передающий данные в действие.</param>
      <param name="argument2">Аргумент, передающий данные в действие.</param>
      <param name="argument3">Аргумент, передающий данные в действие.</param>
      <param name="argument4">Аргумент, передающий данные в действие.</param>
      <param name="argument5">Аргумент, передающий данные в действие.</param>
      <param name="argument6">Аргумент, передающий данные в действие.</param>
      <param name="onCompleted">Закладка, показывающая, откуда по завершении действия <see cref="T:System.Activities.ActivityFunc`7" /> будет возобновлено выполнение родительского действия.</param>
      <param name="onFaulted">Закладка, которая показывает, откуда в случае завершения действия <see cref="T:System.Activities.ActivityFunc`7" /> по ошибке будет возобновлено выполнение родительского действия.</param>
      <typeparam name="T1">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T2">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T3">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T4">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T5">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T6">Данные, передаваемые в действие.</typeparam>
      <typeparam name="TResult">Тип аргумента <see langword="out" /> дочернего действия <see cref="T:System.Activities.NativeActivity" />.</typeparam>
      <returns>Экземпляр действия.</returns>
    </member>
    <member name="M:System.Activities.NativeActivityContext.ScheduleFunc``8(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7},``0,``1,``2,``3,``4,``5,``6,System.Activities.CompletionCallback{``7},System.Activities.FaultCallback)">
      <summary>Планирует выполнение указанного <see cref="T:System.Activities.ActivityFunc`8" /> с восемью параметрами для возвращаемого значения и аргументов <see langword="in" /> и создает закладки для указанных расположений обратного вызова, где родительский процесс возобновляется после завершения <see cref="T:System.Activities.ActivityFunc`8" />.</summary>
      <param name="activityFunc">Дочернее действие, которое выполняется и возвращает значение, когда в родительском действии возникает определенное событие.</param>
      <param name="argument1">Аргумент, передающий данные в действие.</param>
      <param name="argument2">Аргумент, передающий данные в действие.</param>
      <param name="argument3">Аргумент, передающий данные в действие.</param>
      <param name="argument4">Аргумент, передающий данные в действие.</param>
      <param name="argument5">Аргумент, передающий данные в действие.</param>
      <param name="argument6">Аргумент, передающий данные в действие.</param>
      <param name="argument7">Аргумент, передающий данные в действие.</param>
      <param name="onCompleted">Закладка, показывающая, откуда по завершении действия <see cref="T:System.Activities.ActivityFunc`8" /> будет возобновлено выполнение родительского действия.</param>
      <param name="onFaulted">Закладка, которая показывает, откуда в случае завершения действия <see cref="T:System.Activities.ActivityFunc`8" /> по ошибке будет возобновлено выполнение родительского действия.</param>
      <typeparam name="T1">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T2">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T3">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T4">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T5">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T6">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T7">Данные, передаваемые в действие.</typeparam>
      <typeparam name="TResult">Тип аргумента <see langword="out" /> дочернего действия <see cref="T:System.Activities.NativeActivity" />.</typeparam>
      <returns>Экземпляр действия.</returns>
    </member>
    <member name="M:System.Activities.NativeActivityContext.ScheduleFunc``9(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8},``0,``1,``2,``3,``4,``5,``6,``7,System.Activities.CompletionCallback{``8},System.Activities.FaultCallback)">
      <summary>Планирует выполнение указанного <see cref="T:System.Activities.ActivityFunc`9" /> с девятью параметрами для возвращаемого значения и аргументов <see langword="in" /> и создает закладки для указанных расположений обратного вызова, где родительский процесс возобновляется после завершения <see cref="T:System.Activities.ActivityFunc`9" />.</summary>
      <param name="activityFunc">Дочернее действие, которое выполняется и возвращает значение, когда в родительском действии возникает определенное событие.</param>
      <param name="argument1">Аргумент, передающий данные в действие.</param>
      <param name="argument2">Аргумент, передающий данные в действие.</param>
      <param name="argument3">Аргумент, передающий данные в действие.</param>
      <param name="argument4">Аргумент, передающий данные в действие.</param>
      <param name="argument5">Аргумент, передающий данные в действие.</param>
      <param name="argument6">Аргумент, передающий данные в действие.</param>
      <param name="argument7">Аргумент, передающий данные в действие.</param>
      <param name="argument8">Аргумент, передающий данные в действие.</param>
      <param name="onCompleted">Закладка, показывающая, откуда по завершении действия <see cref="T:System.Activities.ActivityFunc`9" /> будет возобновлено выполнение родительского действия.</param>
      <param name="onFaulted">Закладка, которая показывает, откуда в случае завершения действия <see cref="T:System.Activities.ActivityFunc`9" /> по ошибке будет возобновлено выполнение родительского действия.</param>
      <typeparam name="T1">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T2">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T3">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T4">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T5">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T6">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T7">Данные, передаваемые в действие.</typeparam>
      <typeparam name="T8">Данные, передаваемые в действие.</typeparam>
      <typeparam name="TResult">Тип аргумента <see langword="out" /> дочернего действия <see cref="T:System.Activities.NativeActivity" />.</typeparam>
      <returns>Экземпляр действия.</returns>
    </member>
    <member name="M:System.Activities.NativeActivityContext.SetValue(System.Activities.Variable,System.Object)">
      <summary>Назначает указанный объект значения указанному объекту переменной.</summary>
      <param name="variable">Объект-переменная без указанного типа, которому можно присвоить объект-значение.</param>
      <param name="value">Объект без указанного типа, который можно присвоить объекту-переменной.</param>
    </member>
    <member name="M:System.Activities.NativeActivityContext.SetValue``1(System.Activities.Variable{``0},``0)">
      <summary>Присваивает указанный универсальный объект-значение указанному универсальному объекту-переменной.</summary>
      <param name="variable">Объект-переменная с указанным типом, которому можно присвоить объект-значение.</param>
      <param name="value">Объект с указанным типом, который можно присвоить объекту-переменной.</param>
      <typeparam name="T">Тип параметров <paramref name="variable" /> и <paramref name="value" />.</typeparam>
    </member>
    <member name="M:System.Activities.NativeActivityContext.Track(System.Activities.Tracking.CustomTrackingRecord)">
      <summary>Добавляет запись отслеживания действия в текущий экземпляр рабочего процесса.</summary>
      <param name="record">Данные, отправляемые участникам отслеживания, когда происходят отслеживаемые события.</param>
    </member>
    <member name="T:System.Activities.NativeActivityFaultContext">
      <summary>Представляет среду выполнения <see cref="T:System.Activities.NativeActivity" /> во время обработки исключения, вызванного дочерним действием.</summary>
    </member>
    <member name="M:System.Activities.NativeActivityFaultContext.H*******leFault">
      <summary>УСТАРЕВШИЕ.</summary>
    </member>
    <member name="T:System.Activities.NativeActivityMetadata">
      <summary>Представляет набор аргументов, дочерних действий, переменных и делегатов, которые настроенный <see cref="T:System.Activities.NativeActivity" /> вносит в среду выполнения.</summary>
    </member>
    <member name="M:System.Activities.NativeActivityMetadata.AddArgument(System.Activities.RuntimeArgument)">
      <summary>Добавляет аргумент в коллекцию аргументов действия.</summary>
      <param name="argument">Аргумент для добавления в коллекцию.</param>
    </member>
    <member name="M:System.Activities.NativeActivityMetadata.AddChild(System.Activities.Activity)">
      <summary>Добавляет указанное действие в список дочерних действий в метаданных.</summary>
      <param name="child">Действие для добавления.</param>
    </member>
    <member name="M:System.Activities.NativeActivityMetadata.AddChild(System.Activities.Activity,System.Object)">
      <summary>Добавляет указанное действие в список дочерних действий в метаданных.</summary>
      <param name="child">Действие для добавления.</param>
      <param name="origin">Источник действия.</param>
    </member>
    <member name="M:System.Activities.NativeActivityMetadata.AddDefaultExtensionProvider``1(System.Func{``0})">
      <summary>Добавляет указанный поставщик расширений в коллекцию поставщиков расширений по умолчанию для данного действия.</summary>
      <param name="extensionProvider">Функция, возвращающая расширение.</param>
      <typeparam name="T">Тип поставщика расширений.</typeparam>
    </member>
    <member name="M:System.Activities.NativeActivityMetadata.AddDelegate(System.Activities.ActivityDelegate)">
      <summary>Добавляет указанный делегат в список делегатов в метаданных.</summary>
      <param name="activityDelegate">Добавляемый делегат.</param>
    </member>
    <member name="M:System.Activities.NativeActivityMetadata.AddDelegate(System.Activities.ActivityDelegate,System.Object)">
      <summary>Добавляет указанный делегат в список делегатов в метаданных.</summary>
      <param name="activityDelegate">Добавляемый делегат.</param>
      <param name="origin">Источник делегата.</param>
    </member>
    <member name="M:System.Activities.NativeActivityMetadata.AddImplementationChild(System.Activities.Activity)">
      <summary>Добавляет указанное действие в список действий реализации в метаданных.</summary>
      <param name="implementationChild">Действие для добавления.</param>
    </member>
    <member name="M:System.Activities.NativeActivityMetadata.AddImplementationDelegate(System.Activities.ActivityDelegate)">
      <summary>Добавляет указанный делегат в список делегатов реализации в метаданных.</summary>
      <param name="implementationDelegate">Добавляемый делегат.</param>
    </member>
    <member name="M:System.Activities.NativeActivityMetadata.AddImplementationVariable(System.Activities.Variable)">
      <summary>Добавляет указанную переменную в коллекцию переменных реализации в метаданных.</summary>
      <param name="implementationVariable">Добавляемая переменная.</param>
    </member>
    <member name="M:System.Activities.NativeActivityMetadata.AddImportedChild(System.Activities.Activity)">
      <summary>Добавляет указанное действие в список импортированных дочерних действий в метаданных.</summary>
      <param name="importedChild">Действие для добавления.</param>
    </member>
    <member name="M:System.Activities.NativeActivityMetadata.AddImportedChild(System.Activities.Activity,System.Object)">
      <summary>Добавляет указанное действие в список импортированных дочерних действий в метаданных.</summary>
      <param name="importedChild">Действие для добавления.</param>
      <param name="origin">Источник действия.</param>
    </member>
    <member name="M:System.Activities.NativeActivityMetadata.AddImportedDelegate(System.Activities.ActivityDelegate)">
      <summary>Добавляет указанный делегат в список импортированных делегатов в метаданных.</summary>
      <param name="importedDelegate">Добавляемый делегат.</param>
    </member>
    <member name="M:System.Activities.NativeActivityMetadata.AddImportedDelegate(System.Activities.ActivityDelegate,System.Object)">
      <summary>Добавляет указанный делегат в список импортированных делегатов в метаданных.</summary>
      <param name="importedDelegate">Добавляемый делегат.</param>
      <param name="origin">Источник делегата.</param>
    </member>
    <member name="M:System.Activities.NativeActivityMetadata.AddValidationError(System.Activities.Validation.ValidationError)">
      <summary>Добавляет указанную ошибку проверки в коллекцию ошибок проверки в метаданных.</summary>
      <param name="validationError">Добавляемая ошибка проверки.</param>
    </member>
    <member name="M:System.Activities.NativeActivityMetadata.AddValidationError(System.String)">
      <summary>С помощью указанного описания добавляет ошибку проверки в коллекцию ошибок проверки в метаданных.</summary>
      <param name="validationErrorMessage">Сообщение, описывающее ошибку проверки.</param>
    </member>
    <member name="M:System.Activities.NativeActivityMetadata.AddVariable(System.Activities.Variable)">
      <summary>Добавляет указанную переменную в коллекцию переменных в метаданных.</summary>
      <param name="variable">Добавляемая переменная.</param>
    </member>
    <member name="M:System.Activities.NativeActivityMetadata.AddVariable(System.Activities.Variable,System.Object)">
      <summary>Добавляет указанную переменную в коллекцию переменных в метаданных.</summary>
      <param name="variable">Добавляемая переменная.</param>
      <param name="origin">Источник переменной.</param>
    </member>
    <member name="M:System.Activities.NativeActivityMetadata.Bind(System.Activities.Argument,System.Activities.RuntimeArgument)">
      <summary>Привязывает указанный аргумент <see cref="T:System.Activities.Argument" /> к указанному <see cref="T:System.Activities.RuntimeArgument" />.</summary>
      <param name="binding">Привязываемый элемент управления <see cref="T:System.Activities.Argument" />.</param>
      <param name="argument">Привязываемый элемент управления <see cref="T:System.Activities.RuntimeArgument" />.</param>
    </member>
    <member name="P:System.Activities.NativeActivityMetadata.Environment">
      <summary>Возвращает среду <see cref="T:System.Activities.LocationReferenceEnvironment" /> аргументов, переменных, аргументов делегатов или символов действия, предоставляемых арбитром <see cref="T:System.Activities.Hosting.SymbolResolver" />.</summary>
      <returns>Среда ссылок на расположение действия аргументов, переменных, аргументов делегатов или символы, представленные <see cref="T:System.Activities.Hosting.SymbolResolver" />.</returns>
    </member>
    <member name="M:System.Activities.NativeActivityMetadata.Equals(System.Object)">
      <summary>Определяет, равен ли этот экземпляр метаданных указанному объекту.</summary>
      <param name="obj">Объект для сравнения.</param>
      <returns>Значение <see langword="true" />, если указанный объект равен данному экземпляру метаданных; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Activities.NativeActivityMetadata.GetArgumentsWithReflection">
      <summary>Возвращает коллекцию аргументов, полученных с помощью отражения.</summary>
      <returns>Коллекция аргументов.</returns>
    </member>
    <member name="M:System.Activities.NativeActivityMetadata.GetChildrenWithReflection">
      <summary>Возвращает коллекцию дочерних действий с использованием отражения.</summary>
      <returns>Коллекция дочерних действий.</returns>
    </member>
    <member name="M:System.Activities.NativeActivityMetadata.GetDelegatesWithReflection">
      <summary>Возвращает коллекцию делегатов с использованием отражения.</summary>
      <returns>Коллекция делегатов.</returns>
    </member>
    <member name="M:System.Activities.NativeActivityMetadata.GetHashCode">
      <summary>Возвращает уникальный идентификатор этого экземпляра метаданных.</summary>
      <returns>Целое число, которое служит уникальным идентификатором этого экземпляра метаданных.</returns>
    </member>
    <member name="M:System.Activities.NativeActivityMetadata.GetVariablesWithReflection">
      <summary>С помощью отражения возвращает коллекцию переменных.</summary>
      <returns>Коллекция переменных.</returns>
    </member>
    <member name="P:System.Activities.NativeActivityMetadata.HasViolations">
      <summary>Возвращает значение, указывающее наличие ошибок проверки в метаданных.</summary>
      <returns>Значение <see langword="true" />, если ошибки проверки есть; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Activities.NativeActivityMetadata.op_Equality(System.Activities.NativeActivityMetadata,System.Activities.NativeActivityMetadata)">
      <summary>Возвращает значение, указывающее, равны ли два указанных экземпляра метаданных.</summary>
      <param name="left">Первый элемент для сравнения.</param>
      <param name="right">Второй элемент для сравнения.</param>
      <returns>Значение <see langword="true" />, если два элемента равны, в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Activities.NativeActivityMetadata.op_Inequality(System.Activities.NativeActivityMetadata,System.Activities.NativeActivityMetadata)">
      <summary>Возвращает значение, показывающее неравенство двух указанных экземпляров метаданных.</summary>
      <param name="left">Первый элемент для сравнения.</param>
      <param name="right">Второй элемент для сравнения.</param>
      <returns>Значение <see langword="true" />, если две элемента не равны; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Activities.NativeActivityMetadata.RequireExtension(System.Type)">
      <summary>Указывает, что во время выполнения действию требуется расширение указанного типа.</summary>
      <param name="extensionType">Тип расширения.</param>
    </member>
    <member name="M:System.Activities.NativeActivityMetadata.RequireExtension``1">
      <summary>Указывает, что во время выполнения действию требуется расширение указанного универсального типа.</summary>
      <typeparam name="T">Тип расширения.</typeparam>
    </member>
    <member name="M:System.Activities.NativeActivityMetadata.SetArgumentsCollection(System.Collections.ObjectModel.Collection{System.Activities.RuntimeArgument})">
      <summary>Добавляет указанную коллекцию аргументов к аргументам действия.</summary>
      <param name="arguments">Добавляемые аргументы.</param>
    </member>
    <member name="M:System.Activities.NativeActivityMetadata.SetChildrenCollection(System.Collections.ObjectModel.Collection{System.Activities.Activity})">
      <summary>Добавляет указанную коллекцию в качестве дочерних действий для действия.</summary>
      <param name="children">Добавляемые действия.</param>
    </member>
    <member name="M:System.Activities.NativeActivityMetadata.SetDelegatesCollection(System.Collections.ObjectModel.Collection{System.Activities.ActivityDelegate})">
      <summary>Добавляет указанную коллекцию в качестве делегатов для действия.</summary>
      <param name="delegates">Добавляемые делегаты.</param>
    </member>
    <member name="M:System.Activities.NativeActivityMetadata.SetImplementationChildrenCollection(System.Collections.ObjectModel.Collection{System.Activities.Activity})">
      <summary>Добавляет указанную коллекцию в качестве дочерних действий реализации для действия.</summary>
      <param name="implementationChildren">Добавляемые действия.</param>
    </member>
    <member name="M:System.Activities.NativeActivityMetadata.SetImplementationDelegatesCollection(System.Collections.ObjectModel.Collection{System.Activities.ActivityDelegate})">
      <summary>Добавляет указанную коллекцию в качестве делегатов реализации для действия.</summary>
      <param name="implementationDelegates">Добавляемые делегаты.</param>
    </member>
    <member name="M:System.Activities.NativeActivityMetadata.SetImplementationVariablesCollection(System.Collections.ObjectModel.Collection{System.Activities.Variable})">
      <summary>Добавляет указанную коллекцию в качестве переменных реализации для действия.</summary>
      <param name="implementationVariables">Добавляемые делегаты.</param>
    </member>
    <member name="M:System.Activities.NativeActivityMetadata.SetImportedChildrenCollection(System.Collections.ObjectModel.Collection{System.Activities.Activity})">
      <summary>Добавляет указанную коллекцию в качестве импортированных дочерних действий данного действия.</summary>
      <param name="importedChildren">Добавляемые действия.</param>
    </member>
    <member name="M:System.Activities.NativeActivityMetadata.SetImportedDelegatesCollection(System.Collections.ObjectModel.Collection{System.Activities.ActivityDelegate})">
      <summary>Добавляет указанную коллекцию в качестве импортированных делегатов данного действия.</summary>
      <param name="importedDelegates">Добавляемые делегаты.</param>
    </member>
    <member name="M:System.Activities.NativeActivityMetadata.SetValidationErrorsCollection(System.Collections.ObjectModel.Collection{System.Activities.Validation.ValidationError})">
      <summary>Добавляет указанную коллекцию ошибок проверки в коллекцию ошибок проверки в метаданных.</summary>
      <param name="validationErrors">Добавляемые ошибки проверки.</param>
    </member>
    <member name="M:System.Activities.NativeActivityMetadata.SetVariablesCollection(System.Collections.ObjectModel.Collection{System.Activities.Variable})">
      <summary>Добавляет указанную коллекцию переменных к переменным действия.</summary>
      <param name="variables">Добавляемые переменные.</param>
    </member>
    <member name="T:System.Activities.NativeActivityTransactionContext">
      <summary>Контекст выполнения для действия <see cref="T:System.Activities.NativeActivity" />, которое передает транзакцию в среду выполнения.</summary>
    </member>
    <member name="M:System.Activities.NativeActivityTransactionContext.SetRuntimeTransaction(System.Transactions.Transaction)">
      <summary>Передает указанную транзакцию в среду выполнения.</summary>
      <param name="transaction">Транзакция.</param>
    </member>
    <member name="T:System.Activities.NoPersistH*******le">
      <summary>Управляет временем существования несохраняемого блока.</summary>
    </member>
    <member name="M:System.Activities.NoPersistH*******le.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.NoPersistH*******le" />.</summary>
    </member>
    <member name="M:System.Activities.NoPersistH*******le.Enter(System.Activities.NativeActivityContext)">
      <summary>Отмечает начало несохраняемого блока.</summary>
      <param name="context">Текущая среда выполнения.</param>
    </member>
    <member name="M:System.Activities.NoPersistH*******le.Exit(System.Activities.NativeActivityContext)">
      <summary>Отмечает конец несохраняемого блока.</summary>
      <param name="context">Текущая среда выполнения.</param>
    </member>
    <member name="T:System.Activities.OutArgument">
      <summary>Абстрактный базовый класс, представляющий конечную точку привязки, которая поддерживает поток данных из действия.</summary>
    </member>
    <member name="M:System.Activities.OutArgument.CreateReference(System.Activities.InOutArgument,System.String)">
      <summary>Создает новый аргумент <see cref="T:System.Activities.OutArgument" />, который ссылается на заданный целевой аргумент <see cref="T:System.Activities.InOutArgument" />, с использованием имени того аргумента, на который производится ссылка.</summary>
      <param name="argumentToReference">Целевой аргумент <see langword="in/out" /> для ссылки.</param>
      <param name="referencedArgumentName">Имя указанного по ссылке аргумента.</param>
      <returns>Новый аргумент <see langword="out" />, ссылающийся на заданный целевой объект <see cref="T:System.Activities.InOutArgument" />.</returns>
    </member>
    <member name="M:System.Activities.OutArgument.CreateReference(System.Activities.OutArgument,System.String)">
      <summary>Создает новый аргумент <see cref="T:System.Activities.OutArgument" />, который ссылается на заданный целевой аргумент <see cref="T:System.Activities.OutArgument" />, с использованием имени того аргумента, на который производится ссылка.</summary>
      <param name="argumentToReference">Целевой аргумент <see langword="out" /> для ссылки.</param>
      <param name="referencedArgumentName">Имя указанного по ссылке аргумента.</param>
      <returns>Новый аргумент <see langword="out" />, ссылающийся на заданный целевой объект <see cref="T:System.Activities.OutArgument" />.</returns>
    </member>
    <member name="T:System.Activities.OutArgument`1">
      <summary>Конечная точка привязки, представляющая поток данных из действия.</summary>
      <typeparam name="T">Тип данных объекта <see cref="T:System.Activities.OutArgument`1" />.</typeparam>
    </member>
    <member name="M:System.Activities.OutArgument`1.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.OutArgument`1" />, используя значения по умолчанию.</summary>
    </member>
    <member name="M:System.Activities.OutArgument`1.#ctor(System.Activities.Activity{System.Activities.Location{`0}})">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.OutArgument`1" /> с использованием указанного объекта <see cref="T:System.Activities.Activity`1" />.</summary>
      <param name="expression">Значение аргумента.</param>
    </member>
    <member name="M:System.Activities.OutArgument`1.#ctor(System.Activities.DelegateArgument)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.OutArgument`1" /> с использованием указанного объекта <see cref="T:System.Activities.DelegateArgument" />.</summary>
      <param name="delegateArgument">Значение аргумента.</param>
    </member>
    <member name="M:System.Activities.OutArgument`1.#ctor(System.Activities.Variable)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.OutArgument`1" /> с использованием указанного объекта <see cref="T:System.Activities.Variable" />.</summary>
      <param name="variable">Значение аргумента.</param>
    </member>
    <member name="M:System.Activities.OutArgument`1.#ctor(System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,`0}})">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.OutArgument`1" />, используя заданное выражение.</summary>
      <param name="expression">Значение аргумента.</param>
    </member>
    <member name="P:System.Activities.OutArgument`1.Expression">
      <summary>Возвращает объект <see cref="T:System.Activities.Activity`1" />, который представляет значение этого аргумента <see cref="T:System.Activities.OutArgument`1" />.</summary>
      <returns>Действие, представляющее значение аргумента.</returns>
    </member>
    <member name="M:System.Activities.OutArgument`1.FromDelegateArgument(System.Activities.DelegateArgument)">
      <summary>Инициализирует и возвращает новый объект <see cref="T:System.Activities.OutArgument`1" />, созданный с указанной переменной <see cref="T:System.Activities.DelegateArgument" />.</summary>
      <param name="delegateArgument">Значение аргумента.</param>
      <returns>Новый аргумент.</returns>
    </member>
    <member name="M:System.Activities.OutArgument`1.FromExpression(System.Activities.Activity{System.Activities.Location{`0}})">
      <summary>Инициализирует и возвращает новый объект <see cref="T:System.Activities.OutArgument`1" />, созданный с указанной переменной <see cref="T:System.Activities.Activity`1" />.</summary>
      <param name="expression">Значение аргумента,</param>
      <returns>Новый аргумент.</returns>
    </member>
    <member name="M:System.Activities.OutArgument`1.FromVariable(System.Activities.Variable)">
      <summary>Инициализирует и возвращает новый объект <see cref="T:System.Activities.OutArgument`1" />, созданный с указанной переменной <see cref="T:System.Activities.Variable" />.</summary>
      <param name="variable">Значение аргумента.</param>
      <returns>Новый аргумент.</returns>
    </member>
    <member name="M:System.Activities.OutArgument`1.Get(System.Activities.ActivityContext)">
      <summary>Возвращает значение аргумента <see cref="T:System.Activities.OutArgument`1" />, используя указанный контекст действия.</summary>
      <param name="context">Контекст текущего действия.</param>
      <returns>Значение аргумента.</returns>
    </member>
    <member name="M:System.Activities.OutArgument`1.GetLocation(System.Activities.ActivityContext)">
      <summary>Возвращает расположение значения для аргумента <see cref="T:System.Activities.OutArgument`1" />.</summary>
      <param name="context">Контекст действия, содержащий значение переменной.</param>
      <returns>Ссылка на расположение, в котором хранится значение аргумента.</returns>
    </member>
    <member name="M:System.Activities.OutArgument`1.op_Implicit(System.Activities.Activity{System.Activities.Location{`0}})~System.Activities.OutArgument{`0}">
      <summary>Инициализирует и возвращает новый объект <see cref="T:System.Activities.OutArgument`1" />, созданный с указанной переменной <see cref="T:System.Activities.Activity`1" />.</summary>
      <param name="expression">Значение аргумента,</param>
      <returns>Новый аргумент.</returns>
    </member>
    <member name="M:System.Activities.OutArgument`1.op_Implicit(System.Activities.DelegateArgument)~System.Activities.OutArgument{`0}">
      <summary>Инициализирует и возвращает новый объект <see cref="T:System.Activities.OutArgument`1" />, созданный с указанной переменной <see cref="T:System.Activities.DelegateArgument" />.</summary>
      <param name="delegateArgument">Значение аргумента.</param>
      <returns>Новый аргумент.</returns>
    </member>
    <member name="M:System.Activities.OutArgument`1.op_Implicit(System.Activities.Variable)~System.Activities.OutArgument{`0}">
      <summary>Инициализирует и возвращает новый объект <see cref="T:System.Activities.OutArgument`1" />, созданный с указанной переменной <see cref="T:System.Activities.Variable" />.</summary>
      <param name="variable">Значение аргумента.</param>
      <returns>Новый аргумент.</returns>
    </member>
    <member name="M:System.Activities.OutArgument`1.Set(System.Activities.ActivityContext,`0)">
      <summary>Задает значение аргумента <see cref="T:System.Activities.OutArgument`1" />, используя указанный контекст действия.</summary>
      <param name="context">Контекст текущего действия.</param>
      <param name="value">Новое значение.</param>
    </member>
    <member name="T:System.Activities.OverloadGroupAttribute">
      <summary>Предоставляет метод, указывающий, какие сочетания аргументов являются допустимыми для действия.</summary>
    </member>
    <member name="M:System.Activities.OverloadGroupAttribute.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.OverloadGroupAttribute" />.</summary>
    </member>
    <member name="M:System.Activities.OverloadGroupAttribute.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.OverloadGroupAttribute" />.</summary>
      <param name="groupName">Имя группы аргументов.</param>
    </member>
    <member name="P:System.Activities.OverloadGroupAttribute.GroupName">
      <summary>Возвращает имя объекта <see cref="T:System.Activities.OverloadGroupAttribute" />.</summary>
      <returns>Имя группы связанных аргументов.</returns>
    </member>
    <member name="P:System.Activities.OverloadGroupAttribute.TypeId">
      <summary>Возвращает уникальный идентификатор для этого атрибута.</summary>
      <returns>Уникальный идентификатор для этого атрибута.</returns>
    </member>
    <member name="T:System.Activities.PersistableIdleAction">
      <summary>Указывает действие, которое выполняется, когда рабочий процесс переходит в состояние бездействия, если разрешена сохраняемость.</summary>
    </member>
    <member name="F:System.Activities.PersistableIdleAction.None">
      <summary>Указывает, что действия не выполняются.</summary>
    </member>
    <member name="F:System.Activities.PersistableIdleAction.Persist">
      <summary>Указывает, что приложение <see cref="T:System.Activities.WorkflowApplication" /> должно сохранить рабочий процесс.</summary>
    </member>
    <member name="F:System.Activities.PersistableIdleAction.Unload">
      <summary>Указывает, что приложение <see cref="T:System.Activities.WorkflowApplication" /> должно сохранить и выгрузить рабочий процесс.</summary>
    </member>
    <member name="T:System.Activities.Persistence.PersistenceIOParticipant">
      <summary>Класс, производный от класса <see cref="T:System.Activities.Persistence.PersistenceParticipant" />, с методами, выполняющими операции ввода и вывода помимо сохранения и загрузки экземпляров рабочего процесса с помощью процесса сохраняемости.</summary>
    </member>
    <member name="M:System.Activities.Persistence.PersistenceIOParticipant.#ctor(System.Boolean,System.Boolean)">
      <summary>Инициализирует экземпляр класса <see cref="T:System.Activities.Persistence.PersistenceIOParticipant" />.</summary>
      <param name="isSaveTransactionRequired">Значение <see langword="true" />, если для операции сохранения необходима транзакция. Если при создании объекта <see cref="T:System.Activities.Persistence.PersistenceIOParticipant" /> для этого параметра было задано значение <see langword="true" />, то при вызове метода BeginOnSave обязательно будет задан объект Transaction.Current. Транзакция совместно осуществляется поставщиком сохраняемости, всеми расширениями PersistenceIOParticipant и потенциально другими участниками транзакции.</param>
      <param name="isLoadTransactionRequired">Значение <see langword="true" />, если для операции загрузки необходима транзакция. Если при создании объекта <see cref="T:System.Activities.Persistence.PersistenceIOParticipant" /> для этого параметра было установлено значение <see langword="true" />, то при вызове метода BeginOnLoad обязательно будет задан объект Transaction.Current. Транзакция совместно осуществляется поставщиком сохраняемости, всеми расширениями PersistenceIOParticipant и потенциально другими участниками транзакции.</param>
    </member>
    <member name="M:System.Activities.Persistence.PersistenceIOParticipant.Abort">
      <summary>Прерывает выполнение отложенной операции ввода-вывода (загрузки или сохранения).</summary>
    </member>
    <member name="M:System.Activities.Persistence.PersistenceIOParticipant.BeginOnLoad(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object},System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Начинает асинхронную операцию для загрузки дополнительного состояния совместно с загрузкой экземпляра из хранилища экземпляров.</summary>
      <param name="readWriteValues">Словарь значений, доступных для чтения и записи, загружаемых поставщиком сохраняемости. Соответствует набору значений для чтения и записи, передаваемых методу BeginOnSave в последнем сеансе сохранения для этого экземпляра.</param>
      <param name="timeout">Период времени, в течение которого операция должна быть завершена без превышения времени ожидания.</param>
      <param name="callback">Делегат асинхронного обратного вызова, принимающий уведомление о завершении асинхронной операции загрузки.</param>
      <param name="state">Сведения о состоянии, связанные с асинхронной операцией.</param>
      <returns>Состояние асинхронной операции.</returns>
    </member>
    <member name="M:System.Activities.Persistence.PersistenceIOParticipant.BeginOnSave(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object},System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object},System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Начинает асинхронную операцию для сохранения дополнительного состояния совместно с сохранением экземпляра в хранилище экземпляров.</summary>
      <param name="readWriteValues">Словарь значений, доступных для чтения и записи, сбор которых выполняется на этапах CollectValues и MapValues.</param>
      <param name="writeOnlyValues">Словарь значений, доступных только на запись, сбор которых выполняется на этапах CollectValues и MapValues.</param>
      <param name="timeout">Период времени, в течение которого операция должна быть завершена без превышения времени ожидания.</param>
      <param name="callback">Делегат асинхронного обратного вызова, принимающий уведомление о завершении асинхронной операции.</param>
      <param name="state">Сведения о состоянии, связанные с асинхронной операцией.</param>
      <returns>Состояние асинхронной операции.</returns>
    </member>
    <member name="M:System.Activities.Persistence.PersistenceIOParticipant.EndOnLoad(System.IAsyncResult)">
      <summary>Завершает асинхронную операцию загрузки.</summary>
      <param name="result">Асинхронный результат, возвращаемый вызовом метода <see cref="M:System.Activities.Persistence.PersistenceIOParticipant.BeginOnSave(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object},System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object},System.TimeSpan,System.AsyncCallback,System.Object)" />.</param>
    </member>
    <member name="M:System.Activities.Persistence.PersistenceIOParticipant.EndOnSave(System.IAsyncResult)">
      <summary>Завершает асинхронную операцию сохранения.</summary>
      <param name="result">Асинхронный результат, возвращаемый вызовом метода <see cref="M:System.Activities.Persistence.PersistenceIOParticipant.BeginOnSave(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object},System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object},System.TimeSpan,System.AsyncCallback,System.Object)" />.</param>
    </member>
    <member name="T:System.Activities.Persistence.PersistenceParticipant">
      <summary>Этот класс позволяет использовать объекты <see cref="T:System.Activities.WorkflowApplication" /> и <see cref="T:System.ServiceModel.WorkflowServiceHost" /> в процессе сохранения. Участник сохраняемости, являющийся производным от класса <see cref="T:System.Activities.Persistence.PersistenceParticipant" /> или класса <see cref="T:System.Activities.Persistence.PersistenceIOParticipant" /> (производный класс от класса <see cref="T:System.Activities.Persistence.PersistenceParticipant" />), реализует абстрактные методы, а затем добавляет экземпляр класса как расширение экземпляра рабочего процесса. Объекты <see cref="T:System.Activities.WorkflowApplication" /> и <see cref="T:System.ServiceModel.WorkflowServiceHost" /> выполняют поиск таких расширений при сохранении экземпляра и в соответствующее время вызывают соответствующие методы.</summary>
    </member>
    <member name="M:System.Activities.Persistence.PersistenceParticipant.#ctor">
      <summary>Инициализирует экземпляр класса <see cref="T:System.Activities.Persistence.PersistenceParticipant" />.</summary>
    </member>
    <member name="M:System.Activities.Persistence.PersistenceParticipant.CollectValues(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object}@,System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object}@)">
      <summary>Узел вызывает этот метод для нестандартного участника сохраняемости, собирающего значения, доступные для чтения и записи, и значения, доступные только на запись, которые необходимо сохранить.</summary>
      <param name="readWriteValues">Сохраняемые значения для чтения и записи.</param>
      <param name="writeOnlyValues">Сохраняемые значения, доступные только на запись.</param>
    </member>
    <member name="M:System.Activities.Persistence.PersistenceParticipant.MapValues(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object},System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object})">
      <summary>Узел вызывает этот метод после завершения сбора значений на первом этапе. Узел перенаправляет два словаря значений, доступных только для чтения, собранных от всех участников сохраняемости на первом этапе (этапе CollectValues), этому методу для сопоставления. Узел добавляет значения из словаря, возвращаемого этим методом, в коллекцию значений, доступных только на запись.</summary>
      <param name="readWriteValues">Сохраняемые значения для чтения и записи.</param>
      <param name="writeOnlyValues">Сохраняемые значения, доступные только на запись.</param>
      <returns>Словарь, содержащий дополнительные значения, доступные только на запись, которые необходимо сохранить.</returns>
    </member>
    <member name="M:System.Activities.Persistence.PersistenceParticipant.PublishValues(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object})">
      <summary>Узел вызывает этот метод и передает все загруженные значения из коллекции <see cref="P:System.Activities.DurableInstancing.SaveWorkflowComm*******.InstanceData" /> (заполненной <see cref="T:System.Activities.DurableInstancing.LoadWorkflowComm*******" /> или <see cref="T:System.Activities.DurableInstancing.LoadWorkflowByInstanceKeyComm*******" />) в качестве параметра словаря.</summary>
      <param name="readWriteValues">Значения, доступные для чтения и записи, загруженные из хранилища сохраняемости. Этот словарь соответствует словарю значений, доступных для чтения и записи, сохраняемых в последнем сеансе сохраняемости.</param>
    </member>
    <member name="T:System.Activities.RegistrationContext">
      <summary>Предоставляет доступ к текущей коллекции свойств выполнения рабочего процесса.</summary>
    </member>
    <member name="M:System.Activities.RegistrationContext.FindProperty(System.String)">
      <summary>Возвращает свойство выполнения рабочего процесса с указанным именем.</summary>
      <param name="name">Имя свойства выполнения рабочего процесса.</param>
      <returns>Свойство выполнения рабочего процесса.</returns>
    </member>
    <member name="T:System.Activities.RequiredArgumentAttribute">
      <summary>Элемент приложения, к которому допустимо применять аргумент.</summary>
    </member>
    <member name="M:System.Activities.RequiredArgumentAttribute.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.RequiredArgumentAttribute" />.</summary>
    </member>
    <member name="P:System.Activities.RequiredArgumentAttribute.TypeId">
      <summary>В случае реализации в производном классе возвращает уникальный идентификатор для этого атрибута <see cref="T:System.Attribute" />.</summary>
      <returns>Возвращает <see cref="T:System.Object" />.</returns>
    </member>
    <member name="T:System.Activities.RuntimeArgument">
      <summary>Описывает характеристики аргумента действия для среды выполнения.</summary>
    </member>
    <member name="M:System.Activities.RuntimeArgument.#ctor(System.String,System.Type,System.Activities.ArgumentDirection)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.RuntimeArgument" /> с использованием указанного имени, типа данных и направления аргумента.</summary>
      <param name="name">Имя объекта <see cref="T:System.Activities.RuntimeArgument" />.</param>
      <param name="argumentType">Тип атрибута <see cref="T:System.Activities.RuntimeArgument" />.</param>
      <param name="direction">Направление потока данных через аргумент.</param>
    </member>
    <member name="M:System.Activities.RuntimeArgument.#ctor(System.String,System.Type,System.Activities.ArgumentDirection,System.Boolean)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.RuntimeArgument" /> с использованием имени, типа данных, направления аргумента и значения, которое показывает, должен ли аргумент <see cref="T:System.Activities.RuntimeArgument" /> привязываться к значению.</summary>
      <param name="name">Имя объекта <see cref="T:System.Activities.RuntimeArgument" />.</param>
      <param name="argumentType">Тип данных объекта <see cref="T:System.Activities.RuntimeArgument" />.</param>
      <param name="direction">Направление потока данных через аргумент.</param>
      <param name="isRequired">Значение <see langword="true" /> для указания того, что <see cref="T:System.Activities.RuntimeArgument" /> требуется для привязки к значению; в противном случае — значение <see langword="false" />.</param>
    </member>
    <member name="M:System.Activities.RuntimeArgument.#ctor(System.String,System.Type,System.Activities.ArgumentDirection,System.Boolean,System.Collections.Generic.List{System.String})">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.RuntimeArgument" /> с именем, типом данных, направлением аргумента, значением, которое показывает, должен ли аргумент <see cref="T:System.Activities.RuntimeArgument" /> привязываться к значению, и списком имен групп перегруженных вариантов.</summary>
      <param name="name">Имя объекта <see cref="T:System.Activities.RuntimeArgument" />.</param>
      <param name="argumentType">Тип данных объекта <see cref="T:System.Activities.RuntimeArgument" />.</param>
      <param name="direction">Направление потока данных через аргумент.</param>
      <param name="isRequired">Значение <see langword="true" /> для указания того, что <see cref="T:System.Activities.RuntimeArgument" /> требуется для привязки к значению; в противном случае — значение <see langword="false" />.</param>
      <param name="overloadGroupNames">Имена групп перегруженных вариантов, применимых к этому <see cref="T:System.Activities.RuntimeArgument" />.</param>
    </member>
    <member name="M:System.Activities.RuntimeArgument.#ctor(System.String,System.Type,System.Activities.ArgumentDirection,System.Collections.Generic.List{System.String})">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.RuntimeArgument" /> с использованием имени, типа данных, направления аргумента и списка имен групп перегруженных вариантов.</summary>
      <param name="name">Имя объекта <see cref="T:System.Activities.RuntimeArgument" />.</param>
      <param name="argumentType">Тип данных объекта <see cref="T:System.Activities.RuntimeArgument" />.</param>
      <param name="direction">Направление потока данных через аргумент.</param>
      <param name="overloadGroupNames">Группы перегруженных вариантов, применимые к этому <see cref="T:System.Activities.RuntimeArgument" />.</param>
    </member>
    <member name="P:System.Activities.RuntimeArgument.Direction">
      <summary>Возвращает направление потока данных через этот <see cref="T:System.Activities.RuntimeArgument" />.</summary>
      <returns>Направление потока данных через аргумент.</returns>
    </member>
    <member name="M:System.Activities.RuntimeArgument.Get(System.Activities.ActivityContext)">
      <summary>Возвращает значение аргумента <see cref="T:System.Activities.RuntimeArgument" />, используя указанный контекст действия.</summary>
      <param name="context">Контекст текущего действия.</param>
      <returns>Значение <see cref="T:System.Activities.RuntimeArgument" />.</returns>
    </member>
    <member name="M:System.Activities.RuntimeArgument.Get``1(System.Activities.ActivityContext)">
      <summary>Возвращает строго типизированное значение аргумента <see cref="T:System.Activities.RuntimeArgument" /> с использованием указанного контекста действия.</summary>
      <param name="context">Контекст текущего действия.</param>
      <typeparam name="T">Тип возвращаемого значения.</typeparam>
      <returns>Значение <see cref="T:System.Activities.RuntimeArgument" />.</returns>
    </member>
    <member name="M:System.Activities.RuntimeArgument.GetLocation(System.Activities.ActivityContext)">
      <summary>Возвращает расположение <see cref="T:System.Activities.Location" /> для этого аргумента <see cref="T:System.Activities.RuntimeArgument" />.</summary>
      <param name="context">Расположение аргумента.</param>
      <returns>Расположение объекта <see cref="T:System.Activities.RuntimeArgument" />.</returns>
    </member>
    <member name="P:System.Activities.RuntimeArgument.IsRequired">
      <summary>Возвращает значение, которое показывает, должен ли аргумент <see cref="T:System.Activities.RuntimeArgument" /> привязываться к значению.</summary>
      <returns>Значение <see langword="true" />, если <see cref="T:System.Activities.RuntimeArgument" /> должен привязываться к значению; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Activities.RuntimeArgument.OverloadGroupNames">
      <summary>Возвращает список групп перегруженных вариантов, которым принадлежит этот аргумент <see cref="T:System.Activities.RuntimeArgument" />.</summary>
      <returns>Список имен групп перегруженных вариантов.</returns>
    </member>
    <member name="M:System.Activities.RuntimeArgument.Set(System.Activities.ActivityContext,System.Object)">
      <summary>Задает значение аргумента <see cref="T:System.Activities.RuntimeArgument" />.</summary>
      <param name="context">Контекст текущего действия.</param>
      <param name="value">Новое значение для <see cref="T:System.Activities.RuntimeArgument" />.</param>
    </member>
    <member name="T:System.Activities.RuntimeDelegateArgument">
      <summary>Описывает характеристики <see cref="T:System.Activities.DelegateArgument" /> для среды выполнения.</summary>
    </member>
    <member name="M:System.Activities.RuntimeDelegateArgument.#ctor(System.String,System.Type,System.Activities.ArgumentDirection,System.Activities.DelegateArgument)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.RuntimeDelegateArgument" /> с использованием указанного имени, типа данных, направления аргумента и объекта <see cref="T:System.Activities.DelegateArgument" />.</summary>
      <param name="name">Имя <see cref="T:System.Activities.RuntimeDelegateArgument" />.</param>
      <param name="type">Тип данных объекта <see cref="T:System.Activities.RuntimeDelegateArgument" />.</param>
      <param name="direction">Одно из значений перечисления, указывающее направление потока данных через аргумент.</param>
      <param name="boundArgument">Аргумент делегата, представленный этим объектом <see cref="T:System.Activities.RuntimeDelegateArgument" />.</param>
    </member>
    <member name="P:System.Activities.RuntimeDelegateArgument.BoundArgument">
      <summary>Возвращает объект <see cref="T:System.Activities.DelegateArgument" />, представленный этим объектом <see cref="T:System.Activities.RuntimeDelegateArgument" />.</summary>
      <returns>Привязанный аргумент, представленный этим объектом <see cref="T:System.Activities.RuntimeDelegateArgument" />.</returns>
    </member>
    <member name="P:System.Activities.RuntimeDelegateArgument.Direction">
      <summary>Возвращает направление потока данных через <see cref="T:System.Activities.RuntimeDelegateArgument" />.</summary>
      <returns>Одно из значений перечисления, указывающее направление потока данных через аргумент.</returns>
    </member>
    <member name="P:System.Activities.RuntimeDelegateArgument.Name">
      <summary>Возвращает имя объекта <see cref="T:System.Activities.RuntimeDelegateArgument" />.</summary>
      <returns>Имя <see cref="T:System.Activities.RuntimeDelegateArgument" />.</returns>
    </member>
    <member name="P:System.Activities.RuntimeDelegateArgument.Type">
      <summary>Возвращает тип данных <see cref="T:System.Activities.RuntimeDelegateArgument" />.</summary>
      <returns>Тип данных объекта <see cref="T:System.Activities.RuntimeDelegateArgument" />.</returns>
    </member>
    <member name="T:System.Activities.RuntimeTransactionH*******le">
      <summary>Предоставляет доступ к транзакции времени выполнения в экземпляре рабочего процесса.</summary>
    </member>
    <member name="M:System.Activities.RuntimeTransactionH*******le.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.RuntimeTransactionH*******le" />.</summary>
    </member>
    <member name="M:System.Activities.RuntimeTransactionH*******le.#ctor(System.Transactions.Transaction)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.RuntimeTransactionH*******le" />, используя указанную корневую транзакцию.</summary>
      <param name="rootTransaction">Корневая транзакция.</param>
    </member>
    <member name="P:System.Activities.RuntimeTransactionH*******le.AbortInstanceOnTransactionFailure">
      <summary>Возвращает или задает значение, которое показывает, должен ли прерываться экземпляр рабочего процесса, если происходит сбой транзакции.</summary>
      <returns>Значение <see langword="true" />, если экземпляр рабочего процесса должен прерываться, если происходит сбой транзакции; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Activities.RuntimeTransactionH*******le.CompleteTransaction(System.Activities.NativeActivityContext)">
      <summary>Выполняет текущую транзакцию времени выполнения.</summary>
      <param name="context">Текущая среда выполнения.</param>
    </member>
    <member name="M:System.Activities.RuntimeTransactionH*******le.CompleteTransaction(System.Activities.NativeActivityContext,System.Activities.BookmarkCallback)">
      <summary>Завершает текущую транзакцию времени выполнения и планирует обратный вызов закладки после завершения закладки.</summary>
      <param name="context">Текущая среда выполнения.</param>
      <param name="callback">Обратный вызов закладки, который должен выполняться после завершения транзакции.</param>
    </member>
    <member name="M:System.Activities.RuntimeTransactionH*******le.GetCurrentTransaction(System.Activities.AsyncCodeActivityContext)">
      <summary>Возвращает ссылку на текущую транзакцию времени выполнения.</summary>
      <param name="context">Текущая среда выполнения.</param>
      <returns>Текущая транзакция.</returns>
    </member>
    <member name="M:System.Activities.RuntimeTransactionH*******le.GetCurrentTransaction(System.Activities.CodeActivityContext)">
      <summary>Возвращает ссылку на текущую транзакцию времени выполнения.</summary>
      <param name="context">Текущая среда выполнения.</param>
      <returns>Текущая транзакция.</returns>
    </member>
    <member name="M:System.Activities.RuntimeTransactionH*******le.GetCurrentTransaction(System.Activities.NativeActivityContext)">
      <summary>Возвращает ссылку на текущую транзакцию времени выполнения.</summary>
      <param name="context">Текущая среда выполнения.</param>
      <returns>Текущая транзакция времени выполнения.</returns>
    </member>
    <member name="M:System.Activities.RuntimeTransactionH*******le.RequestTransactionContext(System.Activities.NativeActivityContext,System.Action{System.Activities.NativeActivityTransactionContext,System.Object},System.Object)">
      <summary>Запускает создание контекста <see cref="T:System.Activities.NativeActivityTransactionContext" /> для использования с новой транзакцией.</summary>
      <param name="context">Текущая среда выполнения.</param>
      <param name="callback">Метод, вызываемый при создании <see cref="T:System.Activities.NativeActivityTransactionContext" />.</param>
      <param name="state">Необязательное, предоставляемое пользователем состояние, содержащее сведения о запросе.</param>
    </member>
    <member name="M:System.Activities.RuntimeTransactionH*******le.RequireTransactionContext(System.Activities.NativeActivityContext,System.Action{System.Activities.NativeActivityTransactionContext,System.Object},System.Object)">
      <summary>Запускает создание контекста <see cref="T:System.Activities.NativeActivityTransactionContext" /> для использования с существующей транзакцией.</summary>
      <param name="context">Текущая среда выполнения.</param>
      <param name="callback">Метод, вызываемый при создании <see cref="T:System.Activities.NativeActivityTransactionContext" />.</param>
      <param name="state">Необязательное, предоставляемое пользователем состояние, содержащее сведения о запросе.</param>
    </member>
    <member name="P:System.Activities.RuntimeTransactionH*******le.SuppressTransaction">
      <summary>Возвращает или задает значение, которое показывает, подавляется ли эта транзакция времени выполнения.</summary>
      <returns>Значение <see langword="true" />, если транзакция времени выполнения подавляется; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Activities.RuntimeTransactionH*******le.System#Activities#IExecutionProperty#CleanupWorkflowThread">
      <summary>Описание этого члена см. в разделе <see cref="M:System.Activities.IExecutionProperty.CleanupWorkflowThread" />.</summary>
    </member>
    <member name="M:System.Activities.RuntimeTransactionH*******le.System#Activities#IExecutionProperty#SetupWorkflowThread">
      <summary>Описание этого члена см. в разделе <see cref="M:System.Activities.IExecutionProperty.SetupWorkflowThread" />.</summary>
    </member>
    <member name="M:System.Activities.RuntimeTransactionH*******le.System#Activities#IPropertyRegistrationCallback#Register(System.Activities.RegistrationContext)">
      <summary>Описание этого члена см. в разделе <see cref="M:System.Activities.IPropertyRegistrationCallback.Register(System.Activities.RegistrationContext)" />.</summary>
      <param name="context">Описание этого параметра см. в разделе <see cref="M:System.Activities.IPropertyRegistrationCallback.Register(System.Activities.RegistrationContext)" />.</param>
    </member>
    <member name="M:System.Activities.RuntimeTransactionH*******le.System#Activities#IPropertyRegistrationCallback#Unregister(System.Activities.RegistrationContext)">
      <summary>Описание этого члена см. в разделе <see cref="M:System.Activities.IPropertyRegistrationCallback.Unregister(System.Activities.RegistrationContext)" />.</summary>
      <param name="context">Описание этого параметра см. в разделе <see cref="M:System.Activities.IPropertyRegistrationCallback.Unregister(System.Activities.RegistrationContext)" />.</param>
    </member>
    <member name="T:System.Activities.Statements.AddToCollection`1">
      <summary>Добавляет элемент в указанную коллекцию.</summary>
      <typeparam name="T">Тип элементов указанной коллекции.</typeparam>
    </member>
    <member name="M:System.Activities.Statements.AddToCollection`1.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.Statements.AddToCollection`1" />.</summary>
    </member>
    <member name="P:System.Activities.Statements.AddToCollection`1.Collection">
      <summary>Коллекция, которая получает новый элемент.</summary>
      <returns>Коллекция.</returns>
    </member>
    <member name="P:System.Activities.Statements.AddToCollection`1.Item">
      <summary>Элемент для добавления в указанную коллекцию.</summary>
      <returns>Элемент.</returns>
    </member>
    <member name="T:System.Activities.Statements.Assign">
      <summary>Задает значения объекта <see cref="T:System.Activities.Argument" /> из рабочего процесса.</summary>
    </member>
    <member name="M:System.Activities.Statements.Assign.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.Statements.Assign" />.</summary>
    </member>
    <member name="P:System.Activities.Statements.Assign.To">
      <summary>Указывает аргумент <see cref="T:System.Activities.Argument" />, которому действие назначает значение <see cref="P:System.Activities.Statements.Assign.Value" />.</summary>
      <returns>Указанный <see cref="T:System.Activities.Argument" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.Assign.Value">
      <summary>Указывает присваиваемое значение.</summary>
      <returns>Присваиваемое значение.</returns>
    </member>
    <member name="T:System.Activities.Statements.Assign`1">
      <summary>Действие <see cref="T:System.Activities.Statements.Assign" />, которое используется для установки значений <see cref="T:System.Activities.Argument" /> из рабочего процесса.</summary>
      <typeparam name="T">Тип присвоенного значения.</typeparam>
    </member>
    <member name="M:System.Activities.Statements.Assign`1.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.Statements.Assign`1" />.</summary>
    </member>
    <member name="P:System.Activities.Statements.Assign`1.To">
      <summary>Указывает аргумент <see cref="T:System.Activities.Argument" />, которому действие назначает значение <see cref="P:System.Activities.Statements.Assign.Value" />.</summary>
      <returns>Указанный <see cref="T:System.Activities.Argument" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.Assign`1.Value">
      <summary>Указывает присваиваемое значение.</summary>
      <returns>Присваиваемое значение.</returns>
    </member>
    <member name="T:System.Activities.Statements.CancellationScope">
      <summary>Связывает логику отмены в виде объекта <see cref="T:System.Activities.Activity" /> с главным путем выполнения, который также выражен в виде объекта <see cref="T:System.Activities.Activity" />.</summary>
    </member>
    <member name="M:System.Activities.Statements.CancellationScope.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.Statements.CancellationScope" />.</summary>
    </member>
    <member name="P:System.Activities.Statements.CancellationScope.Body">
      <summary>Возвращает объект <see cref="T:System.Activities.Activity" />, содержащийся в объекте <see cref="T:System.Activities.Statements.CancellationScope" />, который представляет главный путь выполнения.</summary>
      <returns>Главный путь выполнения.</returns>
    </member>
    <member name="P:System.Activities.Statements.CancellationScope.CancellationH*******ler">
      <summary>Объект <see cref="T:System.Activities.Activity" />, который выполняется в случае отмены события.</summary>
      <returns>Обработчик отмены.</returns>
    </member>
    <member name="P:System.Activities.Statements.CancellationScope.Variables">
      <summary>Возвращает коллекцию объектов <see cref="T:System.Activities.Activity" />, связанных с объектом <see cref="T:System.Activities.Statements.CancellationScope" />.</summary>
      <returns>Коллекция объектов <see cref="T:System.Activities.Activity" />, связанных с объектом <see cref="T:System.Activities.Statements.CancellationScope" />.</returns>
    </member>
    <member name="T:System.Activities.Statements.Catch">
      <summary>Содержит действия, которые выполняются после вызова исключения в соответствующем блоке <see langword="Try" /> действия <see cref="P:System.Activities.Statements.TryCatch.Finally" />.</summary>
    </member>
    <member name="P:System.Activities.Statements.Catch.ExceptionType">
      <summary>Тип исключения, обрабатываемого блоком <see cref="T:System.Activities.Statements.Catch" />.</summary>
      <returns>Тип исключения.</returns>
    </member>
    <member name="T:System.Activities.Statements.Catch`1">
      <summary>Содержит действия, которые выполняются после вызова исключения в соответствующем блоке Try действия <see cref="P:System.Activities.Statements.TryCatch.Finally" />.</summary>
      <typeparam name="TException">Тип исключения, обрабатываемого блоком <see cref="T:System.Activities.Statements.Catch`1" />.</typeparam>
    </member>
    <member name="M:System.Activities.Statements.Catch`1.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.Statements.Catch`1" />.</summary>
    </member>
    <member name="P:System.Activities.Statements.Catch`1.Action">
      <summary>Обработчик для перехваченного исключения.</summary>
      <returns>Операция действия.</returns>
    </member>
    <member name="P:System.Activities.Statements.Catch`1.ExceptionType">
      <summary>Тип исключения, обрабатываемого блоком <see cref="T:System.Activities.Statements.Catch" />.</summary>
      <returns>Тип исключения.</returns>
    </member>
    <member name="T:System.Activities.Statements.ClearCollection`1">
      <summary>Очищает указанную коллекцию всех элементов.</summary>
      <typeparam name="T">Тип элементов в параметре <see cref="P:System.Activities.Statements.ClearCollection`1.Collection" />.</typeparam>
    </member>
    <member name="M:System.Activities.Statements.ClearCollection`1.#ctor">
      <summary>Создает новый экземпляр класса <see cref="M:System.Activities.Statements.ClearCollection`1.#ctor" />.</summary>
    </member>
    <member name="P:System.Activities.Statements.ClearCollection`1.Collection">
      <summary>Коллекция, содержимое которой очищается.</summary>
      <returns>Коллекция.</returns>
    </member>
    <member name="T:System.Activities.Statements.CompensableActivity">
      <summary>Действие, которое поддерживает компенсацию своих дочерних действий.</summary>
    </member>
    <member name="M:System.Activities.Statements.CompensableActivity.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Statements.CompensableActivity" />.</summary>
    </member>
    <member name="P:System.Activities.Statements.CompensableActivity.Body">
      <summary>Возвращает или задает действие, запланированное, когда выполняется <see cref="T:System.Activities.Statements.CompensableActivity" />.</summary>
      <returns>Действие, запланированное, когда выполняется <see cref="T:System.Activities.Statements.CompensableActivity" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.CompensableActivity.CancellationH*******ler">
      <summary>Возвращает или задает действие, запланированное в случае отмены действия.</summary>
      <returns>Действие, запланированное при отмене действия.</returns>
    </member>
    <member name="P:System.Activities.Statements.CompensableActivity.CompensationH*******ler">
      <summary>Возвращает или задает действие, запланированное при выполнении компенсации для объекта <see cref="T:System.Activities.Statements.CompensableActivity" />.</summary>
      <returns>Действие, запланированное при выполнении компенсации для объекта <see cref="T:System.Activities.Statements.CompensableActivity" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.CompensableActivity.ConfirmationH*******ler">
      <summary>Возвращает или задает действие, запланированное при выполнении подтверждения для этого объекта <see cref="T:System.Activities.Statements.CompensableActivity" />.</summary>
      <returns>Действие, запланированное при выполнении подтверждения для этого объекта <see cref="T:System.Activities.Statements.CompensableActivity" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.CompensableActivity.Variables">
      <summary>Возвращает коллекцию объектов <see cref="T:System.Activities.Variable" /> для данного экземпляра <see cref="T:System.Activities.Statements.CompensableActivity" />.</summary>
      <returns>Коллекция объектов <see cref="T:System.Activities.Variable" /> для данного экземпляра <see cref="T:System.Activities.Statements.CompensableActivity" />.</returns>
    </member>
    <member name="T:System.Activities.Statements.Compensate">
      <summary>Действие используется для явного вызова обработчика компенсации объекта <see cref="T:System.Activities.Statements.CompensableActivity" />.</summary>
    </member>
    <member name="M:System.Activities.Statements.Compensate.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Statements.Compensate" />.</summary>
    </member>
    <member name="P:System.Activities.Statements.Compensate.Target">
      <summary>Возвращает или задает <see cref="T:System.Activities.InArgument`1" />, где содержится <see cref="T:System.Activities.Statements.CompensationToken" /> для данного действия <see cref="T:System.Activities.Statements.Compensate" />.</summary>
      <returns>Объект <see cref="T:System.Activities.InArgument`1" />, который содержит объект <see cref="T:System.Activities.Statements.CompensationToken" /> для этого объекта <see cref="T:System.Activities.Statements.Compensate" />.</returns>
    </member>
    <member name="T:System.Activities.Statements.CompensationExtension">
      <summary>Представляет расширение, которое соединяется с действиями компенсации и сохраняет состояние экземпляра, относящееся к компенсации.</summary>
    </member>
    <member name="M:System.Activities.Statements.CompensationExtension.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Statements.CompensationExtension" />.</summary>
    </member>
    <member name="M:System.Activities.Statements.CompensationExtension.CollectValues(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object}@,System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object}@)">
      <summary>Вызывается ведущим приложением для сбора значений для чтения и записи и значений только для чтения, связанных с компенсацией, которую требуется сохранить.</summary>
      <param name="readWriteValues">Сохраняемые значения для чтения и записи.</param>
      <param name="writeOnlyValues">Сохраняемые значения, доступные только на запись.</param>
    </member>
    <member name="M:System.Activities.Statements.CompensationExtension.PublishValues(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object})">
      <summary>Вызывается ведущим приложением для передачи всех загруженных значений, связанных с компенсацией, которые участвовали в последней операции сохранения.</summary>
      <param name="readWriteValues">Значения, доступные для чтения и записи, загруженные из хранилища сохраняемости.</param>
    </member>
    <member name="M:System.Activities.Statements.CompensationExtension.System#Activities#Hosting#IWorkflowInstanceExtension#GetAdditionalExtensions">
      <summary>Возвращает дополнительные расширения для действий компенсации.</summary>
      <returns>Коллекция дополнительных расширений рабочего процесса.</returns>
    </member>
    <member name="M:System.Activities.Statements.CompensationExtension.System#Activities#Hosting#IWorkflowInstanceExtension#SetInstance(System.Activities.Hosting.WorkflowInstanceProxy)">
      <summary>Задает дополнительные расширения для действий компенсации.</summary>
      <param name="instance">Задаваемый целевой экземпляр рабочего процесса.</param>
    </member>
    <member name="T:System.Activities.Statements.CompensationToken">
      <summary>Предоставляет средства для явного подтверждения или компенсации объекта <see cref="T:System.Activities.Statements.CompensableActivity" /> сразу после того, как свойство <see cref="P:System.Activities.Statements.CompensableActivity.Body" /> объекта <see cref="T:System.Activities.Statements.CompensableActivity" /> завершается успешно.</summary>
    </member>
    <member name="T:System.Activities.Statements.Confirm">
      <summary>Действие используется для явного вызова обработчика подтверждения объекта <see cref="T:System.Activities.Statements.CompensableActivity" />.</summary>
    </member>
    <member name="M:System.Activities.Statements.Confirm.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Statements.Confirm" />.</summary>
    </member>
    <member name="P:System.Activities.Statements.Confirm.Target">
      <summary>Возвращает или задает <see cref="T:System.Activities.InArgument`1" />, где содержится <see cref="T:System.Activities.Statements.CompensationToken" /> для данного действия <see cref="T:System.Activities.Statements.Confirm" />.</summary>
      <returns>Объект <see cref="T:System.Activities.InArgument`1" />, в котором содержится объект <see cref="T:System.Activities.Statements.CompensationToken" /> для данного действия <see cref="T:System.Activities.Statements.Confirm" />.</returns>
    </member>
    <member name="T:System.Activities.Statements.CreateBookmarkScope">
      <summary>Создает буфер <see cref="T:System.Activities.BookmarkScope" />.</summary>
    </member>
    <member name="M:System.Activities.Statements.CreateBookmarkScope.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Statements.CreateBookmarkScope" />.</summary>
    </member>
    <member name="T:System.Activities.Statements.Delay">
      <summary>Создает таймер с заданной длительностью с помощью объекта <see cref="T:System.Activities.Statements.TimerExtension" />.</summary>
    </member>
    <member name="M:System.Activities.Statements.Delay.#ctor">
      <summary>Создает новый экземпляр действия <see cref="T:System.Activities.Statements.Delay" />.</summary>
    </member>
    <member name="P:System.Activities.Statements.Delay.Duration">
      <summary>Длительность таймера, который создает действие <see cref="T:System.Activities.Statements.Delay" />. Если длительность равна <see cref="F:System.TimeSpan.MaxValue" />, то задержка будет бесконечной.</summary>
      <returns>Длительность таймера.</returns>
    </member>
    <member name="T:System.Activities.Statements.DeleteBookmarkScope">
      <summary>Удаляет объект <see cref="T:System.Activities.BookmarkScope" />, на который ссылается свойство <see cref="P:System.Activities.Statements.DeleteBookmarkScope.Scope" />.</summary>
    </member>
    <member name="M:System.Activities.Statements.DeleteBookmarkScope.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Statements.DeleteBookmarkScope" />.</summary>
    </member>
    <member name="P:System.Activities.Statements.DeleteBookmarkScope.Scope">
      <summary>Возвращает или задает связанный объект <see cref="T:System.Activities.BookmarkScope" />.</summary>
      <returns>Сопоставленный элемент управления <see cref="T:System.Activities.BookmarkScope" />.</returns>
    </member>
    <member name="T:System.Activities.Statements.DoWhile">
      <summary>Циклическое действие, которое выполняет содержащиеся действия хотя бы один раз, пока условие не примет значение false.</summary>
    </member>
    <member name="M:System.Activities.Statements.DoWhile.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.Statements.DoWhile" />.</summary>
    </member>
    <member name="M:System.Activities.Statements.DoWhile.#ctor(System.Activities.Activity{System.Boolean})">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.Statements.DoWhile" />.</summary>
      <param name="condition">Условие, в соответствии с которым действие продолжает повторяться.</param>
    </member>
    <member name="M:System.Activities.Statements.DoWhile.#ctor(System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,System.Boolean}})">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.Statements.DoWhile" />.</summary>
      <param name="condition">Условие, в соответствии с которым действие продолжает повторяться.</param>
    </member>
    <member name="P:System.Activities.Statements.DoWhile.Body">
      <summary>Дочернее действие, которое выполняется при каждой итерации.</summary>
      <returns>Дочернее действие.</returns>
    </member>
    <member name="P:System.Activities.Statements.DoWhile.Condition">
      <summary>Объект <see cref="T:System.Activities.Activity`1" /> проверяется в конце цикла для определения необходимости повторного выполнения цикла.</summary>
      <returns>Условие для повторного выполнения цикла.</returns>
    </member>
    <member name="P:System.Activities.Statements.DoWhile.Variables">
      <summary>Коллекция объектов <see cref="T:System.Activities.Variable" />, связанных с действием <see cref="T:System.Activities.Statements.DoWhile" />.</summary>
      <returns>Коллекция переменных.</returns>
    </member>
    <member name="T:System.Activities.Statements.DurableTimerExtension">
      <summary>Представляет расширение таймера действия, которое может быть сохранено.</summary>
    </member>
    <member name="M:System.Activities.Statements.DurableTimerExtension.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.Statements.DurableTimerExtension" />.</summary>
    </member>
    <member name="M:System.Activities.Statements.DurableTimerExtension.Dispose">
      <summary>Завершает все зарегистрированные таймеры.</summary>
    </member>
    <member name="M:System.Activities.Statements.DurableTimerExtension.GetAdditionalExtensions">
      <summary>Возвращает перечислитель, выполняющий итерацию по коллекции расширений таймеров.</summary>
      <returns>Перечислитель.</returns>
    </member>
    <member name="M:System.Activities.Statements.DurableTimerExtension.OnCancelTimer(System.Activities.Bookmark)">
      <summary>Удаляет объект таймера из таблицы зарегистрированных таймеров для текущей операции рабочего процесса.</summary>
      <param name="bookmark">Точка, в которой рабочий процесс или действие может пассивно ожидать возобновления, отслеживая истечение срока действия объекта таймера.</param>
    </member>
    <member name="M:System.Activities.Statements.DurableTimerExtension.OnRegisterTimer(System.TimeSpan,System.Activities.Bookmark)">
      <summary>Добавляет объект таймера, который содержит указанный промежуток времени и сведения о закладке в таблице зарегистрированных таймеров для текущей операции рабочего процесса.</summary>
      <param name="timeout">Объект промежутка времени, который добавляется к записи таблицы регистрации таймеров в операции рабочего процесса вместе со сведениями об обратном вызове.</param>
      <param name="bookmark">Точка, в которой рабочий процесс или действие может пассивно ожидать возобновления, отслеживая истечение срока действия объекта таймера.</param>
    </member>
    <member name="M:System.Activities.Statements.DurableTimerExtension.SetInstance(System.Activities.Hosting.WorkflowInstanceProxy)">
      <summary>Устанавливает указанный экземпляр рабочего процесса в качестве текущего экземпляра.</summary>
      <param name="instance">Экземпляр рабочего процесса, который необходимо сделать текущим.</param>
    </member>
    <member name="T:System.Activities.Statements.ExistsInCollection`1">
      <summary>Указывает, должен ли данный элемент находиться в данной коллекции.</summary>
      <typeparam name="T">Тип элементов указанной коллекции.</typeparam>
    </member>
    <member name="M:System.Activities.Statements.ExistsInCollection`1.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.Statements.ExistsInCollection`1" />.</summary>
    </member>
    <member name="P:System.Activities.Statements.ExistsInCollection`1.Collection">
      <summary>Коллекция, в которой выполняется поиск для заданного элемента.</summary>
      <returns>Коллекция.</returns>
    </member>
    <member name="P:System.Activities.Statements.ExistsInCollection`1.Item">
      <summary>Искомый элемент в указанной коллекции.</summary>
      <returns>Элемент.</returns>
    </member>
    <member name="T:System.Activities.Statements.Flowchart">
      <summary>Представляет рабочие процессы моделей с помощью известных принципов блок-схем.</summary>
    </member>
    <member name="M:System.Activities.Statements.Flowchart.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.Statements.Flowchart" />.</summary>
    </member>
    <member name="P:System.Activities.Statements.Flowchart.Nodes">
      <summary>Получает или задает коллекцию объектов <see cref="T:System.Activities.Statements.FlowNode" />, содержащихся в блок-схеме.</summary>
      <returns>Коллекция объектов <see cref="T:System.Activities.Statements.FlowNode" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.Flowchart.StartNode">
      <summary>Получает или задает объект <see cref="T:System.Activities.Statements.FlowNode" />, который выполняется при запуске блок-схемы.</summary>
      <returns>Начальный узел.</returns>
    </member>
    <member name="P:System.Activities.Statements.Flowchart.ValidateUnconnectedNodes">
      <summary>Получает или задает значение, которое указывает, проверены ли неподключенные узлы.</summary>
      <returns>Значение <see langword="true" />, если несоединенные узлы проверяются; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.Flowchart.Variables">
      <summary>Получает или задает коллекцию объектов <see cref="T:System.Activities.Variable" />, связанных с объектом <see cref="T:System.Activities.Statements.Flowchart" />, которые доступны для совместного использования состояния между дочерними действиями, содержащимися в этой блок-схеме.</summary>
      <returns>Коллекция переменных.</returns>
    </member>
    <member name="T:System.Activities.Statements.FlowDecision">
      <summary>Специализированный узел <see cref="T:System.Activities.Statements.FlowNode" />, который позволяет моделировать условный узел с двумя исходами.</summary>
    </member>
    <member name="M:System.Activities.Statements.FlowDecision.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.Statements.FlowDecision" />.</summary>
    </member>
    <member name="M:System.Activities.Statements.FlowDecision.#ctor(System.Activities.Activity{System.Boolean})">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.Statements.FlowDecision" /> с указанным условием.</summary>
      <param name="condition">Условие, проверяемое действием <see cref="T:System.Activities.Statements.FlowDecision" />.</param>
    </member>
    <member name="M:System.Activities.Statements.FlowDecision.#ctor(System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,System.Boolean}})">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.Statements.FlowDecision" /> с указанным условием.</summary>
      <param name="condition">Условие, проверяемое действием <see cref="T:System.Activities.Statements.FlowDecision" />.</param>
    </member>
    <member name="P:System.Activities.Statements.FlowDecision.Condition">
      <summary>Задает условие, которое проверяет объект <see cref="T:System.Activities.Statements.FlowDecision" />.</summary>
      <returns>Выражение значения, которое представляет условие.</returns>
    </member>
    <member name="P:System.Activities.Statements.FlowDecision.DisplayName">
      <summary>Имя этого решения потока, которое отображается в конструкторе действий.</summary>
      <returns>Имя условного узла FlowDecision.</returns>
    </member>
    <member name="P:System.Activities.Statements.FlowDecision.False">
      <summary>Получает или задает объект <see cref="T:System.Activities.Statements.FlowNode" />, который выполняется, когда условие принимает значение <see langword="false" />.</summary>
      <returns>Действие, которое выполняется, когда условие принимает значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.FlowDecision.True">
      <summary>Получает или задает объект <see cref="T:System.Activities.Statements.FlowNode" />, который выполняется, когда условие принимает значение <see langword="true" />.</summary>
      <returns>Действие, которое выполняется, когда условие принимает значение <see langword="true" />.</returns>
    </member>
    <member name="T:System.Activities.Statements.FlowNode">
      <summary>Абстрактный базовый класс для всех различных типов узлов, которые могут содержаться в действии <see cref="T:System.Activities.Statements.Flowchart" />.</summary>
    </member>
    <member name="T:System.Activities.Statements.FlowStep">
      <summary>Элемент <see cref="T:System.Activities.Statements.FlowNode" />, который выполняет указанное свойство <see cref="P:System.Activities.Statements.FlowStep.Action" /> и содержит указатель свойства <see cref="P:System.Activities.Statements.FlowStep.Next" />.</summary>
    </member>
    <member name="M:System.Activities.Statements.FlowStep.#ctor">
      <summary>Возвращает новый экземпляр класса <see cref="T:System.Activities.Statements.FlowStep" />.</summary>
    </member>
    <member name="P:System.Activities.Statements.FlowStep.Action">
      <summary>Объект <see cref="T:System.Activities.Activity" />, который выполняет объект <see cref="T:System.Activities.Statements.FlowStep" />.</summary>
      <returns>Действие, которое выполняется как часть этого шага блок-схемы.</returns>
    </member>
    <member name="P:System.Activities.Statements.FlowStep.Next">
      <summary>Следующий объект <see cref="T:System.Activities.Statements.FlowNode" /> в блок-схеме, который выполняется после выполнения текущего объекта <see cref="T:System.Activities.Statements.FlowStep" />.</summary>
      <returns>Заданный элемент.</returns>
    </member>
    <member name="T:System.Activities.Statements.FlowSwitch`1">
      <summary>Специальный объект <see cref="T:System.Activities.Statements.FlowNode" />, который позволяет моделировать переключатель с одним выражением и одним выходом для каждого совпадения.</summary>
      <typeparam name="T">Тип выражения для оценки по вариантам.</typeparam>
    </member>
    <member name="M:System.Activities.Statements.FlowSwitch`1.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.Statements.FlowSwitch`1" />.</summary>
    </member>
    <member name="P:System.Activities.Statements.FlowSwitch`1.Cases">
      <summary>Возвращает словарь вариантов для обработки элементом <see cref="T:System.Activities.Statements.FlowSwitch`1" />.</summary>
      <returns>Коллекция вариантов.</returns>
    </member>
    <member name="P:System.Activities.Statements.FlowSwitch`1.Default">
      <summary>Объект <see cref="T:System.Activities.Statements.FlowNode" />, который выполняется, если в коллекции <see cref="P:System.Activities.Statements.FlowSwitch`1.Cases" /> отсутствуют элементы, которые совпадают с результатом оценки свойства <see cref="P:System.Activities.Statements.FlowSwitch`1.Expression" />.</summary>
      <returns>Выполняемый объект <see cref="T:System.Activities.Statements.FlowNode" /> по умолчанию.</returns>
    </member>
    <member name="P:System.Activities.Statements.FlowSwitch`1.DisplayName">
      <summary>Получает имя этого переключателя потока, которое отображается в конструкторе действий.</summary>
      <returns>Имя переключателя потока.</returns>
    </member>
    <member name="P:System.Activities.Statements.FlowSwitch`1.Expression">
      <summary>Выражение для оценки по коллекции свойства <see cref="P:System.Activities.Statements.FlowSwitch`1.Cases" />.</summary>
      <returns>Выражение для вычисления.</returns>
    </member>
    <member name="T:System.Activities.Statements.ForEach`1">
      <summary>Однократно выполняет операцию действия для каждого значения, которое представлено в коллекции <see cref="P:System.Activities.Statements.ForEach`1.Values" />.</summary>
      <typeparam name="T">Тип значений в коллекции <see cref="P:System.Activities.Statements.ForEach`1.Values" />.</typeparam>
    </member>
    <member name="M:System.Activities.Statements.ForEach`1.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.Statements.ForEach`1" />.</summary>
    </member>
    <member name="P:System.Activities.Statements.ForEach`1.Body">
      <summary>Действие <see cref="T:System.Activities.ActivityAction" />, которое выполняется для каждого элемента в коллекции <see cref="P:System.Activities.Statements.ForEach`1.Values" />.</summary>
      <returns>Выполняемое действие.</returns>
    </member>
    <member name="P:System.Activities.Statements.ForEach`1.Values">
      <summary>Коллекция входных данных действия для выполнения операции действия <see cref="P:System.Activities.Statements.ForEach`1.Body" />.</summary>
      <returns>Коллекция значений.</returns>
    </member>
    <member name="T:System.Activities.Statements.H*******leScope`1">
      <summary>Предоставляет поведение в области по умолчанию для объектов <see cref="T:System.Activities.H*******le" />.</summary>
      <typeparam name="TH*******le">Тип <see cref="P:System.Activities.Statements.H*******leScope`1.H*******le" />.</typeparam>
    </member>
    <member name="M:System.Activities.Statements.H*******leScope`1.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.Statements.H*******leScope`1" />.</summary>
    </member>
    <member name="P:System.Activities.Statements.H*******leScope`1.Body">
      <summary>Действие, область которого должна быть ограничена этим действием.</summary>
      <returns>Действие, ограничиваемое областью.</returns>
    </member>
    <member name="P:System.Activities.Statements.H*******leScope`1.H*******le">
      <summary>Объект <see cref="T:System.Activities.H*******le" />, поступивший из области родительского объекта.</summary>
      <returns>Дескриптор.</returns>
    </member>
    <member name="T:System.Activities.Statements.If">
      <summary>Моделирует условие If-Then-Else.</summary>
    </member>
    <member name="M:System.Activities.Statements.If.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.Statements.If" />.</summary>
    </member>
    <member name="M:System.Activities.Statements.If.#ctor(System.Activities.Activity{System.Boolean})">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.Statements.If" /> с указанным условием.</summary>
      <param name="condition">Условие выполнения.</param>
    </member>
    <member name="M:System.Activities.Statements.If.#ctor(System.Activities.InArgument{System.Boolean})">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.Statements.If" /> с указанным условием.</summary>
      <param name="condition">Условие выполнения.</param>
    </member>
    <member name="M:System.Activities.Statements.If.#ctor(System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,System.Boolean}})">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.Statements.If" /> с указанным условием.</summary>
      <param name="condition">Условие выполнения.</param>
    </member>
    <member name="P:System.Activities.Statements.If.Condition">
      <summary>Условие, определяющее, какое дочернее действие следует выполнить. Действие <see cref="P:System.Activities.Statements.If.Then" /> выполняется, если результат вычисления условия равен <see langword="true" />. Действие <see cref="P:System.Activities.Statements.If.Else" /> выполняется, если результат вычисления условия равен <see langword="false" />.</summary>
      <returns>Условие выполнения.</returns>
    </member>
    <member name="P:System.Activities.Statements.If.Else">
      <summary>Действие, подлежащее выполнению, если результат вычисления условия <see cref="P:System.Activities.Statements.If.Condition" /> для действия равен <see langword="false" />.</summary>
      <returns>Дочернее действие.</returns>
    </member>
    <member name="P:System.Activities.Statements.If.Then">
      <summary>Действие, подлежащее выполнению, если результат вычисления условия <see cref="P:System.Activities.Statements.If.Condition" /> для действия равен <see langword="true" />.</summary>
      <returns>Дочернее действие.</returns>
    </member>
    <member name="T:System.Activities.Statements.InvokeAction">
      <summary>Вызывает обработчик действия <see cref="T:System.Activities.ActivityAction" />.</summary>
    </member>
    <member name="M:System.Activities.Statements.InvokeAction.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Statements.InvokeAction" />.</summary>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction.Action">
      <summary>Возвращает или задает обработчик действия <see cref="T:System.Activities.ActivityAction" />, вызванный этим экземпляром объекта <see cref="T:System.Activities.Statements.InvokeAction" />.</summary>
      <returns>Диспетчер <see cref="T:System.Activities.ActivityAction" />, вызываемый этим классом <see cref="T:System.Activities.Statements.InvokeAction" />.</returns>
    </member>
    <member name="T:System.Activities.Statements.InvokeAction`1">
      <summary>Вызывает обработчик действия <see cref="T:System.Activities.ActivityAction`1" />.</summary>
      <typeparam name="T">Тип данных аргумента <see cref="T:System.Activities.InArgument`1" />, передаваемого в обработчик действия <see cref="T:System.Activities.ActivityAction`1" />.</typeparam>
    </member>
    <member name="M:System.Activities.Statements.InvokeAction`1.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Statements.InvokeAction`1" />.</summary>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`1.Action">
      <summary>Возвращает или задает обработчик действия <see cref="T:System.Activities.ActivityAction`1" />, вызванный этим экземпляром объекта <see cref="T:System.Activities.Statements.InvokeAction`1" />.</summary>
      <returns>Диспетчер <see cref="T:System.Activities.ActivityAction`1" />, вызываемый этим классом <see cref="T:System.Activities.Statements.InvokeAction`1" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`1.Argument">
      <summary>Возвращает или задает аргумент <see cref="T:System.Activities.InArgument`1" />, передаваемый в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`1" />.</summary>
      <returns>Аргумент <see cref="T:System.Activities.InArgument`1" />, передаваемый в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`1" />.</returns>
    </member>
    <member name="T:System.Activities.Statements.InvokeAction`10">
      <summary>Вызывает обработчик действия <see cref="T:System.Activities.ActivityAction`10" />.</summary>
      <typeparam name="T1">Тип данных первого <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`10" />.</typeparam>
      <typeparam name="T2">Тип данных второго <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`10" />.</typeparam>
      <typeparam name="T3">Тип данных третьего <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`10" />.</typeparam>
      <typeparam name="T4">Тип данных четвертого <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`10" />.</typeparam>
      <typeparam name="T5">Тип данных пятого <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`10" />.</typeparam>
      <typeparam name="T6">Тип данных шестого <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`10" />.</typeparam>
      <typeparam name="T7">Тип данных седьмого <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`10" />.</typeparam>
      <typeparam name="T8">Тип данных восьмого <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`10" />.</typeparam>
      <typeparam name="T9">Тип данных девятого <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`10" />.</typeparam>
      <typeparam name="T10">Тип данных десятого <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`10" />.</typeparam>
    </member>
    <member name="M:System.Activities.Statements.InvokeAction`10.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Statements.InvokeAction`10" />.</summary>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`10.Action">
      <summary>Возвращает или задает обработчик действия <see cref="T:System.Activities.ActivityAction`10" />, вызванный этим экземпляром объекта <see cref="T:System.Activities.Statements.InvokeAction`10" />.</summary>
      <returns>Деятельность по действию, вызванная этим экземпляром объекта <see cref="T:System.Activities.Statements.InvokeAction`10" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`10.Argument1">
      <summary>Возвращает или задает первый <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`10" />.</summary>
      <returns>Первый аргумент <see langword="In" />, переданный в связанный <see cref="T:System.Activities.ActivityAction`10" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`10.Argument10">
      <summary>Возвращает или задает десятый <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`10" />.</summary>
      <returns>Десятый аргумент <see langword="In" />, переданный в связанный <see cref="T:System.Activities.ActivityAction`10" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`10.Argument2">
      <summary>Возвращает или задает второй <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`10" />.</summary>
      <returns>Второй аргумент <see langword="In" />, переданный в связанный <see cref="T:System.Activities.ActivityAction`10" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`10.Argument3">
      <summary>Возвращает или задает третий <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`10" />.</summary>
      <returns>Третий аргумент <see langword="In" />, переданный в связанный <see cref="T:System.Activities.ActivityAction`10" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`10.Argument4">
      <summary>Возвращает или задает четвертый <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`10" />.</summary>
      <returns>Четвертый аргумент <see langword="In" />, переданный в связанный <see cref="T:System.Activities.ActivityAction`10" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`10.Argument5">
      <summary>Возвращает или задает пятый <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`10" />.</summary>
      <returns>Пятый аргумент <see langword="In" />, переданный в связанный <see cref="T:System.Activities.ActivityAction`10" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`10.Argument6">
      <summary>Возвращает или задает шестой <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`10" />.</summary>
      <returns>Шестой аргумент <see langword="In" />, переданный в связанный <see cref="T:System.Activities.ActivityAction`10" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`10.Argument7">
      <summary>Возвращает или задает седьмой <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`10" />.</summary>
      <returns>Седьмой аргумент <see langword="In" />, переданный в связанный <see cref="T:System.Activities.ActivityAction`10" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`10.Argument8">
      <summary>Возвращает или задает восьмой <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`10" />.</summary>
      <returns>Восьмой аргумент <see langword="In" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`10" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`10.Argument9">
      <summary>Возвращает или задает девятый <see cref="T:System.Activities.InArgument`1" /> переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`10" />.</summary>
      <returns>Девятый аргумент <see langword="In" />, переданный в связанный <see cref="T:System.Activities.ActivityAction`10" />.</returns>
    </member>
    <member name="T:System.Activities.Statements.InvokeAction`11">
      <summary>Вызывает функцию <see cref="T:System.Activities.ActivityAction`11" />.</summary>
      <typeparam name="T1">Тип данных первого аргумента <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`11" />.</typeparam>
      <typeparam name="T2">Тип данных второго аргумента <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`11" />.</typeparam>
      <typeparam name="T3">Тип данных третьего аргумента <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`11" />.</typeparam>
      <typeparam name="T4">Тип данных четвертого аргумента <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`11" />.</typeparam>
      <typeparam name="T5">Тип данных пятого аргумента <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`11" />.</typeparam>
      <typeparam name="T6">Тип данных шестого аргумента <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`11" />.</typeparam>
      <typeparam name="T7">Тип данных седьмого аргумента <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`11" />.</typeparam>
      <typeparam name="T8">Тип данных восьмого аргумента <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`11" />.</typeparam>
      <typeparam name="T9">Тип данных девятого аргумента <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`11" />.</typeparam>
      <typeparam name="T10">Тип данных десятого аргумента <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`11" />.</typeparam>
      <typeparam name="T11">Тип данных одиннадцатого аргумента <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`11" />.</typeparam>
    </member>
    <member name="M:System.Activities.Statements.InvokeAction`11.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Statements.InvokeAction`11" />.</summary>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`11.Action">
      <summary>Возвращает или задает обработчик действия <see cref="T:System.Activities.ActivityAction`11" />, вызванный этим экземпляром объекта <see cref="T:System.Activities.Statements.InvokeAction`11" />.</summary>
      <returns>Деятельность по действию, вызванная этим экземпляром объекта <see cref="T:System.Activities.Statements.InvokeAction`11" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`11.Argument1">
      <summary>Возвращает или задает первый <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`11" />.</summary>
      <returns>Первый аргумент <see langword="In" />, переданный в связанный <see cref="T:System.Activities.ActivityAction`11" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`11.Argument10">
      <summary>Возвращает или задает десятый <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`11" />.</summary>
      <returns>Десятый аргумент <see langword="In" />, переданный в связанный <see cref="T:System.Activities.ActivityAction`11" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`11.Argument11">
      <summary>Возвращает или задает одиннадцатый <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`11" />.</summary>
      <returns>Одиннадцатый аргумент <see langword="In" />, переданный в связанный <see cref="T:System.Activities.ActivityAction`11" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`11.Argument2">
      <summary>Возвращает или задает второй <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`11" />.</summary>
      <returns>Второй аргумент <see langword="In" />, переданный в связанный <see cref="T:System.Activities.ActivityAction`11" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`11.Argument3">
      <summary>Возвращает или задает третий <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`11" />.</summary>
      <returns>Третий аргумент <see langword="In" />, переданный в связанный <see cref="T:System.Activities.ActivityAction`11" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`11.Argument4">
      <summary>Возвращает или задает четвертый <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`11" />.</summary>
      <returns>Четвертый аргумент <see langword="In" />, переданный в связанный <see cref="T:System.Activities.ActivityAction`11" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`11.Argument5">
      <summary>Возвращает или задает пятый <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`11" />.</summary>
      <returns>Пятый аргумент <see langword="In" />, переданный в связанный <see cref="T:System.Activities.ActivityAction`11" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`11.Argument6">
      <summary>Возвращает или задает шестой <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`11" />.</summary>
      <returns>Шестой аргумент <see langword="In" />, переданный в связанный <see cref="T:System.Activities.ActivityAction`11" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`11.Argument7">
      <summary>Возвращает или задает седьмой <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`11" />.</summary>
      <returns>Седьмой аргумент <see langword="In" />, переданный в связанный <see cref="T:System.Activities.ActivityAction`11" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`11.Argument8">
      <summary>Возвращает или задает восьмой <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`11" />.</summary>
      <returns>Восьмой аргумент <see langword="In" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`11" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`11.Argument9">
      <summary>Возвращает или задает девятый <see cref="T:System.Activities.InArgument`1" /> переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`11" />.</summary>
      <returns>Девятый аргумент <see langword="In" />, переданный в связанный <see cref="T:System.Activities.ActivityAction`11" />.</returns>
    </member>
    <member name="T:System.Activities.Statements.InvokeAction`12">
      <summary>Вызывает обработчик действия <see cref="T:System.Activities.ActivityAction`12" />.</summary>
      <typeparam name="T1">Тип данных первого <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`12" />.</typeparam>
      <typeparam name="T2">Тип данных второго <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`12" />.</typeparam>
      <typeparam name="T3">Тип данных третьего <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`12" />.</typeparam>
      <typeparam name="T4">Тип данных четвертого <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`12" />.</typeparam>
      <typeparam name="T5">Тип данных пятого <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`12" />.</typeparam>
      <typeparam name="T6">Тип данных шестого <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`12" />.</typeparam>
      <typeparam name="T7">Тип данных седьмого <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`12" />.</typeparam>
      <typeparam name="T8">Тип данных восьмого <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`12" />.</typeparam>
      <typeparam name="T9">Тип данных девятого <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`12" />.</typeparam>
      <typeparam name="T10">Тип данных десятого <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`12" />.</typeparam>
      <typeparam name="T11">Тип данных одиннадцатого <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`12" />.</typeparam>
      <typeparam name="T12">Тип данных двенадцатого <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`12" />.</typeparam>
    </member>
    <member name="M:System.Activities.Statements.InvokeAction`12.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Statements.InvokeAction`12" />.</summary>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`12.Action">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Statements.InvokeAction`12" />.</summary>
      <returns>Деятельность по действию, вызванная этим экземпляром объекта <see cref="T:System.Activities.Statements.InvokeAction`12" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`12.Argument1">
      <summary>Возвращает или задает первый <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`12" />.</summary>
      <returns>Первый аргумент <see langword="In" />, переданный в связанный <see cref="T:System.Activities.ActivityAction`12" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`12.Argument10">
      <summary>Возвращает или задает десятый <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`12" />.</summary>
      <returns>Десятый аргумент <see langword="In" />, переданный в связанный <see cref="T:System.Activities.ActivityAction`12" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`12.Argument11">
      <summary>Возвращает или задает одиннадцатый <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`12" />.</summary>
      <returns>Одиннадцатый аргумент <see langword="In" />, переданный в связанный <see cref="T:System.Activities.ActivityAction`12" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`12.Argument12">
      <summary>Возвращает или задает двенадцатый <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`12" />.</summary>
      <returns>Двенадцатый аргумент <see langword="In" />, переданный в связанный <see cref="T:System.Activities.ActivityAction`12" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`12.Argument2">
      <summary>Возвращает или задает второй <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`12" />.</summary>
      <returns>Второй аргумент <see langword="In" />, переданный в связанный <see cref="T:System.Activities.ActivityAction`12" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`12.Argument3">
      <summary>Возвращает или задает третий <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`12" />.</summary>
      <returns>Третий аргумент <see langword="In" />, переданный в связанный <see cref="T:System.Activities.ActivityAction`12" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`12.Argument4">
      <summary>Возвращает или задает четвертый <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`12" />.</summary>
      <returns>Четвертый аргумент <see langword="In" />, переданный в связанный <see cref="T:System.Activities.ActivityAction`12" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`12.Argument5">
      <summary>Возвращает или задает пятый <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`12" />.</summary>
      <returns>Пятый аргумент <see langword="In" />, переданный в связанный <see cref="T:System.Activities.ActivityAction`12" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`12.Argument6">
      <summary>Возвращает или задает шестой <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`12" />.</summary>
      <returns>Шестой аргумент <see langword="In" />, переданный в связанный <see cref="T:System.Activities.ActivityAction`12" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`12.Argument7">
      <summary>Возвращает или задает седьмой <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`12" />.</summary>
      <returns>Седьмой аргумент <see langword="In" />, переданный в связанный <see cref="T:System.Activities.ActivityAction`12" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`12.Argument8">
      <summary>Возвращает или задает восьмой <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`12" />.</summary>
      <returns>Восьмой аргумент <see langword="In" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`12" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`12.Argument9">
      <summary>Возвращает или задает девятый <see cref="T:System.Activities.InArgument`1" /> переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`12" />.</summary>
      <returns>Девятый аргумент <see langword="In" />, переданный в связанный <see cref="T:System.Activities.ActivityAction`12" />.</returns>
    </member>
    <member name="T:System.Activities.Statements.InvokeAction`13">
      <summary>Вызывает обработчик действия <see cref="T:System.Activities.ActivityAction`13" />.</summary>
      <typeparam name="T1">Тип данных первого <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`13" />.</typeparam>
      <typeparam name="T2">Тип данных второго <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`13" />.</typeparam>
      <typeparam name="T3">Тип данных третьего <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`13" />.</typeparam>
      <typeparam name="T4">Тип данных четвертого <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`13" />.</typeparam>
      <typeparam name="T5">Тип данных пятого <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`13" />.</typeparam>
      <typeparam name="T6">Тип данных шестого <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`13" />.</typeparam>
      <typeparam name="T7">Тип данных седьмого <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`13" />.</typeparam>
      <typeparam name="T8">Тип данных восьмого <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`13" />.</typeparam>
      <typeparam name="T9">Тип данных девятого <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`13" />.</typeparam>
      <typeparam name="T10">Тип данных десятого <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`13" />.</typeparam>
      <typeparam name="T11">Тип данных одиннадцатого <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`13" />.</typeparam>
      <typeparam name="T12">Тип данных двенадцатого <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`13" />.</typeparam>
      <typeparam name="T13">Тип данных тринадцатого <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`13" />.</typeparam>
    </member>
    <member name="M:System.Activities.Statements.InvokeAction`13.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Statements.InvokeAction`13" />.</summary>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`13.Action">
      <summary>Возвращает или задает обработчик действия <see cref="T:System.Activities.ActivityAction`13" />, вызванный этим экземпляром объекта <see cref="T:System.Activities.Statements.InvokeAction`13" />.</summary>
      <returns>Деятельность по действию, вызванная этим экземпляром объекта <see cref="T:System.Activities.Statements.InvokeAction`13" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`13.Argument1">
      <summary>Возвращает или задает первый <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`13" />.</summary>
      <returns>Первый аргумент <see langword="In" />, переданный в связанный <see cref="T:System.Activities.ActivityAction`13" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`13.Argument10">
      <summary>Возвращает или задает десятый <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`13" />.</summary>
      <returns>Десятый аргумент <see langword="In" />, переданный в связанный <see cref="T:System.Activities.ActivityAction`13" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`13.Argument11">
      <summary>Возвращает или задает одиннадцатый <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`13" />.</summary>
      <returns>Одиннадцатый аргумент <see langword="In" />, переданный в связанный <see cref="T:System.Activities.ActivityAction`13" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`13.Argument12">
      <summary>Возвращает или задает двенадцатый <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`13" />.</summary>
      <returns>Двенадцатый аргумент <see langword="In" />, переданный в связанный <see cref="T:System.Activities.ActivityAction`13" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`13.Argument13">
      <summary>Возвращает или задает тринадцатый <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`13" />.</summary>
      <returns>Тринадцатый аргумент <see langword="In" />, переданный в связанный <see cref="T:System.Activities.ActivityAction`13" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`13.Argument2">
      <summary>Возвращает или задает второй <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`13" />.</summary>
      <returns>Второй аргумент <see langword="In" />, переданный в связанный <see cref="T:System.Activities.ActivityAction`13" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`13.Argument3">
      <summary>Возвращает или задает третий <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`13" />.</summary>
      <returns>Третий аргумент <see langword="In" />, переданный в связанный <see cref="T:System.Activities.ActivityAction`13" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`13.Argument4">
      <summary>Возвращает или задает четвертый <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`13" />.</summary>
      <returns>Четвертый аргумент <see langword="In" />, переданный в связанный <see cref="T:System.Activities.ActivityAction`13" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`13.Argument5">
      <summary>Возвращает или задает пятый <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`13" />.</summary>
      <returns>Пятый аргумент <see langword="In" />, переданный в связанный <see cref="T:System.Activities.ActivityAction`13" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`13.Argument6">
      <summary>Возвращает или задает шестой <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`13" />.</summary>
      <returns>Шестой аргумент <see langword="In" />, переданный в связанный <see cref="T:System.Activities.ActivityAction`13" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`13.Argument7">
      <summary>Возвращает или задает седьмой <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`13" />.</summary>
      <returns>Седьмой аргумент <see langword="In" />, переданный в связанный <see cref="T:System.Activities.ActivityAction`13" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`13.Argument8">
      <summary>Возвращает или задает восьмой <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`13" />.</summary>
      <returns>Восьмой аргумент <see langword="In" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`13" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`13.Argument9">
      <summary>Возвращает или задает девятый <see cref="T:System.Activities.InArgument`1" /> переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`13" />.</summary>
      <returns>Девятый аргумент <see langword="In" />, переданный в связанный <see cref="T:System.Activities.ActivityAction`13" />.</returns>
    </member>
    <member name="T:System.Activities.Statements.InvokeAction`14">
      <summary>Вызывает обработчик действия <see cref="T:System.Activities.ActivityAction`14" />.</summary>
      <typeparam name="T1">Тип данных первого <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`14" />.</typeparam>
      <typeparam name="T2">Тип данных второго <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`14" />.</typeparam>
      <typeparam name="T3">Тип данных третьего <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`14" />.</typeparam>
      <typeparam name="T4">Тип данных четвертого <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`14" />.</typeparam>
      <typeparam name="T5">Тип данных пятого <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`14" />.</typeparam>
      <typeparam name="T6">Тип данных шестого <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`14" />.</typeparam>
      <typeparam name="T7">Тип данных седьмого <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`14" />.</typeparam>
      <typeparam name="T8">Тип данных восьмого <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`14" />.</typeparam>
      <typeparam name="T9">Тип данных девятого <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`14" />.</typeparam>
      <typeparam name="T10">Тип данных десятого <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`13" />.</typeparam>
      <typeparam name="T11">Тип данных одиннадцатого <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`14" />.</typeparam>
      <typeparam name="T12">Тип данных двенадцатого <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`14" />.</typeparam>
      <typeparam name="T13">Тип данных тринадцатого <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`14" />.</typeparam>
      <typeparam name="T14">Тип данных четырнадцатого <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`14" />.</typeparam>
    </member>
    <member name="M:System.Activities.Statements.InvokeAction`14.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Statements.InvokeAction`14" />.</summary>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`14.Action">
      <summary>Возвращает или задает обработчик действия <see cref="T:System.Activities.ActivityAction`14" />, вызванный этим экземпляром объекта <see cref="T:System.Activities.Statements.InvokeAction`14" />.</summary>
      <returns>Деятельность по действию, вызванная этим экземпляром объекта <see cref="T:System.Activities.Statements.InvokeAction`14" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`14.Argument1">
      <summary>Возвращает или задает первый <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`14" />.</summary>
      <returns>Первый аргумент <see langword="In" />, переданный в связанный <see cref="T:System.Activities.ActivityAction`14" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`14.Argument10">
      <summary>Возвращает или задает десятый <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`14" />.</summary>
      <returns>Десятый аргумент <see langword="In" />, переданный в связанный <see cref="T:System.Activities.ActivityAction`14" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`14.Argument11">
      <summary>Возвращает или задает одиннадцатый <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`14" />.</summary>
      <returns>Одиннадцатый аргумент <see langword="In" />, переданный в связанный <see cref="T:System.Activities.ActivityAction`14" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`14.Argument12">
      <summary>Возвращает или задает двенадцатый <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`14" />.</summary>
      <returns>Двенадцатый аргумент <see langword="In" />, переданный в связанный <see cref="T:System.Activities.ActivityAction`14" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`14.Argument13">
      <summary>Возвращает или задает тринадцатый <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`14" />.</summary>
      <returns>Тринадцатый аргумент <see langword="In" />, переданный в связанный <see cref="T:System.Activities.ActivityAction`14" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`14.Argument14">
      <summary>Возвращает или задает четырнадцатый <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`14" />.</summary>
      <returns>Четырнадцатый аргумент <see langword="In" />, переданный в связанный <see cref="T:System.Activities.ActivityAction`14" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`14.Argument2">
      <summary>Возвращает или задает второй <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`14" />.</summary>
      <returns>Второй аргумент <see langword="In" />, переданный в связанный <see cref="T:System.Activities.ActivityAction`14" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`14.Argument3">
      <summary>Возвращает или задает третий <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`14" />.</summary>
      <returns>Третий аргумент <see langword="In" />, переданный в связанный <see cref="T:System.Activities.ActivityAction`14" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`14.Argument4">
      <summary>Возвращает или задает четвертый <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`14" />.</summary>
      <returns>Четвертый аргумент <see langword="In" />, переданный в связанный <see cref="T:System.Activities.ActivityAction`14" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`14.Argument5">
      <summary>Возвращает или задает пятый <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`14" />.</summary>
      <returns>Пятый аргумент <see langword="In" />, переданный в связанный <see cref="T:System.Activities.ActivityAction`14" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`14.Argument6">
      <summary>Возвращает или задает шестой <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`14" />.</summary>
      <returns>Шестой аргумент <see langword="In" />, переданный в связанный <see cref="T:System.Activities.ActivityAction`14" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`14.Argument7">
      <summary>Возвращает или задает седьмой <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`14" />.</summary>
      <returns>Седьмой аргумент <see langword="In" />, переданный в связанный <see cref="T:System.Activities.ActivityAction`14" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`14.Argument8">
      <summary>Возвращает или задает восьмой <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`14" />.</summary>
      <returns>Восьмой аргумент <see langword="In" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`14" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`14.Argument9">
      <summary>Возвращает или задает девятый <see cref="T:System.Activities.InArgument`1" /> переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`14" />.</summary>
      <returns>Девятый аргумент <see langword="In" />, переданный в связанный <see cref="T:System.Activities.ActivityAction`14" />.</returns>
    </member>
    <member name="T:System.Activities.Statements.InvokeAction`15">
      <summary>Вызывает обработчик действия <see cref="T:System.Activities.ActivityAction`15" />.</summary>
      <typeparam name="T1">Тип данных первого <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`15" />.</typeparam>
      <typeparam name="T2">Тип данных второго <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`15" />.</typeparam>
      <typeparam name="T3">Тип данных третьего <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`15" />.</typeparam>
      <typeparam name="T4">Тип данных четвертого <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`15" />.</typeparam>
      <typeparam name="T5">Тип данных пятого <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`15" />.</typeparam>
      <typeparam name="T6">Тип данных шестого <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`15" />.</typeparam>
      <typeparam name="T7">Тип данных седьмого <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`15" />.</typeparam>
      <typeparam name="T8">Тип данных восьмого <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`15" />.</typeparam>
      <typeparam name="T9">Тип данных девятого <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`15" />.</typeparam>
      <typeparam name="T10">Тип данных десятого <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`15" />.</typeparam>
      <typeparam name="T11">Тип данных одиннадцатого <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`15" />.</typeparam>
      <typeparam name="T12">Тип данных двенадцатого <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`15" />.</typeparam>
      <typeparam name="T13">Тип данных тринадцатого <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`15" />.</typeparam>
      <typeparam name="T14">Тип данных четырнадцатого <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`15" />.</typeparam>
      <typeparam name="T15">Тип данных пятнадцатого <see cref="T:System.Activities.InArgument`1" />, передаваемого в обработчик действия <see cref="T:System.Activities.ActivityAction`15" />.</typeparam>
    </member>
    <member name="M:System.Activities.Statements.InvokeAction`15.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Statements.InvokeAction`15" />.</summary>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`15.Action">
      <summary>Возвращает или задает обработчик действия <see cref="T:System.Activities.ActivityAction`15" />, вызванный этим экземпляром объекта <see cref="T:System.Activities.Statements.InvokeAction`15" />.</summary>
      <returns>Деятельность по действию, вызванная этим экземпляром объекта <see cref="T:System.Activities.Statements.InvokeAction`15" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`15.Argument1">
      <summary>Возвращает или задает первый <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`15" />.</summary>
      <returns>Первый аргумент <see langword="In" />, переданный в связанный <see cref="T:System.Activities.ActivityAction`15" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`15.Argument10">
      <summary>Возвращает или задает десятый <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`15" />.</summary>
      <returns>Десятый аргумент <see langword="In" />, переданный в связанный <see cref="T:System.Activities.ActivityAction`15" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`15.Argument11">
      <summary>Возвращает или задает одиннадцатый <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`15" />.</summary>
      <returns>Одиннадцатый аргумент <see langword="In" />, переданный в связанный <see cref="T:System.Activities.ActivityAction`15" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`15.Argument12">
      <summary>Возвращает или задает двенадцатый <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`15" />.</summary>
      <returns>Двенадцатый аргумент <see langword="In" />, переданный в связанный <see cref="T:System.Activities.ActivityAction`15" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`15.Argument13">
      <summary>Возвращает или задает тринадцатый <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`15" />.</summary>
      <returns>Тринадцатый аргумент In, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`15" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`15.Argument14">
      <summary>Возвращает или задает четырнадцатый <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`15" />.</summary>
      <returns>Четырнадцатый аргумент <see langword="In" />, переданный в связанный <see cref="T:System.Activities.ActivityAction`15" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`15.Argument15">
      <summary>Возвращает или задает пятнадцатый <see cref="T:System.Activities.InArgument`1" />, передаваемый в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`15" />.</summary>
      <returns>Пятнадцатый аргумент <see langword="In" />, переданный в связанный <see cref="T:System.Activities.ActivityAction`15" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`15.Argument2">
      <summary>Возвращает или задает второй <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`15" />.</summary>
      <returns>Второй аргумент <see langword="In" />, переданный в связанный <see cref="T:System.Activities.ActivityAction`15" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`15.Argument3">
      <summary>Возвращает или задает третий <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`15" />.</summary>
      <returns>Третий аргумент <see langword="In" />, переданный в связанный <see cref="T:System.Activities.ActivityAction`15" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`15.Argument4">
      <summary>Возвращает или задает четвертый <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`15" />.</summary>
      <returns>Четвертый аргумент <see langword="In" />, переданный в связанный <see cref="T:System.Activities.ActivityAction`15" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`15.Argument5">
      <summary>Возвращает или задает пятый <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`15" />.</summary>
      <returns>Пятый аргумент <see langword="In" />, переданный в связанный <see cref="T:System.Activities.ActivityAction`15" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`15.Argument6">
      <summary>Возвращает или задает шестой <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`15" />.</summary>
      <returns>Шестой аргумент <see langword="In" />, переданный в связанный <see cref="T:System.Activities.ActivityAction`15" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`15.Argument7">
      <summary>Возвращает или задает седьмой <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`15" />.</summary>
      <returns>Седьмой аргумент <see langword="In" />, переданный в связанный <see cref="T:System.Activities.ActivityAction`15" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`15.Argument8">
      <summary>Возвращает или задает восьмой <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`15" />.</summary>
      <returns>Восьмой аргумент <see langword="In" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`15" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`15.Argument9">
      <summary>Возвращает или задает девятый <see cref="T:System.Activities.InArgument`1" /> переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`15" />.</summary>
      <returns>Девятый аргумент <see langword="In" />, переданный в связанный <see cref="T:System.Activities.ActivityAction`15" />.</returns>
    </member>
    <member name="T:System.Activities.Statements.InvokeAction`16">
      <summary>Вызывает обработчик действия <see cref="T:System.Activities.ActivityAction`16" />.</summary>
      <typeparam name="T1">Тип данных первого <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`16" />.</typeparam>
      <typeparam name="T2">Тип данных второго <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`16" />.</typeparam>
      <typeparam name="T3">Тип данных третьего <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`16" />.</typeparam>
      <typeparam name="T4">Тип данных четвертого <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`16" />.</typeparam>
      <typeparam name="T5">Тип данных пятого <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`16" />.</typeparam>
      <typeparam name="T6">Тип данных шестого <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`16" />.</typeparam>
      <typeparam name="T7">Тип данных седьмого <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`16" />.</typeparam>
      <typeparam name="T8">Тип данных восьмого <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`16" />.</typeparam>
      <typeparam name="T9">Тип данных девятого <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`16" />.</typeparam>
      <typeparam name="T10">Тип данных десятого <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`16" />.</typeparam>
      <typeparam name="T11">Тип данных одиннадцатого <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`16" />.</typeparam>
      <typeparam name="T12">Тип данных двенадцатого <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`16" />.</typeparam>
      <typeparam name="T13">Тип данных тринадцатого <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`16" />.</typeparam>
      <typeparam name="T14">Тип данных четырнадцатого <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`16" />.</typeparam>
      <typeparam name="T15">Тип данных пятнадцатого <see cref="T:System.Activities.InArgument`1" />, передаваемого в обработчик действия <see cref="T:System.Activities.ActivityAction`16" />.</typeparam>
      <typeparam name="T16">Тип данных шестнадцатого аргумента <see cref="T:System.Activities.InArgument`1" />, передаваемого в обработчик действия <see cref="T:System.Activities.ActivityAction`16" />.</typeparam>
    </member>
    <member name="M:System.Activities.Statements.InvokeAction`16.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Statements.InvokeAction`16" />.</summary>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`16.Action">
      <summary>Возвращает или задает обработчик действия <see cref="T:System.Activities.ActivityAction`16" />, вызванный этим экземпляром объекта <see cref="T:System.Activities.Statements.InvokeAction`16" />.</summary>
      <returns>Деятельность по действию, вызванная этим экземпляром объекта <see cref="T:System.Activities.Statements.InvokeAction`16" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`16.Argument1">
      <summary>Возвращает или задает первый <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`16" />.</summary>
      <returns>Первый аргумент <see langword="In" />, переданный в связанный <see cref="T:System.Activities.ActivityAction`16" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`16.Argument10">
      <summary>Возвращает или задает десятый <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`16" />.</summary>
      <returns>Десятый аргумент <see langword="In" />, переданный в связанный <see cref="T:System.Activities.ActivityAction`16" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`16.Argument11">
      <summary>Возвращает или задает одиннадцатый <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`16" />.</summary>
      <returns>Одиннадцатый аргумент <see langword="In" />, переданный в связанный <see cref="T:System.Activities.ActivityAction`16" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`16.Argument12">
      <summary>Возвращает или задает двенадцатый <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`16" />.</summary>
      <returns>Двенадцатый аргумент <see langword="In" />, переданный в связанный <see cref="T:System.Activities.ActivityAction`16" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`16.Argument13">
      <summary>Возвращает или задает тринадцатый <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`16" />.</summary>
      <returns>Тринадцатый аргумент <see langword="In" />, переданный в связанный <see cref="T:System.Activities.ActivityAction`16" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`16.Argument14">
      <summary>Возвращает или задает четырнадцатый <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`16" />.</summary>
      <returns>Четырнадцатый аргумент <see langword="In" />, переданный в связанный <see cref="T:System.Activities.ActivityAction`16" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`16.Argument15">
      <summary>Возвращает или задает пятнадцатый <see cref="T:System.Activities.InArgument`1" />, передаваемый в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`16" />.</summary>
      <returns>Пятнадцатый аргумент <see langword="In" />, переданный в связанный <see cref="T:System.Activities.ActivityAction`16" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`16.Argument16">
      <summary>Возвращает или задает шестнадцатый аргумент <see cref="T:System.Activities.InArgument`1" />, передаваемый в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`16" />.</summary>
      <returns>Шестнадцатый аргумент <see langword="In" />, переданный в связанный <see cref="T:System.Activities.ActivityAction`16" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`16.Argument2">
      <summary>Возвращает или задает второй <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`16" />.</summary>
      <returns>Второй аргумент <see langword="In" />, переданный в связанный <see cref="T:System.Activities.ActivityAction`16" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`16.Argument3">
      <summary>Возвращает или задает третий <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`16" />.</summary>
      <returns>Третий аргумент <see langword="In" />, переданный в связанный <see cref="T:System.Activities.ActivityAction`16" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`16.Argument4">
      <summary>Возвращает или задает четвертый <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`16" />.</summary>
      <returns>Четвертый аргумент <see langword="In" />, переданный в связанный <see cref="T:System.Activities.ActivityAction`16" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`16.Argument5">
      <summary>Возвращает или задает пятый <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`16" />.</summary>
      <returns>Пятый аргумент <see langword="In" />, переданный в связанный <see cref="T:System.Activities.ActivityAction`16" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`16.Argument6">
      <summary>Возвращает или задает шестой <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`16" />.</summary>
      <returns>Шестой аргумент <see langword="In" />, переданный в связанный <see cref="T:System.Activities.ActivityAction`16" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`16.Argument7">
      <summary>Возвращает или задает седьмой <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`16" />.</summary>
      <returns>Седьмой аргумент <see langword="In" />, переданный в связанный <see cref="T:System.Activities.ActivityAction`16" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`16.Argument8">
      <summary>Возвращает или задает восьмой <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`16" />.</summary>
      <returns>Восьмой аргумент <see langword="In" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`16" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`16.Argument9">
      <summary>Возвращает или задает девятый <see cref="T:System.Activities.InArgument`1" /> переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`16" />.</summary>
      <returns>Девятый аргумент <see langword="In" />, переданный в связанный <see cref="T:System.Activities.ActivityAction`16" />.</returns>
    </member>
    <member name="T:System.Activities.Statements.InvokeAction`2">
      <summary>Вызывает обработчик действия <see cref="T:System.Activities.ActivityAction`2" />.</summary>
      <typeparam name="T1">Тип данных первого <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`2" />.</typeparam>
      <typeparam name="T2">Тип данных второго <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`2" />.</typeparam>
    </member>
    <member name="M:System.Activities.Statements.InvokeAction`2.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Statements.InvokeAction`2" />.</summary>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`2.Action">
      <summary>Возвращает или задает обработчик действия <see cref="T:System.Activities.ActivityAction`2" />, вызванный этим экземпляром объекта <see cref="T:System.Activities.Statements.InvokeAction`2" />.</summary>
      <returns>Диспетчер <see cref="T:System.Activities.ActivityAction`2" />, вызываемый этим классом <see cref="T:System.Activities.Statements.InvokeAction`2" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`2.Argument1">
      <summary>Возвращает или задает первый <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`2" />.</summary>
      <returns>Первый аргумент <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`2" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`2.Argument2">
      <summary>Возвращает или задает второй <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`2" />.</summary>
      <returns>Второй аргумент <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`2" />.</returns>
    </member>
    <member name="T:System.Activities.Statements.InvokeAction`3">
      <summary>Вызывает обработчик действия <see cref="T:System.Activities.ActivityAction`3" />.</summary>
      <typeparam name="T1">Тип данных первого <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`3" />.</typeparam>
      <typeparam name="T2">Тип данных второго <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`3" />.</typeparam>
      <typeparam name="T3">Тип данных третьего <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`3" />.</typeparam>
    </member>
    <member name="M:System.Activities.Statements.InvokeAction`3.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Statements.InvokeAction`3" />.</summary>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`3.Action">
      <summary>Возвращает или задает обработчик действия <see cref="T:System.Activities.ActivityAction`3" />, вызванный этим экземпляром объекта <see cref="T:System.Activities.Statements.InvokeAction`3" />.</summary>
      <returns>Диспетчер <see cref="T:System.Activities.ActivityAction`3" />, вызываемый этим классом <see cref="T:System.Activities.Statements.InvokeAction`3" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`3.Argument1">
      <summary>Возвращает или задает первый <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`3" />.</summary>
      <returns>Первый аргумент <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`3" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`3.Argument2">
      <summary>Возвращает или задает второй <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`3" />.</summary>
      <returns>Второй аргумент <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`3" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`3.Argument3">
      <summary>Возвращает или задает третий <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`3" />.</summary>
      <returns>Третий аргумент <see cref="T:System.Activities.InArgument`1" />, передаваемый в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`3" />.</returns>
    </member>
    <member name="T:System.Activities.Statements.InvokeAction`4">
      <summary>Вызывает обработчик действия <see cref="T:System.Activities.ActivityAction`4" />.</summary>
      <typeparam name="T1">Тип данных первого <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`4" />.</typeparam>
      <typeparam name="T2">Тип данных второго <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`4" />.</typeparam>
      <typeparam name="T3">Тип данных третьего <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`4" />.</typeparam>
      <typeparam name="T4">Тип данных четвертого <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`4" />.</typeparam>
    </member>
    <member name="M:System.Activities.Statements.InvokeAction`4.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Statements.InvokeAction`4" />.</summary>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`4.Action">
      <summary>Возвращает или задает обработчик действия <see cref="T:System.Activities.ActivityAction`4" />, вызванный этим экземпляром объекта <see cref="T:System.Activities.Statements.InvokeAction`4" />.</summary>
      <returns>Диспетчер <see cref="T:System.Activities.ActivityAction`4" />, вызываемый этим классом <see cref="T:System.Activities.Statements.InvokeAction`4" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`4.Argument1">
      <summary>Возвращает или задает первый <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`4" />.</summary>
      <returns>Первый аргумент <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`4" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`4.Argument2">
      <summary>Возвращает или задает второй <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`4" />.</summary>
      <returns>Второй аргумент <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`4" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`4.Argument3">
      <summary>Возвращает или задает третий <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`4" />.</summary>
      <returns>Третий аргумент <see cref="T:System.Activities.InArgument`1" />, передаваемый в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`4" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`4.Argument4">
      <summary>Возвращает или задает четвертый <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`4" />.</summary>
      <returns>Четвертый аргумент <see cref="T:System.Activities.InArgument`1" />, передаваемый в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`4" />.</returns>
    </member>
    <member name="T:System.Activities.Statements.InvokeAction`5">
      <summary>Вызывает обработчик действия <see cref="T:System.Activities.ActivityAction`5" />.</summary>
      <typeparam name="T1">Тип данных первого <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`5" />.</typeparam>
      <typeparam name="T2">Тип данных второго <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`5" />.</typeparam>
      <typeparam name="T3">Тип данных третьего <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`5" />.</typeparam>
      <typeparam name="T4">Тип данных четвертого <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`5" />.</typeparam>
      <typeparam name="T5">Тип данных пятого <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`5" />.</typeparam>
    </member>
    <member name="M:System.Activities.Statements.InvokeAction`5.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Statements.InvokeAction`5" />.</summary>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`5.Action">
      <summary>Возвращает или задает обработчик действия <see cref="T:System.Activities.ActivityAction`5" />, вызванный этим экземпляром объекта <see cref="T:System.Activities.Statements.InvokeAction`5" />.</summary>
      <returns>Деятельность по действию, вызванная этим экземпляром объекта <see cref="T:System.Activities.Statements.InvokeAction`5" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`5.Argument1">
      <summary>Возвращает или задает первый <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`5" />.</summary>
      <returns>Первый аргумент, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`5" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`5.Argument2">
      <summary>Возвращает или задает второй <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`5" />.</summary>
      <returns>Второй аргумент, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`5" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`5.Argument3">
      <summary>Возвращает или задает третий <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`5" />.</summary>
      <returns>Третий аргумент, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`5" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`5.Argument4">
      <summary>Возвращает или задает четвертый <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`5" />.</summary>
      <returns>Четвертый аргумент, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`5" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`5.Argument5">
      <summary>Возвращает или задает пятый <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`5" />.</summary>
      <returns>Пятый аргумент, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`5" />.</returns>
    </member>
    <member name="T:System.Activities.Statements.InvokeAction`6">
      <summary>Вызывает обработчик действия <see cref="T:System.Activities.ActivityAction`6" />.</summary>
      <typeparam name="T1">Тип данных первого <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`6" />.</typeparam>
      <typeparam name="T2">Тип данных второго <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`6" />.</typeparam>
      <typeparam name="T3">Тип данных третьего <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`6" />.</typeparam>
      <typeparam name="T4">Тип данных четвертого <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`6" />.</typeparam>
      <typeparam name="T5">Тип данных пятого <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`6" />.</typeparam>
      <typeparam name="T6">Тип данных шестого <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`6" />.</typeparam>
    </member>
    <member name="M:System.Activities.Statements.InvokeAction`6.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Statements.InvokeAction`6" />.</summary>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`6.Action">
      <summary>Возвращает или задает обработчик действия <see cref="T:System.Activities.ActivityAction`6" />, вызванный этим экземпляром объекта <see cref="T:System.Activities.Statements.InvokeAction`6" />.</summary>
      <returns>Деятельность по действию, вызванная этим экземпляром объекта <see cref="T:System.Activities.Statements.InvokeAction`6" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`6.Argument1">
      <summary>Возвращает или задает первый <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`6" />.</summary>
      <returns>Первый аргумент, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`6" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`6.Argument2">
      <summary>Возвращает или задает второй <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`6" />.</summary>
      <returns>Второй аргумент, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`6" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`6.Argument3">
      <summary>Возвращает или задает третий <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`6" />.</summary>
      <returns>Третий аргумент, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`6" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`6.Argument4">
      <summary>Возвращает или задает четвертый <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`6" />.</summary>
      <returns>Четвертый аргумент, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`6" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`6.Argument5">
      <summary>Возвращает или задает пятый <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`6" />.</summary>
      <returns>Пятый аргумент, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`6" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`6.Argument6">
      <summary>Возвращает или задает шестой <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`6" />.</summary>
      <returns>Шестой аргумент, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`6" />.</returns>
    </member>
    <member name="T:System.Activities.Statements.InvokeAction`7">
      <summary>Вызывает обработчик действия <see cref="T:System.Activities.ActivityAction`7" />.</summary>
      <typeparam name="T1">Тип данных первого <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`7" />.</typeparam>
      <typeparam name="T2">Тип данных второго <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`7" />.</typeparam>
      <typeparam name="T3">Тип данных третьего <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`7" />.</typeparam>
      <typeparam name="T4">Тип данных четвертого <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`7" />.</typeparam>
      <typeparam name="T5">Тип данных пятого <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`7" />.</typeparam>
      <typeparam name="T6">Тип данных шестого <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`7" />.</typeparam>
      <typeparam name="T7">Тип данных седьмого <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`7" />.</typeparam>
    </member>
    <member name="M:System.Activities.Statements.InvokeAction`7.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Statements.InvokeAction`7" />.</summary>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`7.Action">
      <summary>Возвращает или задает обработчик действия <see cref="T:System.Activities.ActivityAction`7" />, вызванный этим экземпляром объекта <see cref="T:System.Activities.Statements.InvokeAction`7" />.</summary>
      <returns>Деятельность по действию, вызванная этим экземпляром объекта <see cref="T:System.Activities.Statements.InvokeAction`7" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`7.Argument1">
      <summary>Возвращает или задает первый <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`7" />.</summary>
      <returns>Первый аргумент, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`7" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`7.Argument2">
      <summary>Возвращает или задает второй <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`7" />.</summary>
      <returns>Второй аргумент, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`7" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`7.Argument3">
      <summary>Возвращает или задает третий <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`7" />.</summary>
      <returns>Третий аргумент, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`7" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`7.Argument4">
      <summary>Возвращает или задает четвертый <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`7" />.</summary>
      <returns>Четвертый аргумент, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`7" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`7.Argument5">
      <summary>Возвращает или задает пятый <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`7" />.</summary>
      <returns>Пятый аргумент, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`7" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`7.Argument6">
      <summary>Возвращает или задает шестой <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`7" />.</summary>
      <returns>Шестой аргумент, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`7" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`7.Argument7">
      <summary>Возвращает или задает седьмой <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`7" />.</summary>
      <returns>Седьмой аргумент, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`7" />.</returns>
    </member>
    <member name="T:System.Activities.Statements.InvokeAction`8">
      <summary>Вызывает обработчик действия <see cref="T:System.Activities.ActivityAction`8" />.</summary>
      <typeparam name="T1">Тип данных первого <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`8" />.</typeparam>
      <typeparam name="T2">Тип данных второго <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`8" />.</typeparam>
      <typeparam name="T3">Тип данных третьего <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`8" />.</typeparam>
      <typeparam name="T4">Тип данных четвертого <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`8" />.</typeparam>
      <typeparam name="T5">Тип данных пятого <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`8" />.</typeparam>
      <typeparam name="T6">Тип данных шестого <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`8" />.</typeparam>
      <typeparam name="T7">Тип данных седьмого <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`8" />.</typeparam>
      <typeparam name="T8">Тип данных восьмого <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`8" />.</typeparam>
    </member>
    <member name="M:System.Activities.Statements.InvokeAction`8.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Statements.InvokeAction`8" />.</summary>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`8.Action">
      <summary>Возвращает или задает обработчик действия <see cref="T:System.Activities.ActivityAction`8" />, вызванный этим экземпляром объекта <see cref="T:System.Activities.Statements.InvokeAction`8" />.</summary>
      <returns>Деятельность по действию, вызванная этим экземпляром объекта <see cref="T:System.Activities.Statements.InvokeAction`8" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`8.Argument1">
      <summary>Возвращает или задает первый <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`8" />.</summary>
      <returns>Первый аргумент, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`8" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`8.Argument2">
      <summary>Возвращает или задает второй <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`8" />.</summary>
      <returns>Второй аргумент, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`8" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`8.Argument3">
      <summary>Возвращает или задает третий <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`8" />.</summary>
      <returns>Третий аргумент, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`8" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`8.Argument4">
      <summary>Возвращает или задает четвертый <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`8" />.</summary>
      <returns>Четвертый аргумент, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`8" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`8.Argument5">
      <summary>Возвращает или задает пятый <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`8" />.</summary>
      <returns>Пятый аргумент, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`8" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`8.Argument6">
      <summary>Возвращает или задает шестой <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`8" />.</summary>
      <returns>Шестой аргумент, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`8" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`8.Argument7">
      <summary>Возвращает или задает седьмой <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`8" />.</summary>
      <returns>Седьмой аргумент, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`8" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`8.Argument8">
      <summary>Возвращает или задает восьмой <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`8" />.</summary>
      <returns>Восьмой аргумент, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`8" />.</returns>
    </member>
    <member name="T:System.Activities.Statements.InvokeAction`9">
      <summary>Вызывает обработчик действия <see cref="T:System.Activities.ActivityAction`9" />.</summary>
      <typeparam name="T1">Тип данных первого <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`9" />.</typeparam>
      <typeparam name="T2">Тип данных второго <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`9" />.</typeparam>
      <typeparam name="T3">Тип данных третьего <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`9" />.</typeparam>
      <typeparam name="T4">Тип данных четвертого <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`9" />.</typeparam>
      <typeparam name="T5">Тип данных пятого <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`9" />.</typeparam>
      <typeparam name="T6">Тип данных шестого <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`9" />.</typeparam>
      <typeparam name="T7">Тип данных седьмого <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`9" />.</typeparam>
      <typeparam name="T8">Тип данных восьмого <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`9" />.</typeparam>
      <typeparam name="T9">Тип данных девятого <see cref="T:System.Activities.InArgument`1" />, переданного в обработчик действия <see cref="T:System.Activities.ActivityAction`9" />.</typeparam>
    </member>
    <member name="M:System.Activities.Statements.InvokeAction`9.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Statements.InvokeAction`9" />.</summary>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`9.Action">
      <summary>Возвращает или задает обработчик действия <see cref="T:System.Activities.ActivityAction`9" />, вызванный этим экземпляром объекта <see cref="T:System.Activities.Statements.InvokeAction`9" />.</summary>
      <returns>Деятельность по действию, вызванная этим экземпляром объекта <see cref="T:System.Activities.Statements.InvokeAction`9" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`9.Argument1">
      <summary>Возвращает или задает первый <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`9" />.</summary>
      <returns>Первый аргумент, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`9" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`9.Argument2">
      <summary>Возвращает или задает второй <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`9" />.</summary>
      <returns>Второй аргумент, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`9" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`9.Argument3">
      <summary>Возвращает или задает третий <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`9" />.</summary>
      <returns>Третий аргумент, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`9" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`9.Argument4">
      <summary>Возвращает или задает четвертый <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`9" />.</summary>
      <returns>Четвертый аргумент, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`9" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`9.Argument5">
      <summary>Возвращает или задает пятый <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`9" />.</summary>
      <returns>Пятый аргумент, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`9" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`9.Argument6">
      <summary>Возвращает или задает шестой <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`9" />.</summary>
      <returns>Шестой аргумент, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`9" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`9.Argument7">
      <summary>Возвращает или задает седьмой <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`9" />.</summary>
      <returns>Седьмой аргумент, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`9" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`9.Argument8">
      <summary>Возвращает или задает восьмой <see cref="T:System.Activities.InArgument`1" />, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`9" />.</summary>
      <returns>Восьмой аргумент, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`9" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeAction`9.Argument9">
      <summary>Возвращает или задает девятый <see cref="T:System.Activities.InArgument`1" /> переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`9" />.</summary>
      <returns>Девятый аргумент, переданный в связанный обработчик действия <see cref="T:System.Activities.ActivityAction`9" />.</returns>
    </member>
    <member name="T:System.Activities.Statements.InvokeDelegate">
      <summary>Вызывает заданный объект <see cref="T:System.Activities.ActivityDelegate" />.</summary>
    </member>
    <member name="M:System.Activities.Statements.InvokeDelegate.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.Statements.InvokeDelegate" />.</summary>
    </member>
    <member name="P:System.Activities.Statements.InvokeDelegate.Default">
      <summary>Получает или задает действие по умолчанию, когда вызов не требуется.</summary>
      <returns>Действие по умолчанию.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeDelegate.Delegate">
      <summary>Возвращает объект <see cref="T:System.Activities.ActivityDelegate" /> для вызова.</summary>
      <returns>Делегат.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeDelegate.DelegateArguments">
      <summary>Аргументы, передаваемые объекту <see cref="T:System.Activities.ActivityDelegate" />.</summary>
      <returns>Аргументы, передаваемые делегату.</returns>
    </member>
    <member name="T:System.Activities.Statements.InvokeMethod">
      <summary>Вызывает открытый метод заданного объекта или типа.</summary>
    </member>
    <member name="M:System.Activities.Statements.InvokeMethod.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.Statements.InvokeMethod" />.</summary>
    </member>
    <member name="P:System.Activities.Statements.InvokeMethod.GenericTypeArguments">
      <summary>Аргументы универсального типа содержащегося метода.</summary>
      <returns>Аргументы.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeMethod.MethodName">
      <summary>Имя метода, вызываемого при выполнении действия.</summary>
      <returns>Имя метода.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeMethod.Parameters">
      <summary>Коллекция параметров вызываемого метода.</summary>
      <returns>Коллекция параметров.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeMethod.Result">
      <summary>Возвращаемое значение операции метода.</summary>
      <returns>Возвращаемое значение операции.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeMethod.RunAsynchronously">
      <summary>Возвращает или задает значение, которое показывает, вызван ли метод действия асинхронно.</summary>
      <returns>Значение <see langword="true" />, если метод выполняется асинхронно.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeMethod.TargetObject">
      <summary>Объект, в котором содержится метод для выполнения.</summary>
      <returns>Объект.</returns>
    </member>
    <member name="P:System.Activities.Statements.InvokeMethod.TargetType">
      <summary>Тип <see cref="P:System.Activities.Statements.InvokeMethod.TargetObject" />.</summary>
      <returns>Тип целевого объекта.</returns>
    </member>
    <member name="T:System.Activities.Statements.NoPersistScope">
      <summary>Представляет действие NoPersistScope.</summary>
    </member>
    <member name="M:System.Activities.Statements.NoPersistScope.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Statements.NoPersistScope" />.</summary>
    </member>
    <member name="P:System.Activities.Statements.NoPersistScope.Body">
      <summary>Получает или задает тело действия NoPersistScope.</summary>
      <returns>Тело действия NoPersistScope.</returns>
    </member>
    <member name="T:System.Activities.Statements.Parallel">
      <summary>Действие, которое выполняет все дочерние действия одновременно и асинхронно.</summary>
    </member>
    <member name="M:System.Activities.Statements.Parallel.#ctor">
      <summary>Создает новый экземпляр действия <see cref="T:System.Activities.Statements.Parallel" />.</summary>
    </member>
    <member name="P:System.Activities.Statements.Parallel.Branches">
      <summary>Дочерние элементы, которые выполняются параллельно.</summary>
      <returns>Элементы.</returns>
    </member>
    <member name="P:System.Activities.Statements.Parallel.CompletionCondition">
      <summary>Оценивает после завершения какой-либо ветви.</summary>
      <returns>Выражение завершения.</returns>
    </member>
    <member name="P:System.Activities.Statements.Parallel.Variables">
      <summary>Коллекция содержащихся переменных.</summary>
      <returns>Содержащиеся переменные.</returns>
    </member>
    <member name="T:System.Activities.Statements.ParallelForEach`1">
      <summary>Перечисляет элементы коллекции и выполняет внедренную инструкцию для каждого элемента коллекции параллельно.</summary>
      <typeparam name="T">Тип значений в коллекции <see cref="P:System.Activities.Statements.ParallelForEach`1.Values" />.</typeparam>
    </member>
    <member name="M:System.Activities.Statements.ParallelForEach`1.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.Statements.ParallelForEach`1" />.</summary>
    </member>
    <member name="P:System.Activities.Statements.ParallelForEach`1.Body">
      <summary>Объект <see cref="T:System.Activities.ActivityAction" />, который однократно выполняется для каждого значения, содержащегося в коллекции свойств <see cref="P:System.Activities.Statements.ParallelForEach`1.Values" />.</summary>
      <returns>Содержащаяся операция действия.</returns>
    </member>
    <member name="P:System.Activities.Statements.ParallelForEach`1.CompletionCondition">
      <summary>Оценивается после каждого выполнения итерации.</summary>
      <returns>Выражение завершения.</returns>
    </member>
    <member name="P:System.Activities.Statements.ParallelForEach`1.Values">
      <summary>Коллекция значений, используемых в качестве параметров для каждой итерации действия, которое содержится в свойстве <see cref="P:System.Activities.Statements.ParallelForEach`1.Body" />.</summary>
      <returns>Коллекция значений.</returns>
    </member>
    <member name="T:System.Activities.Statements.Persist">
      <summary>Запрашивает сохранение экземпляра рабочего процесса.</summary>
    </member>
    <member name="M:System.Activities.Statements.Persist.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.Statements.Persist" />.</summary>
    </member>
    <member name="T:System.Activities.Statements.Pick">
      <summary>Предоставляет моделирование потока управления на основе событий.</summary>
    </member>
    <member name="M:System.Activities.Statements.Pick.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.Statements.Pick" />.</summary>
    </member>
    <member name="P:System.Activities.Statements.Pick.Branches">
      <summary>Коллекция объектов <see cref="T:System.Activities.Statements.PickBranch" />, один из которых потенциально выполняет действие <see cref="T:System.Activities.Statements.Pick" /> в зависимости от входящих событий.</summary>
      <returns>Коллекция ветвей.</returns>
    </member>
    <member name="T:System.Activities.Statements.PickBranch">
      <summary>Потенциальный путь выполнения в действии <see cref="T:System.Activities.Statements.Pick" />.</summary>
    </member>
    <member name="M:System.Activities.Statements.PickBranch.#ctor">
      <summary>Создает новый экземпляр действия <see cref="T:System.Activities.Statements.PickBranch" />.</summary>
    </member>
    <member name="P:System.Activities.Statements.PickBranch.Action">
      <summary>Действие <see cref="T:System.Activities.Activity" />, которое выполняется, если эта ветвь запускается на выполнение.</summary>
      <returns>Действие, которое необходимо выполнить.</returns>
    </member>
    <member name="P:System.Activities.Statements.PickBranch.DisplayName">
      <summary>Имя этой ветви, которое отображается в конструкторе действий.</summary>
      <returns>Имя ветви.</returns>
    </member>
    <member name="P:System.Activities.Statements.PickBranch.Trigger">
      <summary>Действие, завершение которого активирует эту ветвь выбора.</summary>
      <returns>Запускающее действие.</returns>
    </member>
    <member name="P:System.Activities.Statements.PickBranch.Variables">
      <summary>Коллекция пользовательских переменных, которые связаны с этим действием.</summary>
      <returns>Коллекция переменных.</returns>
    </member>
    <member name="T:System.Activities.Statements.RemoveFromCollection`1">
      <summary>Удаляет элемент из заданной коллекции.</summary>
      <typeparam name="T">Тип элементов указанной коллекции.</typeparam>
    </member>
    <member name="M:System.Activities.Statements.RemoveFromCollection`1.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.Statements.RemoveFromCollection`1" />.</summary>
    </member>
    <member name="P:System.Activities.Statements.RemoveFromCollection`1.Collection">
      <summary>Коллекция, из которой удаляется свойство <see cref="P:System.Activities.Statements.RemoveFromCollection`1.Item" />.</summary>
      <returns>Коллекция.</returns>
    </member>
    <member name="P:System.Activities.Statements.RemoveFromCollection`1.Item">
      <summary>Элемент, который должен быть удален из указанного свойства <see cref="P:System.Activities.Statements.RemoveFromCollection`1.Collection" />.</summary>
      <returns>Удаляемый элемент.</returns>
    </member>
    <member name="T:System.Activities.Statements.Rethrow">
      <summary>Вызывает ранее вызванное исключение из действия <see cref="T:System.Activities.Statements.Catch" />.</summary>
    </member>
    <member name="M:System.Activities.Statements.Rethrow.#ctor">
      <summary>Создает новый экземпляр действия <see cref="T:System.Activities.Statements.Rethrow" />.</summary>
    </member>
    <member name="T:System.Activities.Statements.Sequence">
      <summary>Выполняет набор дочерних действий в соответствии с единым определенным порядком.</summary>
    </member>
    <member name="M:System.Activities.Statements.Sequence.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.Statements.Sequence" />.</summary>
    </member>
    <member name="P:System.Activities.Statements.Sequence.Activities">
      <summary>Коллекция содержащихся действий, которые выполняются последовательно.</summary>
      <returns>Действия.</returns>
    </member>
    <member name="P:System.Activities.Statements.Sequence.Variables">
      <summary>Коллекция содержащихся переменных.</summary>
      <returns>Коллекция переменных.</returns>
    </member>
    <member name="T:System.Activities.Statements.State">
      <summary>Моделирует состояние, в котором может находиться конечный автомат.</summary>
    </member>
    <member name="M:System.Activities.Statements.State.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Statements.State" />.</summary>
    </member>
    <member name="P:System.Activities.Statements.State.DisplayName">
      <summary>Возвращает или задает дополнительное понятное имя, используемое для отладки, проверки, обработки исключений и отслеживания.</summary>
      <returns>Возвращает <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.State.Entry">
      <summary>Возвращает или задает действие, которое выполняется при входе в состояние.</summary>
      <returns>Возвращает <see cref="T:System.Activities.Activity" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.State.Exit">
      <summary>Возвращает или задает действие, которое выполняется при выходе из состояния.</summary>
      <returns>Возвращает <see cref="T:System.Activities.Activity" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.State.IsFinal">
      <summary>Возвращает или задает значение, указывающее, является ли состояние конечным.</summary>
      <returns>Возвращает <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.State.Transitions">
      <summary>Возвращает коллекцию переходов, получаемых из этого состояния.</summary>
      <returns>Возвращает <see cref="T:System.Collections.ObjectModel.Collection`1" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.State.Variables">
      <summary>Возвращает коллекцию переменных объектов, связанных с этим состоянием.</summary>
      <returns>Возвращает <see cref="T:System.Collections.ObjectModel.Collection`1" />.</returns>
    </member>
    <member name="T:System.Activities.Statements.StateMachine">
      <summary>Моделирует рабочие процессы с помощью известных принципов конечного автомата.</summary>
    </member>
    <member name="M:System.Activities.Statements.StateMachine.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Statements.StateMachine" />.</summary>
    </member>
    <member name="P:System.Activities.Statements.StateMachine.InitialState">
      <summary>Возвращает или задает начальное состояние <see cref="T:System.Activities.Statements.StateMachine" />.</summary>
      <returns>Возвращает <see cref="T:System.Activities.Statements.State" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.StateMachine.States">
      <summary>Возвращает коллекцию всех состояний корневого уровня, содержащихся в конечном автомате <see cref="T:System.Activities.Statements.StateMachine" />.</summary>
      <returns>Возвращает <see cref="T:System.Collections.ObjectModel.Collection`1" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.StateMachine.Variables">
      <summary>Возвращает коллекцию переменных, которые можно использовать в области <see cref="T:System.Activities.Statements.StateMachine" />.</summary>
      <returns>Возвращает <see cref="T:System.Collections.ObjectModel.Collection`1" />.</returns>
    </member>
    <member name="T:System.Activities.Statements.Switch`1">
      <summary>Выбирает для выполнения одно действие из нескольких в зависимости от значения указанного выражения типа, заданного в этом описателе типа объекта.</summary>
      <typeparam name="T">Тип значений в коллекции <see cref="P:System.Activities.Statements.Switch`1.Cases" />.</typeparam>
    </member>
    <member name="M:System.Activities.Statements.Switch`1.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.Statements.Switch`1" />.</summary>
    </member>
    <member name="M:System.Activities.Statements.Switch`1.#ctor(System.Activities.Activity{`0})">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.Statements.Switch`1" /> с указанным выражением.</summary>
      <param name="expression">Выражение для проверки и сравнения со значениями в словаре <see cref="P:System.Activities.Statements.Switch`1.Cases" />.</param>
    </member>
    <member name="M:System.Activities.Statements.Switch`1.#ctor(System.Activities.InArgument{`0})">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.Statements.Switch`1" /> с указанным выражением.</summary>
      <param name="expression">Выражение для проверки и сравнения со значениями в словаре <see cref="P:System.Activities.Statements.Switch`1.Cases" />.</param>
    </member>
    <member name="M:System.Activities.Statements.Switch`1.#ctor(System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,`0}})">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.Statements.Switch`1" /> с указанным выражением.</summary>
      <param name="expression">Выражение для проверки и сравнения со значениями в словаре <see cref="P:System.Activities.Statements.Switch`1.Cases" />.</param>
    </member>
    <member name="P:System.Activities.Statements.Switch`1.Cases">
      <summary>Представляет словарь потенциальных путей выполнения. Каждая запись содержит ключ и действие, которое выполняется, когда результат выражения совпадает с ключом.</summary>
      <returns>Пути выполнения.</returns>
    </member>
    <member name="P:System.Activities.Statements.Switch`1.Default">
      <summary>Представляет действие, выполняемое, если ни один из ключей в записях коллекции <see cref="P:System.Activities.Statements.Switch`1.Cases" /> не согласуется со свойством <see cref="P:System.Activities.Statements.Switch`1.Expression" />.</summary>
      <returns>Действие, выполняемое по умолчанию.</returns>
    </member>
    <member name="P:System.Activities.Statements.Switch`1.Expression">
      <summary>Возвращает объект для сравнения с ключами в коллекции <see cref="P:System.Activities.Statements.Switch`1.Cases" />.</summary>
      <returns>Объект для сравнения с ключами в коллекции <see cref="P:System.Activities.Statements.Switch`1.Cases" />.</returns>
    </member>
    <member name="T:System.Activities.Statements.TerminateWorkflow">
      <summary>Завершает выполняющийся экземпляр рабочего процесса, вызывает в узле событие свойства <see cref="P:System.Activities.WorkflowApplication.Completed" /> и сообщает сведения об ошибках. Рабочий процесс после завершения нельзя продолжить.</summary>
    </member>
    <member name="M:System.Activities.Statements.TerminateWorkflow.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.Statements.TerminateWorkflow" />.</summary>
    </member>
    <member name="P:System.Activities.Statements.TerminateWorkflow.Exception">
      <summary>Возвращает или задает исключение, которое вызывает завершение экземпляра.</summary>
      <returns>Исключение.</returns>
    </member>
    <member name="P:System.Activities.Statements.TerminateWorkflow.Reason">
      <summary>Строковый входной аргумент с причиной завершения выполнения экземпляра рабочего процесса.</summary>
      <returns>Причина завершения работы экземпляра рабочего процесса.</returns>
    </member>
    <member name="T:System.Activities.Statements.Throw">
      <summary>Создает исключение.</summary>
    </member>
    <member name="M:System.Activities.Statements.Throw.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.Statements.Throw" />.</summary>
    </member>
    <member name="P:System.Activities.Statements.Throw.Exception">
      <summary>Исключение, вызванное действием.</summary>
      <returns>Исключение.</returns>
    </member>
    <member name="T:System.Activities.Statements.TimerExtension">
      <summary>Абстрактный базовый класс для расширений таймера.</summary>
    </member>
    <member name="M:System.Activities.Statements.TimerExtension.#ctor">
      <summary>При реализации в производном классе создает новый экземпляр производного класса.</summary>
    </member>
    <member name="M:System.Activities.Statements.TimerExtension.CancelTimer(System.Activities.Bookmark)">
      <summary>Удаляет таймер.</summary>
      <param name="bookmark">Закладка, связанная с таймером.</param>
    </member>
    <member name="M:System.Activities.Statements.TimerExtension.OnCancelTimer(System.Activities.Bookmark)">
      <summary>Вызывается методом <see cref="M:System.Activities.Statements.TimerExtension.CancelTimer(System.Activities.Bookmark)" />.</summary>
      <param name="bookmark">Закладка, связанная с таймером.</param>
    </member>
    <member name="M:System.Activities.Statements.TimerExtension.OnRegisterTimer(System.TimeSpan,System.Activities.Bookmark)">
      <summary>Вызывается методом <see cref="M:System.Activities.Statements.TimerExtension.RegisterTimer(System.TimeSpan,System.Activities.Bookmark)" />.</summary>
      <param name="timeout">Длительность таймера.</param>
      <param name="bookmark">Закладка, связанная с таймером, возобновляемая после истечения времени ожидания.</param>
    </member>
    <member name="M:System.Activities.Statements.TimerExtension.RegisterTimer(System.TimeSpan,System.Activities.Bookmark)">
      <summary>Создает таймер с заданной длительностью и связью.</summary>
      <param name="timeout">Длительность таймера.</param>
      <param name="bookmark">Закладка, связанная с таймером, возобновляемая после истечения времени ожидания.</param>
    </member>
    <member name="T:System.Activities.Statements.Tracking.StateMachineStateQuery">
      <summary>При добавлении в запросы выполняет подписку на записи выполнения состояний конечного автомата.</summary>
    </member>
    <member name="M:System.Activities.Statements.Tracking.StateMachineStateQuery.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Statements.Tracking.StateMachineStateQuery" />.</summary>
    </member>
    <member name="P:System.Activities.Statements.Tracking.StateMachineStateQuery.Name">
      <summary>Возвращает имя, отличающее эту запись отслеживания.</summary>
      <returns>Возвращает <see cref="T:System.String" />.</returns>
    </member>
    <member name="T:System.Activities.Statements.Tracking.StateMachineStateRecord">
      <summary>Представляет запись отслеживания, которая создается, когда экземпляр конечного автомата переходит в состояние.</summary>
    </member>
    <member name="M:System.Activities.Statements.Tracking.StateMachineStateRecord.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Statements.Tracking.StateMachineStateRecord" />.</summary>
    </member>
    <member name="P:System.Activities.Statements.Tracking.StateMachineStateRecord.StateMachineName">
      <summary>Возвращает отображаемое имя действия конечного автомата, содержащего состояние.</summary>
      <returns>Возвращает <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.Tracking.StateMachineStateRecord.StateName">
      <summary>Возвращает отображаемое имя состояния выполнения при создании записи.</summary>
      <returns>Возвращает <see cref="T:System.String" />.</returns>
    </member>
    <member name="T:System.Activities.Statements.TransactionScope">
      <summary>Действие, которое указывает границу транзакции.</summary>
    </member>
    <member name="M:System.Activities.Statements.TransactionScope.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Statements.TransactionScope" />.</summary>
    </member>
    <member name="P:System.Activities.Statements.TransactionScope.AbortInstanceOnTransactionFailure">
      <summary>Возвращает или задает значение, которое указывает, следует ли прерывать рабочий процесс, если прервана транзакция.</summary>
      <returns>Значение <see langword="true" />, если рабочий процесс следует прервать.</returns>
    </member>
    <member name="P:System.Activities.Statements.TransactionScope.Body">
      <summary>Возвращает или задает действие, запланированное, когда выполняется <see cref="T:System.Activities.Statements.TransactionScope" />.</summary>
      <returns>Действие, запланированное, когда выполняется <see cref="T:System.Activities.Statements.TransactionScope" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.TransactionScope.IsolationLevel">
      <summary>Возвращает или задает свойство <see cref="T:System.Transactions.IsolationLevel" /> для этого объекта <see cref="T:System.Activities.Statements.TransactionScope" />.</summary>
      <returns>
        <see cref="T:System.Transactions.IsolationLevel" /> для этой службы <see cref="T:System.Activities.Statements.TransactionScope" />.</returns>
    </member>
    <member name="M:System.Activities.Statements.TransactionScope.ShouldSerializeIsolationLevel">
      <summary>Указывает, должно ли быть сериализовано свойство <see cref="P:System.Activities.Statements.TransactionScope.IsolationLevel" /> для данного <see cref="T:System.Activities.Statements.TransactionScope" />.</summary>
      <returns>Значение <see langword="true" />, если значение свойства <see cref="P:System.Activities.Statements.TransactionScope.IsolationLevel" /> подлежит сериализации, в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Activities.Statements.TransactionScope.ShouldSerializeTimeout">
      <summary>Указывает, должно ли быть сериализовано свойство <see cref="P:System.Activities.Statements.TransactionScope.Timeout" /> для данного <see cref="T:System.Activities.Statements.TransactionScope" />.</summary>
      <returns>Значение <see langword="true" />, если значение свойства <see cref="P:System.Activities.Statements.TransactionScope.Timeout" /> подлежит сериализации, в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.TransactionScope.Timeout">
      <summary>Возвращает или задает объект <see cref="T:System.TimeSpan" />, указывающий время ожидания транзакции, которая используется для этого объекта <see cref="T:System.Activities.Statements.TransactionScope" />.</summary>
      <returns>Объект <see cref="T:System.TimeSpan" />, который указывает время ожидания транзакции, использующейся для этого объекта <see cref="T:System.Activities.Statements.TransactionScope" />.</returns>
    </member>
    <member name="T:System.Activities.Statements.Transition">
      <summary>Моделирует список возможных изменений состояния.</summary>
    </member>
    <member name="M:System.Activities.Statements.Transition.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Statements.Transition" />.</summary>
    </member>
    <member name="P:System.Activities.Statements.Transition.Action">
      <summary>Возвращает или задает действие, выполняемое во время перехода.</summary>
      <returns>Возвращает <see cref="T:System.Activities.Activity" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.Transition.Condition">
      <summary>Указывает условие, тестирование которого выполняет переход при срабатывании триггера.</summary>
      <returns>Выражение логического значения, которое представляет условие.</returns>
    </member>
    <member name="P:System.Activities.Statements.Transition.DisplayName">
      <summary>Возвращает или задает дополнительное понятное имя, используемое для отладки, проверки, обработки исключений и отслеживания.</summary>
      <returns>Возвращает <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.Transition.To">
      <summary>Возвращает или задает следующее состояние конечного автомата, выполняемое после завершения перехода.</summary>
      <returns>Возвращает <see cref="T:System.Activities.Statements.State" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.Transition.Trigger">
      <summary>Возвращает или задает действие, завершение которого запускает этот переход.</summary>
      <returns>Возвращает <see cref="T:System.Activities.Activity" />.</returns>
    </member>
    <member name="T:System.Activities.Statements.TryCatch">
      <summary>Содержит действия для выполнения с применением среды выполнения рабочих процессов в блоке обработки исключений.</summary>
    </member>
    <member name="M:System.Activities.Statements.TryCatch.#ctor">
      <summary>Создает новый экземпляр класса <see cref="M:System.Activities.Statements.TryCatch.#ctor" />.</summary>
    </member>
    <member name="P:System.Activities.Statements.TryCatch.Catches">
      <summary>Коллекция элементов <see langword="Catch" />, которые проверяются, когда действие <see cref="P:System.Activities.Statements.TryCatch.Try" /> вызывает исключение.</summary>
      <returns>Коллекция элементов перехвата.</returns>
    </member>
    <member name="P:System.Activities.Statements.TryCatch.Finally">
      <summary>Действие, которое необходимо выполнить, когда завершится выполнение <see cref="P:System.Activities.Statements.TryCatch.Try" /> и любых необходимых действий в коллекции <see cref="P:System.Activities.Statements.TryCatch.Catches" />.</summary>
      <returns>Действие, которое представляет логику <see cref="P:System.Activities.Statements.TryCatch.Finally" />.</returns>
    </member>
    <member name="P:System.Activities.Statements.TryCatch.Try">
      <summary>Действие, выполняемое первым при выполнении действия <see cref="T:System.Activities.Statements.TryCatch" />.</summary>
      <returns>Действие.</returns>
    </member>
    <member name="P:System.Activities.Statements.TryCatch.Variables">
      <summary>Коллекция содержащихся переменных.</summary>
      <returns>Коллекция переменных.</returns>
    </member>
    <member name="T:System.Activities.Statements.While">
      <summary>Выполняет содержащиеся действие, если условие оценивается как <see langword="true" />.</summary>
    </member>
    <member name="M:System.Activities.Statements.While.#ctor">
      <summary>Создает новый экземпляр действия <see cref="T:System.Activities.Statements.While" />.</summary>
    </member>
    <member name="M:System.Activities.Statements.While.#ctor(System.Activities.Activity{System.Boolean})">
      <summary>Создает новый экземпляр действия <see cref="T:System.Activities.Statements.While" />.</summary>
      <param name="condition">Условие, по которому действие многократно повторяется.</param>
    </member>
    <member name="M:System.Activities.Statements.While.#ctor(System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,System.Boolean}})">
      <summary>Создает новый экземпляр действия <see cref="T:System.Activities.Statements.While" />.</summary>
      <param name="condition">Условие, по которому действие многократно повторяется.</param>
    </member>
    <member name="P:System.Activities.Statements.While.Body">
      <summary>Объект <see cref="T:System.Activities.Activity" /> для выполнения в цикле <see langword="While" />.</summary>
      <returns>Действие, которое необходимо выполнить.</returns>
    </member>
    <member name="P:System.Activities.Statements.While.Condition">
      <summary>Объект <see cref="T:System.Activities.Activity`1" />, вычисляемый перед каждой итерацией цикла <see langword="While" />.</summary>
      <returns>Условие.</returns>
    </member>
    <member name="P:System.Activities.Statements.While.Variables">
      <summary>Коллекция объектов <see cref="T:System.Activities.Variable" />, связанных с действием <see cref="T:System.Activities.Statements.While" />.</summary>
      <returns>Коллекция переменных.</returns>
    </member>
    <member name="T:System.Activities.Statements.WorkflowTerminatedException">
      <summary>Исключение, которое создается, когда операция вызывается применительно к завершившемуся объекту <see cref="T:System.Activities.WorkflowApplication" />.</summary>
    </member>
    <member name="M:System.Activities.Statements.WorkflowTerminatedException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Statements.WorkflowTerminatedException" />, используя значения по умолчанию.</summary>
    </member>
    <member name="M:System.Activities.Statements.WorkflowTerminatedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Statements.WorkflowTerminatedException" /> с сериализованными данными.</summary>
      <param name="info">Объект <see cref="T:System.Runtime.Serialization.SerializationInfo" />, хранящий сериализованные данные объекта, относящиеся к выдаваемому исключению.</param>
      <param name="context">Объект <see cref="T:System.Runtime.Serialization.StreamingContext" />, содержащий контекстные сведения об источнике или назначении.</param>
    </member>
    <member name="M:System.Activities.Statements.WorkflowTerminatedException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Statements.WorkflowTerminatedException" /> с указанным сообщением об ошибке.</summary>
      <param name="message">Сообщение об ошибке, указывающее причину создания исключения.</param>
    </member>
    <member name="M:System.Activities.Statements.WorkflowTerminatedException.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Statements.WorkflowTerminatedException" /> указанным сообщением об ошибке и ссылкой на внутреннее исключение, вызвавшее данное исключение.</summary>
      <param name="message">Сообщение об ошибке, указывающее причину создания исключения.</param>
      <param name="innerException">Исключение, вызвавшее текущее исключение, или пустая ссылка (<see langword="Nothing" /> в Visual Basic), если внутреннее исключение не задано.</param>
    </member>
    <member name="T:System.Activities.Statements.WriteLine">
      <summary>Записывает указанную строку в указанный объект <see cref="T:System.IO.TextWriter" />.</summary>
    </member>
    <member name="M:System.Activities.Statements.WriteLine.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.Statements.WriteLine" />.</summary>
    </member>
    <member name="P:System.Activities.Statements.WriteLine.Text">
      <summary>Текст для записи.</summary>
      <returns>Текст.</returns>
    </member>
    <member name="P:System.Activities.Statements.WriteLine.TextWriter">
      <summary>Экземпляр <see cref="T:System.IO.TextWriter" />, в который требуется записать <see cref="P:System.Activities.Statements.WriteLine.Text" />.</summary>
      <returns>Модуль записи текста.</returns>
    </member>
    <member name="T:System.Activities.Tracking.ActivityInfo">
      <summary>Содержит сведения об отслеживаемом событии <see cref="T:System.Activities.Activity" />.</summary>
    </member>
    <member name="M:System.Activities.Tracking.ActivityInfo.#ctor(System.String,System.String,System.String,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Tracking.ActivityInfo" /> с использованием указанного имени, идентификатора, идентификатора экземпляра и имени типа.</summary>
      <param name="name">Имя действия.</param>
      <param name="id">Идентификатор действия.</param>
      <param name="instanceId">Идентификатор экземпляра действия.</param>
      <param name="typeName">Имя типа действия.</param>
    </member>
    <member name="P:System.Activities.Tracking.ActivityInfo.Id">
      <summary>Возвращает идентификатор для действия.</summary>
      <returns>Идентификатор действия.</returns>
    </member>
    <member name="P:System.Activities.Tracking.ActivityInfo.InstanceId">
      <summary>Возвращает идентификатор времени выполнения для экземпляра действия.</summary>
      <returns>Идентификатор экземпляра действия.</returns>
    </member>
    <member name="P:System.Activities.Tracking.ActivityInfo.Name">
      <summary>Возвращает имя, связанное с действием.</summary>
      <returns>Имя действия.</returns>
    </member>
    <member name="M:System.Activities.Tracking.ActivityInfo.ToString">
      <summary>Возвращает строковое представление объекта <see cref="T:System.Activities.Tracking.ActivityInfo" />.</summary>
      <returns>Имя действия, идентификатор, идентификатор экземпляра и имя типа.</returns>
    </member>
    <member name="P:System.Activities.Tracking.ActivityInfo.TypeName">
      <summary>Возвращает имя типа действия.</summary>
      <returns>Имя типа действия.</returns>
    </member>
    <member name="T:System.Activities.Tracking.ActivityScheduledQuery">
      <summary>При добавлении в свойство <see cref="P:System.Activities.Tracking.TrackingProfile.Queries" /> коллекции, подписывает на записи запланированного действия в момент создании профиля отслеживания для подписки на записи отслеживания.</summary>
    </member>
    <member name="M:System.Activities.Tracking.ActivityScheduledQuery.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.Tracking.ActivityScheduledQuery" />.</summary>
    </member>
    <member name="P:System.Activities.Tracking.ActivityScheduledQuery.ActivityName">
      <summary>Возвращает имя действия, от которого подписывает запрос отслеживания.</summary>
      <returns>Имя действия, которое планирует это действие.</returns>
    </member>
    <member name="P:System.Activities.Tracking.ActivityScheduledQuery.ChildActivityName">
      <summary>Возвращает имя запланированного действия, на которое подписывает запрос отслеживания.</summary>
      <returns>Имя запланированного действия.</returns>
    </member>
    <member name="T:System.Activities.Tracking.ActivityScheduledRecord">
      <summary>Представляет запись отслеживания действия, которое запланировано для выполнения.</summary>
    </member>
    <member name="M:System.Activities.Tracking.ActivityScheduledRecord.#ctor(System.Guid,System.Int64,System.Activities.Tracking.ActivityInfo,System.Activities.Tracking.ActivityInfo)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Tracking.ActivityScheduledRecord" />, используя указанный идентификатор экземпляра, номер записи, действие и дочернее действие.</summary>
      <param name="instanceId">Идентификатор экземпляра запланированного действия.</param>
      <param name="recordNumber">Последовательность, которая указывает порядок создания записей отслеживания.</param>
      <param name="activity">Действие, которое выдает запрос на запланированное выполнение.</param>
      <param name="child">Запланированное действие.</param>
    </member>
    <member name="P:System.Activities.Tracking.ActivityScheduledRecord.Activity">
      <summary>Возвращает объект <see cref="T:System.Activities.Tracking.ActivityInfo" /> для действия.</summary>
      <returns>Сведения о действии.</returns>
    </member>
    <member name="P:System.Activities.Tracking.ActivityScheduledRecord.Child">
      <summary>Возвращает объект <see cref="T:System.Activities.Tracking.ActivityInfo" /> для дочернего действия.</summary>
      <returns>Сведения о дочернем действии.</returns>
    </member>
    <member name="M:System.Activities.Tracking.ActivityScheduledRecord.ToString">
      <summary>Возвращает строку, которая содержит все подробные сведения объекта <see cref="T:System.Activities.Tracking.ActivityScheduledRecord" />.</summary>
      <returns>Подробные сведения о записи отслеживания.</returns>
    </member>
    <member name="T:System.Activities.Tracking.ActivityStateQuery">
      <summary>При добавлении в свойство <see cref="P:System.Activities.Tracking.TrackingProfile.Queries" /> выполняет подписку на записи состояний действия.</summary>
    </member>
    <member name="M:System.Activities.Tracking.ActivityStateQuery.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.Tracking.ActivityStateQuery" />.</summary>
    </member>
    <member name="P:System.Activities.Tracking.ActivityStateQuery.ActivityName">
      <summary>Возвращает имя действия, для которого получается по подписке запись отслеживания.</summary>
      <returns>Имя действия.</returns>
    </member>
    <member name="P:System.Activities.Tracking.ActivityStateQuery.Arguments">
      <summary>Возвращает коллекцию аргументов, связанных с этим запросом действия.</summary>
      <returns>Коллекция аргументов.</returns>
    </member>
    <member name="P:System.Activities.Tracking.ActivityStateQuery.States">
      <summary>Возвращает состояния подписанного действия, для которого необходимо создать запись отслеживания.</summary>
      <returns>Коллекция состояний.</returns>
    </member>
    <member name="P:System.Activities.Tracking.ActivityStateQuery.Variables">
      <summary>Возвращает коллекцию переменных, связанных с этим запросом действия.</summary>
      <returns>Коллекция переменных.</returns>
    </member>
    <member name="T:System.Activities.Tracking.ActivityStateRecord">
      <summary>Представляет запись отслеживания, которая создается, когда действие изменяет состояние.</summary>
    </member>
    <member name="M:System.Activities.Tracking.ActivityStateRecord.#ctor(System.Guid,System.Int64,System.Activities.Tracking.ActivityInfo,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Tracking.ActivityStateRecord" />, используя указанный идентификатор экземпляра, номер записи, действие и состояние действие.</summary>
      <param name="instanceId">Идентификатор экземпляра действия.</param>
      <param name="recordNumber">Последовательность, которая определяет порядок создания записей отслеживания.</param>
      <param name="activity">Действие.</param>
      <param name="state">Состояние действия.</param>
    </member>
    <member name="P:System.Activities.Tracking.ActivityStateRecord.Activity">
      <summary>Возвращает объект <see cref="T:System.Activities.Tracking.ActivityInfo" />, который содержит сведения о действии в момент создания записи.</summary>
      <returns>Сведения о действии.</returns>
    </member>
    <member name="P:System.Activities.Tracking.ActivityStateRecord.Arguments">
      <summary>Возвращает текущие значения отслеживаемых аргументов, которые связаны с действием, в момент создания записи.</summary>
      <returns>Объект <see cref="T:System.Collections.Generic.IDictionary`2" />, в котором содержатся аргументы.</returns>
    </member>
    <member name="P:System.Activities.Tracking.ActivityStateRecord.State">
      <summary>Возвращает текущее состояние действия в момент создания записи.</summary>
      <returns>Состояние действия.</returns>
    </member>
    <member name="M:System.Activities.Tracking.ActivityStateRecord.ToString">
      <summary>Возвращает строку, которая содержит все подробные сведения о записи отслеживания.</summary>
      <returns>Данные отслеживания.</returns>
    </member>
    <member name="P:System.Activities.Tracking.ActivityStateRecord.Variables">
      <summary>Возвращает текущие значения отслеживаемых переменных, которые связаны с действием в момент создания записи.</summary>
      <returns>Текущие значения.</returns>
    </member>
    <member name="T:System.Activities.Tracking.ActivityStates">
      <summary>Задает состояние действия.</summary>
    </member>
    <member name="F:System.Activities.Tracking.ActivityStates.Canceled">
      <summary>Состояние действия: «Отменено».</summary>
    </member>
    <member name="F:System.Activities.Tracking.ActivityStates.Closed">
      <summary>Состояние действия: «Закрыто».</summary>
    </member>
    <member name="F:System.Activities.Tracking.ActivityStates.Executing">
      <summary>Состояние действия: «Выполняется».</summary>
    </member>
    <member name="F:System.Activities.Tracking.ActivityStates.Faulted">
      <summary>Состояние действия: «Ошибка».</summary>
    </member>
    <member name="T:System.Activities.Tracking.BookmarkResumptionQuery">
      <summary>При добавлении в коллекцию свойств <see cref="P:System.Activities.Tracking.TrackingProfile.Queries" /> подписывает на записи возобновления закладок, когда у профиля отслеживания запрашиваются объекты <see cref="T:System.Activities.Tracking.TrackingRecord" />.</summary>
    </member>
    <member name="M:System.Activities.Tracking.BookmarkResumptionQuery.#ctor">
      <summary>Создание нового экземпляра класса <see cref="T:System.Activities.Tracking.BookmarkResumptionQuery" />.</summary>
    </member>
    <member name="P:System.Activities.Tracking.BookmarkResumptionQuery.Name">
      <summary>Возвращает или задает имя записи закладки для подписки на нее.</summary>
      <returns>Имя закладки.</returns>
    </member>
    <member name="T:System.Activities.Tracking.BookmarkResumptionRecord">
      <summary>Содержит данные, отправляемые участнику отслеживания инфраструктурой отслеживания среды выполнения при возобновлении закладки <see cref="T:System.Activities.Bookmark" />.</summary>
    </member>
    <member name="M:System.Activities.Tracking.BookmarkResumptionRecord.#ctor(System.Guid,System.Int64,System.Guid,System.String,System.Activities.Tracking.ActivityInfo)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Tracking.BookmarkResumptionRecord" />, используя указанный идентификатор экземпляра, номер записи, область закладки, имя закладки и владельца.</summary>
      <param name="instanceId">Идентификатор экземпляра связанного действия.</param>
      <param name="recordNumber">Последовательность, которая определяет порядок создания записей отслеживания.</param>
      <param name="bookmarkScope">Идентификатор объекта <see cref="T:System.Activities.BookmarkScope" /> связанного действия.</param>
      <param name="bookmarkName">Имя закладки.</param>
      <param name="owner">Действие, которое ожидало возобновления закладки.</param>
    </member>
    <member name="P:System.Activities.Tracking.BookmarkResumptionRecord.BookmarkName">
      <summary>Возвращает имя закладки <see cref="T:System.Activities.Bookmark" />, которая возобновляется модулем выполнения рабочего процесса.</summary>
      <returns>Имя закладки <see cref="T:System.Activities.Bookmark" />, на которую ссылается этот объект <see cref="T:System.Activities.Tracking.BookmarkResumptionRecord" />.</returns>
    </member>
    <member name="P:System.Activities.Tracking.BookmarkResumptionRecord.BookmarkScope">
      <summary>Возвращает область идентификатора объекта <see cref="T:System.Activities.BookmarkScope" />, который связан с этой закладкой.</summary>
      <returns>Идентификатор области.</returns>
    </member>
    <member name="P:System.Activities.Tracking.BookmarkResumptionRecord.Owner">
      <summary>Возвращает сведения об объекте <see cref="T:System.Activities.Tracking.ActivityInfo" />, который ожидал возобновления закладки.</summary>
      <returns>Сведения о действии.</returns>
    </member>
    <member name="P:System.Activities.Tracking.BookmarkResumptionRecord.Payload">
      <summary>Возвращает значение, которое было предоставлено при возобновлении закладки <see cref="T:System.Activities.Bookmark" />.</summary>
      <returns>Значение, которое было предоставлено при возобновлении закладки <see cref="T:System.Activities.Bookmark" />.</returns>
    </member>
    <member name="M:System.Activities.Tracking.BookmarkResumptionRecord.ToString">
      <summary>Возвращает строку <see cref="T:System.String" />, представляющую текущий объект <see cref="T:System.Activities.Tracking.BookmarkResumptionRecord" />.</summary>
      <returns>Текущий объект.</returns>
    </member>
    <member name="T:System.Activities.Tracking.CancelRequestedQuery">
      <summary>При добавлении в коллекцию свойства <see cref="P:System.Activities.Tracking.TrackingProfile.Queries" /> подписывает на записи запросов отмены, когда у профиля отслеживания запрашиваются записи отслеживания.</summary>
    </member>
    <member name="M:System.Activities.Tracking.CancelRequestedQuery.#ctor">
      <summary>Создает новый экземпляр объекта <see cref="T:System.Activities.Tracking.CancelRequestedQuery" />.</summary>
    </member>
    <member name="P:System.Activities.Tracking.CancelRequestedQuery.ActivityName">
      <summary>Имя действия, которое запрашивает отмену.</summary>
      <returns>Имя действия.</returns>
    </member>
    <member name="P:System.Activities.Tracking.CancelRequestedQuery.ChildActivityName">
      <summary>Имя дочернего действия, для которого была запрошена отмена.</summary>
      <returns>Имя дочернего действия.</returns>
    </member>
    <member name="T:System.Activities.Tracking.CancelRequestedRecord">
      <summary>Представляет данные, отправленные средой выполнения рабочего процесса участникам отслеживания, при вызове метода <see cref="M:System.Activities.NativeActivityContext.CancelChild(System.Activities.ActivityInstance)" /> или метода <see cref="M:System.Activities.NativeActivityContext.CancelChildren" />.</summary>
    </member>
    <member name="M:System.Activities.Tracking.CancelRequestedRecord.#ctor(System.Guid,System.Int64,System.Activities.Tracking.ActivityInfo,System.Activities.Tracking.ActivityInfo)">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.Tracking.CancelRequestedRecord" />, используя указанный идентификатор экземпляра, номер записи, действие и дочернее действие.</summary>
      <param name="instanceId">Идентификатор экземпляра действия, сформировавшего событие.</param>
      <param name="recordNumber">Последовательность, которая определяет порядок созданных событий отслеживания.</param>
      <param name="activity">Действие, которое выдает запрос на отмену.</param>
      <param name="child">Действие, которое подлежит отмене.</param>
    </member>
    <member name="P:System.Activities.Tracking.CancelRequestedRecord.Activity">
      <summary>Возвращает объект <see cref="T:System.Activities.Tracking.ActivityInfo" /> для действия, которое запросило отмену.</summary>
      <returns>Сведения о действии.</returns>
    </member>
    <member name="P:System.Activities.Tracking.CancelRequestedRecord.Child">
      <summary>Получает объект <see cref="T:System.Activities.Tracking.ActivityInfo" /> для действия, которое подлежит отмене.</summary>
      <returns>Сведения о действии.</returns>
    </member>
    <member name="M:System.Activities.Tracking.CancelRequestedRecord.ToString">
      <summary>Возвращает строку, представляющую текущий объект <see cref="T:System.Activities.Tracking.CancelRequestedRecord" />.</summary>
      <returns>Данные отслеживания.</returns>
    </member>
    <member name="T:System.Activities.Tracking.CustomTrackingQuery">
      <summary>При добавлении в свойство <see cref="P:System.Activities.Tracking.TrackingProfile.Queries" /> подписывает на пользовательские записи отслеживания, когда у профиля отслеживания запрашиваются пользовательские записи.</summary>
    </member>
    <member name="M:System.Activities.Tracking.CustomTrackingQuery.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.Tracking.CustomTrackingQuery" />.</summary>
    </member>
    <member name="P:System.Activities.Tracking.CustomTrackingQuery.ActivityName">
      <summary>Возвращает или задает имя действия, которое создало запись отслеживания.</summary>
      <returns>Имя действия, которое создало пользовательскую запись отслеживания.</returns>
    </member>
    <member name="P:System.Activities.Tracking.CustomTrackingQuery.Name">
      <summary>Возвращает или задает имя создаваемой пользовательской записи отслеживания.</summary>
      <returns>Имя пользовательской записи отслеживания.</returns>
    </member>
    <member name="T:System.Activities.Tracking.CustomTrackingRecord">
      <summary>Содержит данные, отправляемые участнику отслеживания инфраструктурой отслеживания среды выполнения при возникновении пользовательской записи отслеживания.</summary>
    </member>
    <member name="M:System.Activities.Tracking.CustomTrackingRecord.#ctor(System.Activities.Tracking.CustomTrackingRecord)">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.Tracking.CustomTrackingRecord" /> на основе сведений из указанного экземпляра класса <see cref="T:System.Activities.Tracking.CustomTrackingRecord" />.</summary>
      <param name="record">Экземпляр пользовательской записи отслеживания для использования.</param>
    </member>
    <member name="M:System.Activities.Tracking.CustomTrackingRecord.#ctor(System.Guid,System.String,System.Diagnostics.TraceLevel)">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.Tracking.CustomTrackingRecord" /> с заданным идентификатором экземпляра, именем пользовательской записи отслеживания, уровнем трассировки.</summary>
      <param name="instanceId">Идентификатор действия.</param>
      <param name="name">Имя пользовательской записи отслеживания.</param>
      <param name="level">Уровень трассировки, используемый записью отслеживания.</param>
    </member>
    <member name="M:System.Activities.Tracking.CustomTrackingRecord.#ctor(System.String)">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.Tracking.CustomTrackingRecord" /> с указанным именем пользовательской записи отслеживания.</summary>
      <param name="name">Имя пользовательской записи отслеживания.</param>
    </member>
    <member name="M:System.Activities.Tracking.CustomTrackingRecord.#ctor(System.String,System.Diagnostics.TraceLevel)">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.Tracking.CustomTrackingRecord" /> с заданным именем пользовательской записи отслеживания, уровнем трассировки.</summary>
      <param name="name">Имя пользовательской записи отслеживания.</param>
      <param name="level">Уровень трассировки, используемый записью отслеживания.</param>
    </member>
    <member name="P:System.Activities.Tracking.CustomTrackingRecord.Activity">
      <summary>Возвращает объект <see cref="T:System.Activities.Tracking.ActivityInfo" /> действия, который связан с этой записью.</summary>
      <returns>Сведения о действии.</returns>
    </member>
    <member name="M:System.Activities.Tracking.CustomTrackingRecord.Clone">
      <summary>Создает копию объекта <see cref="T:System.Activities.Tracking.CustomTrackingRecord" />.</summary>
      <returns>Копия экземпляра <see cref="T:System.Activities.Tracking.CustomTrackingRecord" />.</returns>
    </member>
    <member name="P:System.Activities.Tracking.CustomTrackingRecord.Data">
      <summary>Возвращает пользовательские данные, связанные с этой записью отслеживания.</summary>
      <returns>Определенные пользователем данные.</returns>
    </member>
    <member name="P:System.Activities.Tracking.CustomTrackingRecord.Name">
      <summary>Возвращает имя, отличающее эту запись отслеживания.</summary>
      <returns>Имя, отличающее эту запись отслеживания.</returns>
    </member>
    <member name="M:System.Activities.Tracking.CustomTrackingRecord.ToString">
      <summary>Возвращает строку, содержащую данные записи отслеживания.</summary>
      <returns>Данные записи отслеживания.</returns>
    </member>
    <member name="T:System.Activities.Tracking.EtwTrackingParticipant">
      <summary>Пользователь данных отслеживания рабочего процесса, который создал ETW-событие в сеансе отслеживания событий Windows, содержащем данные для записи отслеживания.</summary>
    </member>
    <member name="M:System.Activities.Tracking.EtwTrackingParticipant.#ctor">
      <summary>Создание нового экземпляра класса <see cref="T:System.Activities.Tracking.EtwTrackingParticipant" />.</summary>
    </member>
    <member name="P:System.Activities.Tracking.EtwTrackingParticipant.ApplicationReference">
      <summary>Возвращает значение ссылки, используемое поставщиком отслеживания событий Windows, который создан этим участником отслеживания.</summary>
      <returns>Значение ссылки.</returns>
    </member>
    <member name="P:System.Activities.Tracking.EtwTrackingParticipant.EtwProviderId">
      <summary>Возвращает идентификатор поставщика, который используется поставщиком отслеживания событий Windows, который создан этим участником отслеживания.</summary>
      <returns>Идентификатор поставщика.</returns>
    </member>
    <member name="T:System.Activities.Tracking.FaultPropagationQuery">
      <summary>При добавлении в коллекцию свойства <see cref="P:System.Activities.Tracking.TrackingProfile.Queries" /> подписывает на записи распространения ошибок, когда у профиля отслеживания запрашиваются записи отслеживания.</summary>
    </member>
    <member name="M:System.Activities.Tracking.FaultPropagationQuery.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.Tracking.FaultPropagationQuery" />.</summary>
    </member>
    <member name="P:System.Activities.Tracking.FaultPropagationQuery.FaultH*******lerActivityName">
      <summary>Возвращает имя действия обработчика ошибок, которое распространяет ошибку.</summary>
      <returns>Имя действия.</returns>
    </member>
    <member name="P:System.Activities.Tracking.FaultPropagationQuery.FaultSourceActivityName">
      <summary>Возвращает имя действия, которое было источником ошибки.</summary>
      <returns>Имя действия</returns>
    </member>
    <member name="T:System.Activities.Tracking.FaultPropagationRecord">
      <summary>Содержит данные, отправляемые участнику отслеживания инфраструктурой отслеживания среды выполнения, когда от действия рабочего процесса передается ошибка.</summary>
    </member>
    <member name="M:System.Activities.Tracking.FaultPropagationRecord.#ctor(System.Guid,System.Int64,System.Activities.Tracking.ActivityInfo,System.Activities.Tracking.ActivityInfo,System.Boolean,System.Exception)">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.Tracking.FaultPropagationRecord" />.</summary>
      <param name="instanceId">Идентификатор экземпляра действия, сформировавшего событие.</param>
      <param name="recordNumber">Последовательность, которая определяет порядок создания событий отслеживания.</param>
      <param name="faultSource">Действие, которое является источником ошибки.</param>
      <param name="faultH*******ler">Действие, которое является обработчиком ошибки.</param>
      <param name="isFaultSource">Значение <see langword="true" />, если это первый обработчик для ошибки; значение <see langword="false" />, если это последующий обработчик для ошибки.</param>
      <param name="fault">Сведения об исключении.</param>
    </member>
    <member name="P:System.Activities.Tracking.FaultPropagationRecord.Fault">
      <summary>Получает данные исключения, которые содержатся в ошибке.</summary>
      <returns>Данные об исключении.</returns>
    </member>
    <member name="P:System.Activities.Tracking.FaultPropagationRecord.FaultH*******ler">
      <summary>Возвращает объект <see cref="T:System.Activities.Tracking.ActivityInfo" /> обработчика ошибок.</summary>
      <returns>Сведения о действии.</returns>
    </member>
    <member name="P:System.Activities.Tracking.FaultPropagationRecord.FaultSource">
      <summary>Возвращает объект <see cref="T:System.Activities.Tracking.ActivityInfo" /> действия, которое вызвало ошибку.</summary>
      <returns>Сведения о действии.</returns>
    </member>
    <member name="P:System.Activities.Tracking.FaultPropagationRecord.IsFaultSource">
      <summary>Значение, указывающее, является ли этот обработчик первым обработчиком для ошибки.</summary>
      <returns>Значение <see langword="true" />, если это первый обработчик исключения. <see langword="false" />, если это последующий обработчик для этой ошибки.</returns>
    </member>
    <member name="M:System.Activities.Tracking.FaultPropagationRecord.ToString">
      <summary>Возвращает строку, представляющую текущий объект <see cref="T:System.Activities.Tracking.FaultPropagationRecord" />.</summary>
      <returns>Данные отслеживания.</returns>
    </member>
    <member name="T:System.Activities.Tracking.ImplementationVisibility">
      <summary>Описывает режим видимости в профиле отслеживания.</summary>
    </member>
    <member name="F:System.Activities.Tracking.ImplementationVisibility.All">
      <summary>Создаются все записи отслеживания.</summary>
    </member>
    <member name="F:System.Activities.Tracking.ImplementationVisibility.RootScope">
      <summary>Создаются только корневое действие и его реализация для рабочего процесса.</summary>
    </member>
    <member name="T:System.Activities.Tracking.TrackingParticipant">
      <summary>Базовый класс для модулей рабочего процесса, которые взаимодействуют с инфраструктурой отслеживания рабочего процесса и обеспечивают доступ к записям отслеживания.</summary>
    </member>
    <member name="M:System.Activities.Tracking.TrackingParticipant.#ctor">
      <summary>При реализации в производном классе создает новый экземпляр производного класса.</summary>
    </member>
    <member name="M:System.Activities.Tracking.TrackingParticipant.BeginTrack(System.Activities.Tracking.TrackingRecord,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Если реализуется в производном классе, начинает асинхронную обработку записи отслеживания.</summary>
      <param name="record">Созданная запись отслеживания.</param>
      <param name="timeout">Период времени, после которого поставщик прерывает попытку.</param>
      <param name="callback">Метод, вызываемый при завершении этой операции.</param>
      <param name="state">Определяемый пользователем объект, который однозначно определяет асинхронную операцию.</param>
      <returns>Результат операции.</returns>
    </member>
    <member name="M:System.Activities.Tracking.TrackingParticipant.EndTrack(System.IAsyncResult)">
      <summary>При реализации в производном классе представляет конец операции асинхронного отслеживания.</summary>
      <param name="result">Состояние операции.</param>
    </member>
    <member name="M:System.Activities.Tracking.TrackingParticipant.Track(System.Activities.Tracking.TrackingRecord,System.TimeSpan)">
      <summary>Если реализуется в производном классе, используется для синхронной обработки записи отслеживания.</summary>
      <param name="record">Созданная запись отслеживания.</param>
      <param name="timeout">Период времени, после которого поставщик прерывает попытку.</param>
    </member>
    <member name="P:System.Activities.Tracking.TrackingParticipant.TrackingProfile">
      <summary>Объект профиля отслеживания, используемый участником отслеживания. Перед добавлением участника отслеживания в расширения рабочего процесса, профиль отслеживания задается у участника.</summary>
      <returns>Профиль отслеживания.</returns>
    </member>
    <member name="T:System.Activities.Tracking.TrackingProfile">
      <summary>Создает подписку для записей отслеживания рабочего процесса в объекте <see cref="T:System.Activities.Tracking.TrackingParticipant" />.</summary>
    </member>
    <member name="M:System.Activities.Tracking.TrackingProfile.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.Tracking.TrackingProfile" />.</summary>
    </member>
    <member name="P:System.Activities.Tracking.TrackingProfile.ActivityDefinitionId">
      <summary>Возвращает или задает идентификатор определения действия профиля отслеживания.</summary>
      <returns>Идентификатор определения действия.</returns>
    </member>
    <member name="P:System.Activities.Tracking.TrackingProfile.ImplementationVisibility">
      <summary>Возвращает или задает значение, которое выполняет фильтрацию записей отслеживания, создаваемых из вложенных действий в действия верхнего уровня (действия, которые составляют реализацию другого действия).</summary>
      <returns>Объект <see cref="T:System.Activities.Tracking.ImplementationVisibility" />, который указывает область записей для фильтрации.  
Значение по умолчанию — <see cref="F:System.Activities.Tracking.ImplementationVisibility.RootScope" />.</returns>
    </member>
    <member name="P:System.Activities.Tracking.TrackingProfile.Name">
      <summary>Возвращает отображаемое имя профиля отслеживания.</summary>
      <returns>Имя профиля.</returns>
    </member>
    <member name="P:System.Activities.Tracking.TrackingProfile.Queries">
      <summary>Возвращает коллекцию объектов <see cref="T:System.Activities.Tracking.TrackingQuery" />, определяющих записи, на которые осуществляет подписку этот профиль отслеживания.</summary>
      <returns>Коллекция запросов.</returns>
    </member>
    <member name="T:System.Activities.Tracking.TrackingQuery">
      <summary>Базовый класс для всех запросов отслеживания. Запросы отслеживания используются для создания определения подписки для объекта <see cref="T:System.Activities.Tracking.TrackingProfile" />.</summary>
    </member>
    <member name="M:System.Activities.Tracking.TrackingQuery.#ctor">
      <summary>При реализации в производном классе создает новый экземпляр производного класса.</summary>
    </member>
    <member name="P:System.Activities.Tracking.TrackingQuery.QueryAnnotations">
      <summary>Коллекция данных в виде пар «имя-значение», которые включаются с данными, возвращаемыми этим запросом.</summary>
      <returns>Коллекция заметок.</returns>
    </member>
    <member name="T:System.Activities.Tracking.TrackingRecord">
      <summary>Абстрактный класс, от которого наследуются все записи отслеживания рабочего процесса. Записи отслеживания представляют данные, отправляемые участникам отслеживания, когда происходят отслеживаемые события.</summary>
    </member>
    <member name="M:System.Activities.Tracking.TrackingRecord.#ctor(System.Activities.Tracking.TrackingRecord)">
      <summary>Если реализуется в производном классе, создает новый экземпляр производного класса с заданным экземпляром записи отслеживания.</summary>
      <param name="record">Запись отслеживания действия создания.</param>
    </member>
    <member name="M:System.Activities.Tracking.TrackingRecord.#ctor(System.Guid)">
      <summary>Если реализуется в производном классе, создает новый экземпляр производного класса с заданным идентификатором экземпляра.</summary>
      <param name="instanceId">Идентификатор создающего экземпляра рабочего процесса.</param>
    </member>
    <member name="M:System.Activities.Tracking.TrackingRecord.#ctor(System.Guid,System.Int64)">
      <summary>Если реализуется в производном классе, создает новый экземпляр производного класса с заданным идентификатором экземпляра и номером записи.</summary>
      <param name="instanceId">Идентификатор создающего экземпляра рабочего процесса.</param>
      <param name="recordNumber">Последовательность, которая определяет порядок создания записей отслеживания.</param>
    </member>
    <member name="P:System.Activities.Tracking.TrackingRecord.Annotations">
      <summary>При реализации в производном классе представляет коллекцию пар «имя-значение», которые добавляются в эту запись отслеживания.</summary>
      <returns>Словарь элементов для добавления в эту запись отслеживания.</returns>
    </member>
    <member name="M:System.Activities.Tracking.TrackingRecord.Clone">
      <summary>Создает копию объекта <see cref="T:System.Activities.Tracking.TrackingRecord" />.</summary>
      <returns>Копия объекта <see cref="T:System.Activities.Tracking.TrackingRecord" />.</returns>
    </member>
    <member name="P:System.Activities.Tracking.TrackingRecord.EventTime">
      <summary>При реализации в производном классе представляет время возникновения записи отслеживания.</summary>
      <returns>Время события.</returns>
    </member>
    <member name="P:System.Activities.Tracking.TrackingRecord.InstanceId">
      <summary>Если реализуется в производном классе, представляет идентификатор созданного экземпляра рабочего процесса.</summary>
      <returns>Идентификатор элемента.</returns>
    </member>
    <member name="P:System.Activities.Tracking.TrackingRecord.Level">
      <summary>Возвращает объект <see cref="T:System.Diagnostics.TraceLevel" /> события.</summary>
      <returns>Уровень трассировки.</returns>
    </member>
    <member name="P:System.Activities.Tracking.TrackingRecord.RecordNumber">
      <summary>Последовательность, которая определяет порядок создания записей отслеживания.</summary>
      <returns>Последовательный порядок.</returns>
    </member>
    <member name="M:System.Activities.Tracking.TrackingRecord.ToString">
      <summary>При реализации в производном классе возвращает строку, которая содержит все данные отслеживания из записи.</summary>
      <returns>Данные отслеживания.</returns>
    </member>
    <member name="T:System.Activities.Tracking.WorkflowInstanceAbortedRecord">
      <summary>Содержит данные, отправляемые участнику отслеживания инфраструктурой отслеживания среды выполнения, когда выполнение экземпляра рабочего процесса прервано.</summary>
    </member>
    <member name="M:System.Activities.Tracking.WorkflowInstanceAbortedRecord.#ctor(System.Guid,System.Int64,System.String,System.String)">
      <summary>Создание нового экземпляра класса <see cref="T:System.Activities.Tracking.WorkflowInstanceAbortedRecord" />.</summary>
      <param name="instanceId">Идентификатор экземпляра прерванного рабочего процесса.</param>
      <param name="recordNumber">Последовательность, которая определяет порядок создания записей отслеживания.</param>
      <param name="activityDefinitionId">Отображаемое имя корневого действия рабочего процесса.</param>
      <param name="reason">Причина, по которой был прерван рабочий процесс.</param>
    </member>
    <member name="M:System.Activities.Tracking.WorkflowInstanceAbortedRecord.#ctor(System.Guid,System.Int64,System.String,System.String,System.Activities.WorkflowIdentity)">
      <summary>Создание нового экземпляра класса <see cref="T:System.Activities.Tracking.WorkflowInstanceAbortedRecord" />.</summary>
      <param name="instanceId">Идентификатор экземпляра прерванного рабочего процесса.</param>
      <param name="recordNumber">Последовательность, которая определяет порядок создания записей отслеживания.</param>
      <param name="activityDefinitionId">Отображаемое имя корневого действия рабочего процесса.</param>
      <param name="reason">Причина, по которой был прерван рабочий процесс.</param>
      <param name="workflowDefinitionIdentity">Информация об удостоверении рабочего процесса.</param>
    </member>
    <member name="M:System.Activities.Tracking.WorkflowInstanceAbortedRecord.#ctor(System.Guid,System.String,System.String)">
      <summary>Создание нового экземпляра класса <see cref="T:System.Activities.Tracking.WorkflowInstanceAbortedRecord" />.</summary>
      <param name="instanceId">Идентификатор экземпляра прерванного рабочего процесса.</param>
      <param name="activityDefinitionId">Отображаемое имя корневого действия рабочего процесса.</param>
      <param name="reason">Причина, по которой был прерван рабочий процесс.</param>
    </member>
    <member name="M:System.Activities.Tracking.WorkflowInstanceAbortedRecord.#ctor(System.Guid,System.String,System.String,System.Activities.WorkflowIdentity)">
      <summary>Создание нового экземпляра класса <see cref="T:System.Activities.Tracking.WorkflowInstanceAbortedRecord" />.</summary>
      <param name="instanceId">Идентификатор экземпляра прерванного рабочего процесса.</param>
      <param name="activityDefinitionId">Отображаемое имя корневого действия рабочего процесса.</param>
      <param name="reason">Причина, по которой был прерван рабочий процесс.</param>
      <param name="workflowDefinitionIdentity">Информация об удостоверении рабочего процесса.</param>
    </member>
    <member name="P:System.Activities.Tracking.WorkflowInstanceAbortedRecord.Reason">
      <summary>Возвращает строку, в которой описана причина прерывания выполнения рабочего процесса.</summary>
      <returns>Причина, по которой был прерван рабочий процесс.</returns>
    </member>
    <member name="M:System.Activities.Tracking.WorkflowInstanceAbortedRecord.ToString">
      <summary>Возвращает строку, содержащую данные записи отслеживания.</summary>
      <returns>Данные записи отслеживания.</returns>
    </member>
    <member name="T:System.Activities.Tracking.WorkflowInstanceQuery">
      <summary>При добавлении в коллекцию свойств <see cref="P:System.Activities.Tracking.TrackingProfile.Queries" /> подписывается на записи экземпляра рабочего процесса в момент создании профиля отслеживания для подписки на записи отслеживания.</summary>
    </member>
    <member name="M:System.Activities.Tracking.WorkflowInstanceQuery.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.Tracking.WorkflowInstanceQuery" />.</summary>
    </member>
    <member name="P:System.Activities.Tracking.WorkflowInstanceQuery.States">
      <summary>Подписанные состояния от отслеживаемого экземпляра рабочего потока в момент создания записей трассировки.</summary>
      <returns>Состояния рабочего процесса.</returns>
    </member>
    <member name="T:System.Activities.Tracking.WorkflowInstanceRecord">
      <summary>Содержит данные, отправляемые в службу отслеживания инфраструктурой отслеживания среды выполнения в момент изменения состояния экземпляра рабочего процесса.</summary>
    </member>
    <member name="M:System.Activities.Tracking.WorkflowInstanceRecord.#ctor(System.Activities.Tracking.WorkflowInstanceRecord)">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.Tracking.WorkflowInstanceRecord" /> из существующего экземпляра класса <see cref="T:System.Activities.Tracking.WorkflowInstanceRecord" />.</summary>
      <param name="record">Используемая запись экземпляра рабочего процесса.</param>
    </member>
    <member name="M:System.Activities.Tracking.WorkflowInstanceRecord.#ctor(System.Guid,System.Int64,System.String,System.String)">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.Tracking.WorkflowInstanceRecord" />.</summary>
      <param name="instanceId">Идентификатор экземпляра создающего экземпляра рабочего процесса.</param>
      <param name="recordNumber">Последовательность, которая определяет порядок создания событий отслеживания.</param>
      <param name="activityDefinitionId">Отображаемое имя корневого действия рабочего процесса.</param>
      <param name="state">Текущее состояние рабочего процесса, когда сформирована запись.</param>
    </member>
    <member name="M:System.Activities.Tracking.WorkflowInstanceRecord.#ctor(System.Guid,System.Int64,System.String,System.String,System.Activities.WorkflowIdentity)">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.Tracking.WorkflowInstanceRecord" />.</summary>
      <param name="instanceId">Идентификатор экземпляра создающего экземпляра рабочего процесса.</param>
      <param name="recordNumber">Последовательность, которая определяет порядок создания событий отслеживания.</param>
      <param name="activityDefinitionId">Отображаемое имя корневого действия рабочего процесса.</param>
      <param name="state">Текущее состояние рабочего процесса, когда сформирована запись.</param>
      <param name="workflowDefinitionIdentity">Информация об удостоверении рабочего процесса.</param>
    </member>
    <member name="M:System.Activities.Tracking.WorkflowInstanceRecord.#ctor(System.Guid,System.String,System.String)">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.Tracking.WorkflowInstanceRecord" />.</summary>
      <param name="instanceId">Идентификатор экземпляра создающего экземпляра рабочего процесса.</param>
      <param name="activityDefinitionId">Отображаемое имя корневого действия рабочего процесса.</param>
      <param name="state">Текущее состояние рабочего процесса, когда сформирована запись.</param>
    </member>
    <member name="M:System.Activities.Tracking.WorkflowInstanceRecord.#ctor(System.Guid,System.String,System.String,System.Activities.WorkflowIdentity)">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.Tracking.WorkflowInstanceRecord" />.</summary>
      <param name="instanceId">Идентификатор экземпляра создающего экземпляра рабочего процесса.</param>
      <param name="activityDefinitionId">Отображаемое имя корневого действия рабочего процесса.</param>
      <param name="state">Текущее состояние рабочего процесса, когда сформирована запись.</param>
      <param name="workflowDefinitionIdentity">Информация об удостоверении рабочего процесса.</param>
    </member>
    <member name="P:System.Activities.Tracking.WorkflowInstanceRecord.ActivityDefinitionId">
      <summary>Возвращает отображаемое имя корневого действия рабочего процесса, которое создало эту запись.</summary>
      <returns>Идентификатор определения действия.</returns>
    </member>
    <member name="M:System.Activities.Tracking.WorkflowInstanceRecord.Clone">
      <summary>Создает глубокую копию объекта <see cref="T:System.Activities.Tracking.WorkflowInstanceRecord" />.</summary>
      <returns>Глубокая копия объекта <see cref="T:System.Activities.Tracking.WorkflowInstanceRecord" />.</returns>
    </member>
    <member name="P:System.Activities.Tracking.WorkflowInstanceRecord.State">
      <summary>Текущее состояние рабочего процесса, когда сформирована запись.</summary>
      <returns>Состояние рабочего процесса.</returns>
    </member>
    <member name="M:System.Activities.Tracking.WorkflowInstanceRecord.ToString">
      <summary>Возвращает строку, содержащую данные записи отслеживания.</summary>
      <returns>Данные отслеживания.</returns>
    </member>
    <member name="P:System.Activities.Tracking.WorkflowInstanceRecord.WorkflowDefinitionIdentity">
      <summary>Получает или задает информацию об удостоверении рабочего процесса.</summary>
      <returns>Информация об удостоверении рабочего процесса.</returns>
    </member>
    <member name="T:System.Activities.Tracking.WorkflowInstanceStates">
      <summary>Задает состояние экземпляра рабочего процесса.</summary>
    </member>
    <member name="F:System.Activities.Tracking.WorkflowInstanceStates.Aborted">
      <summary>Экземпляр рабочего процесса прерван.</summary>
    </member>
    <member name="F:System.Activities.Tracking.WorkflowInstanceStates.Canceled">
      <summary>Выполнение экземпляра рабочего процесса отменено.</summary>
    </member>
    <member name="F:System.Activities.Tracking.WorkflowInstanceStates.Completed">
      <summary>Выполнение экземпляра рабочего процесса завершено.</summary>
    </member>
    <member name="F:System.Activities.Tracking.WorkflowInstanceStates.Deleted">
      <summary>Экземпляр рабочего процесса удален.</summary>
    </member>
    <member name="F:System.Activities.Tracking.WorkflowInstanceStates.Idle">
      <summary>Экземпляр рабочего процесса простаивает.</summary>
    </member>
    <member name="F:System.Activities.Tracking.WorkflowInstanceStates.Persisted">
      <summary>Экземпляр рабочего процесса сохранен.</summary>
    </member>
    <member name="F:System.Activities.Tracking.WorkflowInstanceStates.Resumed">
      <summary>Экземпляр рабочего процесса возобновлен.</summary>
    </member>
    <member name="F:System.Activities.Tracking.WorkflowInstanceStates.Started">
      <summary>Экземпляр рабочего процесса запущен.</summary>
    </member>
    <member name="F:System.Activities.Tracking.WorkflowInstanceStates.Suspended">
      <summary>Выполнение экземпляра рабочего процесса приостановлено.</summary>
    </member>
    <member name="F:System.Activities.Tracking.WorkflowInstanceStates.Terminated">
      <summary>Выполнение экземпляра рабочего процесса завершено.</summary>
    </member>
    <member name="F:System.Activities.Tracking.WorkflowInstanceStates.Unh*******ledException">
      <summary>Экземпляр рабочего процесса встретил необработанное исключение.</summary>
    </member>
    <member name="F:System.Activities.Tracking.WorkflowInstanceStates.Unloaded">
      <summary>Экземпляр рабочего процесса выгружен.</summary>
    </member>
    <member name="F:System.Activities.Tracking.WorkflowInstanceStates.Unsuspended">
      <summary>Выполнение экземпляра рабочего процесса возобновлено.</summary>
    </member>
    <member name="F:System.Activities.Tracking.WorkflowInstanceStates.Updated">
      <summary>Экземпляр рабочего процесса обновлен.</summary>
    </member>
    <member name="F:System.Activities.Tracking.WorkflowInstanceStates.UpdateFailed">
      <summary>Не удалось обновить экземпляр рабочего процесса.</summary>
    </member>
    <member name="T:System.Activities.Tracking.WorkflowInstanceSuspendedRecord">
      <summary>Содержит данные, отправляемые участнику отслеживания инфраструктурой отслеживания среды выполнения, когда экземпляр рабочего процесса приостановлен.</summary>
    </member>
    <member name="M:System.Activities.Tracking.WorkflowInstanceSuspendedRecord.#ctor(System.Guid,System.Int64,System.String,System.String)">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.Tracking.WorkflowInstanceSuspendedRecord" />.</summary>
      <param name="instanceId">Идентификатор экземпляра приостановленного рабочего процесса.</param>
      <param name="recordNumber">Последовательность, которая определяет порядок создания записей отслеживания.</param>
      <param name="activityDefinitionId">Отображаемое имя корневого действия рабочего процесса.</param>
      <param name="reason">Причина приостановки рабочего процесса.</param>
    </member>
    <member name="M:System.Activities.Tracking.WorkflowInstanceSuspendedRecord.#ctor(System.Guid,System.Int64,System.String,System.String,System.Activities.WorkflowIdentity)">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.Tracking.WorkflowInstanceSuspendedRecord" />.</summary>
      <param name="instanceId">Идентификатор экземпляра приостановленного рабочего процесса.</param>
      <param name="recordNumber">Последовательность, которая определяет порядок создания записей отслеживания.</param>
      <param name="activityDefinitionId">Отображаемое имя корневого действия рабочего процесса.</param>
      <param name="reason">Причина приостановки рабочего процесса.</param>
      <param name="workflowDefinitionIdentity">Информация об удостоверении рабочего процесса.</param>
    </member>
    <member name="M:System.Activities.Tracking.WorkflowInstanceSuspendedRecord.#ctor(System.Guid,System.String,System.String)">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.Tracking.WorkflowInstanceSuspendedRecord" />.</summary>
      <param name="instanceId">Идентификатор экземпляра приостановленного рабочего процесса.</param>
      <param name="activityDefinitionId">Отображаемое имя корневого действия рабочего процесса.</param>
      <param name="reason">Причина приостановки рабочего процесса.</param>
    </member>
    <member name="M:System.Activities.Tracking.WorkflowInstanceSuspendedRecord.#ctor(System.Guid,System.String,System.String,System.Activities.WorkflowIdentity)">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.Tracking.WorkflowInstanceSuspendedRecord" />.</summary>
      <param name="instanceId">Идентификатор экземпляра приостановленного рабочего процесса.</param>
      <param name="activityDefinitionId">Отображаемое имя корневого действия рабочего процесса.</param>
      <param name="reason">Причина приостановки рабочего процесса.</param>
      <param name="workflowDefinitionIdentity">Информация об удостоверении рабочего процесса.</param>
    </member>
    <member name="P:System.Activities.Tracking.WorkflowInstanceSuspendedRecord.Reason">
      <summary>Возвращает строку, в которой описана причина приостановки выполнения экземпляра рабочего процесса.</summary>
      <returns>Причина приостановки рабочего процесса.</returns>
    </member>
    <member name="M:System.Activities.Tracking.WorkflowInstanceSuspendedRecord.ToString">
      <summary>Возвращает строку, содержащую данные записи отслеживания.</summary>
      <returns>Данные записи отслеживания.</returns>
    </member>
    <member name="T:System.Activities.Tracking.WorkflowInstanceTerminatedRecord">
      <summary>Содержит данные, отправляемые участнику отслеживания инфраструктурой отслеживания среды выполнения, когда выполнение рабочего процесса завершено.</summary>
    </member>
    <member name="M:System.Activities.Tracking.WorkflowInstanceTerminatedRecord.#ctor(System.Guid,System.Int64,System.String,System.String)">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.Tracking.WorkflowInstanceTerminatedRecord" />.</summary>
      <param name="instanceId">Идентификатор экземпляра завершенного рабочего процесса.</param>
      <param name="recordNumber">Последовательность, которая определяет порядок создания записей отслеживания.</param>
      <param name="activityDefinitionId">Отображаемое имя корневого действия рабочего процесса.</param>
      <param name="reason">Причина завершения рабочего процесса.</param>
    </member>
    <member name="M:System.Activities.Tracking.WorkflowInstanceTerminatedRecord.#ctor(System.Guid,System.Int64,System.String,System.String,System.Activities.WorkflowIdentity)">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.Tracking.WorkflowInstanceTerminatedRecord" />.</summary>
      <param name="instanceId">Идентификатор экземпляра завершенного рабочего процесса.</param>
      <param name="recordNumber">Последовательность, которая определяет порядок создания записей отслеживания.</param>
      <param name="activityDefinitionId">Отображаемое имя корневого действия рабочего процесса.</param>
      <param name="reason">Причина завершения рабочего процесса.</param>
      <param name="workflowDefinitionIdentity">Информация об удостоверении рабочего процесса.</param>
    </member>
    <member name="M:System.Activities.Tracking.WorkflowInstanceTerminatedRecord.#ctor(System.Guid,System.String,System.String)">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.Tracking.WorkflowInstanceTerminatedRecord" />.</summary>
      <param name="instanceId">Идентификатор экземпляра завершенного рабочего процесса.</param>
      <param name="activityDefinitionId">Идентификатор определения действия.</param>
      <param name="reason">Причина завершения рабочего процесса.</param>
    </member>
    <member name="M:System.Activities.Tracking.WorkflowInstanceTerminatedRecord.#ctor(System.Guid,System.String,System.String,System.Activities.WorkflowIdentity)">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.Tracking.WorkflowInstanceTerminatedRecord" />.</summary>
      <param name="instanceId">Идентификатор экземпляра завершенного рабочего процесса.</param>
      <param name="activityDefinitionId">Отображаемое имя корневого действия рабочего процесса.</param>
      <param name="reason">Причина завершения рабочего процесса.</param>
      <param name="workflowDefinitionIdentity">Информация об удостоверении рабочего процесса.</param>
    </member>
    <member name="P:System.Activities.Tracking.WorkflowInstanceTerminatedRecord.Reason">
      <summary>Возвращает строку, в которой описана причина завершения выполнения экземпляра рабочего процесса.</summary>
      <returns>Причина завершения рабочего процесса.</returns>
    </member>
    <member name="M:System.Activities.Tracking.WorkflowInstanceTerminatedRecord.ToString">
      <summary>Возвращает строку, содержащую данные записи отслеживания.</summary>
      <returns>Данные записи отслеживания.</returns>
    </member>
    <member name="T:System.Activities.Tracking.WorkflowInstanceUnh*******ledExceptionRecord">
      <summary>Содержит данные, отправляемые участнику отслеживания инфраструктурой отслеживания среды выполнения, когда экземпляр рабочего процесса обнаруживает необработанное исключение.</summary>
    </member>
    <member name="M:System.Activities.Tracking.WorkflowInstanceUnh*******ledExceptionRecord.#ctor(System.Guid,System.Int64,System.String,System.Activities.Tracking.ActivityInfo,System.Exception)">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.Tracking.WorkflowInstanceUnh*******ledExceptionRecord" />.</summary>
      <param name="instanceId">Идентификатор экземпляра создающего экземпляра рабочего процесса.</param>
      <param name="recordNumber">Последовательность, которая определяет порядок создания событий отслеживания.</param>
      <param name="activityDefinitionId">Отображаемое имя корневого действия рабочего процесса.</param>
      <param name="faultSource">Действие, вызвавшее ошибку.</param>
      <param name="exception">Данные о необработанном исключении.</param>
    </member>
    <member name="M:System.Activities.Tracking.WorkflowInstanceUnh*******ledExceptionRecord.#ctor(System.Guid,System.Int64,System.String,System.Activities.Tracking.ActivityInfo,System.Exception,System.Activities.WorkflowIdentity)">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.Tracking.WorkflowInstanceUnh*******ledExceptionRecord" />.</summary>
      <param name="instanceId">Идентификатор экземпляра создающего экземпляра рабочего процесса.</param>
      <param name="recordNumber">Последовательность, которая определяет порядок создания событий отслеживания.</param>
      <param name="activityDefinitionId">Отображаемое имя корневого действия рабочего процесса.</param>
      <param name="faultSource">Действие, вызвавшее ошибку.</param>
      <param name="exception">Данные о необработанном исключении.</param>
      <param name="workflowDefinitionIdentity">Информация об удостоверении рабочего процесса.</param>
    </member>
    <member name="M:System.Activities.Tracking.WorkflowInstanceUnh*******ledExceptionRecord.#ctor(System.Guid,System.String,System.Activities.Tracking.ActivityInfo,System.Exception)">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.Tracking.WorkflowInstanceUnh*******ledExceptionRecord" />.</summary>
      <param name="instanceId">Идентификатор экземпляра создающего экземпляра рабочего процесса.</param>
      <param name="activityDefinitionId">Идентификатор определения действия для создающего действия рабочего процесса.</param>
      <param name="faultSource">Действие, вызвавшее ошибку.</param>
      <param name="exception">Данные о необработанном исключении.</param>
    </member>
    <member name="M:System.Activities.Tracking.WorkflowInstanceUnh*******ledExceptionRecord.#ctor(System.Guid,System.String,System.Activities.Tracking.ActivityInfo,System.Exception,System.Activities.WorkflowIdentity)">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.Tracking.WorkflowInstanceUnh*******ledExceptionRecord" />.</summary>
      <param name="instanceId">Идентификатор экземпляра создающего экземпляра рабочего процесса.</param>
      <param name="activityDefinitionId">Отображаемое имя корневого действия рабочего процесса.</param>
      <param name="faultSource">Действие, вызвавшее ошибку.</param>
      <param name="exception">Данные о необработанном исключении.</param>
      <param name="workflowDefinitionIdentity">Информация об удостоверении рабочего процесса.</param>
    </member>
    <member name="P:System.Activities.Tracking.WorkflowInstanceUnh*******ledExceptionRecord.FaultSource">
      <summary>Возвращает действие, вызвавшее ошибку.</summary>
      <returns>Действие, вызвавшее ошибку.</returns>
    </member>
    <member name="M:System.Activities.Tracking.WorkflowInstanceUnh*******ledExceptionRecord.ToString">
      <summary>Возвращает данные записи отслеживания.</summary>
      <returns>Данные отслеживания.</returns>
    </member>
    <member name="P:System.Activities.Tracking.WorkflowInstanceUnh*******ledExceptionRecord.Unh*******ledException">
      <summary>Возвращает данные о необработанном исключении.</summary>
      <returns>Данные об исключении.</returns>
    </member>
    <member name="T:System.Activities.Tracking.WorkflowInstanceUpdatedRecord">
      <summary>Указывает сведения об обновленной записи.</summary>
    </member>
    <member name="M:System.Activities.Tracking.WorkflowInstanceUpdatedRecord.#ctor(System.Guid,System.Int64,System.String,System.Activities.WorkflowIdentity,System.Activities.WorkflowIdentity)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Tracking.WorkflowInstanceUpdatedRecord" />.</summary>
      <param name="instanceId">Идентификатор экземпляра создающего рабочего процесса.</param>
      <param name="recordNumber">Последовательность, которая определяет порядок создания событий отслеживания.</param>
      <param name="activityDefinitionId">Отображаемое имя корневого действия рабочего процесса.</param>
      <param name="originalDefinitionIdentity">Удостоверение исходного определения рабочего процесса.</param>
      <param name="updatedDefinitionIdentity">Удостоверение обновленного определения рабочего процесса.</param>
    </member>
    <member name="M:System.Activities.Tracking.WorkflowInstanceUpdatedRecord.#ctor(System.Guid,System.Int64,System.String,System.Activities.WorkflowIdentity,System.Activities.WorkflowIdentity,System.Collections.Generic.IList{System.Activities.DynamicUpdate.ActivityBlockingUpdate})">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Tracking.WorkflowInstanceUpdatedRecord" />.</summary>
      <param name="instanceId">Идентификатор экземпляра создающего рабочего процесса.</param>
      <param name="recordNumber">Последовательность, которая определяет порядок создания событий отслеживания.</param>
      <param name="activityDefinitionId">Отображаемое имя корневого действия рабочего процесса.</param>
      <param name="originalDefinitionIdentity">Удостоверение исходного определения рабочего процесса.</param>
      <param name="updatedDefinitionIdentity">Удостоверение обновленного определения рабочего процесса.</param>
      <param name="blockingActivities">Блокирующие действия рабочего процесса.</param>
    </member>
    <member name="M:System.Activities.Tracking.WorkflowInstanceUpdatedRecord.#ctor(System.Guid,System.String,System.Activities.WorkflowIdentity,System.Activities.WorkflowIdentity)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Tracking.WorkflowInstanceUpdatedRecord" />.</summary>
      <param name="instanceId">Идентификатор экземпляра создающего рабочего процесса.</param>
      <param name="activityDefinitionId">Отображаемое имя корневого действия рабочего процесса.</param>
      <param name="originalDefinitionIdentity">Удостоверение исходного определения рабочего процесса.</param>
      <param name="updatedDefinitionIdentity">Удостоверение обновленного определения рабочего процесса.</param>
    </member>
    <member name="M:System.Activities.Tracking.WorkflowInstanceUpdatedRecord.#ctor(System.Guid,System.String,System.Activities.WorkflowIdentity,System.Activities.WorkflowIdentity,System.Collections.Generic.IList{System.Activities.DynamicUpdate.ActivityBlockingUpdate})">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Tracking.WorkflowInstanceUpdatedRecord" />.</summary>
      <param name="instanceId">Идентификатор экземпляра создающего рабочего процесса.</param>
      <param name="activityDefinitionId">Отображаемое имя корневого действия рабочего процесса.</param>
      <param name="originalDefinitionIdentity">Удостоверение исходного определения рабочего процесса.</param>
      <param name="updatedDefinitionIdentity">Удостоверение обновленного определения рабочего процесса.</param>
      <param name="blockingActivities">Блокирующие действия рабочего процесса.</param>
    </member>
    <member name="P:System.Activities.Tracking.WorkflowInstanceUpdatedRecord.BlockingActivities">
      <summary>Получает или задает список блокирующих действий для экземпляра обновленной записи.</summary>
      <returns>Список блокирующих действий.</returns>
    </member>
    <member name="P:System.Activities.Tracking.WorkflowInstanceUpdatedRecord.IsSuccessful">
      <summary>Возвращает значение, указывающее, является ли обновленная запись экземпляра рабочего процесса успешной.</summary>
      <returns>Значение <see langword="true" />, если обновленная запись экземпляра рабочего процесса была успешной; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Activities.Tracking.WorkflowInstanceUpdatedRecord.OriginalDefinitionIdentity">
      <summary>Получает или задает исходное определение удостоверения рабочего процесса.</summary>
      <returns>Исходное определение удостоверение рабочего процесса.</returns>
    </member>
    <member name="M:System.Activities.Tracking.WorkflowInstanceUpdatedRecord.ToString">
      <summary>Возвращает строку, содержащую данные записи отслеживания.</summary>
      <returns>Строка, содержащая данные записи отслеживания.</returns>
    </member>
    <member name="T:System.Activities.Unh*******ledExceptionAction">
      <summary>Указывает действие, которое выполняется, когда исключение покидает корневой элемент рабочего процесса.</summary>
    </member>
    <member name="F:System.Activities.Unh*******ledExceptionAction.Abort">
      <summary>Указывает, что экземпляр <see cref="T:System.Activities.WorkflowApplication" /> должен прервать рабочий процесс.</summary>
    </member>
    <member name="F:System.Activities.Unh*******ledExceptionAction.Cancel">
      <summary>Указывает, что экземпляр <see cref="T:System.Activities.WorkflowApplication" /> должен запланировать отмену корневого действия и возобновить выполнение.</summary>
    </member>
    <member name="F:System.Activities.Unh*******ledExceptionAction.Terminate">
      <summary>Указывает, что экземпляр <see cref="T:System.Activities.WorkflowApplication" /> должен запланировать завершение корневого действия и возобновить выполнение.</summary>
    </member>
    <member name="T:System.Activities.Validation.ActivityValidationServices">
      <summary>Предоставляет функции проверки рабочего потока.</summary>
    </member>
    <member name="M:System.Activities.Validation.ActivityValidationServices.Resolve(System.Activities.Activity,System.String)">
      <summary>Возвращает действие рабочего процесса с указанным идентификатором в указанном рабочем процессе.</summary>
      <param name="root">Корневое действие рабочего процесса, содержащее элемент действия, к которому нужно обратиться.</param>
      <param name="id">Идентификатор, связанный с действием.</param>
      <returns>Действие рабочего процесса.</returns>
    </member>
    <member name="M:System.Activities.Validation.ActivityValidationServices.Validate(System.Activities.Activity)">
      <summary>Проверяет, что действие рабочего процесса правильно настроено в соответствии с логикой проверки. Эта логика может располагаться в методе <see cref="M:System.Activities.CodeActivity.CacheMetadata(System.Activities.CodeActivityMetadata)" /> действия для проверки или ограничений построения и политик.</summary>
      <param name="toValidate">Элемент с дерева действий рабочего процесса.</param>
      <returns>Коллекция ошибок проверки, каждая из которых может содержать имя проверяемого действия, описательное сообщение, код ошибки и прочие данные.</returns>
    </member>
    <member name="M:System.Activities.Validation.ActivityValidationServices.Validate(System.Activities.Activity,System.Activities.Validation.ValidationSettings)">
      <summary>Проверяет, что действие рабочего процесса правильно настроено в соответствии с логикой проверки. Эта логика может быть методом cacheMetadata проверяемых действий или ограничениями сборки и политики.</summary>
      <param name="toValidate">Действие с дерева операций рабочего процесса.</param>
      <param name="settings">Объект, определяющий поведение метода проверки рабочего процесса, может подавить внутреннюю логику проверки, а также может содержать ограничения проверки.</param>
      <returns>Коллекция ошибок проверки, каждая из которых может содержать имя неправильно настроенной операции, описательное сообщение, код ошибки или предупреждения и прочие данные.</returns>
    </member>
    <member name="T:System.Activities.Validation.AddValidationError">
      <summary>Добавить указанную ошибку проверки действия к действию перед выполнением.</summary>
    </member>
    <member name="M:System.Activities.Validation.AddValidationError.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.Validation.AddValidationError" />.</summary>
    </member>
    <member name="P:System.Activities.Validation.AddValidationError.IsWarning">
      <summary>Возвращает или задает значение, которое указывает, является ли возникшая ошибка проверки предупреждением, а не ошибкой.</summary>
      <returns>Значение <see langword="true" />, если случившаяся ошибка является предупреждением, а не ошибкой; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Activities.Validation.AddValidationError.Message">
      <summary>Возвращает или задает буквенно-цифровую строку, в которой хранится описание ошибки.</summary>
      <returns>Описание ошибки.</returns>
    </member>
    <member name="P:System.Activities.Validation.AddValidationError.PropertyName">
      <summary>Возвращает или задает имя свойства, вызвавшего ошибку.</summary>
      <returns>Имя свойства, вызвавшего ошибку.</returns>
    </member>
    <member name="T:System.Activities.Validation.AssertValidation">
      <summary>Добавляет нарушение ограничения в список нарушений ограничений, если в результате проверки условия утверждения получено значение «false».</summary>
    </member>
    <member name="M:System.Activities.Validation.AssertValidation.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.Validation.AssertValidation" />.</summary>
    </member>
    <member name="P:System.Activities.Validation.AssertValidation.Assertion">
      <summary>Получает или задает значение, которое указывает, стало ли результатом проверки утверждения значение <see langword="true" /> или <see langword="false" />.</summary>
      <returns>
        <see cref="T:System.Activities.InArgument`1" />.</returns>
    </member>
    <member name="P:System.Activities.Validation.AssertValidation.IsWarning">
      <summary>Возвращает или задает значение, которое указывает, стала ли результатом проверки утверждения ошибка или предупреждение.</summary>
      <returns>
        <see cref="T:System.Activities.InArgument`1" />.</returns>
    </member>
    <member name="P:System.Activities.Validation.AssertValidation.Message">
      <summary>Возвращает или задает текстовую строку, указывающую результаты проверки утверждения.</summary>
      <returns>
        <see cref="T:System.Activities.InArgument`1" />.</returns>
    </member>
    <member name="P:System.Activities.Validation.AssertValidation.PropertyName">
      <summary>Получает или задает имя свойства, связанного с нарушением утверждения.</summary>
      <returns>Параметр InArgument, содержащий имя свойства, связанного с проверкой утверждения.</returns>
    </member>
    <member name="T:System.Activities.Validation.Constraint">
      <summary>Обрабатывает ограничение проверки, используемое для проверки действия.</summary>
    </member>
    <member name="M:System.Activities.Validation.Constraint.AddValidationError(System.Activities.NativeActivityContext,System.Activities.Validation.ValidationError)">
      <summary>Добавляет ошибку проверки к списку ошибок проверки выполнения, прикрепленных к контексту выполнения.</summary>
      <param name="context">Среда выполнения действия рабочего процесса.</param>
      <param name="error">Ошибка проверки, возникающая во время выполнении рабочего процесса.</param>
    </member>
    <member name="M:System.Activities.Validation.Constraint.CacheMetadata(System.Activities.NativeActivityMetadata)">
      <summary>Создает объект <see cref="T:System.Activities.NativeActivityMetadata" />, содержащий аргументы выполнения для проверки рабочего процесса.</summary>
      <param name="metadata">Объект <see cref="T:System.Activities.NativeActivityMetadata" />, который становится контейнером для списка аргументов выполнения проверки.</param>
    </member>
    <member name="M:System.Activities.Validation.Constraint.Execute(System.Activities.NativeActivityContext)">
      <summary>Вызывает процесс, проверяющий действие.</summary>
      <param name="context">Среда выполнения действия рабочего процесса.</param>
    </member>
    <member name="M:System.Activities.Validation.Constraint.OnExecute(System.Activities.NativeActivityContext,System.Object,System.Activities.Validation.ValidationContext)">
      <summary>При реализации производным классом проверяет указанный объект при помощи указанного собственного действия и контекстов проверки.</summary>
      <param name="context">Выполнение действия рабочего процесса.</param>
      <param name="objectToValidate">Проверяемое действие.</param>
      <param name="objectToValidateContext">Контекст проверяемого действия.</param>
    </member>
    <member name="F:System.Activities.Validation.Constraint.ValidationErrorListPropertyName">
      <summary>Имя свойства ограничения действия, являющегося списком ошибок, обнаруженных при проверке во время выполнения рабочего процесса.</summary>
    </member>
    <member name="T:System.Activities.Validation.Constraint`1">
      <summary>Обрабатывает ограничение, используемое для проверки элемента типа Т.</summary>
      <typeparam name="T">Тип проверяемого элемента.</typeparam>
    </member>
    <member name="M:System.Activities.Validation.Constraint`1.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.Validation.Constraint`1" />.</summary>
    </member>
    <member name="P:System.Activities.Validation.Constraint`1.Body">
      <summary>Возвращает или задает логику проверки.</summary>
      <returns>Делегат действия <see cref="T:System.Activities.ActivityAction" />.</returns>
    </member>
    <member name="T:System.Activities.Validation.GetChildSubtree">
      <summary>Получает дочерние действия рабочего процесса из экземпляра действия.</summary>
    </member>
    <member name="M:System.Activities.Validation.GetChildSubtree.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.Validation.GetChildSubtree" />.</summary>
    </member>
    <member name="P:System.Activities.Validation.GetChildSubtree.ValidationContext">
      <summary>Возвращает или задает свойство, которое служит аргументом для действия и предоставляет действию сведения, необходимые для процесса проверки.</summary>
      <returns>Аргумент для действия, предоставляющий сведения, необходимые для его процесса проверки.</returns>
    </member>
    <member name="T:System.Activities.Validation.GetParentChain">
      <summary>Получает коллекцию всех действий, принадлежащих родительской оси действия.</summary>
    </member>
    <member name="M:System.Activities.Validation.GetParentChain.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.Validation.GetParentChain" />.</summary>
    </member>
    <member name="P:System.Activities.Validation.GetParentChain.ValidationContext">
      <summary>Возвращает или задает свойство, которое служит аргументом для действия и предоставляет действию сведения, необходимые для процесса проверки.</summary>
      <returns>Аргумент для действия, предоставляющий сведения, необходимые для его процесса проверки.</returns>
    </member>
    <member name="T:System.Activities.Validation.GetWorkflowTree">
      <summary>Возвращает дерево рабочего процесса из экземпляра действия.</summary>
    </member>
    <member name="M:System.Activities.Validation.GetWorkflowTree.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.Validation.GetWorkflowTree" />.</summary>
    </member>
    <member name="P:System.Activities.Validation.GetWorkflowTree.ValidationContext">
      <summary>Возвращает или задает свойство, которое служит аргументом для действия и предоставляет действию сведения, необходимые для процесса проверки.</summary>
      <returns>Аргумент для действия, предоставляющий сведения, необходимые для его процесса проверки.</returns>
    </member>
    <member name="T:System.Activities.Validation.ValidationContext">
      <summary>Создает результаты на основании правильного контекста текущего узла дерева рабочего процесса.</summary>
    </member>
    <member name="T:System.Activities.Validation.ValidationError">
      <summary>Представляет экземпляр ошибки проверки, произошедшей до выполнения рабочего процесса.</summary>
    </member>
    <member name="M:System.Activities.Validation.ValidationError.#ctor(System.String)">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.Validation.ValidationError" />, используя указанное сообщение об ошибке.</summary>
      <param name="message">Сведения об ошибке.</param>
    </member>
    <member name="M:System.Activities.Validation.ValidationError.#ctor(System.String,System.Boolean)">
      <summary>Создает экземпляр класса <see cref="T:System.Activities.Validation.ValidationError" />, используя указанное сообщение об ошибке и предупреждающий знак.</summary>
      <param name="message">Сообщение об ошибке.</param>
      <param name="isWarning">
        <see langword="true" />, если ошибка является предупреждением; в противном случае — <see langword="false" />.</param>
    </member>
    <member name="M:System.Activities.Validation.ValidationError.#ctor(System.String,System.Boolean,System.String)">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.Validation.ValidationError" />, используя указанное сообщение об ошибке, предупреждающий знак и имя свойства, вызвавшего ошибку.</summary>
      <param name="message">Сообщение об ошибке.</param>
      <param name="isWarning">Указывает, является ли ошибка предупреждением.</param>
      <param name="propertyName">Буквенно-цифровое имя свойства, выдавшего ошибку.</param>
    </member>
    <member name="M:System.Activities.Validation.ValidationError.#ctor(System.String,System.Boolean,System.String,System.Object)">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.Validation.ValidationError" />, используя указанное сообщение об ошибке, предупреждающий знак, имя свойства и сведения об источнике, вызвавшем ошибку.</summary>
      <param name="message">Сообщение об ошибке.</param>
      <param name="isWarning">Указывает, является ли ошибка предупреждением.</param>
      <param name="propertyName">Буквенно-цифровое имя свойства, выдавшего ошибку.</param>
      <param name="sourceDetail">Сведения об источнике ошибки.</param>
    </member>
    <member name="P:System.Activities.Validation.ValidationError.Id">
      <summary>Уникальный буквенно-цифровой идентификатор действия <see cref="T:System.Activities.Activity" />, являющегося источником ошибки. Этот идентификатор уникален для каждого действия указанного рабочего процесса.</summary>
      <returns>идентификатор действия, ставшего источником ошибки.</returns>
    </member>
    <member name="P:System.Activities.Validation.ValidationError.IsWarning">
      <summary>Возвращает значение, которое указывает, является ли ошибка проверки предупреждением, а не ошибкой.</summary>
      <returns>Значение <see langword="true" />, если ошибка проверки является предупреждением; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Activities.Validation.ValidationError.Message">
      <summary>Возвращает буквенно-цифровое сообщение, предоставляющее информацию об ошибке проверки.</summary>
      <returns>Сообщение, предоставляющее информацию об ошибке проверки.</returns>
    </member>
    <member name="P:System.Activities.Validation.ValidationError.PropertyName">
      <summary>Получает буквенно-цифровое имя свойства, выдавшего ошибку.</summary>
      <returns>Имя свойства, создавшего ошибку.</returns>
    </member>
    <member name="P:System.Activities.Validation.ValidationError.Source">
      <summary>Возвращает действие, ставшее источником ошибки.</summary>
      <returns>Действие, ставшее источником ошибки.</returns>
    </member>
    <member name="P:System.Activities.Validation.ValidationError.SourceDetail">
      <summary>Получает сведения об источнике ошибки.</summary>
      <returns>Сведения об источнике ошибки.</returns>
    </member>
    <member name="M:System.Activities.Validation.ValidationError.ToString">
      <summary>Преобразует имена и значения свойств ошибки проверки в перечисляющую их строку сообщения.</summary>
      <returns>Строковое представление ошибки проверки.</returns>
    </member>
    <member name="T:System.Activities.Validation.ValidationResults">
      <summary>Содержит все ошибки проверки, выявленные методом <see cref="M:System.Activities.Validation.ActivityValidationServices.Validate(System.Activities.Activity)" /> при проверке рабочего процесса.  Эти ошибки содержатся в коллекциях <see cref="P:System.Activities.Validation.ValidationResults.Errors" /> и <see cref="P:System.Activities.Validation.ValidationResults.Warnings" />.</summary>
    </member>
    <member name="M:System.Activities.Validation.ValidationResults.#ctor(System.Collections.Generic.IList{System.Activities.Validation.ValidationError})">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Validation.ValidationResults" />.</summary>
      <param name="allValidationErrors">Коллекция ошибок проверки и предупреждений.</param>
    </member>
    <member name="P:System.Activities.Validation.ValidationResults.Errors">
      <summary>Получает коллекцию со свойством «только чтение», содержащую ошибки проверки рабочего процесса.</summary>
      <returns>Коллекция со свойством «только чтение», содержащая ошибки проверки рабочего процесса.</returns>
    </member>
    <member name="P:System.Activities.Validation.ValidationResults.Warnings">
      <summary>Получает коллекцию со свойством «только чтение», содержащую предупреждения проверки рабочего процесса.</summary>
      <returns>Коллекция со свойством «только чтение», содержащая предупреждения проверки рабочего процесса.</returns>
    </member>
    <member name="T:System.Activities.Validation.ValidationSettings">
      <summary>Представляет коллекцию параметров для настройки поведения, которое будет проявлять метод <see cref="M:System.Activities.Validation.ActivityValidationServices.Validate(System.Activities.Activity)" />. Он также позволяет пользователю действия применять ограничения политики к рабочему процессу.</summary>
    </member>
    <member name="M:System.Activities.Validation.ValidationSettings.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.Validation.ValidationSettings" />.</summary>
    </member>
    <member name="P:System.Activities.Validation.ValidationSettings.AdditionalConstraints">
      <summary>Получает словарь пар «тип-ограничение». Каждое дополнительное ограничение, добавленное в словарь, будет применено к каждому действию указанного типа в проверяемом рабочем процессе.</summary>
      <returns>Список типа словаря, содержащий ограничения и типы.</returns>
    </member>
    <member name="P:System.Activities.Validation.ValidationSettings.CancellationToken">
      <summary>Получает или задает токен отмены, используемый для уведомления в случае, если действие отменяется.</summary>
      <returns>Токен отмены, используемый для уведомления в случае, если действие отменяется.</returns>
    </member>
    <member name="P:System.Activities.Validation.ValidationSettings.Environment">
      <summary>Получает или задает среду переменных и аргументов, связанных с этими параметрами проверки.</summary>
      <returns>Среда переменных и аргументов, связанных с этими параметрами проверки.</returns>
    </member>
    <member name="P:System.Activities.Validation.ValidationSettings.OnlyUseAdditionalConstraints">
      <summary>Возвращает или задает значение, указывающее, следует ли использовать дополнительные ограничения проверки исключительно для проверки рабочего процесса. Если задано значение <see langword="true" />, все проверки, содержащиеся внутри самого действия, будут пропускаться.</summary>
      <returns>Значение <see langword="true" />, если дополнительные ограничения должны использоваться эксклюзивно; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Activities.Validation.ValidationSettings.PrepareForRuntime">
      <summary>Получает или задает значение, указывающее, подготовлен ли данный экземпляр для среды выполнения.</summary>
      <returns>Значение <see langword="true" />, если этот экземпляр подготовлен для среды выполнения; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Activities.Validation.ValidationSettings.SingleLevel">
      <summary>Возвращает или задает значение, указывающее, проверяется ли предоставленное действие и его дочерние и субдочерние действия или только предоставленное действие.</summary>
      <returns>Значение <see langword="true" />, если проверяется только сам элемент без проверок его дочерних элементов; в противном случае — значение <see langword="false" />, если проверяется элемент, его дочерние и суб-дочерние элементы.</returns>
    </member>
    <member name="P:System.Activities.Validation.ValidationSettings.SkipValidatingRootConfiguration">
      <summary>Получает или задает значение, указывающее, является ли корневая конфигурация объектом проверки.</summary>
      <returns>Значение <see langword="true" />, если корневая конфигурация не должна проверяться; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="T:System.Activities.ValidationException">
      <summary>Исключение, которое вызывается, когда рабочий процесс или действие находится в недопустимом состоянии.</summary>
    </member>
    <member name="M:System.Activities.ValidationException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.ValidationException" />, используя значения по умолчанию.</summary>
    </member>
    <member name="M:System.Activities.ValidationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.ValidationException" /> с сериализованными данными.</summary>
      <param name="info">Объект <see cref="T:System.Runtime.Serialization.SerializationInfo" />, хранящий сериализованные данные объекта, относящиеся к выдаваемому исключению.</param>
      <param name="context">Объект <see cref="T:System.Runtime.Serialization.StreamingContext" />, содержащий контекстные сведения об источнике или назначении.</param>
    </member>
    <member name="M:System.Activities.ValidationException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.ValidationException" /> с указанным сообщением об ошибке.</summary>
      <param name="message">Сообщение об ошибке, указывающее причину создания исключения.</param>
    </member>
    <member name="M:System.Activities.ValidationException.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.ValidationException" /> указанным сообщением об ошибке и ссылкой на внутреннее исключение, вызвавшее данное исключение.</summary>
      <param name="message">Сообщение об ошибке, указывающее причину создания исключения.</param>
      <param name="innerException">Исключение, вызвавшее текущее исключение, или пустая ссылка (<see langword="Nothing" /> в Visual Basic), если внутреннее исключение не задано.</param>
    </member>
    <member name="T:System.Activities.Variable">
      <summary>Абстрактный базовый класс, от которого наследует вспомогательный класс элементов данных рабочего процесса <see cref="T:System.Activities.Variable`1" />.</summary>
    </member>
    <member name="M:System.Activities.Variable.Create(System.String,System.Type,System.Activities.VariableModifiers)">
      <summary>Инициализирует и возвращает новый экземпляр класса <see cref="T:System.Activities.Variable" />.</summary>
      <param name="name">Имя для <see cref="T:System.Activities.Variable" />.</param>
      <param name="type">Тип для <see cref="T:System.Activities.Variable" />.</param>
      <param name="modifiers">Параметры конфигурации для <see cref="T:System.Activities.Variable" />.</param>
      <returns>Новая переменная.</returns>
    </member>
    <member name="P:System.Activities.Variable.Default">
      <summary>Возвращает или задает объект <see cref="T:System.Activities.ActivityWithResult" />, представляющий значение по умолчанию для данного объекта <see cref="T:System.Activities.Variable" />.</summary>
      <returns>Значение по умолчанию для свойства <see cref="T:System.Activities.Variable" />.</returns>
    </member>
    <member name="M:System.Activities.Variable.Get(System.Activities.ActivityContext)">
      <summary>Возвращает значение объекта <see cref="T:System.Activities.Variable" /> с использованием указанного объекта <see cref="T:System.Activities.ActivityContext" />.</summary>
      <param name="context">Указывает текущий контекст выполнения.</param>
      <returns>Значение объекта <see cref="T:System.Activities.Variable" />.</returns>
    </member>
    <member name="M:System.Activities.Variable.GetLocation(System.Activities.ActivityContext)">
      <summary>Возвращает объект <see cref="T:System.Activities.Location" /> для данного объекта <see cref="T:System.Activities.Variable" />.</summary>
      <param name="context">Контекст выполняющегося действия.</param>
      <returns>Расположение данного объекта <see cref="T:System.Activities.Variable" />.</returns>
    </member>
    <member name="P:System.Activities.Variable.Modifiers">
      <summary>Возвращает или задает значение <see cref="T:System.Activities.VariableModifiers" /> для этой переменной <see cref="T:System.Activities.Variable" />.</summary>
      <returns>Значение модификатора для этой переменной <see cref="T:System.Activities.Variable" />.</returns>
    </member>
    <member name="P:System.Activities.Variable.Name">
      <summary>Возвращает или задает имя таблицы для объекта <see cref="T:System.Activities.Variable" />.</summary>
      <returns>Имя <see cref="T:System.Activities.Variable" />.</returns>
    </member>
    <member name="P:System.Activities.Variable.NameCore">
      <summary>Возвращает имя объекта <see cref="T:System.Activities.Variable" />.</summary>
      <returns>Имя <see cref="T:System.Activities.Variable" />.</returns>
    </member>
    <member name="M:System.Activities.Variable.Set(System.Activities.ActivityContext,System.Object)">
      <summary>Задает значение переменной <see cref="T:System.Activities.Variable" /> с использованием указанного контекста <see cref="T:System.Activities.ActivityContext" />.</summary>
      <param name="context">Указывает текущий контекст выполнения.</param>
      <param name="value">Новое значение.</param>
    </member>
    <member name="T:System.Activities.Variable`1">
      <summary>Представляет переменную в рабочем процессе.</summary>
      <typeparam name="T">
        <see cref="T:System.Type" /> выражения <see cref="T:System.Activities.Variable`1" />.</typeparam>
    </member>
    <member name="M:System.Activities.Variable`1.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Variable`1" />.</summary>
    </member>
    <member name="M:System.Activities.Variable`1.#ctor(System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,`0}})">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Variable`1" /> с выражением по умолчанию.</summary>
      <param name="defaultExpression">Выражение по умолчанию.</param>
    </member>
    <member name="M:System.Activities.Variable`1.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Variable`1" /> с именем переменной.</summary>
      <param name="name">Имя переменной.</param>
    </member>
    <member name="M:System.Activities.Variable`1.#ctor(System.String,`0)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Variable`1" /> с именем переменной и значением по умолчанию.</summary>
      <param name="name">Имя переменной.</param>
      <param name="defaultValue">Значение по умолчанию.</param>
    </member>
    <member name="M:System.Activities.Variable`1.#ctor(System.String,System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,`0}})">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.Variable`1" /> с именем переменной и выражением по умолчанию.</summary>
      <param name="name">Имя переменной.</param>
      <param name="defaultExpression">Выражение по умолчанию.</param>
    </member>
    <member name="P:System.Activities.Variable`1.Default">
      <summary>Возвращает или задает объект <see cref="T:System.Activities.Activity`1" />, представляющий значение по умолчанию для данного объекта <see cref="T:System.Activities.Variable`1" />.</summary>
      <returns>Значение по умолчанию для свойства <see cref="T:System.Activities.Variable`1" />.</returns>
    </member>
    <member name="M:System.Activities.Variable`1.Get(System.Activities.ActivityContext)">
      <summary>Возвращает значение переменной с использованием указанного <see cref="T:System.Activities.ActivityContext" />.</summary>
      <param name="context">Контекст выполняющегося действия.</param>
      <returns>Значение переменной.</returns>
    </member>
    <member name="M:System.Activities.Variable`1.GetLocation(System.Activities.ActivityContext)">
      <summary>Возвращает объект <see cref="T:System.Activities.Location`1" /> для переменной.</summary>
      <param name="context">Контекст действия, содержащий расположение переменной.</param>
      <returns>Расположение переменной.</returns>
    </member>
    <member name="M:System.Activities.Variable`1.Set(System.Activities.ActivityContext,`0)">
      <summary>Задает значение переменной.</summary>
      <param name="context">Контекст выполняющегося действия.</param>
      <param name="value">Значение переменной.</param>
    </member>
    <member name="T:System.Activities.VariableModifiers">
      <summary>Задает порядок обработки объектов <see cref="T:System.Activities.Variable" /> в среде выполнения рабочего процесса.</summary>
    </member>
    <member name="F:System.Activities.VariableModifiers.Mapped">
      <summary>Объект <see cref="T:System.Activities.Variable" /> сопоставляется для сохраняемости.</summary>
    </member>
    <member name="F:System.Activities.VariableModifiers.None">
      <summary>Для <see cref="T:System.Activities.Variable" /> не указываются модификаторы.</summary>
    </member>
    <member name="F:System.Activities.VariableModifiers.ReadOnly">
      <summary>Значение для <see cref="T:System.Activities.Variable" /> нельзя изменять.</summary>
    </member>
    <member name="T:System.Activities.VersionMismatchException">
      <summary>Указывает сведения об исключении несоответствия версий.</summary>
    </member>
    <member name="M:System.Activities.VersionMismatchException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.VersionMismatchException" />.</summary>
    </member>
    <member name="M:System.Activities.VersionMismatchException.#ctor(System.Activities.WorkflowIdentity,System.Activities.WorkflowIdentity)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.VersionMismatchException" />, используя ожидаемую версию и фактическую версию.</summary>
      <param name="expectedVersion">Ожидаемая версия.</param>
      <param name="actualVersion">Фактическая версия из файла.</param>
    </member>
    <member name="M:System.Activities.VersionMismatchException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.VersionMismatchException" />, используя сведения и контекст.</summary>
      <param name="info">SerializationInfo, хранящий сериализованные данные объекта, относящиеся к выдаваемому исключению.</param>
      <param name="context">Объект StreamingContext, содержащий контекстные сведения об источнике или назначении.</param>
    </member>
    <member name="M:System.Activities.VersionMismatchException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.VersionMismatchException" /> с помощью сообщения.</summary>
      <param name="message">Сообщение об ошибке, указывающее причину создания исключения.</param>
    </member>
    <member name="M:System.Activities.VersionMismatchException.#ctor(System.String,System.Activities.WorkflowIdentity,System.Activities.WorkflowIdentity)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.VersionMismatchException" />, используя сообщение, ожидаемую версию и фактическую версию.</summary>
      <param name="message">Сообщение об ошибке, указывающее причину создания исключения.</param>
      <param name="expectedVersion">Ожидаемая версия.</param>
      <param name="actualVersion">Фактическая версия из файла.</param>
    </member>
    <member name="M:System.Activities.VersionMismatchException.#ctor(System.String,System.Activities.WorkflowIdentity,System.Activities.WorkflowIdentity,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.VersionMismatchException" />.</summary>
      <param name="message">Сообщение об ошибке, указывающее причину создания исключения.</param>
      <param name="expectedVersion">Ожидаемая версия.</param>
      <param name="actualVersion">Фактическая версия из файла.</param>
      <param name="innerException">Исключение, которое является причиной текущего исключения.</param>
    </member>
    <member name="M:System.Activities.VersionMismatchException.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.VersionMismatchException" />.</summary>
      <param name="message">Сообщение об ошибке, указывающее причину создания исключения.</param>
      <param name="innerException">Исключение, которое является причиной текущего исключения.</param>
    </member>
    <member name="P:System.Activities.VersionMismatchException.ActualVersion">
      <summary>Получает или задает фактическую версию из исключения несоответствия.</summary>
      <returns>Фактическая версия из исключения несоответствия.</returns>
    </member>
    <member name="P:System.Activities.VersionMismatchException.ExpectedVersion">
      <summary>Получает или задает версию ожидаемого исключения несоответствия.</summary>
      <returns>Версия ожидаемого исключения несоответствия.</returns>
    </member>
    <member name="M:System.Activities.VersionMismatchException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Задает сведения об исключении в объекте SerializationInfo.</summary>
      <param name="info">SerializationInfo, хранящий сериализованные данные объекта, относящиеся к выдаваемому исключению.</param>
      <param name="context">Объект StreamingContext, содержащий контекстные сведения об источнике или назначении.</param>
    </member>
    <member name="T:System.Activities.WorkflowApplication">
      <summary>Предоставляет ведущее приложение для одиночного экземпляра рабочего процесса.</summary>
    </member>
    <member name="M:System.Activities.WorkflowApplication.#ctor(System.Activities.Activity)">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.WorkflowApplication" /> с указанным определением рабочего процесса.</summary>
      <param name="workflowDefinition">Определение рабочего процесса.</param>
    </member>
    <member name="M:System.Activities.WorkflowApplication.#ctor(System.Activities.Activity,System.Activities.WorkflowIdentity)">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.WorkflowApplication" /> с указанным определением рабочего процесса и удостоверением определения.</summary>
      <param name="workflowDefinition">Определение рабочего процесса.</param>
      <param name="definitionIdentity">Удостоверение определения.</param>
    </member>
    <member name="M:System.Activities.WorkflowApplication.#ctor(System.Activities.Activity,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.WorkflowApplication" />, использующий указанное определение рабочего процесса и указанные значения аргументов.</summary>
      <param name="workflowDefinition">Определение рабочего процесса.</param>
      <param name="inputs">Значения для аргументов, определенных в корневом действии определения рабочего процесса, привязанные к именам аргументов.</param>
    </member>
    <member name="M:System.Activities.WorkflowApplication.#ctor(System.Activities.Activity,System.Collections.Generic.IDictionary{System.String,System.Object},System.Activities.WorkflowIdentity)">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.WorkflowApplication" />, использующий указанное определение рабочего процесса, указанные значения аргументов и удостоверение определения.</summary>
      <param name="workflowDefinition">Определение рабочего процесса.</param>
      <param name="inputs">Удостоверение определения.</param>
      <param name="definitionIdentity">Значения для аргументов, определенных в корневом действии определения рабочего процесса, привязанные к именам аргументов.</param>
    </member>
    <member name="M:System.Activities.WorkflowApplication.Abort">
      <summary>Уведомляет среду выполнения рабочего процесса о том, что работа этого экземпляра рабочего процесса будет прервана.</summary>
    </member>
    <member name="M:System.Activities.WorkflowApplication.Abort(System.String)">
      <summary>Уведомляет среду выполнения рабочего процесса о необходимом прерывании этого экземпляра рабочего процесса по указанной причине.</summary>
      <param name="reason">Причина запроса на прерывание.</param>
    </member>
    <member name="P:System.Activities.WorkflowApplication.Aborted">
      <summary>Возвращает или задает действие <see cref="T:System.Action`1" />, которое вызывается, когда прерывается экземпляр рабочего процесса.</summary>
      <returns>Действие, которое вызывается, когда прерывается экземпляр рабочего процесса.</returns>
    </member>
    <member name="M:System.Activities.WorkflowApplication.AddInitialInstanceValues(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object})">
      <summary>Задает значения метаданных экземпляра, которые включаются в первое сохранение нового экземпляра.</summary>
      <param name="writeOnlyValues">Значения метаданных, которые включаются в первое сохранение.</param>
    </member>
    <member name="M:System.Activities.WorkflowApplication.BeginCancel(System.AsyncCallback,System.Object)">
      <summary>Отменяет экземпляр рабочего процесса в асинхронном режиме с указанным <see cref="T:System.AsyncCallback" /> и предоставляемым пользователем состоянием.</summary>
      <param name="callback">Метод, вызываемый при завершении операции отмены.</param>
      <param name="state">Относящийся к необязательному приложению объект, содержащий сведения об асинхронной операции.</param>
      <returns>Ссылка на асинхронную операцию отмены.</returns>
    </member>
    <member name="M:System.Activities.WorkflowApplication.BeginCancel(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Отменяет экземпляр рабочего процесса в асинхронном режиме с использованием указанного интервала времени ожидания, объекта <see cref="T:System.AsyncCallback" /> и предоставляемого пользователем состояния.</summary>
      <param name="timeout">Период времени, в течение которого операция отмены должна быть завершена, прежде чем она будет отменена с формированием исключения <see cref="T:System.TimeoutException" />.</param>
      <param name="callback">Метод, вызываемый при завершении операции отмены.</param>
      <param name="state">Относящийся к необязательному приложению объект, содержащий сведения об асинхронной операции.</param>
      <returns>Ссылка на асинхронную операцию отмены.</returns>
    </member>
    <member name="M:System.Activities.WorkflowApplication.BeginCreateDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.Activities.WorkflowIdentity,System.Activities.WorkflowIdentityFilter,System.AsyncCallback,System.Object)">
      <summary>Создает владельца экземпляра по умолчанию в асинхронном режиме с помощью асинхронного шаблона проектирования <see cref="T:System.IAsyncResult" /> с указанным хранилищем экземпляров, идентификатором определения, фильтром идентификатора, обратным вызовом и состоянием.</summary>
      <param name="instanceStore">Доступ к сохраненному состоянию текущего экземпляра приложения рабочего процесса.</param>
      <param name="definitionIdentity">Удостоверение определения.</param>
      <param name="identityFilter">Фильтр удостоверения.</param>
      <param name="callback">Метод, вызываемый, когда операция начала загрузки была выполнена успешно.</param>
      <param name="state">Относящийся к необязательному приложению объект, содержащий сведения об асинхронной операции.</param>
      <returns>Ссылка на асинхронную операцию.</returns>
    </member>
    <member name="M:System.Activities.WorkflowApplication.BeginCreateDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.Activities.WorkflowIdentity,System.Activities.WorkflowIdentityFilter,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Создает владельца экземпляра по умолчанию в асинхронном режиме с помощью асинхронного шаблона проектирования <see cref="T:System.IAsyncResult" /> с указанным хранилищем экземпляров, идентификатором определения, фильтром идентификатора, интервалом истечения времени ожидания, обратным вызовом и состоянием.</summary>
      <param name="instanceStore">Доступ к сохраненному состоянию текущего экземпляра приложения рабочего процесса.</param>
      <param name="definitionIdentity">Удостоверение определения.</param>
      <param name="identityFilter">Фильтр удостоверения.</param>
      <param name="timeout">Интервал, в течение которого операция начала загрузки должна завершиться до отмены операции и создания исключения <see cref="T:System.TimeoutException" />.</param>
      <param name="callback">Метод, вызываемый, когда операция начала загрузки была выполнена успешно.</param>
      <param name="state">Относящийся к необязательному приложению объект, содержащий сведения об асинхронной операции.</param>
      <returns>Ссылка на асинхронную операцию.</returns>
    </member>
    <member name="M:System.Activities.WorkflowApplication.BeginDeleteDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.AsyncCallback,System.Object)">
      <summary>Удаляет владельца экземпляра по умолчанию в асинхронном режиме с помощью асинхронного шаблона проектирования <see cref="T:System.IAsyncResult" /> с указанным хранилищем экземпляров, обратным вызовом и состоянием.</summary>
      <param name="instanceStore">Доступ к сохраненному состоянию текущего экземпляра приложения рабочего процесса.</param>
      <param name="callback">Метод, вызываемый, когда операция начала загрузки была выполнена успешно.</param>
      <param name="state">Относящийся к необязательному приложению объект, содержащий сведения об асинхронной операции.</param>
      <returns>Ссылка на асинхронную операцию.</returns>
    </member>
    <member name="M:System.Activities.WorkflowApplication.BeginDeleteDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Удаляет владельца экземпляра по умолчанию в асинхронном режиме с помощью асинхронного шаблона проектирования <see cref="T:System.IAsyncResult" /> с указанным хранилищем экземпляров, интервалом времени ожидания, обратным вызовом и состоянием.</summary>
      <param name="instanceStore">Доступ к сохраненному состоянию текущего экземпляра приложения рабочего процесса.</param>
      <param name="timeout">Интервал, в течение которого операция начала загрузки должна завершиться до отмены операции и создания исключения <see cref="T:System.TimeoutException" />.</param>
      <param name="callback">Метод, вызываемый, когда операция начала загрузки была выполнена успешно.</param>
      <param name="state">Относящийся к необязательному приложению объект, содержащий сведения об асинхронной операции.</param>
      <returns>Ссылка на асинхронную операцию.</returns>
    </member>
    <member name="M:System.Activities.WorkflowApplication.BeginGetInstance(System.Guid,System.Runtime.DurableInstancing.InstanceStore,System.AsyncCallback,System.Object)">
      <summary>Извлекает владельца экземпляра в асинхронном режиме с помощью асинхронного шаблона проектирования <see cref="T:System.IAsyncResult" /> с указанными идентификатором, хранилищем экземпляров, обратным вызовом и состоянием.</summary>
      <param name="instanceId">Идентификатор экземпляра.</param>
      <param name="instanceStore">Доступ к сохраненному состоянию текущего экземпляра приложения рабочего процесса.</param>
      <param name="callback">Метод, вызываемый, когда операция начала загрузки была выполнена успешно.</param>
      <param name="state">Относящийся к необязательному приложению объект, содержащий сведения об асинхронной операции.</param>
      <returns>Ссылка на асинхронную операцию.</returns>
    </member>
    <member name="M:System.Activities.WorkflowApplication.BeginGetInstance(System.Guid,System.Runtime.DurableInstancing.InstanceStore,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Извлекает владельца экземпляра в асинхронном режиме с помощью асинхронного шаблона проектирования <see cref="T:System.IAsyncResult" /> с указанными идентификатором, хранилищем экземпляров, сроком ожидания, обратным вызовом и состоянием.</summary>
      <param name="instanceId">Идентификатор экземпляра.</param>
      <param name="instanceStore">Доступ к сохраненному состоянию текущего экземпляра приложения рабочего процесса.</param>
      <param name="timeout">Интервал, в течение которого операция начала загрузки должна завершиться до отмены операции и создания исключения <see cref="T:System.TimeoutException" />.</param>
      <param name="callback">Метод, вызываемый, когда операция начала загрузки была выполнена успешно.</param>
      <param name="state">Относящийся к необязательному приложению объект, содержащий сведения об асинхронной операции.</param>
      <returns>Ссылка на асинхронную операцию.</returns>
    </member>
    <member name="M:System.Activities.WorkflowApplication.BeginGetRunnableInstance(System.Runtime.DurableInstancing.InstanceStore,System.AsyncCallback,System.Object)">
      <summary>Извлекает владельца готового к запуску экземпляра в асинхронном режиме с помощью асинхронного шаблона проектирования <see cref="T:System.IAsyncResult" /> с указанным хранилищем экземпляров, обратным вызовом и состоянием.</summary>
      <param name="instanceStore">Доступ к сохраненному состоянию текущего экземпляра приложения рабочего процесса.</param>
      <param name="callback">Метод, вызываемый, когда операция начала загрузки была выполнена успешно.</param>
      <param name="state">Относящийся к необязательному приложению объект, содержащий сведения об асинхронной операции.</param>
      <returns>Ссылка на асинхронную операцию.</returns>
    </member>
    <member name="M:System.Activities.WorkflowApplication.BeginGetRunnableInstance(System.Runtime.DurableInstancing.InstanceStore,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Извлекает владельца готового к запуску экземпляра в асинхронном режиме с помощью асинхронного шаблона проектирования <see cref="T:System.IAsyncResult" /> с указанным хранилищем экземпляров, интервалом времени ожидания, обратным вызовом и состоянием.</summary>
      <param name="instanceStore">Доступ к сохраненному состоянию текущего экземпляра приложения рабочего процесса.</param>
      <param name="timeout">Интервал, в течение которого операция начала загрузки должна завершиться до отмены операции и создания исключения <see cref="T:System.TimeoutException" />.</param>
      <param name="callback">Метод, вызываемый, когда операция начала загрузки была выполнена успешно.</param>
      <param name="state">Относящийся к необязательному приложению объект, содержащий сведения об асинхронной операции.</param>
      <returns>Ссылка на асинхронную операцию.</returns>
    </member>
    <member name="M:System.Activities.WorkflowApplication.BeginLoad(System.Activities.WorkflowApplicationInstance,System.Activities.DynamicUpdate.DynamicUpdateMap,System.AsyncCallback,System.Object)">
      <summary>Асинхронно загружает рабочий процесс из хранилища экземпляров с помощью шаблона асинхронного проекта <see cref="T:System.IAsyncResult" /> с указанным экземпляром, сопоставлением обновления, обратным вызовом и состоянием.</summary>
      <param name="instance">Экземпляр.</param>
      <param name="updateMap">Сопоставление обновления.</param>
      <param name="callback">Метод, вызываемый, когда операция начала загрузки была выполнена успешно.</param>
      <param name="state">Относящийся к необязательному приложению объект, содержащий сведения об асинхронной операции.</param>
      <returns>Ссылка на асинхронную операцию.</returns>
    </member>
    <member name="M:System.Activities.WorkflowApplication.BeginLoad(System.Activities.WorkflowApplicationInstance,System.Activities.DynamicUpdate.DynamicUpdateMap,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Асинхронно загружает рабочий процесс из хранилища экземпляров с помощью шаблона асинхронного проекта <see cref="T:System.IAsyncResult" /> с указанным экземпляром, сопоставлением обновления, интервалом времени ожидания, обратным вызовом и состоянием.</summary>
      <param name="instance">Экземпляр.</param>
      <param name="updateMap">Сопоставление обновления.</param>
      <param name="timeout">Интервал, в течение которого операция начала загрузки должна завершиться до отмены операции и создания исключения <see cref="T:System.TimeoutException" />.</param>
      <param name="callback">Метод, вызываемый, когда операция начала загрузки была выполнена успешно.</param>
      <param name="state">Относящийся к необязательному приложению объект, содержащий сведения об асинхронной операции.</param>
      <returns>Ссылка на асинхронную операцию.</returns>
    </member>
    <member name="M:System.Activities.WorkflowApplication.BeginLoad(System.Activities.WorkflowApplicationInstance,System.AsyncCallback,System.Object)">
      <summary>Асинхронно загружает рабочий процесс из хранилища экземпляров с помощью шаблона асинхронного проекта <see cref="T:System.IAsyncResult" /> с указанным экземпляром, обратным вызовом и состоянием.</summary>
      <param name="instance">Экземпляр.</param>
      <param name="callback">Метод, вызываемый, когда операция начала загрузки была выполнена успешно.</param>
      <param name="state">Относящийся к необязательному приложению объект, содержащий сведения об асинхронной операции.</param>
      <returns>Ссылка на асинхронную операцию.</returns>
    </member>
    <member name="M:System.Activities.WorkflowApplication.BeginLoad(System.Activities.WorkflowApplicationInstance,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Асинхронно загружает рабочий процесс из хранилища экземпляров с помощью шаблона асинхронного проекта <see cref="T:System.IAsyncResult" /> с указанным экземпляром, интервалом времени ожидания, обратным вызовом и состоянием.</summary>
      <param name="instance">Экземпляр.</param>
      <param name="timeout">Интервал, в течение которого операция начала загрузки должна завершиться до отмены операции и создания исключения <see cref="T:System.TimeoutException" />.</param>
      <param name="callback">Метод, вызываемый, когда операция начала загрузки была выполнена успешно.</param>
      <param name="state">Относящийся к необязательному приложению объект, содержащий сведения об асинхронной операции.</param>
      <returns>Ссылка на асинхронную операцию.</returns>
    </member>
    <member name="M:System.Activities.WorkflowApplication.BeginLoad(System.Guid,System.AsyncCallback,System.Object)">
      <summary>Загружает рабочий процесс в асинхронном режиме из хранилища экземпляров, используя указанный идентификатор экземпляра, метод обратного вызова и предоставляемое пользователем состояние.</summary>
      <param name="instanceId">Глобально уникальный 128-разрядный идентификатор экземпляра рабочего процесса.</param>
      <param name="callback">Метод, вызываемый, когда операция начала загрузки была выполнена успешно.</param>
      <param name="state">Относящийся к необязательному приложению объект, содержащий сведения об асинхронной операции.</param>
      <returns>Состояние асинхронной операции.</returns>
    </member>
    <member name="M:System.Activities.WorkflowApplication.BeginLoad(System.Guid,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Загружает рабочий процесс в асинхронном режиме из хранилища экземпляров, используя указанный идентификатор экземпляра, интервал времени ожидания, метод обратного вызова и предоставляемое пользователем состояние.</summary>
      <param name="instanceId">Глобально уникальный 128-разрядный идентификатор экземпляра рабочего процесса.</param>
      <param name="timeout">Интервал, в течение которого операция начала загрузки должна завершиться до отмены операции и создания исключения <see cref="T:System.TimeoutException" />.</param>
      <param name="callback">Метод, вызываемый, когда операция начала загрузки была выполнена успешно.</param>
      <param name="state">Относящийся к необязательному приложению объект, содержащий сведения об асинхронной операции.</param>
      <returns>Состояние асинхронной операции.</returns>
    </member>
    <member name="M:System.Activities.WorkflowApplication.BeginLoadRunnableInstance(System.AsyncCallback,System.Object)">
      <summary>Запускает операцию для загрузки выполняемого экземпляра рабочего процесса из <see cref="P:System.Activities.WorkflowApplication.InstanceStore" />.</summary>
      <param name="callback">Метод, вызываемый при завершении этой операции.</param>
      <param name="state">Необязательный относящийся к приложению объект, содержащий сведения об асинхронной операции.</param>
      <returns>Ссылка на асинхронную операцию.</returns>
    </member>
    <member name="M:System.Activities.WorkflowApplication.BeginLoadRunnableInstance(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Запускает операцию для загрузки выполняемого экземпляра рабочего процесса из <see cref="P:System.Activities.WorkflowApplication.InstanceStore" /> с использованием указанного интервала времени ожидания.</summary>
      <param name="timeout">Период времени, в течение которого операция загрузки должна быть завершена, прежде чем она будет отменена с формированием исключения <see cref="T:System.TimeoutException" />.</param>
      <param name="callback">Метод, вызываемый при завершении этой операции.</param>
      <param name="state">Необязательный относящийся к приложению объект, содержащий сведения об асинхронной операции.</param>
      <returns>Ссылка на асинхронную операцию.</returns>
    </member>
    <member name="M:System.Activities.WorkflowApplication.BeginPersist(System.AsyncCallback,System.Object)">
      <summary>Сохраняет экземпляр рабочего процесса в хранилище экземпляров в асинхронном режиме, используя указанный метод обратного вызова и предоставляемое пользователем состояние.</summary>
      <param name="callback">Метод, вызываемый при завершении операции сохранения.</param>
      <param name="state">Относящийся к необязательному приложению объект, содержащий сведения об асинхронной операции.</param>
      <returns>Ссылка на асинхронную операцию сохранения.</returns>
    </member>
    <member name="M:System.Activities.WorkflowApplication.BeginPersist(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Сохраняет экземпляр рабочего процесса в хранилище экземпляров в асинхронном режиме, используя указанный интервал времени ожидания, метод обратного вызова и предоставляемое пользователем состояние.</summary>
      <param name="timeout">Период времени, в течение которого операция сохранения должна быть завершена, прежде чем она будет отменена с формированием исключения <see cref="T:System.TimeoutException" />.</param>
      <param name="callback">Метод, вызываемый при завершении операции сохранения.</param>
      <param name="state">Относящийся к необязательному приложению объект, содержащий сведения об асинхронной операции.</param>
      <returns>Ссылка на асинхронную операцию сохранения.</returns>
    </member>
    <member name="M:System.Activities.WorkflowApplication.BeginResumeBookmark(System.Activities.Bookmark,System.Object,System.AsyncCallback,System.Object)">
      <summary>Запускает операцию для возобновления закладки, используя указанное значение, метод обратного вызова и состояние.</summary>
      <param name="bookmark">Возобновляемая закладка.</param>
      <param name="value">Объект, передаваемый в качестве параметра методу, вызываемому при возобновлении чтения с закладки.</param>
      <param name="callback">Метод, вызываемый при завершении операции возобновления.</param>
      <param name="state">Относящийся к необязательному приложению объект, содержащий сведения об асинхронной операции.</param>
      <returns>Ссылка на асинхронную операцию возобновления чтения с закладки.</returns>
    </member>
    <member name="M:System.Activities.WorkflowApplication.BeginResumeBookmark(System.Activities.Bookmark,System.Object,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Запускает операцию для возобновления закладки, используя указанное значение, интервал времени ожидания, метод обратного вызова и состояние.</summary>
      <param name="bookmark">Возобновляемая закладка.</param>
      <param name="value">Объект, передаваемый в качестве параметра методу, вызываемому при возобновлении чтения с закладки.</param>
      <param name="timeout">Период времени, в течение которого операция возобновления должна быть завершена, прежде чем операция отменяется и создается исключение <see cref="T:System.TimeoutException" />.</param>
      <param name="callback">Метод, вызываемый при завершении операции возобновления.</param>
      <param name="state">Относящийся к необязательному приложению объект, содержащий сведения об асинхронной операции.</param>
      <returns>Ссылка на асинхронную операцию возобновления чтения с закладки.</returns>
    </member>
    <member name="M:System.Activities.WorkflowApplication.BeginResumeBookmark(System.String,System.Object,System.AsyncCallback,System.Object)">
      <summary>Запускает асинхронную операцию для возобновления закладки с указанным именем, используя указанное значение, метод обратного вызова и состояние. Закладка, с которой будет продолжено чтение, ранее создавалась действием в экземпляре рабочего процесса.</summary>
      <param name="bookmarkName">Имя закладки, с которой будет продолжено чтение.</param>
      <param name="value">Объект, передаваемый в качестве параметра методу, вызываемому при возобновлении чтения с закладки.</param>
      <param name="callback">Метод, который вызывается после завершения асинхронной операции.</param>
      <param name="state">Состояние выполнения рабочего процесса, сохраненное вызывающим потоком перед началом асинхронной операции.</param>
      <returns>Результат операции возобновления чтения с закладки.</returns>
    </member>
    <member name="M:System.Activities.WorkflowApplication.BeginResumeBookmark(System.String,System.Object,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Запускает асинхронную операцию для возобновления закладки с указанным именем, используя указанное значение, интервал времени ожидания, метод обратного вызова и состояние. Закладка, с которой будет продолжено чтение, ранее создавалась действием в экземпляре рабочего процесса.</summary>
      <param name="bookmarkName">Имя закладки, с которой будет продолжено чтение.</param>
      <param name="value">Объект, передаваемый в качестве параметра методу, вызываемому при возобновлении чтения с закладки.</param>
      <param name="timeout">Временной интервал, в течение которого чтение с закладки должно быть возобновлено.</param>
      <param name="callback">Метод, который вызывается после завершения асинхронной операции.</param>
      <param name="state">Состояние выполнения рабочего процесса, сохраненное вызывающим потоком перед началом асинхронной операции.</param>
      <returns>Результат операции возобновления чтения с закладки.</returns>
    </member>
    <member name="M:System.Activities.WorkflowApplication.BeginRun(System.AsyncCallback,System.Object)">
      <summary>Запускает или возобновляет экземпляр рабочего процесса в асинхронном режиме, используя указанный метод обратного вызова и предоставляемое пользователем состояние.</summary>
      <param name="callback">Метод, вызываемый при завершении операции возобновления.</param>
      <param name="state">Относящийся к необязательному приложению объект, содержащий сведения об асинхронной операции.</param>
      <returns>Ссылка на асинхронную операцию запуска.</returns>
    </member>
    <member name="M:System.Activities.WorkflowApplication.BeginRun(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Запускает или возобновляет экземпляр рабочего процесса в асинхронном режиме, используя указанный интервал времени ожидания, метод обратного вызова и предоставляемое пользователем состояние.</summary>
      <param name="timeout">Период времени, в течение которого операция возобновления должна быть завершена, прежде чем операция отменяется и создается исключение <see cref="T:System.TimeoutException" />.</param>
      <param name="callback">Метод, вызываемый при завершении операции возобновления.</param>
      <param name="state">Относящийся к необязательному приложению объект, содержащий сведения об асинхронной операции.</param>
      <returns>Ссылка на асинхронную операцию запуска.</returns>
    </member>
    <member name="M:System.Activities.WorkflowApplication.BeginTerminate(System.Exception,System.AsyncCallback,System.Object)">
      <summary>Завершает экземпляр рабочего процесса в асинхронном режиме, используя указанное исключение, метод обратного вызова и предоставляемое пользователем состояние.</summary>
      <param name="reason">Причина завершения экземпляра рабочего процесса.</param>
      <param name="callback">Метод, вызываемый после завершения операции <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" />.</param>
      <param name="state">Относящийся к необязательному приложению объект, содержащий сведения об асинхронной операции.</param>
      <returns>Ссылка на текущую операцию <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" />.</returns>
    </member>
    <member name="M:System.Activities.WorkflowApplication.BeginTerminate(System.Exception,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Завершает экземпляр рабочего процесса в асинхронном режиме, используя указанное исключение, интервал времени ожидания, метод обратного вызова и предоставляемое пользователем состояние.</summary>
      <param name="reason">Причина завершения работы экземпляра рабочего процесса.</param>
      <param name="timeout">Период времени, в течение которого операция <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /> должна быть завершена, прежде чем она будет отменена с формированием исключения <see cref="T:System.TimeoutException" />.</param>
      <param name="callback">Метод, вызываемый после завершения операции <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" />.</param>
      <param name="state">Относящийся к необязательному приложению объект, содержащий сведения об асинхронной операции.</param>
      <returns>Ссылка на текущую операцию <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" />.</returns>
    </member>
    <member name="M:System.Activities.WorkflowApplication.BeginTerminate(System.String,System.AsyncCallback,System.Object)">
      <summary>Завершает экземпляр рабочего процесса в асинхронном режиме, используя указанное сообщение об ошибке, метод обратного вызова и предоставляемое пользователем состояние.</summary>
      <param name="reason">Причина завершения работы экземпляра рабочего процесса.</param>
      <param name="callback">Метод, вызываемый после завершения операции <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" />.</param>
      <param name="state">Относящийся к необязательному приложению объект, содержащий сведения об асинхронной операции.</param>
      <returns>Ссылка на текущую операцию <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" />.</returns>
    </member>
    <member name="M:System.Activities.WorkflowApplication.BeginTerminate(System.String,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Завершает экземпляр рабочего процесса в асинхронном режиме, используя указанное сообщение об ошибке, интервал времени ожидания, метод обратного вызова и предоставляемое пользователем состояние.</summary>
      <param name="reason">Причина завершения работы экземпляра рабочего процесса.</param>
      <param name="timeout">Период времени, в течение которого операция <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /> должна быть завершена, прежде чем она будет отменена с формированием исключения <see cref="T:System.TimeoutException" />.</param>
      <param name="callback">Метод, вызываемый после завершения операции <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" />.</param>
      <param name="state">Относящийся к необязательному приложению объект, содержащий сведения об асинхронной операции.</param>
      <returns>Ссылка на асинхронную операцию <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" />.</returns>
    </member>
    <member name="M:System.Activities.WorkflowApplication.BeginUnload(System.AsyncCallback,System.Object)">
      <summary>Сохраняет и освобождает экземпляр рабочего процесса в асинхронном режиме, используя указанный метод обратного вызова и предоставляемое пользователем состояние.</summary>
      <param name="callback">Метод, вызываемый после завершения операции <see cref="Overload:System.Activities.WorkflowApplication.BeginUnload" />.</param>
      <param name="state">Относящийся к необязательному приложению объект, содержащий сведения об асинхронной операции.</param>
      <returns>Ссылка на асинхронную операцию <see cref="Overload:System.Activities.WorkflowApplication.BeginUnload" />.</returns>
    </member>
    <member name="M:System.Activities.WorkflowApplication.BeginUnload(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Сохраняет и освобождает экземпляр рабочего процесса в асинхронном режиме, используя указанный интервал времени ожидания, метод обратного вызова и предоставляемое пользователем состояние.</summary>
      <param name="timeout">Период времени, в течение которого операция <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /> должна быть завершена, прежде чем она будет отменена с формированием исключения <see cref="T:System.TimeoutException" />.</param>
      <param name="callback">Метод, вызываемый после завершения операции <see cref="Overload:System.Activities.WorkflowApplication.BeginUnload" />.</param>
      <param name="state">Относящийся к необязательному приложению объект, содержащий сведения об асинхронной операции.</param>
      <returns>Ссылка на асинхронную операцию <see cref="Overload:System.Activities.WorkflowApplication.BeginUnload" />.</returns>
    </member>
    <member name="M:System.Activities.WorkflowApplication.Cancel">
      <summary>Отменяет экземпляр рабочего процесса.</summary>
    </member>
    <member name="M:System.Activities.WorkflowApplication.Cancel(System.TimeSpan)">
      <summary>Отменяет экземпляр рабочего процесса, используя указанный интервал времени ожидания.</summary>
      <param name="timeout">Период времени, в течение которого операция отмены должна быть завершена, прежде чем она будет отменена с формированием исключения <see cref="T:System.TimeoutException" />.</param>
    </member>
    <member name="P:System.Activities.WorkflowApplication.Completed">
      <summary>Возвращает или задает действие <see cref="T:System.Action`1" />, которое вызывается, когда завершается экземпляр рабочего процесса.</summary>
      <returns>Действие, вызываемое при завершении экземпляра рабочего процесса.</returns>
    </member>
    <member name="M:System.Activities.WorkflowApplication.CreateDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.Activities.WorkflowIdentity,System.Activities.WorkflowIdentityFilter)">
      <summary>Создает владелец экземпляра по умолчанию для рабочего процесса, используя указанное хранилище экземпляров, идентификатор определения, фильтр идентификатора.</summary>
      <param name="instanceStore">Доступ к сохраненному состоянию текущего экземпляра приложения рабочего процесса.</param>
      <param name="definitionIdentity">Удостоверение определения рабочего процесса.</param>
      <param name="identityFilter">Фильтр удостоверения.</param>
    </member>
    <member name="M:System.Activities.WorkflowApplication.CreateDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.Activities.WorkflowIdentity,System.Activities.WorkflowIdentityFilter,System.TimeSpan)">
      <summary>Создает владелец экземпляра по умолчанию для рабочего процесса, используя указанное хранилище экземпляров, идентификатор определения, фильтр идентификатора и интервал истечения времени ожидания.</summary>
      <param name="instanceStore">Доступ к сохраненному состоянию текущего экземпляра приложения рабочего процесса.</param>
      <param name="definitionIdentity">Удостоверение определения рабочего процесса.</param>
      <param name="identityFilter">Фильтр удостоверения.</param>
      <param name="timeout">Период времени, в течение которого операция начала загрузки должна быть завершена, прежде чем она будет отменена.</param>
    </member>
    <member name="M:System.Activities.WorkflowApplication.DeleteDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore)">
      <summary>Удаляет владелец экземпляра по умолчанию для рабочего процесса с указанным хранилищем экземпляров.</summary>
      <param name="instanceStore">Доступ к сохраненному состоянию текущего экземпляра приложения рабочего процесса.</param>
    </member>
    <member name="M:System.Activities.WorkflowApplication.DeleteDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.TimeSpan)">
      <summary>Удаляет владелец экземпляра по умолчанию для рабочего процесса с указанным хранилищем экземпляров и интервалом времени ожидания.</summary>
      <param name="instanceStore">Доступ к сохраненному состоянию текущего экземпляра приложения рабочего процесса.</param>
      <param name="timeout">Период времени, в течение которого операция начала загрузки должна быть завершена, прежде чем она будет отменена.</param>
    </member>
    <member name="M:System.Activities.WorkflowApplication.EndCancel(System.IAsyncResult)">
      <summary>Ожидает завершения отложенной асинхронной операции отмены.</summary>
      <param name="result">Асинхронная операция отмены.</param>
    </member>
    <member name="M:System.Activities.WorkflowApplication.EndCreateDefaultInstanceOwner(System.IAsyncResult)">
      <summary>Ожидает завершения создания владельца экземпляра по умолчанию.</summary>
      <param name="asyncResult">Асинхронный результат.</param>
    </member>
    <member name="M:System.Activities.WorkflowApplication.EndDeleteDefaultInstanceOwner(System.IAsyncResult)">
      <summary>Ожидает завершения удаления владельца экземпляра по умолчанию.</summary>
      <param name="asyncResult">Асинхронный результат.</param>
    </member>
    <member name="M:System.Activities.WorkflowApplication.EndGetInstance(System.IAsyncResult)">
      <summary>Ожидает завершения извлечения экземпляра.</summary>
      <param name="asyncResult">Асинхронный результат.</param>
      <returns>Результат операции.</returns>
    </member>
    <member name="M:System.Activities.WorkflowApplication.EndGetRunnableInstance(System.IAsyncResult)">
      <summary>Ожидает завершения асинхронной операции получения выполняемого экземпляра.</summary>
      <param name="asyncResult">Асинхронный результат.</param>
      <returns>Результат операции.</returns>
    </member>
    <member name="M:System.Activities.WorkflowApplication.EndLoad(System.IAsyncResult)">
      <summary>Ожидает завершения отложенной асинхронной операции загрузки.</summary>
      <param name="result">Асинхронная операция загрузки.</param>
    </member>
    <member name="M:System.Activities.WorkflowApplication.EndLoadRunnableInstance(System.IAsyncResult)">
      <summary>Ожидает завершения асинхронной операции загрузки выполняемого экземпляра.</summary>
      <param name="result">Ссылка на асинхронную операцию загрузки.</param>
    </member>
    <member name="M:System.Activities.WorkflowApplication.EndPersist(System.IAsyncResult)">
      <summary>Ожидает завершения отложенной асинхронной операции сохранения.</summary>
      <param name="result">Асинхронная операция сохранения.</param>
    </member>
    <member name="M:System.Activities.WorkflowApplication.EndResumeBookmark(System.IAsyncResult)">
      <summary>Ожидает завершения операции возобновления закладки.</summary>
      <param name="result">Ссылка на асинхронную операцию возобновления чтения с закладки.</param>
      <returns>Одно из значений перечисления, которое указывает результаты операции возобновления закладки.</returns>
    </member>
    <member name="M:System.Activities.WorkflowApplication.EndRun(System.IAsyncResult)">
      <summary>Ожидает завершения отложенной асинхронной операции выполнения.</summary>
      <param name="result">Асинхронная операция запуска.</param>
    </member>
    <member name="M:System.Activities.WorkflowApplication.EndTerminate(System.IAsyncResult)">
      <summary>Ожидает выполнения отложенной асинхронной операции завершения.</summary>
      <param name="result">Асинхронная операция завершения.</param>
    </member>
    <member name="M:System.Activities.WorkflowApplication.EndUnload(System.IAsyncResult)">
      <summary>Ожидает завершения отложенной асинхронной операции выгрузки.</summary>
      <param name="result">Асинхронная операция выгрузки.</param>
    </member>
    <member name="P:System.Activities.WorkflowApplication.Extensions">
      <summary>Возвращает коллекцию расширений для текущего экземпляра рабочего процесса.</summary>
      <returns>Коллекция объектов.</returns>
    </member>
    <member name="M:System.Activities.WorkflowApplication.GetBookmarks">
      <summary>Возвращает коллекцию закладок для экземпляра рабочего процесса.</summary>
      <returns>Доступная только для чтения коллекция закладок для экземпляра рабочего процесса.</returns>
    </member>
    <member name="M:System.Activities.WorkflowApplication.GetBookmarks(System.TimeSpan)">
      <summary>Возвращает коллекцию закладок для экземпляра рабочего процесса, используя указанный интервал времени ожидания.</summary>
      <param name="timeout">Интервал, в течение которого этот метод должен завершить работу до отмены операции и создания исключения <see cref="T:System.TimeoutException" />.</param>
      <returns>Доступная только для чтения коллекция закладок для экземпляра рабочего процесса.</returns>
    </member>
    <member name="M:System.Activities.WorkflowApplication.GetInstance(System.Guid,System.Runtime.DurableInstancing.InstanceStore)">
      <summary>Извлекает экземпляр рабочего процесса, используя указанный идентификатор экземпляра и хранилище экземпляров.</summary>
      <param name="instanceId">Идентификатор экземпляра.</param>
      <param name="instanceStore">Доступ к сохраненному состоянию текущего экземпляра приложения рабочего процесса.</param>
      <returns>Извлеченный экземпляр.</returns>
    </member>
    <member name="M:System.Activities.WorkflowApplication.GetInstance(System.Guid,System.Runtime.DurableInstancing.InstanceStore,System.TimeSpan)">
      <summary>Извлекает экземпляр рабочего процесса, используя указанный идентификатор экземпляра, хранилище экземпляров и срок ожидания.</summary>
      <param name="instanceId">Идентификатор экземпляра.</param>
      <param name="instanceStore">Доступ к сохраненному состоянию текущего экземпляра приложения рабочего процесса.</param>
      <param name="timeout">Период времени, в течение которого операция начала загрузки должна быть завершена, прежде чем она будет отменена.</param>
      <returns>Ссылка на асинхронную операцию.</returns>
    </member>
    <member name="M:System.Activities.WorkflowApplication.GetRunnableInstance(System.Runtime.DurableInstancing.InstanceStore)">
      <summary>Извлекает готовый к запуску экземпляр рабочего процесса с указанным хранилищем экземпляров.</summary>
      <param name="instanceStore">Доступ к сохраненному состоянию текущего экземпляра приложения рабочего процесса</param>
      <returns>Запускаемый экземпляр.</returns>
    </member>
    <member name="M:System.Activities.WorkflowApplication.GetRunnableInstance(System.Runtime.DurableInstancing.InstanceStore,System.TimeSpan)">
      <summary>Извлекает готовый к запуску экземпляр рабочего процесса с указанным хранилищем экземпляров и интервалом времени ожидания.</summary>
      <param name="instanceStore">Доступ к сохраненному состоянию текущего экземпляра приложения рабочего процесса</param>
      <param name="timeout">Период времени, в течение которого операция начала загрузки должна быть завершена, прежде чем она будет отменена.</param>
      <returns>Запускаемый экземпляр.</returns>
    </member>
    <member name="P:System.Activities.WorkflowApplication.Id">
      <summary>Возвращает 128-разрядный идентификатор GUID для текущего экземпляра приложения рабочего процесса.</summary>
      <returns>128-разрядный идентификатор GUID.</returns>
    </member>
    <member name="P:System.Activities.WorkflowApplication.Idle">
      <summary>Возвращает или задает действие <see cref="T:System.Action`1" />, которое вызывается, когда текущий экземпляр рабочего процесса становится бездействующим.</summary>
      <returns>Действие, которое выполняется, когда экземпляр рабочего процесса становится бездействующим.</returns>
    </member>
    <member name="P:System.Activities.WorkflowApplication.InstanceStore">
      <summary>Возвращает или задает объект, который предоставляет доступ к сохраненному состоянию текущего экземпляра приложения рабочего процесса.</summary>
      <returns>Хранилище экземпляров.</returns>
    </member>
    <member name="M:System.Activities.WorkflowApplication.Load(System.Activities.WorkflowApplicationInstance)">
      <summary>Загружает экземпляр рабочего процесса из хранилища экземпляров с указанным экземпляром.</summary>
      <param name="instance">Экземпляр.</param>
    </member>
    <member name="M:System.Activities.WorkflowApplication.Load(System.Activities.WorkflowApplicationInstance,System.Activities.DynamicUpdate.DynamicUpdateMap)">
      <summary>Загружает экземпляр рабочего процесса из хранилища экземпляров с указанным экземпляром и сопоставлением обновления.</summary>
      <param name="instance">Экземпляр.</param>
      <param name="updateMap">Сопоставление обновления.</param>
    </member>
    <member name="M:System.Activities.WorkflowApplication.Load(System.Activities.WorkflowApplicationInstance,System.Activities.DynamicUpdate.DynamicUpdateMap,System.TimeSpan)">
      <summary>Загружает экземпляр рабочего процесса из хранилища экземпляров с указанным экземпляром, сопоставлением обновления и интервалом времени ожидания.</summary>
      <param name="instance">Экземпляр.</param>
      <param name="updateMap">Сопоставление обновления.</param>
      <param name="timeout">Период времени, в течение которого операция начала загрузки должна быть завершена, прежде чем она будет отменена.</param>
    </member>
    <member name="M:System.Activities.WorkflowApplication.Load(System.Activities.WorkflowApplicationInstance,System.TimeSpan)">
      <summary>Загружает экземпляр рабочего процесса из хранилища экземпляров с указанным экземпляром и интервалом времени ожидания.</summary>
      <param name="instance">Экземпляр.</param>
      <param name="timeout">Период времени, в течение которого операция начала загрузки должна быть завершена, прежде чем она будет отменена.</param>
    </member>
    <member name="M:System.Activities.WorkflowApplication.Load(System.Guid)">
      <summary>Загружает указанный экземпляр рабочего процесса в память из хранилища экземпляров.</summary>
      <param name="instanceId">Глобально уникальный 128-разрядный идентификатор экземпляра рабочего процесса.</param>
    </member>
    <member name="M:System.Activities.WorkflowApplication.Load(System.Guid,System.TimeSpan)">
      <summary>Загружает указанный экземпляр рабочего процесса в память из хранилища экземпляров, используя указанный интервал времени ожидания.</summary>
      <param name="instanceId">Глобально уникальный 128-разрядный идентификатор экземпляра рабочего процесса.</param>
      <param name="timeout">Интервал, в течение которого операция загрузки должна завершиться до отмены операции и создания исключения <see cref="T:System.TimeoutException" />.</param>
    </member>
    <member name="M:System.Activities.WorkflowApplication.LoadRunnableInstance">
      <summary>Загружает экземпляр запускаемого рабочего процесса из <see cref="P:System.Activities.WorkflowApplication.InstanceStore" />.</summary>
    </member>
    <member name="M:System.Activities.WorkflowApplication.LoadRunnableInstance(System.TimeSpan)">
      <summary>Загружает выполняемый экземпляр рабочего процесса из <see cref="P:System.Activities.WorkflowApplication.InstanceStore" />, используя указанный интервал времени ожидания.</summary>
      <param name="timeout">Период времени, в течение которого операция загрузки должна быть завершена, прежде чем она будет отменена с формированием исключения <see cref="T:System.TimeoutException" />.</param>
    </member>
    <member name="P:System.Activities.WorkflowApplication.OnUnh*******ledException">
      <summary>Возвращает или задает функцию <see cref="T:System.Func`2" />, которая вызывается, когда в текущем экземпляре рабочего процесса обнаруживается необработанное исключение.</summary>
      <returns>Делегат, который вызывается, когда в экземпляре рабочего процесса обнаруживается необработанное исключение.</returns>
    </member>
    <member name="M:System.Activities.WorkflowApplication.Persist">
      <summary>Сохраняет экземпляр рабочего процесса в хранилище экземпляров.</summary>
    </member>
    <member name="M:System.Activities.WorkflowApplication.Persist(System.TimeSpan)">
      <summary>Сохраняет экземпляр рабочего процесса в хранилище экземпляров с использованием указанного интервала времени ожидания.</summary>
      <param name="timeout">Период времени, в течение которого операция сохранения должна быть завершена, прежде чем она будет отменена с формированием исключения <see cref="T:System.TimeoutException" />.</param>
    </member>
    <member name="P:System.Activities.WorkflowApplication.PersistableIdle">
      <summary>Возвращает или задает делегат, который вызывается, когда текущий экземпляр рабочего процесса является бездействующим и может быть сохранен.</summary>
      <returns>Делегат, который вызывается, когда текущий экземпляр рабочего процесса является бездействующим и может быть сохранен.</returns>
    </member>
    <member name="M:System.Activities.WorkflowApplication.ResumeBookmark(System.Activities.Bookmark,System.Object)">
      <summary>Запускает операцию для возобновления указанной закладки, используя указанное значение. Закладка, с которой будет продолжено чтение, ранее создавалась действием в экземпляре рабочего процесса.</summary>
      <param name="bookmark">Возобновляемая закладка.</param>
      <param name="value">Объект, передаваемый в качестве параметра методу, вызываемому при возобновлении чтения с закладки.</param>
      <returns>Результат операции возобновления чтения с закладки.</returns>
    </member>
    <member name="M:System.Activities.WorkflowApplication.ResumeBookmark(System.Activities.Bookmark,System.Object,System.TimeSpan)">
      <summary>Запускает операцию для возобновления указанной закладки, используя указанное значение и интервал времени ожидания. Закладка, с которой будет продолжено чтение, ранее создавалась действием в экземпляре рабочего процесса.</summary>
      <param name="bookmark">Возобновляемая закладка.</param>
      <param name="value">Объект, передаваемый в качестве параметра методу, вызываемому при возобновлении чтения с закладки.</param>
      <param name="timeout">Временной интервал, в течение которого чтение с закладки должно быть возобновлено.</param>
      <returns>Результат операции возобновления чтения с закладки.</returns>
    </member>
    <member name="M:System.Activities.WorkflowApplication.ResumeBookmark(System.String,System.Object)">
      <summary>Запускает операцию для возобновления закладки с указанным именем, используя указанное значение. Закладка, с которой будет продолжено чтение, ранее создавалась действием в экземпляре рабочего процесса.</summary>
      <param name="bookmarkName">Имя закладки, с которой будет продолжено чтение.</param>
      <param name="value">Объект, передаваемый в качестве параметра методу, вызываемому при возобновлении чтения с закладки.</param>
      <returns>Результат операции возобновления чтения с закладки.</returns>
    </member>
    <member name="M:System.Activities.WorkflowApplication.ResumeBookmark(System.String,System.Object,System.TimeSpan)">
      <summary>Запускает операцию для возобновления закладки с указанным именем, используя указанное значение и интервал времени ожидания. Закладка, с которой будет продолжено чтение, ранее создавалась действием в экземпляре рабочего процесса.</summary>
      <param name="bookmarkName">Имя закладки, с которой будет продолжено чтение.</param>
      <param name="value">Объект, передаваемый в качестве параметра методу, вызываемому при возобновлении чтения с закладки.</param>
      <param name="timeout">Временной интервал, в течение которого чтение с закладки должно быть возобновлено.</param>
      <returns>Результат операции возобновления чтения с закладки.</returns>
    </member>
    <member name="M:System.Activities.WorkflowApplication.Run">
      <summary>Начинает или возобновляет выполнение экземпляра рабочего процесса.</summary>
    </member>
    <member name="M:System.Activities.WorkflowApplication.Run(System.TimeSpan)">
      <summary>Начинает или возобновляет выполнение экземпляра рабочего процесса с использованием указанного интервала времени ожидания.</summary>
      <param name="timeout">Этот метод вызывается для инициализации выполнения вновь созданного экземпляра рабочего процесса.  
Интервал, в течение которого операция выполнения должна завершиться до отмены операции и создания исключения <see cref="T:System.TimeoutException" />.</param>
    </member>
    <member name="M:System.Activities.WorkflowApplication.Terminate(System.Exception)">
      <summary>Завершает экземпляр рабочего процесса, используя указанное исключение.</summary>
      <param name="reason">Причина завершения работы экземпляра рабочего процесса.</param>
    </member>
    <member name="M:System.Activities.WorkflowApplication.Terminate(System.Exception,System.TimeSpan)">
      <summary>Завершает экземпляр рабочего процесса, используя указанное исключение и интервал времени ожидания.</summary>
      <param name="reason">Причина завершения работы экземпляра рабочего процесса.</param>
      <param name="timeout">Период времени, в течение которого операция <see cref="M:System.Activities.WorkflowApplication.Terminate(System.Exception,System.TimeSpan)" /> должна быть завершена, прежде чем она будет отменена с формированием исключения <see cref="T:System.TimeoutException" />.</param>
    </member>
    <member name="M:System.Activities.WorkflowApplication.Terminate(System.String)">
      <summary>Завершает экземпляр рабочего процесса, используя указанное сообщение об ошибке.</summary>
      <param name="reason">Причина завершения работы экземпляра рабочего процесса.</param>
    </member>
    <member name="M:System.Activities.WorkflowApplication.Terminate(System.String,System.TimeSpan)">
      <summary>Завершает экземпляр рабочего процесса, используя указанное сообщение об ошибке и интервал времени ожидания.</summary>
      <param name="reason">Причина завершения работы экземпляра рабочего процесса.</param>
      <param name="timeout">Период времени, в течение которого операция <see cref="M:System.Activities.WorkflowApplication.Terminate(System.String,System.TimeSpan)" /> должна быть завершена, прежде чем она будет отменена с формированием исключения <see cref="T:System.TimeoutException" />.</param>
    </member>
    <member name="M:System.Activities.WorkflowApplication.Unload">
      <summary>Сохраняет и выгружает экземпляр рабочего процесса.</summary>
    </member>
    <member name="M:System.Activities.WorkflowApplication.Unload(System.TimeSpan)">
      <summary>Сохраняет и выгружает экземпляр рабочего процесса с использованием указанного интервала времени ожидания.</summary>
      <param name="timeout">Интервал, в течение которого операция выгрузки должна завершиться до отмены операции и создания исключения <see cref="T:System.TimeoutException" />.</param>
    </member>
    <member name="P:System.Activities.WorkflowApplication.Unloaded">
      <summary>Возвращает или задает действие <see cref="T:System.Action`1" />, которое вызывается, когда выгружается текущий рабочий процесс.</summary>
      <returns>Действие, которое вызывается, когда выгружается экземпляр рабочего процесса.</returns>
    </member>
    <member name="T:System.Activities.WorkflowApplicationAbortedEventArgs">
      <summary>Предоставляет данные о прерванном экземпляре рабочего процесса.</summary>
    </member>
    <member name="P:System.Activities.WorkflowApplicationAbortedEventArgs.Reason">
      <summary>Возвращает исключение, которое содержит сведения о причине прерывания экземпляра рабочего процесса</summary>
      <returns>Исключение, которое содержит сведения о причине прерывания экземпляра рабочего процесса.</returns>
    </member>
    <member name="T:System.Activities.WorkflowApplicationAbortedException">
      <summary>Представляет исключение, которое вызывается, если операция в экземпляре рабочего процесса оказывается недопустимой из-за прерывания экземпляра.</summary>
    </member>
    <member name="M:System.Activities.WorkflowApplicationAbortedException.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.WorkflowApplicationAbortedException" />.</summary>
    </member>
    <member name="M:System.Activities.WorkflowApplicationAbortedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.WorkflowApplicationAbortedException" />, при этом для получения сведений о данном исключении из сериализованного потока требуется сведения о контексте и сериализации.</summary>
      <param name="info">Все сведения, необходимые для сериализации или десериализации объекта «исключение прерывания».</param>
      <param name="context">Источник и назначение данного сериализованного потока, а также дополнительный контекст, определяемый вызывающим объектом.</param>
    </member>
    <member name="M:System.Activities.WorkflowApplicationAbortedException.#ctor(System.String)">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.WorkflowApplicationAbortedException" /> с текстовой строкой описания исключения.</summary>
      <param name="message">Описание исключения «прерывание».</param>
    </member>
    <member name="M:System.Activities.WorkflowApplicationAbortedException.#ctor(System.String,System.Exception)">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.WorkflowApplicationAbortedException" /> с текстовой строкой описания исключения и с дополнительным исключением, которое стало причиной исключения прерывания.</summary>
      <param name="message">Описание исключения «прерывание».</param>
      <param name="innerException">Исключение, имеющее причинно-следственную связь с исключением «приложение прервано». Исключение «приложение прервано» формируется в ответ на внутреннее исключение и может использовать сведения из внутреннего исключения для более качественной обработки ошибки.</param>
    </member>
    <member name="M:System.Activities.WorkflowApplicationAbortedException.#ctor(System.String,System.Guid)">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.WorkflowApplicationAbortedException" /> с текстовой строкой описания исключения прерывания и с его уникальным идентификатором.</summary>
      <param name="message">Описание исключения «прерывание».</param>
      <param name="instanceId">Идентификатор GUID.</param>
    </member>
    <member name="M:System.Activities.WorkflowApplicationAbortedException.#ctor(System.String,System.Guid,System.Exception)">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.WorkflowApplicationAbortedException" /> с текстовой строкой описания исключения прерывания, уникальным идентификатором исключения и с дополнительным исключением, которое стало причиной исключения прерывания.</summary>
      <param name="message">Описание исключения «прерывание».</param>
      <param name="instanceId">Идентификатор GUID.</param>
      <param name="innerException">Исключение, имеющее причинно-следственную связь с исключением «приложение прервано». Исключение «приложение прервано» формируется в ответ на внутреннее исключение и может использовать сведения из внутреннего исключения для более качественной обработки ошибки.</param>
    </member>
    <member name="T:System.Activities.WorkflowApplicationCompletedEventArgs">
      <summary>Предоставляет сведения об экземпляре рабочего процесса, завершившего выполнение.</summary>
    </member>
    <member name="P:System.Activities.WorkflowApplicationCompletedEventArgs.CompletionState">
      <summary>Возвращает состояние завершения экземпляра рабочего процесса, которое может показывать, что экземпляр завершен успешно, отменен или завершен с ошибкой.</summary>
      <returns>Состояние завершения экземпляра рабочего процесса, которое может показывать, что экземпляр завершен успешно, отменен или завершен с ошибкой.</returns>
    </member>
    <member name="P:System.Activities.WorkflowApplicationCompletedEventArgs.Outputs">
      <summary>Возвращает словарь, который содержит значения аргументов <see cref="T:System.Activities.OutArgument" /> корневого действия экземпляра рабочего процесса, различаемые по имени аргумента.</summary>
      <returns>Словарь, содержащий значения <see cref="T:System.Activities.OutArgument" />корневого действия экземпляра рабочего процесса, различаемых по имени аргумента процесса.</returns>
    </member>
    <member name="P:System.Activities.WorkflowApplicationCompletedEventArgs.TerminationException">
      <summary>Возвращает исключение, связанное с завершением экземпляра рабочего процесса.</summary>
      <returns>Исключение, связанное с завершением экземпляра рабочего процесса.</returns>
    </member>
    <member name="T:System.Activities.WorkflowApplicationCompletedException">
      <summary>Представляет исключение, которое вызывается, если операция в экземпляре рабочего процесса оказывается недопустимой из-за выполнения экземпляра.</summary>
    </member>
    <member name="M:System.Activities.WorkflowApplicationCompletedException.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.WorkflowApplicationCompletedException" />.</summary>
    </member>
    <member name="M:System.Activities.WorkflowApplicationCompletedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.WorkflowApplicationCompletedException" />, при этом для получения сведений о данном исключении из сериализованного потока требуется сведения о контексте и сериализации.</summary>
      <param name="info">Все сведения, необходимые для сериализации или десериализации объекта исключения «приложение выполнено».</param>
      <param name="context">Источник и назначение данного сериализованного потока, а также дополнительный контекст, определяемый вызывающим объектом.</param>
    </member>
    <member name="M:System.Activities.WorkflowApplicationCompletedException.#ctor(System.String)">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.WorkflowApplicationCompletedException" /> с текстовой строкой описания исключения.</summary>
      <param name="message">Описание исключения «приложение выполнено».</param>
    </member>
    <member name="M:System.Activities.WorkflowApplicationCompletedException.#ctor(System.String,System.Exception)">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.WorkflowApplicationCompletedException" /> с текстовой строкой описания исключения и с дополнительным исключением, которое стало причиной исключения «приложение выполнено».</summary>
      <param name="message">Описание исключения «приложение выполнено».</param>
      <param name="innerException">Исключение, имеющее причинно-следственную связь с исключением «приложение выполнено». Исключение «приложение выполнено» формируется в ответ на внутреннее исключение и может использовать сведения из внутреннего исключения для более качественной обработки ошибки.</param>
    </member>
    <member name="M:System.Activities.WorkflowApplicationCompletedException.#ctor(System.String,System.Guid)">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.WorkflowApplicationCompletedException" /> с текстовой строкой описания исключения и с его уникальным идентификатором.</summary>
      <param name="message">Описание исключения «приложение выполнено».</param>
      <param name="instanceId">Идентификатор GUID.</param>
    </member>
    <member name="M:System.Activities.WorkflowApplicationCompletedException.#ctor(System.String,System.Guid,System.Exception)">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.WorkflowApplicationCompletedException" /> с текстовой строкой описания исключения, уникальным идентификатором исключения и с дополнительным исключением, которое стало причиной исключения «приложение выполнено».</summary>
      <param name="message">Описание исключения «приложение выполнено».</param>
      <param name="instanceId">Идентификатор GUID.</param>
      <param name="innerException">Исключение, имеющее причинно-следственную связь с исключением «приложение выполнено». Исключение «приложение выполнено» формируется в ответ на внутреннее исключение и может использовать сведения из внутреннего исключения для более качественной обработки ошибки.</param>
    </member>
    <member name="T:System.Activities.WorkflowApplicationEventArgs">
      <summary>Базовый класс для событий, связанных с объектом <see cref="T:System.Activities.WorkflowApplication" />.</summary>
    </member>
    <member name="M:System.Activities.WorkflowApplicationEventArgs.GetInstanceExtensions``1">
      <summary>Возвращает коллекцию расширений указанного типа.</summary>
      <typeparam name="T">Тип расширения.</typeparam>
      <returns>Коллекция расширений.</returns>
    </member>
    <member name="P:System.Activities.WorkflowApplicationEventArgs.InstanceId">
      <summary>Уникальный идентификатор экземпляра рабочего процесса.</summary>
      <returns>Уникальный идентификатор.</returns>
    </member>
    <member name="T:System.Activities.WorkflowApplicationException">
      <summary>Служит базовым классом для обработки ошибок, происходящих во время выполнения приложения рабочего процесса.</summary>
    </member>
    <member name="M:System.Activities.WorkflowApplicationException.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.WorkflowApplicationException" />.</summary>
    </member>
    <member name="M:System.Activities.WorkflowApplicationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.WorkflowApplicationException" />, при этом для получения сведений о данном исключении из сериализованного потока требуется сведения о контексте и сериализации.</summary>
      <param name="info">Сведения, необходимые для сериализации или десериализации объекта исключения в приложении.</param>
      <param name="context">Источник и назначение данного сериализованного потока, а также дополнительный контекст, определяемый вызывающим объектом.</param>
    </member>
    <member name="M:System.Activities.WorkflowApplicationException.#ctor(System.String)">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.WorkflowApplicationException" /> с текстовой строкой описания исключения.</summary>
      <param name="message">Описание исключения приложения.</param>
    </member>
    <member name="M:System.Activities.WorkflowApplicationException.#ctor(System.String,System.Exception)">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.WorkflowApplicationException" /> с текстовой строкой описания исключения и с дополнительным исключением, которое стало причиной исключения в приложении.</summary>
      <param name="message">Описание исключения приложения.</param>
      <param name="innerException">Исключение, имеющее причинно-следственную связь с исключением приложения.</param>
    </member>
    <member name="M:System.Activities.WorkflowApplicationException.#ctor(System.String,System.Guid)">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.WorkflowApplicationException" /> с текстовой строкой описания исключения и уникальным идентификатором для него.</summary>
      <param name="message">Описание исключения приложения.</param>
      <param name="instanceId">Идентификатор GUID.</param>
    </member>
    <member name="M:System.Activities.WorkflowApplicationException.#ctor(System.String,System.Guid,System.Exception)">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.WorkflowApplicationException" /> с текстовой строкой описания исключения, уникальным идентификатором исключения и с дополнительным исключением, которое стало причиной исключения в приложении.</summary>
      <param name="message">Описание исключения приложения.</param>
      <param name="instanceId">Идентификатор GUID.</param>
      <param name="innerException">Исключение, имеющее причинно-следственную связь с исключением приложения.</param>
    </member>
    <member name="M:System.Activities.WorkflowApplicationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Задает в указанном объекте <see cref="T:System.Runtime.Serialization.SerializationInfo" /> сведения об исключении.</summary>
      <param name="info">Сведения, необходимые для сериализации или десериализации объекта «исключение прерывания».</param>
      <param name="context">Источник и назначение данного сериализованного потока, а также дополнительный контекст, определяемый вызывающим объектом.</param>
    </member>
    <member name="P:System.Activities.WorkflowApplicationException.InstanceId">
      <summary>Возвращает уникальный идентификатор для текущего исключения.</summary>
      <returns>Уникальный идентификатор.</returns>
    </member>
    <member name="T:System.Activities.WorkflowApplicationIdleEventArgs">
      <summary>Хранит сведения об экземпляре рабочего процесса, перешедшего в состояние бездействия.</summary>
    </member>
    <member name="P:System.Activities.WorkflowApplicationIdleEventArgs.Bookmarks">
      <summary>Возвращает доступную только для чтения коллекцию закладок для экземпляра рабочего процесса.</summary>
      <returns>Доступная только для чтения коллекция закладок.</returns>
    </member>
    <member name="T:System.Activities.WorkflowApplicationInstance">
      <summary>Указывает сведения об экземпляре приложения рабочего процесса.</summary>
    </member>
    <member name="M:System.Activities.WorkflowApplicationInstance.Ab*******on">
      <summary>Вызывает переход конечного автомата в прерванное состояние.</summary>
    </member>
    <member name="M:System.Activities.WorkflowApplicationInstance.Ab*******on(System.TimeSpan)">
      <summary>Вызывает переход конечного автомата в прерванное состояние с указанным значением времени ожидания.</summary>
      <param name="timeout">Время ожидания для завершения операции прерывания.</param>
    </member>
    <member name="M:System.Activities.WorkflowApplicationInstance.BeginAb*******on(System.AsyncCallback,System.Object)">
      <summary>Начинает асинхронную операцию прерывания.</summary>
      <param name="callback">Делегат асинхронного обратного вызова, принимающий уведомление о завершении асинхронной операции.</param>
      <param name="state">Определенные пользователем данные о состоянии.</param>
      <returns>Асинхронная операция прерывания.</returns>
    </member>
    <member name="M:System.Activities.WorkflowApplicationInstance.BeginAb*******on(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Начинает асинхронную операцию прерывания.</summary>
      <param name="timeout">Время ожидания, содержащее причину для операции прерывания.</param>
      <param name="callback">Делегат асинхронного обратного вызова, принимающий уведомление о завершении асинхронной операции.</param>
      <param name="state">Определенные пользователем данные о состоянии.</param>
      <returns>Асинхронная операция прерывания.</returns>
    </member>
    <member name="M:System.Activities.WorkflowApplicationInstance.CanApplyUpdate(System.Activities.DynamicUpdate.DynamicUpdateMap,System.Collections.Generic.IList{System.Activities.DynamicUpdate.ActivityBlockingUpdate}@)">
      <summary>Возвращает значение, указывающее, может ли применять обновление WorkflowApplicationInstance.</summary>
      <param name="updateMap">Обновляет сопоставление.</param>
      <param name="activitiesBlockingUpdate">Действия, блокирующие обновление.</param>
      <returns>Значение <see langword="true" />, если объект WorkflowApplicationInstance может применить обновление; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Activities.WorkflowApplicationInstance.DefinitionIdentity">
      <summary>Получает или задает удостоверение определения рабочего процесса.</summary>
      <returns>Удостоверение определения рабочего процесса.</returns>
    </member>
    <member name="M:System.Activities.WorkflowApplicationInstance.EndAb*******on(System.IAsyncResult)">
      <summary>Завершает асинхронную операцию прерывания.</summary>
      <param name="asyncResult">IAsyncResult, возвращенный вызовом одного из методов BeginAb*******on.</param>
    </member>
    <member name="P:System.Activities.WorkflowApplicationInstance.InstanceId">
      <summary>Получает уникальный идентификатор экземпляра рабочего процесса.</summary>
      <returns>Уникальный идентификатор экземпляра рабочего процесса.</returns>
    </member>
    <member name="P:System.Activities.WorkflowApplicationInstance.InstanceStore">
      <summary>Возвращает или задает объект, который предоставляет доступ к сохраненному состоянию текущего экземпляра приложения рабочего процесса.</summary>
      <returns>Объект, который предоставляет доступ к сохраненному состоянию текущего экземпляра приложения рабочего процесса.</returns>
    </member>
    <member name="T:System.Activities.WorkflowApplicationTerminatedException">
      <summary>Исключение, которое вызывается, если операция в экземпляре рабочего процесса оказывается недопустимой из-за завершения экземпляра.</summary>
    </member>
    <member name="M:System.Activities.WorkflowApplicationTerminatedException.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.WorkflowApplicationTerminatedException" />.</summary>
    </member>
    <member name="M:System.Activities.WorkflowApplicationTerminatedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.WorkflowApplicationTerminatedException" />, при этом для получения сведений о данном исключении из сериализованного потока требуется сведения о контексте и сериализации.</summary>
      <param name="info">Все сведения, необходимые для сериализации или десериализации объекта исключения «приложение завершено».</param>
      <param name="context">Источник и назначение данного сериализованного потока, а также дополнительный контекст, определяемый вызывающим объектом.</param>
    </member>
    <member name="M:System.Activities.WorkflowApplicationTerminatedException.#ctor(System.String)">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.WorkflowApplicationTerminatedException" /> с текстовой строкой описания исключения.</summary>
      <param name="message">Описание исключения «приложение завершено».</param>
    </member>
    <member name="M:System.Activities.WorkflowApplicationTerminatedException.#ctor(System.String,System.Exception)">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.WorkflowApplicationTerminatedException" /> с текстовой строкой описания исключения и с исключением, которое стало причиной исключения «приложение завершено».</summary>
      <param name="message">Описание исключения «приложение завершено».</param>
      <param name="innerException">Исключение, имеющее причинно-следственную связь с исключением «приложение завершено». Исключение «приложение завершено» формируется в ответ на внутреннее исключение и может использовать сведения из внутреннего исключения для более качественной обработки ошибки.</param>
    </member>
    <member name="M:System.Activities.WorkflowApplicationTerminatedException.#ctor(System.String,System.Guid)">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.WorkflowApplicationTerminatedException" /> с текстовой строкой описания исключения и уникальным идентификатором для него.</summary>
      <param name="message">Описание исключения «приложение завершено».</param>
      <param name="instanceId">Идентификатор GUID.</param>
    </member>
    <member name="M:System.Activities.WorkflowApplicationTerminatedException.#ctor(System.String,System.Guid,System.Exception)">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.WorkflowApplicationTerminatedException" /> с текстовой строкой описания исключения, уникальным идентификатором исключения и с исключением, которое стало причиной текущего исключения.</summary>
      <param name="message">Описание исключения «приложение завершено».</param>
      <param name="instanceId">Идентификатор GUID.</param>
      <param name="innerException">Исключение, имеющее причинно-следственную связь с исключением «приложение завершено». Исключение «приложение завершено» формируется в ответ на внутреннее исключение и может использовать сведения из внутреннего исключения для более качественной обработки ошибки.</param>
    </member>
    <member name="T:System.Activities.WorkflowApplicationUnh*******ledExceptionEventArgs">
      <summary>Предоставляет сведения о необработанном исключении, вызванном в экземпляре рабочего процесса.</summary>
    </member>
    <member name="P:System.Activities.WorkflowApplicationUnh*******ledExceptionEventArgs.ExceptionSource">
      <summary>Возвращает действие, оказавшееся источником необработанного исключения.</summary>
      <returns>Действие.</returns>
    </member>
    <member name="P:System.Activities.WorkflowApplicationUnh*******ledExceptionEventArgs.ExceptionSourceInstanceId">
      <summary>Возвращает уникальный идентификатор экземпляра действия, ставшего источником необработанного исключения.</summary>
      <returns>Идентификатор экземпляра действия, ставшего источником необработанного исключения.</returns>
    </member>
    <member name="P:System.Activities.WorkflowApplicationUnh*******ledExceptionEventArgs.Unh*******ledException">
      <summary>Возвращает объект <see cref="T:System.Exception" />, не обработанный экземпляром рабочего процесса.</summary>
      <returns>Объект <see cref="T:System.Exception" />, не обработанный экземпляром рабочего процесса.</returns>
    </member>
    <member name="T:System.Activities.WorkflowApplicationUnloadedException">
      <summary>Исключение, которое вызывается, если операция в экземпляре рабочего процесса оказывается недопустимой из-за выгрузки экземпляра.</summary>
    </member>
    <member name="M:System.Activities.WorkflowApplicationUnloadedException.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.WorkflowApplicationUnloadedException" />.</summary>
    </member>
    <member name="M:System.Activities.WorkflowApplicationUnloadedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.WorkflowApplicationUnloadedException" />, при этом для получения сведений о данном исключении из сериализованного потока требуется сведения о контексте и сериализации.</summary>
      <param name="info">Все сведения, необходимые для сериализации или десериализации объекта исключения «приложение выгружено».</param>
      <param name="context">Источник и назначение данного сериализованного потока, а также дополнительный контекст, определяемый вызывающим объектом.</param>
    </member>
    <member name="M:System.Activities.WorkflowApplicationUnloadedException.#ctor(System.String)">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.WorkflowApplicationUnloadedException" /> с указанным описанием исключения в виде текстовой строки.</summary>
      <param name="message">Описание исключения «приложение выгружено».</param>
    </member>
    <member name="M:System.Activities.WorkflowApplicationUnloadedException.#ctor(System.String,System.Exception)">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.WorkflowApplicationUnloadedException" /> с указанным описанием исключения в виде текстовой строки и с указанным исключением, которое находится в причинной связи с исключением <see cref="T:System.Activities.WorkflowApplicationUnloadedException" />.</summary>
      <param name="message">Описание исключения «приложение выгружено».</param>
      <param name="innerException">Исключение, имеющее причинно-следственную связь с исключением «приложение выгружено». Исключение «приложение выгружено» вызывается в ответ на внутреннее исключение и может использовать сведения из внутреннего исключения для более точной обработки ошибки.</param>
    </member>
    <member name="M:System.Activities.WorkflowApplicationUnloadedException.#ctor(System.String,System.Guid)">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.WorkflowApplicationUnloadedException" /> с указанной текстовой строкой описания исключения и с его уникальным идентификатором.</summary>
      <param name="message">Описание исключения «приложение выгружено».</param>
      <param name="instanceId">Идентификатор GUID.</param>
    </member>
    <member name="M:System.Activities.WorkflowApplicationUnloadedException.#ctor(System.String,System.Guid,System.Exception)">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.WorkflowApplicationUnloadedException" /> с указанной текстовой строкой описания исключения, уникальным идентификатором исключения и исключением, ставшим причиной <see cref="T:System.Activities.WorkflowApplicationUnloadedException" />.</summary>
      <param name="message">Описание исключения «приложение выгружено».</param>
      <param name="instanceId">Идентификатор GUID.</param>
      <param name="innerException">Исключение, имеющее причинно-следственную связь с исключением «приложение выгружено». Исключение «приложение выгружено» вызывается в ответ на внутреннее исключение и может использовать сведения из этого исключения для более точной обработки ошибки.</param>
    </member>
    <member name="T:System.Activities.WorkflowDataContext">
      <summary>Представляет контекст данных среды текущего рабочего процесса и предоставляет мост для передачи аргументов и переменных рабочего процесса в область привязки данных Windows Presentation Foundation (WPF).</summary>
    </member>
    <member name="M:System.Activities.WorkflowDataContext.Dispose">
      <summary>Освобождает ресурсы, используемые объектом <see cref="T:System.Activities.WorkflowDataContext" />.</summary>
    </member>
    <member name="M:System.Activities.WorkflowDataContext.GetProperties">
      <summary>Возвращает коллекцию свойств, управляемых этим объектом <see cref="T:System.Activities.WorkflowDataContext" />.</summary>
      <returns>Коллекция свойств, управляемых этим объектом <see cref="T:System.Activities.WorkflowDataContext" />.</returns>
    </member>
    <member name="E:System.Activities.WorkflowDataContext.PropertyChanged">
      <summary>Возникает при смене значения свойства.</summary>
    </member>
    <member name="T:System.Activities.WorkflowIdentity">
      <summary>Сопоставляет постоянный экземпляр рабочего процесса с его соответствующее определение рабочего процесса.</summary>
    </member>
    <member name="M:System.Activities.WorkflowIdentity.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.WorkflowIdentity" />.</summary>
    </member>
    <member name="M:System.Activities.WorkflowIdentity.#ctor(System.String,System.Version,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.WorkflowIdentity" />, используя имя, версию и пакет.</summary>
      <param name="name">Имя удостоверения рабочего процесса.</param>
      <param name="version">Версия удостоверения рабочего процесса.</param>
      <param name="package">Пакет удостоверения рабочего процесса.</param>
    </member>
    <member name="M:System.Activities.WorkflowIdentity.Equals(System.Activities.WorkflowIdentity)">
      <summary>Определяет, одинаковы ли текущий WorkflowIdentity и указанный WorkflowIdentity.</summary>
      <param name="other">WorkflowIdentity для сравнения.</param>
      <returns>Значение <see langword="true" />, если текущий WorkflowIdentity и указанный WorkflowIdentity одинаковы; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Activities.WorkflowIdentity.Equals(System.Object)">
      <summary>Определяет, равен ли заданный объект текущему объекту.</summary>
      <param name="obj">Объект, который требуется сравнить с текущим объектом.</param>
      <returns>Значение <see langword="true" />, если указанный объект равен текущему объекту; в противном случае. <see langword="false" />.</returns>
    </member>
    <member name="M:System.Activities.WorkflowIdentity.GetHashCode">
      <summary>Возвращает хэш-код данного удостоверения рабочего процесса.</summary>
      <returns>Хэш-код данного удостоверения рабочего процесса.</returns>
    </member>
    <member name="P:System.Activities.WorkflowIdentity.Name">
      <summary>Получает или задает имя удостоверения рабочего процесса.</summary>
      <returns>Имя удостоверения рабочего процесса.</returns>
    </member>
    <member name="P:System.Activities.WorkflowIdentity.Package">
      <summary>Получает или задает пакет удостоверения рабочего процесса.</summary>
      <returns>Пакет удостоверения рабочего процесса.</returns>
    </member>
    <member name="M:System.Activities.WorkflowIdentity.Parse(System.String)">
      <summary>Преобразует строковое представление WorkflowIdentity.</summary>
      <param name="identity">Новый идентификатор.</param>
      <returns>Строковое представление объекта WorkflowIdentity.</returns>
    </member>
    <member name="M:System.Activities.WorkflowIdentity.ToString">
      <summary>Возвращает строку, представляющую текущий объект.</summary>
      <returns>Строка, представляющая текущий объект.</returns>
    </member>
    <member name="M:System.Activities.WorkflowIdentity.TryParse(System.String,System.Activities.WorkflowIdentity@)">
      <summary>Анализирует строку и создает новый экземпляр WorkflowIdentity.</summary>
      <param name="identity">Новый идентификатор.</param>
      <param name="result">Результат, созданный из строки.</param>
      <returns>Значение <see langword="true" />, если экземпляр WorkflowIdentity создан; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Activities.WorkflowIdentity.Version">
      <summary>Получает или задает версию удостоверения рабочего процесса.</summary>
      <returns>Версия удостоверения рабочего процесса.</returns>
    </member>
    <member name="T:System.Activities.WorkflowIdentityFilter">
      <summary>Определяет фильтр удостоверения рабочего процесса.</summary>
    </member>
    <member name="F:System.Activities.WorkflowIdentityFilter.Any">
      <summary>Определяет любой фильтр удостоверения рабочего процесса.</summary>
    </member>
    <member name="F:System.Activities.WorkflowIdentityFilter.AnyRevision">
      <summary>Определяет любое изменение фильтра удостоверения рабочего процесса.</summary>
    </member>
    <member name="F:System.Activities.WorkflowIdentityFilter.Exact">
      <summary>Точный фильтр удостоверения рабочего процесса.</summary>
    </member>
    <member name="T:System.Activities.WorkflowInspectionServices">
      <summary>Предоставляет методы для работы с метаданными времени выполнения для дерева действий.</summary>
    </member>
    <member name="M:System.Activities.WorkflowInspectionServices.CacheMetadata(System.Activities.Activity)">
      <summary>Кэширует метаданные времени выполнения для указанного дерева действий.</summary>
      <param name="rootActivity">Корневое действие дерева действий.</param>
    </member>
    <member name="M:System.Activities.WorkflowInspectionServices.CacheMetadata(System.Activities.Activity,System.Activities.LocationReferenceEnvironment)">
      <summary>Кэширует метаданные времени выполнения для указанного дерева действий с использованием указанной среды.</summary>
      <param name="rootActivity">Корневое действие дерева действий.</param>
      <param name="hostEnvironment">Среда, связанная с деревом действий.</param>
    </member>
    <member name="M:System.Activities.WorkflowInspectionServices.CanInduceIdle(System.Activities.Activity)">
      <summary>Определяет, может ли служба включать бездействие.</summary>
      <param name="activity">Действие.</param>
      <returns>Значение <see langword="true" />, если служба может включать бездействующие действия; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Activities.WorkflowInspectionServices.GetActivities(System.Activities.Activity)">
      <summary>Возвращает объект <see cref="T:System.Collections.Generic.IEnumerable`1" />, представляющий все действия, связанные с входным действием.</summary>
      <param name="activity">Корневое действие.</param>
      <returns>Перечисление, которое представляет все действия, связанные с входным действием.</returns>
    </member>
    <member name="M:System.Activities.WorkflowInspectionServices.GetImplementationVersion(System.Activities.Activity)">
      <summary>Извлекает Версию реализации действия.</summary>
      <param name="activity">Действие.</param>
      <returns>Версия реализации действия.</returns>
    </member>
    <member name="M:System.Activities.WorkflowInspectionServices.Resolve(System.Activities.Activity,System.String)">
      <summary>Возвращает действие с указанным <paramref name="id" /> из указанного дерева действий.</summary>
      <param name="root">Дерево действий, в котором выполняется поиск.</param>
      <param name="id">Идентификатор искомого действия.</param>
      <returns>Найденное указанное действие. Если действие не найдено, вызывается исключение <see cref="T:System.ArgumentException" />.</returns>
    </member>
    <member name="T:System.Activities.WorkflowInvoker">
      <summary>Предоставляет средства для вызова рабочего процесса аналогично вызову метода.</summary>
    </member>
    <member name="M:System.Activities.WorkflowInvoker.#ctor(System.Activities.Activity)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.WorkflowInvoker" />.</summary>
      <param name="workflow">Определение рабочего процесса, который должен вызываться этим экземпляром класса <see cref="T:System.Activities.WorkflowInvoker" />.</param>
    </member>
    <member name="M:System.Activities.WorkflowInvoker.BeginInvoke(System.AsyncCallback,System.Object)">
      <summary>Вызывает рабочий процесс в асинхронном режиме с указанным <see cref="T:System.AsyncCallback" /> и предоставляемым пользователем состоянием.</summary>
      <param name="callback">Метод, вызываемый после завершения рабочего процесса.</param>
      <param name="state">Относящийся к необязательному приложению объект, содержащий сведения об асинхронной операции.</param>
      <returns>Ссылка на асинхронную операцию вызова.</returns>
    </member>
    <member name="M:System.Activities.WorkflowInvoker.BeginInvoke(System.Collections.Generic.IDictionary{System.String,System.Object},System.AsyncCallback,System.Object)">
      <summary>Вызывает рабочий процесс в асинхронном режиме с указанным словарем <see cref="T:System.Collections.Generic.IDictionary`2" /> входных параметров, объектом <see cref="T:System.AsyncCallback" /> и предоставляемым пользователем состоянием.</summary>
      <param name="inputs">Словарь входных параметров рабочего процесса, различаемых по имени аргумента.</param>
      <param name="callback">Метод, вызываемый после завершения рабочего процесса.</param>
      <param name="state">Относящийся к необязательному приложению объект, содержащий сведения об асинхронной операции.</param>
      <returns>Ссылка на асинхронную операцию вызова.</returns>
    </member>
    <member name="M:System.Activities.WorkflowInvoker.BeginInvoke(System.Collections.Generic.IDictionary{System.String,System.Object},System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Вызывает рабочий процесс в асинхронном режиме с указанным словарем <see cref="T:System.Collections.Generic.IDictionary`2" /> входных параметров, интервалом времени ожидания, объектом <see cref="T:System.AsyncCallback" /> и предоставляемым пользователем состоянием.</summary>
      <param name="inputs">Словарь входных параметров рабочего процесса, различаемых по имени аргумента.</param>
      <param name="timeout">Период времени, в течение которого рабочий процесс должен быть завершен, прежде чем он будет прерван и возникнет исключение <see cref="T:System.TimeoutException" />.</param>
      <param name="callback">Метод, вызываемый после завершения рабочего процесса.</param>
      <param name="state">Относящийся к необязательному приложению объект, содержащий сведения об асинхронной операции.</param>
      <returns>Ссылка на асинхронную операцию вызова.</returns>
    </member>
    <member name="M:System.Activities.WorkflowInvoker.BeginInvoke(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Вызывает рабочий процесс в асинхронном режиме с использованием указанного интервала времени ожидания, объекта <see cref="T:System.AsyncCallback" /> и предоставляемого пользователем состояния.</summary>
      <param name="timeout">Период времени, в течение которого рабочий процесс должен быть завершен, прежде чем он будет прерван и возникнет исключение <see cref="T:System.TimeoutException" />.</param>
      <param name="callback">Метод, вызываемый после завершения рабочего процесса.</param>
      <param name="state">Относящийся к необязательному приложению объект, содержащий сведения об асинхронной операции.</param>
      <returns>Ссылка на асинхронную операцию вызова.</returns>
    </member>
    <member name="M:System.Activities.WorkflowInvoker.CancelAsync(System.Object)">
      <summary>Выполняет отмену рабочего процесса, вызванного с указанным состоянием <paramref name="userState" />.</summary>
      <param name="userState">Маркер для отменяемого рабочего процесса.</param>
    </member>
    <member name="M:System.Activities.WorkflowInvoker.EndInvoke(System.IAsyncResult)">
      <summary>Возвращает результаты рабочего процесса, вызванного с помощью одного из перегруженных вариантов <see cref="Overload:System.Activities.WorkflowInvoker.BeginInvoke" />.</summary>
      <param name="result">Интерфейс <see cref="T:System.IAsyncResult" />, ссылающийся на операцию <see cref="Overload:System.Activities.WorkflowInvoker.BeginInvoke" />, которая запустила рабочий процесс.</param>
      <returns>Словарь значений <see cref="T:System.Activities.OutArgument" /> и <see cref="T:System.Activities.InOutArgument" /> корневого действия. Ключом этих значений является имя аргумента, представляющего выходные значения рабочего процесса.</returns>
    </member>
    <member name="P:System.Activities.WorkflowInvoker.Extensions">
      <summary>Возвращает коллекцию <see cref="T:System.Collections.ObjectModel.Collection`1" /> расширений, доступных для рабочих процессов, вызываемых экземпляром <see cref="T:System.Activities.WorkflowInvoker" />.</summary>
      <returns>Коллекция <see cref="T:System.Collections.ObjectModel.Collection`1" /> расширений, доступных для рабочих процессов, вызываемых экземпляром <see cref="T:System.Activities.WorkflowInvoker" />.</returns>
    </member>
    <member name="M:System.Activities.WorkflowInvoker.Invoke">
      <summary>Вызывает рабочий процесс синхронным образом, используя определение рабочего процесса, переданное в конструктор <see cref="M:System.Activities.WorkflowInvoker.#ctor(System.Activities.Activity)" />.</summary>
      <returns>Словарь значений <see cref="T:System.Activities.OutArgument" /> и <see cref="T:System.Activities.InOutArgument" /> корневого действия. Ключом этих значений является имя аргумента, представляющего выходные значения рабочего процесса.</returns>
    </member>
    <member name="M:System.Activities.WorkflowInvoker.Invoke(System.Activities.Activity)">
      <summary>Вызывает рабочий процесс в синхронном режиме с помощью указанного определения рабочего процесса.</summary>
      <param name="workflow">Определение вызываемого рабочего процесса.</param>
      <returns>Словарь значений <see cref="T:System.Activities.OutArgument" /> и <see cref="T:System.Activities.InOutArgument" /> корневого действия. Ключом этих значений является имя аргумента, представляющего выходные значения рабочего процесса.</returns>
    </member>
    <member name="M:System.Activities.WorkflowInvoker.Invoke(System.Activities.Activity,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Вызывает рабочий процесс в синхронном режиме с использованием определения рабочего процесса и словаря входных параметров <see cref="T:System.Collections.Generic.IDictionary`2" />.</summary>
      <param name="workflow">Определение вызываемого рабочего процесса.</param>
      <param name="inputs">Словарь входных параметров рабочего процесса, различаемых по имени аргумента.</param>
      <returns>Словарь значений <see cref="T:System.Activities.OutArgument" /> и <see cref="T:System.Activities.InOutArgument" /> корневого действия. Ключом этих значений является имя аргумента, представляющего выходные значения рабочего процесса.</returns>
    </member>
    <member name="M:System.Activities.WorkflowInvoker.Invoke(System.Activities.Activity,System.Collections.Generic.IDictionary{System.String,System.Object},System.TimeSpan)">
      <summary>Вызывает рабочий процесс в синхронном режиме с использованием определения рабочего процесса, словаря входных параметров <see cref="T:System.Collections.Generic.IDictionary`2" /> и интервала ожидания.</summary>
      <param name="workflow">Определение вызываемого рабочего процесса.</param>
      <param name="inputs">Словарь входных параметров рабочего процесса, различаемых по имени аргумента.</param>
      <param name="timeout">Период времени, в течение которого рабочий процесс должен быть завершен, прежде чем он будет прерван и возникнет исключение <see cref="T:System.TimeoutException" />.</param>
      <returns>Словарь значений <see cref="T:System.Activities.OutArgument" /> и <see cref="T:System.Activities.InOutArgument" /> корневого действия. Ключом этих значений является имя аргумента, представляющего выходные значения рабочего процесса.</returns>
    </member>
    <member name="M:System.Activities.WorkflowInvoker.Invoke(System.Activities.Activity,System.TimeSpan)">
      <summary>Вызывает рабочий процесс в синхронном режиме с использованием указанного определения рабочего процесса и интервала времени ожидания.</summary>
      <param name="workflow">Определение вызываемого рабочего процесса.</param>
      <param name="timeout">Период времени, в течение которого рабочий процесс должен быть завершен, прежде чем он будет прерван и возникнет исключение <see cref="T:System.TimeoutException" />.</param>
      <returns>Словарь значений <see cref="T:System.Activities.OutArgument" /> и <see cref="T:System.Activities.InOutArgument" /> корневого действия. Ключом этих значений является имя аргумента, представляющего выходные значения рабочего процесса.</returns>
    </member>
    <member name="M:System.Activities.WorkflowInvoker.Invoke(System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Вызывает действие, переданное в конструктор <see cref="M:System.Activities.WorkflowInvoker.#ctor(System.Activities.Activity)" />, в синхронном режиме с указанным словарем <see cref="T:System.Collections.Generic.IDictionary`2" /> входных параметров.</summary>
      <param name="inputs">Словарь входных параметров рабочего процесса, различаемых по имени аргумента.</param>
      <returns>Словарь значений <see cref="T:System.Activities.OutArgument" /> и <see cref="T:System.Activities.InOutArgument" /> корневого действия. Ключом этих значений является имя аргумента, представляющего выходные значения рабочего процесса.</returns>
    </member>
    <member name="M:System.Activities.WorkflowInvoker.Invoke(System.Collections.Generic.IDictionary{System.String,System.Object},System.TimeSpan)">
      <summary>Вызывает действие, переданное в конструктор <see cref="M:System.Activities.WorkflowInvoker.#ctor(System.Activities.Activity)" />, в синхронном режиме с указанным словарем <see cref="T:System.Collections.Generic.IDictionary`2" /> входных параметров и указанным интервалом времени ожидания.</summary>
      <param name="inputs">Словарь входных параметров рабочего процесса, различаемых по имени аргумента.</param>
      <param name="timeout">Период времени, в течение которого рабочий процесс должен быть завершен, прежде чем он будет прерван и возникнет исключение <see cref="T:System.TimeoutException" />.</param>
      <returns>Словарь значений <see cref="T:System.Activities.OutArgument" /> и <see cref="T:System.Activities.InOutArgument" /> корневого действия. Ключом этих значений является имя аргумента, представляющего выходные значения рабочего процесса.</returns>
    </member>
    <member name="M:System.Activities.WorkflowInvoker.Invoke(System.TimeSpan)">
      <summary>Вызывает рабочий процесс в синхронном режиме с указанным интервалом времени ожидания.</summary>
      <param name="timeout">Период времени, в течение которого рабочий процесс должен быть завершен, прежде чем он будет прерван и возникнет исключение <see cref="T:System.TimeoutException" />.</param>
      <returns>Словарь значений <see cref="T:System.Activities.OutArgument" /> и <see cref="T:System.Activities.InOutArgument" /> корневого действия. Ключом этих значений является имя аргумента, представляющего выходные значения рабочего процесса.</returns>
    </member>
    <member name="M:System.Activities.WorkflowInvoker.Invoke``1(System.Activities.Activity{``0})">
      <summary>Вызывает рабочий процесс синхронным образом, используя определение рабочего процесса, переданное в конструктор <see cref="M:System.Activities.WorkflowInvoker.#ctor(System.Activities.Activity)" />.</summary>
      <param name="workflow">Определение вызываемого рабочего процесса. Определение рабочего процесса должно быть производным от <see cref="T:System.Activities.ActivityWithResult" />.</param>
      <typeparam name="TResult">Тип рабочего процесса.</typeparam>
      <returns>Значение типа TResult с результатом выполнения действия.</returns>
    </member>
    <member name="M:System.Activities.WorkflowInvoker.Invoke``1(System.Activities.Activity{``0},System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Вызывает рабочий процесс в синхронном режиме с использованием определения рабочего процесса и словаря входных параметров <see cref="T:System.Collections.Generic.IDictionary`2" />.</summary>
      <param name="workflow">Определение вызываемого рабочего процесса.</param>
      <param name="inputs">Словарь входных параметров рабочего процесса, различаемых по имени аргумента.</param>
      <typeparam name="TResult">Тип рабочего процесса.</typeparam>
      <returns>Значение типа TResult с результатом выполнения действия.</returns>
    </member>
    <member name="M:System.Activities.WorkflowInvoker.Invoke``1(System.Activities.Activity{``0},System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IDictionary{System.String,System.Object}@,System.TimeSpan)">
      <summary>Вызывает рабочий процесс в синхронном режиме с использованием указанного определения рабочего процесса, словаря <see cref="T:System.Collections.Generic.IDictionary`2" /> входных параметров, словаря <see cref="T:System.Collections.Generic.IDictionary`2" /> дополнительных выходных параметров и интервала времени ожидания.</summary>
      <param name="workflow">Определение вызываемого рабочего процесса.</param>
      <param name="inputs">Словарь входных параметров рабочего процесса, различаемых по имени аргумента.</param>
      <param name="additionalOutputs">Словарь дополнительных выходных параметров рабочего процесса, различаемых по имени аргумента.</param>
      <param name="timeout">Период времени, в течение которого рабочий процесс должен быть завершен, прежде чем он будет прерван и возникнет исключение <see cref="T:System.TimeoutException" />.</param>
      <typeparam name="TResult">Тип рабочего процесса.</typeparam>
      <returns>Значение типа TResult с результатом выполнения действия.</returns>
    </member>
    <member name="M:System.Activities.WorkflowInvoker.Invoke``1(System.Activities.Activity{``0},System.Collections.Generic.IDictionary{System.String,System.Object},System.TimeSpan)">
      <summary>Вызывает рабочий процесс в синхронном режиме с использованием определения рабочего процесса, словаря входных параметров <see cref="T:System.Collections.Generic.IDictionary`2" /> и интервала ожидания.</summary>
      <param name="workflow">Определение вызываемого рабочего процесса.</param>
      <param name="inputs">Словарь входных параметров рабочего процесса, различаемых по имени аргумента.</param>
      <param name="timeout">Период времени, в течение которого рабочий процесс должен быть завершен, прежде чем он будет прерван и возникнет исключение <see cref="T:System.TimeoutException" />.</param>
      <typeparam name="TResult">Тип рабочего процесса.</typeparam>
      <returns>Значение типа TResult с результатом выполнения действия.</returns>
    </member>
    <member name="M:System.Activities.WorkflowInvoker.InvokeAsync">
      <summary>Вызывает рабочий процесс в асинхронном режиме.</summary>
    </member>
    <member name="M:System.Activities.WorkflowInvoker.InvokeAsync(System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Вызывает рабочий процесс в асинхронном режиме с использованием указанного словаря <see cref="T:System.Collections.Generic.IDictionary`2" /> входных параметров.</summary>
      <param name="inputs">Словарь входных параметров рабочего процесса, различаемых по имени аргумента.</param>
    </member>
    <member name="M:System.Activities.WorkflowInvoker.InvokeAsync(System.Collections.Generic.IDictionary{System.String,System.Object},System.Object)">
      <summary>Вызывает рабочий процесс в асинхронном режиме с использованием указанного словаря <see cref="T:System.Collections.Generic.IDictionary`2" /> входных параметров и уникального идентификатора.</summary>
      <param name="inputs">Словарь входных параметров рабочего процесса, различаемых по имени аргумента.</param>
      <param name="userState">Предоставляемый пользователем объект, который позволяет отличить данную асинхронную операцию вызова от других текущих асинхронных операций вызова.</param>
    </member>
    <member name="M:System.Activities.WorkflowInvoker.InvokeAsync(System.Collections.Generic.IDictionary{System.String,System.Object},System.TimeSpan)">
      <summary>Вызывает рабочий процесс в асинхронном режиме с указанным словарем <see cref="T:System.Collections.Generic.IDictionary`2" /> входных параметров и указанным интервалом времени ожидания.</summary>
      <param name="inputs">Словарь входных параметров рабочего процесса, различаемых по имени аргумента.</param>
      <param name="timeout">Период времени, в течение которого рабочий процесс должен быть завершен, прежде чем он будет прерван и возникнет исключение <see cref="T:System.TimeoutException" />.</param>
    </member>
    <member name="M:System.Activities.WorkflowInvoker.InvokeAsync(System.Collections.Generic.IDictionary{System.String,System.Object},System.TimeSpan,System.Object)">
      <summary>Вызывает рабочий процесс в асинхронном режиме с указанным словарем <see cref="T:System.Collections.Generic.IDictionary`2" /> входных параметров, указанным интервалом времени ожидания и уникальным идентификатором.</summary>
      <param name="inputs">Словарь входных параметров рабочего процесса, различаемых по имени аргумента.</param>
      <param name="timeout">Период времени, в течение которого рабочий процесс должен быть завершен, прежде чем он будет прерван и возникнет исключение <see cref="T:System.TimeoutException" />.</param>
      <param name="userState">Предоставляемый пользователем объект, который позволяет отличить данную асинхронную операцию вызова от других текущих асинхронных операций вызова.</param>
    </member>
    <member name="M:System.Activities.WorkflowInvoker.InvokeAsync(System.Object)">
      <summary>Вызывает рабочий процесс в асинхронном режиме с использованием указанного уникального идентификатора.</summary>
      <param name="userState">Предоставляемый пользователем объект, который позволяет отличить данную асинхронную операцию вызова от других текущих асинхронных операций вызова.</param>
    </member>
    <member name="M:System.Activities.WorkflowInvoker.InvokeAsync(System.TimeSpan)">
      <summary>Вызывает рабочий процесс в асинхронном режиме с указанным интервалом времени ожидания.</summary>
      <param name="timeout">Период времени, в течение которого рабочий процесс должен быть завершен, прежде чем он будет прерван и возникнет исключение <see cref="T:System.TimeoutException" />.</param>
    </member>
    <member name="M:System.Activities.WorkflowInvoker.InvokeAsync(System.TimeSpan,System.Object)">
      <summary>Вызывает рабочий процесс в асинхронном режиме с указанным интервалом времени ожидания и уникальным идентификатором.</summary>
      <param name="timeout">Период времени, в течение которого рабочий процесс должен быть завершен, прежде чем он будет прерван и возникнет исключение <see cref="T:System.TimeoutException" />.</param>
      <param name="userState">Предоставляемый пользователем объект, который позволяет отличить данную асинхронную операцию вызова от других текущих асинхронных операций вызова.</param>
    </member>
    <member name="E:System.Activities.WorkflowInvoker.InvokeCompleted">
      <summary>Вызывается, когда рабочий процесс, вызванный одним из перегруженных вариантов <see cref="Overload:System.Activities.WorkflowInvoker.InvokeAsync" />, завершается или отменяется.</summary>
    </member>
    <member name="T:System.Activities.XamlIntegration.ActivityWithResultConverter">
      <summary>Предоставляет преобразование для конечного типа операции действия рабочего процесса.</summary>
    </member>
    <member name="M:System.Activities.XamlIntegration.ActivityWithResultConverter.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.XamlIntegration.ActivityWithResultConverter" />.</summary>
    </member>
    <member name="M:System.Activities.XamlIntegration.ActivityWithResultConverter.#ctor(System.Type)">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.XamlIntegration.ActivityWithResultConverter" /> с указанным типом, в который преобразуется результат действия.</summary>
      <param name="type">Тип данных, в который будет преобразован результат действия.</param>
    </member>
    <member name="T:System.Activities.XamlIntegration.ActivityWithResultValueSerializer">
      <summary>Убедитесь, что результат действия правильно преобразован в строку, пригодную для последовательной передачи.</summary>
    </member>
    <member name="M:System.Activities.XamlIntegration.ActivityWithResultValueSerializer.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.XamlIntegration.ActivityWithResultValueSerializer" />.</summary>
    </member>
    <member name="M:System.Activities.XamlIntegration.ActivityWithResultValueSerializer.CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary>Возвращает указание на то, является ли исходный объект выражением <see cref="T:System.Activities.XamlIntegration.IValueSerializableExpression" />, которое можно сериализовать в строку.</summary>
      <param name="value">Объект <see cref="T:System.Activities.XamlIntegration.IValueSerializableExpression" />, проверяемый на возможность преобразования в строку для последовательной передачи.</param>
      <param name="context">Определяет контекст операции сериализации <see cref="T:System.Activities.XamlIntegration.IValueSerializableExpression" />.</param>
      <returns>Значение <see langword="true" />, если выражение может быть сериализовано; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Activities.XamlIntegration.ActivityWithResultValueSerializer.ConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary>Выполняет сериализацию заданного объекта в строку.</summary>
      <param name="value">Объект, преобразуемый в строку для последовательной передачи.</param>
      <param name="context">Определяет контекст для сериализации объекта, преобразовываемого в строку.</param>
      <returns>Строковая версия сериализуемого выражения.</returns>
    </member>
    <member name="T:System.Activities.XamlIntegration.ActivityXamlServices">
      <summary>Создание экземпляра дерева действий, описанного в XAML.</summary>
    </member>
    <member name="M:System.Activities.XamlIntegration.ActivityXamlServices.CreateBuilderReader(System.Xaml.XamlReader)">
      <summary>Сопоставляет дерево действий <see langword="x:Class" /> из указанного средства чтения с <see cref="T:System.Activities.ActivityBuilder" /> или <see cref="T:System.Activities.ActivityBuilder`1" />.</summary>
      <param name="innerReader">Содержимое <see langword="x:Class" />.</param>
      <returns>Объект <see cref="T:System.Xaml.XamlReader" />, который выполняет преобразование между объектом <see cref="T:System.Activities.ActivityBuilder" /> и действием <see langword="x:Class" /> XAML.</returns>
    </member>
    <member name="M:System.Activities.XamlIntegration.ActivityXamlServices.CreateBuilderReader(System.Xaml.XamlReader,System.Xaml.XamlSchemaContext)">
      <summary>Сопоставляет дерево действий <see langword="x:Class" /> из указанного средства чтения с <see cref="T:System.Activities.ActivityBuilder" /> или <see cref="T:System.Activities.ActivityBuilder`1" />, используя указанный контекст схемы.</summary>
      <param name="innerReader">Содержимое <see langword="x:Class" />.</param>
      <param name="schemaContext">Контекст схемы.</param>
      <returns>Объект <see cref="T:System.Xaml.XamlReader" />, который выполняет преобразование между объектом <see cref="T:System.Activities.ActivityBuilder" /> и действием <see langword="x:Class" /> XAML.</returns>
    </member>
    <member name="M:System.Activities.XamlIntegration.ActivityXamlServices.CreateBuilderWriter(System.Xaml.XamlWriter)">
      <summary>Сопоставляет <see cref="T:System.Activities.ActivityBuilder" /> или <see cref="T:System.Activities.ActivityBuilder`1" /> из указанного средства записи с деревом действий <see langword="x:Class" />.</summary>
      <param name="innerWriter">Содержимое <see cref="T:System.Activities.ActivityBuilder" /> или <see cref="T:System.Activities.ActivityBuilder`1" />.</param>
      <returns>Объект <see cref="T:System.Xaml.XamlWriter" />, который выполняет преобразование между объектом <see cref="T:System.Activities.ActivityBuilder" /> и действием <see langword="x:Class" /> XAML.</returns>
    </member>
    <member name="M:System.Activities.XamlIntegration.ActivityXamlServices.CreateFactory(System.Xaml.XamlReader,System.Type)">
      <summary>Возвращает метод делегата для указанного средства чтения XAML с возвращаемым значением указанного типа.</summary>
      <param name="reader">Средство чтения XAML.</param>
      <param name="resultType">Тип возвращаемого значения метода, инкапсулируемого данным делегатом.</param>
      <returns>Метод делегата для указанного средства чтения XAML с возвращаемым значением указанного типа.</returns>
    </member>
    <member name="M:System.Activities.XamlIntegration.ActivityXamlServices.CreateFactory``1(System.Xaml.XamlReader)">
      <summary>Возвращает метод делегата для указанного средства чтения XAML с возвращаемым значением указанного типа.</summary>
      <param name="reader">Средство чтения XAML.</param>
      <typeparam name="T">Тип возвращаемого значения метода, инкапсулируемого данным делегатом.</typeparam>
      <returns>Метод делегата для указанного средства чтения XAML с возвращаемым значением типа <paramref name="T" />.</returns>
    </member>
    <member name="M:System.Activities.XamlIntegration.ActivityXamlServices.CreateReader(System.IO.Stream)">
      <summary>Сопоставляет дерево действий <see langword="x:Class" /> из указанного потока с <see cref="T:System.Activities.DynamicActivity" /> или <see cref="T:System.Activities.DynamicActivity`1" />.</summary>
      <param name="stream">Содержимое <see langword="x:Class" />.</param>
      <returns>Содержимое <see cref="T:System.Activities.ActivityBuilder" /> или <see cref="T:System.Activities.ActivityBuilder`1" />.</returns>
    </member>
    <member name="M:System.Activities.XamlIntegration.ActivityXamlServices.CreateReader(System.Xaml.XamlReader)">
      <summary>Сопоставляет дерево действий <see langword="x:Class" /> из указанного средства чтения с <see cref="T:System.Activities.DynamicActivity" /> или <see cref="T:System.Activities.DynamicActivity`1" />.</summary>
      <param name="innerReader">Содержимое <see langword="x:Class" />.</param>
      <returns>Содержимое <see cref="T:System.Activities.ActivityBuilder" /> или <see cref="T:System.Activities.ActivityBuilder`1" />.</returns>
    </member>
    <member name="M:System.Activities.XamlIntegration.ActivityXamlServices.CreateReader(System.Xaml.XamlReader,System.Xaml.XamlSchemaContext)">
      <summary>Сопоставляет дерево действий <see langword="x:Class" /> из указанного средства чтения с <see cref="T:System.Activities.DynamicActivity" /> или <see cref="T:System.Activities.DynamicActivity`1" />, используя указанный контекст схемы.</summary>
      <param name="innerReader">Содержимое <see langword="x:Class" />.</param>
      <param name="schemaContext">Контекст схемы.</param>
      <returns>Содержимое <see cref="T:System.Activities.ActivityBuilder" /> или <see cref="T:System.Activities.ActivityBuilder`1" />.</returns>
    </member>
    <member name="M:System.Activities.XamlIntegration.ActivityXamlServices.InitializeComponent(System.Type,System.Object)">
      <summary>Инициализирует заданный компонент.</summary>
      <param name="componentType">Тип компонента.</param>
      <param name="componentInstance">Экземпляр компонента.</param>
    </member>
    <member name="M:System.Activities.XamlIntegration.ActivityXamlServices.Load(System.IO.Stream)">
      <summary>Создает экземпляр декларативного рабочего процесса, описанного в указанном потоке.</summary>
      <param name="stream">Определение рабочего процесса.</param>
      <returns>Экземпляр дерева действий, которое описывает рабочий процесс.</returns>
    </member>
    <member name="M:System.Activities.XamlIntegration.ActivityXamlServices.Load(System.IO.Stream,System.Activities.XamlIntegration.ActivityXamlServicesSettings)">
      <summary>Создает экземпляр декларативного рабочего процесса, описанного в указанном потоке.</summary>
      <param name="stream">Определение рабочего процесса.</param>
      <param name="settings">Параметры службы XAML.</param>
      <returns>Экземпляр дерева действий, которое описывает рабочий процесс.</returns>
    </member>
    <member name="M:System.Activities.XamlIntegration.ActivityXamlServices.Load(System.IO.TextReader)">
      <summary>Создает экземпляр декларативного рабочего процесса, описанного в указанном модуле чтения текста.</summary>
      <param name="textReader">Определение рабочего процесса.</param>
      <returns>Экземпляр дерева действий, которое описывает рабочий процесс.</returns>
    </member>
    <member name="M:System.Activities.XamlIntegration.ActivityXamlServices.Load(System.IO.TextReader,System.Activities.XamlIntegration.ActivityXamlServicesSettings)">
      <summary>Создает экземпляр декларативного рабочего процесса, описанного в указанном модуле чтения текста.</summary>
      <param name="textReader">Определение рабочего процесса.</param>
      <param name="settings">Параметры службы XAML.</param>
      <returns>Экземпляр дерева действий, которое описывает рабочий процесс.</returns>
    </member>
    <member name="M:System.Activities.XamlIntegration.ActivityXamlServices.Load(System.String)">
      <summary>Создает экземпляр декларативного рабочего процесса, описанного в указанном файле.</summary>
      <param name="fileName">Файл, содержащий определение рабочего процесса.</param>
      <returns>Экземпляр дерева действий, которое описывает рабочий процесс.</returns>
    </member>
    <member name="M:System.Activities.XamlIntegration.ActivityXamlServices.Load(System.String,System.Activities.XamlIntegration.ActivityXamlServicesSettings)">
      <summary>Создает экземпляр декларативного рабочего процесса, описанного в указанном файле.</summary>
      <param name="fileName">Файл, содержащий определение рабочего процесса.</param>
      <param name="settings">Параметры службы XAML.</param>
      <returns>Экземпляр дерева действий, которое описывает рабочий процесс.</returns>
    </member>
    <member name="M:System.Activities.XamlIntegration.ActivityXamlServices.Load(System.Xaml.XamlReader)">
      <summary>Создает экземпляр декларативного рабочего процесса, описанного в указанном модуле чтения XAML.</summary>
      <param name="xamlReader">Определение рабочего процесса.</param>
      <returns>Экземпляр дерева действий, которое описывает рабочий процесс.</returns>
    </member>
    <member name="M:System.Activities.XamlIntegration.ActivityXamlServices.Load(System.Xaml.XamlReader,System.Activities.XamlIntegration.ActivityXamlServicesSettings)">
      <summary>Создает экземпляр декларативного рабочего процесса, описанного в указанном модуле чтения XAML.</summary>
      <param name="xamlReader">Определение рабочего процесса.</param>
      <param name="settings">Параметры службы XAML.</param>
      <returns>Экземпляр дерева действий, которое описывает рабочий процесс.</returns>
    </member>
    <member name="M:System.Activities.XamlIntegration.ActivityXamlServices.Load(System.Xml.XmlReader)">
      <summary>Создает экземпляр декларативного рабочего процесса, описанного в указанном модуле чтения XML.</summary>
      <param name="xmlReader">Определение рабочего процесса.</param>
      <returns>Экземпляр дерева действий, которое описывает рабочий процесс.</returns>
    </member>
    <member name="M:System.Activities.XamlIntegration.ActivityXamlServices.Load(System.Xml.XmlReader,System.Activities.XamlIntegration.ActivityXamlServicesSettings)">
      <summary>Создает экземпляр декларативного рабочего процесса, описанного в указанном модуле чтения XML.</summary>
      <param name="xmlReader">Определение рабочего процесса.</param>
      <param name="settings">Параметры службы XAML.</param>
      <returns>Экземпляр дерева действий, которое описывает рабочий процесс.</returns>
    </member>
    <member name="T:System.Activities.XamlIntegration.ActivityXamlServicesSettings">
      <summary>Указывает параметры службы XAML.</summary>
    </member>
    <member name="M:System.Activities.XamlIntegration.ActivityXamlServicesSettings.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.XamlIntegration.ActivityXamlServicesSettings" />.</summary>
    </member>
    <member name="P:System.Activities.XamlIntegration.ActivityXamlServicesSettings.CompileExpressions">
      <summary>Получает или задает значение, указывающее, скомпилированы ли выражения.</summary>
      <returns>Значение <see langword="true" />, если выражения скомпилированы; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Activities.XamlIntegration.ActivityXamlServicesSettings.LocationReferenceEnvironment">
      <summary>Получает или задает среду, на которую ссылается расположение действия.</summary>
      <returns>Среда ссылок на расположение действия.</returns>
    </member>
    <member name="T:System.Activities.XamlIntegration.ArgumentValueSerializer">
      <summary>Преобразует экземпляры <see cref="T:System.Activities.Argument" /> в экземпляры <see cref="T:System.String" />.</summary>
    </member>
    <member name="M:System.Activities.XamlIntegration.ArgumentValueSerializer.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.XamlIntegration.ArgumentValueSerializer" />.</summary>
    </member>
    <member name="M:System.Activities.XamlIntegration.ArgumentValueSerializer.CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary>Определяет, можно ли преобразовать указанный объект в <see cref="T:System.String" />.</summary>
      <param name="value">Объект, для которого необходимо проверить возможность преобразования.</param>
      <param name="context">Контекстная информация, используемая при выполнении преобразования.</param>
      <returns>Значение <see langword="true" />, если <paramref name="value" /> можно преобразовать в <see cref="T:System.String" />; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Activities.XamlIntegration.ArgumentValueSerializer.ConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary>Преобразует указанный объект в <see cref="T:System.String" />.</summary>
      <param name="value">Объект, преобразуемый в <see cref="T:System.String" />.</param>
      <param name="context">Контекстная информация, используемая при выполнении преобразования.</param>
      <returns>Представление <see cref="T:System.String" /> указанного объекта.</returns>
    </member>
    <member name="T:System.Activities.XamlIntegration.AssemblyReferenceConverter">
      <summary>Представляет преобразователь для ссылок сборки.</summary>
    </member>
    <member name="M:System.Activities.XamlIntegration.AssemblyReferenceConverter.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.XamlIntegration.AssemblyReferenceConverter" />.</summary>
    </member>
    <member name="M:System.Activities.XamlIntegration.AssemblyReferenceConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Определяет, можно ли выполнить преобразование из указанного типа.</summary>
      <param name="context">Контекстная информация, используемая при выполнении преобразования.</param>
      <param name="sourceType">Преобразовываемый тип.</param>
      <returns>Значение <see langword="true" />, если из указанного типа можно выполнить преобразование; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Activities.XamlIntegration.AssemblyReferenceConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Определяет, можно ли выполнить преобразовать в указанный тип.</summary>
      <param name="context">Контекстная информация, используемая при выполнении преобразования.</param>
      <param name="destinationType">Целевой тип преобразования.</param>
      <returns>Значение <see langword="true" />, если в заданный тип можно выполнить преобразование; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Activities.XamlIntegration.AssemblyReferenceConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Преобразует указанное значение новое представление, заданное производным классом.</summary>
      <param name="context">Контекстная информация, используемая при выполнении преобразования.</param>
      <param name="culture">Необязательные сведения о языке и региональных параметрах.</param>
      <param name="value">Преобразуемый объект.</param>
      <returns>Значение <see langword="true" />, если указанное значение преобразовано в новое представление; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Activities.XamlIntegration.AssemblyReferenceConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Преобразует указанное значение в заданное представление.</summary>
      <param name="context">Контекстная информация, используемая при выполнении преобразования.</param>
      <param name="culture">Необязательные сведения о языке и региональных параметрах.</param>
      <param name="value">Преобразуемый объект.</param>
      <param name="destinationType">Целевой тип преобразования.</param>
      <returns>Значение <see langword="true" />, если указанное значение преобразовано в заданное представление; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="T:System.Activities.XamlIntegration.CompiledDataContext">
      <summary>Представляет контекст скомпилированных данных.</summary>
    </member>
    <member name="M:System.Activities.XamlIntegration.CompiledDataContext.#ctor(System.Collections.Generic.IList{System.Activities.Location})">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.XamlIntegration.CompiledDataContext" />, используя расположения.</summary>
      <param name="locations">Расположения.</param>
    </member>
    <member name="M:System.Activities.XamlIntegration.CompiledDataContext.#ctor(System.Collections.Generic.IList{System.Activities.LocationReference})">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.XamlIntegration.CompiledDataContext" />, используя ссылки на расположение.</summary>
      <param name="locationReferences">Ссылки на расположения.</param>
    </member>
    <member name="M:System.Activities.XamlIntegration.CompiledDataContext.#ctor(System.Collections.Generic.IList{System.Activities.LocationReference},System.Activities.ActivityContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.XamlIntegration.CompiledDataContext" />, используя ссылки расположения и контекст действия.</summary>
      <param name="locationReferences">Ссылки на расположения.</param>
      <param name="activityContext">Контекст действия.</param>
    </member>
    <member name="M:System.Activities.XamlIntegration.CompiledDataContext.GetCompiledDataContextCache(System.Object,System.Activities.ActivityContext,System.Activities.Activity,System.Boolean,System.Int32)">
      <summary>Извлекает кэш, используемый контекстом данных.</summary>
      <param name="dataContextActivities">Действия контекста данных.</param>
      <param name="activityContext">Контекст действия.</param>
      <param name="compiledRoot">Скомпилированный корень.</param>
      <param name="forImplementation">Значение <see langword="true" />, если контекст скомпилированный данных предназначен для реализации; в противном случае — значение <see langword="false" />.</param>
      <param name="compiledDataContextCount">Число контекстов скомпилированных данных.</param>
      <returns>Контекст данных</returns>
    </member>
    <member name="M:System.Activities.XamlIntegration.CompiledDataContext.GetDataContextActivities(System.Activities.Activity,System.Boolean)">
      <summary>Получает действия для скомпилированных данных, используя указанные скомпилированные корень и реализацию.</summary>
      <param name="compiledRoot">Скомпилированный корень.</param>
      <param name="forImplementation">Значение <see langword="true" />, если контекст скомпилированный данных предназначен для реализации; в противном случае — значение <see langword="false" />.</param>
      <returns>Действия для компилированных данных.</returns>
    </member>
    <member name="M:System.Activities.XamlIntegration.CompiledDataContext.GetLocation``1(System.Func{``0},System.Action{``0})">
      <summary>Извлекает расположение компилированного контекста данных, используя заданные методы получения и задания.</summary>
      <param name="getMethod">Используемый метод получения.</param>
      <param name="setMethod">Используемый заданный метод.</param>
      <typeparam name="T">Функция.</typeparam>
      <returns>Расположение контекста скомпилированных данных.</returns>
    </member>
    <member name="M:System.Activities.XamlIntegration.CompiledDataContext.GetLocation``1(System.Func{``0},System.Action{``0},System.Int32,System.Activities.Activity,System.Activities.ActivityContext)">
      <summary>Извлекает Расположение контекста скомпилированных данных.</summary>
      <param name="getMethod">Используемый метод получения.</param>
      <param name="setMethod">Используемый заданный метод.</param>
      <param name="expressionId">Идентификатор выражения.</param>
      <param name="compiledRootActivity">Скомпилированное корневое действие.</param>
      <param name="activityContext">Контекст действия.</param>
      <typeparam name="T">Функция.</typeparam>
      <returns>Расположение контекста скомпилированных данных.</returns>
    </member>
    <member name="M:System.Activities.XamlIntegration.CompiledDataContext.GetValueTypeValues">
      <summary>Получает значение типа значения, используемого контекстом данных.</summary>
    </member>
    <member name="M:System.Activities.XamlIntegration.CompiledDataContext.GetVariableValue(System.Int32)">
      <summary>Получает значение переменной, используемой контекстом данных.</summary>
      <param name="index">Индекс переменной</param>
      <returns>Значение переменной, используемой контекстом данных.</returns>
    </member>
    <member name="M:System.Activities.XamlIntegration.CompiledDataContext.RewriteExpressionTree(System.Linq.Expressions.Expression)">
      <summary>Перезаписывает выражение, используемое контекстом данных.</summary>
      <param name="originalExpression">Исходное выражение для перезаписи.</param>
      <returns>Перезаписанное выражение.</returns>
    </member>
    <member name="M:System.Activities.XamlIntegration.CompiledDataContext.SetValueTypeValues">
      <summary>Возвращает Значение типа значения, используемое контекстом данных.</summary>
    </member>
    <member name="M:System.Activities.XamlIntegration.CompiledDataContext.SetVariableValue(System.Int32,System.Object)">
      <summary>Возвращает Значение переменной, используемой контекстом данных.</summary>
      <param name="index">Индекс переменной.</param>
      <param name="value">Значение переменной.</param>
    </member>
    <member name="T:System.Activities.XamlIntegration.DynamicUpdateMapConverter">
      <summary>Представляет преобразователь сопоставления динамического обновления.</summary>
    </member>
    <member name="M:System.Activities.XamlIntegration.DynamicUpdateMapConverter.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.XamlIntegration.DynamicUpdateMapConverter" />.</summary>
    </member>
    <member name="M:System.Activities.XamlIntegration.DynamicUpdateMapConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Определяет, можно ли выполнить преобразовать в указанный тип.</summary>
      <param name="context">Контекстная информация, используемая при выполнении преобразования.</param>
      <param name="destinationType">Целевой тип преобразования.</param>
      <returns>Значение <see langword="true" />, если в заданный тип можно выполнить преобразование; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Activities.XamlIntegration.DynamicUpdateMapConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Преобразует указанное значение в заданное представление.</summary>
      <param name="context">Контекстная информация, используемая при выполнении преобразования.</param>
      <param name="culture">Необязательные сведения о языке и региональных параметрах.</param>
      <param name="value">Преобразуемый объект.</param>
      <param name="destinationType">Целевой тип преобразования.</param>
      <returns>Значение <see langword="true" />, если указанное значение преобразовано в заданное представление; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="T:System.Activities.XamlIntegration.DynamicUpdateMapExtension">
      <summary>Указывает параметры расширения карты динамического обновления.</summary>
    </member>
    <member name="M:System.Activities.XamlIntegration.DynamicUpdateMapExtension.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.XamlIntegration.DynamicUpdateMapExtension" />.</summary>
    </member>
    <member name="M:System.Activities.XamlIntegration.DynamicUpdateMapExtension.#ctor(System.Activities.DynamicUpdate.DynamicUpdateMap)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.XamlIntegration.DynamicUpdateMapExtension" />, используя сопоставление обновления.</summary>
      <param name="updateMap">Сопоставление обновления.</param>
    </member>
    <member name="M:System.Activities.XamlIntegration.DynamicUpdateMapExtension.ProvideValue(System.IServiceProvider)">
      <summary>Указывает значение для поставщика служб.</summary>
      <param name="serviceProvider">Поставщик службы.</param>
    </member>
    <member name="P:System.Activities.XamlIntegration.DynamicUpdateMapExtension.UpdateMap">
      <summary>Получает расширение для сопоставление динамического обновления.</summary>
      <returns>Расширение для карты динамического обновления.</returns>
    </member>
    <member name="P:System.Activities.XamlIntegration.DynamicUpdateMapExtension.XmlContent">
      <summary>Получает XML-содержимое для расширения сопоставления динамического обновления.</summary>
      <returns>XML-содержимое для расширения сопоставления динамического обновления.</returns>
    </member>
    <member name="T:System.Activities.XamlIntegration.DynamicUpdateMapItemConverter">
      <summary>Представляет преобразователь для элементов карты динамического обновления.</summary>
    </member>
    <member name="M:System.Activities.XamlIntegration.DynamicUpdateMapItemConverter.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.XamlIntegration.DynamicUpdateMapItemConverter" />.</summary>
    </member>
    <member name="M:System.Activities.XamlIntegration.DynamicUpdateMapItemConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Определяет, можно ли выполнить преобразование из указанного типа.</summary>
      <param name="context">Контекстная информация, используемая при выполнении преобразования.</param>
      <param name="sourceType">Преобразовываемый тип.</param>
      <returns>Значение <see langword="true" />, если из указанного типа можно выполнить преобразование; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Activities.XamlIntegration.DynamicUpdateMapItemConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Определяет, можно ли выполнить преобразовать в указанный тип.</summary>
      <param name="context">Контекстная информация, используемая при выполнении преобразования.</param>
      <param name="destinationType">Целевой тип преобразования.</param>
      <returns>Значение <see langword="true" />, если в заданный тип можно выполнить преобразование; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Activities.XamlIntegration.DynamicUpdateMapItemConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Преобразует указанное значение новое представление, заданное производным классом.</summary>
      <param name="context">Контекстная информация, используемая при выполнении преобразования.</param>
      <param name="culture">Необязательные сведения о языке и региональных параметрах.</param>
      <param name="value">Преобразуемый объект.</param>
      <returns>Значение <see langword="true" />, если указанное значение преобразовано в новое представление; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Activities.XamlIntegration.DynamicUpdateMapItemConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Преобразует указанное значение в заданное представление.</summary>
      <param name="context">Контекстная информация, используемая при выполнении преобразования.</param>
      <param name="culture">Необязательные сведения о языке и региональных параметрах.</param>
      <param name="value">Преобразуемый объект.</param>
      <param name="destinationType">Целевой тип преобразования.</param>
      <returns>Значение <see langword="true" />, если указанное значение преобразовано в заданное представление; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="T:System.Activities.XamlIntegration.FuncDeferringLoader">
      <summary>Представляет объект, загружающий экземпляр сохраненной функции.</summary>
    </member>
    <member name="M:System.Activities.XamlIntegration.FuncDeferringLoader.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Activities.XamlIntegration.FuncDeferringLoader" />.</summary>
    </member>
    <member name="M:System.Activities.XamlIntegration.FuncDeferringLoader.Load(System.Xaml.XamlReader,System.IServiceProvider)">
      <summary>Загружает экземпляр функции, пригодной к использованию в любой точке для десериализации списка узлов.</summary>
      <param name="xamlReader">Список сериализованных узлов.</param>
      <param name="context">Контекст, предоставляющий информацию, необходимую для синтаксического анализа.</param>
      <returns>Экземпляр функции.</returns>
    </member>
    <member name="M:System.Activities.XamlIntegration.FuncDeferringLoader.Save(System.Object,System.IServiceProvider)">
      <summary>Сериализует указанный объект <see cref="T:System.Object" /> в список узлов Xaml.</summary>
      <param name="value">Объект, предназначенный для преобразования в список узлов Xaml.</param>
      <param name="serviceProvider">Объект, предоставляющий контекстную информацию для сериализации.</param>
      <returns>Модуль чтения Xaml.</returns>
    </member>
    <member name="T:System.Activities.XamlIntegration.ICompiledExpressionRoot">
      <summary>Указывает сведения о компилированном корне выражения.</summary>
    </member>
    <member name="M:System.Activities.XamlIntegration.ICompiledExpressionRoot.CanExecuteExpression(System.String,System.Boolean,System.Collections.Generic.IList{System.Activities.LocationReference},System.Int32@)">
      <summary>Показывает, может ли <see cref="T:System.Activities.XamlIntegration.ICompiledExpressionRoot" /> выполнить выражение.</summary>
      <param name="expressionText">Используемый текст выражения.</param>
      <param name="isReference">Значение <see langword="true" />, если ссылка; в противном случае — значение <see langword="false" />.</param>
      <param name="locations">Коллекция расположений.</param>
      <param name="expressionId">Идентификатор выражения.</param>
      <returns>Значение <see langword="true" />, если объект <see cref="T:System.Activities.XamlIntegration.ICompiledExpressionRoot" /> может выполнить выражение; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Activities.XamlIntegration.ICompiledExpressionRoot.GetExpressionTreeForExpression(System.Int32,System.Collections.Generic.IList{System.Activities.LocationReference})">
      <summary>Получает или дерево выражения, используемое для выражения.</summary>
      <param name="expressionId">Идентификатор выражения.</param>
      <param name="locationReferences">Ссылка на расположение.</param>
      <returns>Дерево выражения, используемое для выражения.</returns>
    </member>
    <member name="M:System.Activities.XamlIntegration.ICompiledExpressionRoot.GetLanguage">
      <summary>Получает язык, используемый в корне выражения.</summary>
      <returns>Используемый язык.</returns>
    </member>
    <member name="M:System.Activities.XamlIntegration.ICompiledExpressionRoot.GetRequiredLocations(System.Int32)">
      <summary>Получает список обязательных расположений для корня выражения.</summary>
      <param name="expressionId">Идентификатор выражения.</param>
      <returns>Список обязательных расположений для корня выражения.</returns>
    </member>
    <member name="M:System.Activities.XamlIntegration.ICompiledExpressionRoot.InvokeExpression(System.Int32,System.Collections.Generic.IList{System.Activities.Location})">
      <summary>Вызывает <see cref="T:System.Activities.XamlIntegration.ICompiledExpressionRoot" />, используя указанные идентификатор выражения и расположения.</summary>
      <param name="expressionId">Идентификатор выражения.</param>
      <param name="locations">Используемые расположения.</param>
      <returns>Вызванное выражение.</returns>
    </member>
    <member name="M:System.Activities.XamlIntegration.ICompiledExpressionRoot.InvokeExpression(System.Int32,System.Collections.Generic.IList{System.Activities.LocationReference},System.Activities.ActivityContext)">
      <summary>Вызывает <see cref="T:System.Activities.XamlIntegration.ICompiledExpressionRoot" />, используя указанные идентификатор выражения и расположения и контекст действия.</summary>
      <param name="expressionId">Идентификатор выражения.</param>
      <param name="locations">Расположения.</param>
      <param name="activityContext">Контекст действия.</param>
      <returns>Вызванное выражение.</returns>
    </member>
    <member name="T:System.Activities.XamlIntegration.ImplementationVersionConverter">
      <summary>Представляет преобразователь для версий реализации.</summary>
    </member>
    <member name="M:System.Activities.XamlIntegration.ImplementationVersionConverter.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.XamlIntegration.ImplementationVersionConverter" />.</summary>
    </member>
    <member name="M:System.Activities.XamlIntegration.ImplementationVersionConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Определяет, можно ли выполнить преобразование из указанного типа.</summary>
      <param name="context">Контекстная информация, используемая при выполнении преобразования.</param>
      <param name="sourceType">Преобразовываемый тип.</param>
      <returns>Значение <see langword="true" />, если из указанного типа можно выполнить преобразование; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Activities.XamlIntegration.ImplementationVersionConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Определяет, можно ли выполнить преобразовать в указанный тип.</summary>
      <param name="context">Контекстная информация, используемая при выполнении преобразования.</param>
      <param name="destinationType">Целевой тип преобразования.</param>
      <returns>Значение <see langword="true" />, если в заданный тип можно выполнить преобразование; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Activities.XamlIntegration.ImplementationVersionConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Преобразует указанное значение новое представление, заданное производным классом.</summary>
      <param name="context">Контекстная информация, используемая при выполнении преобразования.</param>
      <param name="culture">Необязательные сведения о языке и региональных параметрах.</param>
      <param name="value">Преобразуемый объект.</param>
      <returns>Значение <see langword="true" />, если указанное значение преобразовано в новое представление; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Activities.XamlIntegration.ImplementationVersionConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Преобразует указанное значение в заданное представление.</summary>
      <param name="context">Контекстная информация, используемая при выполнении преобразования.</param>
      <param name="culture">Необязательные сведения о языке и региональных параметрах.</param>
      <param name="value">Преобразуемый объект.</param>
      <param name="destinationType">Целевой тип преобразования.</param>
      <returns>Значение <see langword="true" />, если указанное значение преобразовано в заданное представление; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="T:System.Activities.XamlIntegration.InArgumentConverter">
      <summary>Предоставляет преобразователь типов для преобразования классов <see cref="T:System.Activities.InArgument" /> в другие представления и обратно.</summary>
    </member>
    <member name="M:System.Activities.XamlIntegration.InArgumentConverter.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.XamlIntegration.InArgumentConverter" />.</summary>
    </member>
    <member name="M:System.Activities.XamlIntegration.InArgumentConverter.#ctor(System.Type)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.XamlIntegration.InArgumentConverter" />, используя указанный тип.</summary>
      <param name="type">Тип связанного объекта <see cref="T:System.Activities.InArgument" />.</param>
    </member>
    <member name="T:System.Activities.XamlIntegration.InOutArgumentConverter">
      <summary>Предоставляет преобразователь типов для преобразования классов <see cref="T:System.Activities.InOutArgument" /> в другие представления и обратно.</summary>
    </member>
    <member name="M:System.Activities.XamlIntegration.InOutArgumentConverter.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.XamlIntegration.InOutArgumentConverter" />.</summary>
    </member>
    <member name="M:System.Activities.XamlIntegration.InOutArgumentConverter.#ctor(System.Type)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.XamlIntegration.InOutArgumentConverter" />, используя указанный тип.</summary>
      <param name="type">Тип связанного объекта <see cref="T:System.Activities.InOutArgument" />.</param>
    </member>
    <member name="T:System.Activities.XamlIntegration.IValueSerializableExpression">
      <summary>Предоставляет методы преобразования выражений в строки.</summary>
    </member>
    <member name="M:System.Activities.XamlIntegration.IValueSerializableExpression.CanConvertToString(System.Windows.Markup.IValueSerializerContext)">
      <summary>Определяет, можно ли преобразовать выражение в строку.</summary>
      <param name="context">Контекстная информация, используемая при выполнении преобразования.</param>
      <returns>Значение <see langword="true" />, если выражение может быть преобразовано в строку; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Activities.XamlIntegration.IValueSerializableExpression.ConvertToString(System.Windows.Markup.IValueSerializerContext)">
      <summary>Преобразует выражение в строку.</summary>
      <param name="context">Контекстная информация, используемая при выполнении преобразования.</param>
      <returns>Строковое представление выражения.</returns>
    </member>
    <member name="T:System.Activities.XamlIntegration.OutArgumentConverter">
      <summary>Предоставляет преобразователь типов для преобразования классов <see cref="T:System.Activities.OutArgument" /> в другие представления и обратно.</summary>
    </member>
    <member name="M:System.Activities.XamlIntegration.OutArgumentConverter.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.XamlIntegration.OutArgumentConverter" />.</summary>
    </member>
    <member name="M:System.Activities.XamlIntegration.OutArgumentConverter.#ctor(System.Type)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.XamlIntegration.OutArgumentConverter" />, используя указанный тип.</summary>
      <param name="type">Тип связанного объекта <see cref="T:System.Activities.OutArgument" />.</param>
    </member>
    <member name="T:System.Activities.XamlIntegration.PropertyReferenceExtension`1">
      <summary>Предоставляет доступ к свойствам, содержащимся в документе <see langword="x:Class" />.</summary>
      <typeparam name="T">Тип значения связанного свойства.</typeparam>
    </member>
    <member name="M:System.Activities.XamlIntegration.PropertyReferenceExtension`1.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.XamlIntegration.PropertyReferenceExtension`1" />.</summary>
    </member>
    <member name="P:System.Activities.XamlIntegration.PropertyReferenceExtension`1.PropertyName">
      <summary>Получает или задает имя связанного свойства.</summary>
      <returns>Имя свойства.</returns>
    </member>
    <member name="M:System.Activities.XamlIntegration.PropertyReferenceExtension`1.ProvideValue(System.IServiceProvider)">
      <summary>Возвращает значение связанного свойства.</summary>
      <param name="serviceProvider">Объект, предоставляющий службы для расширения разметки.</param>
      <returns>Значение свойства.</returns>
    </member>
    <member name="T:System.Activities.XamlIntegration.SerializableFuncDeferringLoader">
      <summary>Представляет сериализуемый задерживающий загрузчик функции.</summary>
    </member>
    <member name="M:System.Activities.XamlIntegration.SerializableFuncDeferringLoader.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.XamlIntegration.SerializableFuncDeferringLoader" />.</summary>
    </member>
    <member name="M:System.Activities.XamlIntegration.SerializableFuncDeferringLoader.Load(System.Xaml.XamlReader,System.IServiceProvider)">
      <summary>Загружает экземпляр функции, пригодной к использованию в любой точке для десериализации списка узлов.</summary>
      <param name="xamlReader">Список сериализованных узлов.</param>
      <param name="context">Контекст, предоставляющий информацию, необходимую для синтаксического анализа.</param>
      <returns>Экземпляр функции.</returns>
    </member>
    <member name="M:System.Activities.XamlIntegration.SerializableFuncDeferringLoader.Save(System.Object,System.IServiceProvider)">
      <summary>Сериализует указанный объект в список узлов XAML.</summary>
      <param name="value">Объект, предназначенный для преобразования в список узлов Xaml.</param>
      <param name="serviceProvider">Объект, предоставляющий контекстную информацию для сериализации.</param>
      <returns>Сериализованный объект в список узлов XAML.</returns>
    </member>
    <member name="T:System.Activities.XamlIntegration.TextExpressionCompiler">
      <summary>Представляет компилятор текстового выражения.</summary>
    </member>
    <member name="M:System.Activities.XamlIntegration.TextExpressionCompiler.#ctor(System.Activities.XamlIntegration.TextExpressionCompilerSettings)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.XamlIntegration.TextExpressionCompiler" />.</summary>
      <param name="settings">Используемые параметры.</param>
    </member>
    <member name="M:System.Activities.XamlIntegration.TextExpressionCompiler.Compile">
      <summary>Компилирует <see cref="T:System.Activities.XamlIntegration.TextExpressionCompiler" />.</summary>
      <returns>Результат скомпилированного <see cref="T:System.Activities.XamlIntegration.TextExpressionCompiler" />.</returns>
    </member>
    <member name="M:System.Activities.XamlIntegration.TextExpressionCompiler.GenerateSource(System.IO.TextWriter)">
      <summary>Указывает, создает ли <see cref="T:System.Activities.XamlIntegration.TextExpressionCompiler" /> источники.</summary>
      <param name="textWriter">Используемый аргумент.</param>
      <returns>Значение <see langword="true" />, если <see cref="T:System.Activities.XamlIntegration.TextExpressionCompiler" /> создает источники; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="T:System.Activities.XamlIntegration.TextExpressionCompilerError">
      <summary>Представляет ошибку компилятора текстового выражения.</summary>
    </member>
    <member name="P:System.Activities.XamlIntegration.TextExpressionCompilerError.IsWarning">
      <summary>Получает или задает значение, указывающее, является ли ошибка компилятора предупреждением.</summary>
      <returns>Значение <see langword="true" />, если ошибка компилятора является предупреждением; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Activities.XamlIntegration.TextExpressionCompilerError.Message">
      <summary>Получает или задает сообщение, содержащее сведения об ошибке.</summary>
      <returns>Сообщение, содержащее сведения об ошибке.</returns>
    </member>
    <member name="P:System.Activities.XamlIntegration.TextExpressionCompilerError.Number">
      <summary>Получает или задает номер ошибки.</summary>
      <returns>Номер ошибки.</returns>
    </member>
    <member name="P:System.Activities.XamlIntegration.TextExpressionCompilerError.SourceLineNumber">
      <summary>Получает или задает номер исходной строки ошибки.</summary>
      <returns>Номер строки источника ошибки.</returns>
    </member>
    <member name="T:System.Activities.XamlIntegration.TextExpressionCompilerResults">
      <summary>Указывает сведения о результатах компилятора текстового выражения.</summary>
    </member>
    <member name="P:System.Activities.XamlIntegration.TextExpressionCompilerResults.CompilerMessages">
      <summary>Получает результаты сообщений компилятора.</summary>
      <returns>Результаты сообщений компилятора.</returns>
    </member>
    <member name="P:System.Activities.XamlIntegration.TextExpressionCompilerResults.HasErrors">
      <summary>Получает или задает значение, указывающее, содержит ли результат ошибки.</summary>
      <returns>Значение <see langword="true" />, если результат содержит ошибки; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Activities.XamlIntegration.TextExpressionCompilerResults.HasSourceInfo">
      <summary>Получает или задает значение, указывающее, имеет ли информация источник.</summary>
      <returns>Значение <see langword="true" />, если сведения имеют источник; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Activities.XamlIntegration.TextExpressionCompilerResults.ResultType">
      <summary>Получает или задает тип результатов.</summary>
      <returns>Тип результатов.</returns>
    </member>
    <member name="T:System.Activities.XamlIntegration.TextExpressionCompilerSettings">
      <summary>Задает параметры компилятора текстовых выражений.</summary>
    </member>
    <member name="M:System.Activities.XamlIntegration.TextExpressionCompilerSettings.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.XamlIntegration.TextExpressionCompilerSettings" />.</summary>
    </member>
    <member name="P:System.Activities.XamlIntegration.TextExpressionCompilerSettings.Activity">
      <summary>Получает или задает действие параметров компилятора.</summary>
      <returns>Действие параметров компилятора.</returns>
    </member>
    <member name="P:System.Activities.XamlIntegration.TextExpressionCompilerSettings.ActivityName">
      <summary>Получает или задает имя действия для настроек компилятора.</summary>
      <returns>Имя действия.</returns>
    </member>
    <member name="P:System.Activities.XamlIntegration.TextExpressionCompilerSettings.ActivityNamespace">
      <summary>Получает или задает пространство имен действия.</summary>
      <returns>Пространство имен действия.</returns>
    </member>
    <member name="P:System.Activities.XamlIntegration.TextExpressionCompilerSettings.AlwaysGenerateSource">
      <summary>Получает или задает значение, указывающее, всегда ли параметры компилятора текстовых выражений предполагают создание исходного кода.</summary>
      <returns>Значение <see langword="true" />, если параметры компилятора текстового выражения всегда создают исходный текст; в противном случае – значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Activities.XamlIntegration.TextExpressionCompilerSettings.ForImplementation">
      <summary>Получает или задает значение, указывающее, предназначен ли <see cref="T:System.Activities.XamlIntegration.TextExpressionCompilerSettings" /> для реализации.</summary>
      <returns>Значение <see langword="true" />, если объект <see cref="T:System.Activities.XamlIntegration.TextExpressionCompilerSettings" /> предназначен для реализации; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Activities.XamlIntegration.TextExpressionCompilerSettings.GenerateAsPartialClass">
      <summary>Получает или задает, будет ли <see cref="T:System.Activities.XamlIntegration.TextExpressionCompilerSettings" /> создаваться как разделяемый класс.</summary>
      <returns>Значение <see langword="true" />, если <see cref="T:System.Activities.XamlIntegration.TextExpressionCompilerSettings" /> создается как разделяемый класс; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Activities.XamlIntegration.TextExpressionCompilerSettings.Language">
      <summary>Получает или задает язык, используемый объектом <see cref="T:System.Activities.XamlIntegration.TextExpressionCompilerSettings" />.</summary>
      <returns>Язык, используемый объектом <see cref="T:System.Activities.XamlIntegration.TextExpressionCompilerSettings" />.</returns>
    </member>
    <member name="P:System.Activities.XamlIntegration.TextExpressionCompilerSettings.LogSourceGenerationMessage">
      <summary>Получает или задает сообщение создания источника журнала для <see cref="T:System.Activities.XamlIntegration.TextExpressionCompilerSettings" />.</summary>
      <returns>Сообщение создания источника журнала для объекта <see cref="T:System.Activities.XamlIntegration.TextExpressionCompilerSettings" />.</returns>
    </member>
    <member name="P:System.Activities.XamlIntegration.TextExpressionCompilerSettings.RootNamespace">
      <summary>Получает или задает корневое пространство имен для <see cref="T:System.Activities.XamlIntegration.TextExpressionCompilerSettings" />.</summary>
      <returns>Корневое пространство имен для <see cref="T:System.Activities.XamlIntegration.TextExpressionCompilerSettings" />.</returns>
    </member>
    <member name="T:System.Activities.XamlIntegration.TypeConverterBase">
      <summary>Предоставляет методы, которые производные классы преобразователя типов могут использовать для преобразования объектов в различные представления и из них.</summary>
    </member>
    <member name="M:System.Activities.XamlIntegration.TypeConverterBase.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>При переопределении в производном классе определяет, может ли указанный тип быть преобразован из.</summary>
      <param name="context">Контекстная информация, используемая при выполнении преобразования.</param>
      <param name="sourceType">Преобразовываемый тип.</param>
      <returns>Значение <see langword="true" />, если из указанного типа можно выполнить преобразование; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Activities.XamlIntegration.TypeConverterBase.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>При переопределении в производном классе определяет, может ли указанный тип быть преобразован в.</summary>
      <param name="context">Контекстная информация, используемая при выполнении преобразования.</param>
      <param name="destinationType">Целевой тип преобразования.</param>
      <returns>Значение <see langword="true" />, если в заданный тип можно выполнить преобразование; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Activities.XamlIntegration.TypeConverterBase.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Преобразование указанного значения в новое представление, указанное производным классом (при переопределении в производном классе).</summary>
      <param name="context">Контекстная информация, используемая при выполнении преобразования.</param>
      <param name="culture">Необязательный класс <see cref="T:System.Globalization.CultureInfo" />. Если не предоставляются, предполагается использование текущего языка и региональных параметров.</param>
      <param name="value">Преобразуемый объект.</param>
      <returns>Преобразованное значение.</returns>
    </member>
    <member name="M:System.Activities.XamlIntegration.TypeConverterBase.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Преобразование указанного значения в указанное представление (при переопределении в производном классе).</summary>
      <param name="context">Контекстная информация, используемая при выполнении преобразования.</param>
      <param name="culture">Необязательный класс <see cref="T:System.Globalization.CultureInfo" />. Если не предоставляются, предполагается использование текущего языка и региональных параметров.</param>
      <param name="value">Преобразуемый объект.</param>
      <param name="destinationType">Целевой тип преобразования.</param>
      <returns>Преобразованное значение.</returns>
    </member>
    <member name="T:System.Activities.XamlIntegration.WorkflowIdentityConverter">
      <summary>Представляет преобразователь идентификаторов рабочего процесса.</summary>
    </member>
    <member name="M:System.Activities.XamlIntegration.WorkflowIdentityConverter.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.XamlIntegration.WorkflowIdentityConverter" />.</summary>
    </member>
    <member name="M:System.Activities.XamlIntegration.WorkflowIdentityConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Определяет, можно ли выполнить преобразование из указанного типа.</summary>
      <param name="context">Контекстная информация, используемая при выполнении преобразования.</param>
      <param name="sourceType">Преобразовываемый тип.</param>
      <returns>Значение <see langword="true" />, если из указанного типа можно выполнить преобразование; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Activities.XamlIntegration.WorkflowIdentityConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Преобразует указанное значение новое представление, заданное производным классом.</summary>
      <param name="context">Контекстная информация, используемая при выполнении преобразования.</param>
      <param name="culture">Необязательные сведения о языке и региональных параметрах.</param>
      <param name="value">Преобразуемый объект.</param>
      <returns>Значение <see langword="true" />, если указанное значение преобразовано в новое представление; в противном случае — значение <see langword="false" />.</returns>
    </member>
  </members>
</doc>
