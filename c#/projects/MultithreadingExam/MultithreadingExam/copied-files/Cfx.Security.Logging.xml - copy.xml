<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Cfx.Security.Logging</name>
    </assembly>
    <members>
        <member name="T:Microsoft.Windows.Azure.Security.Logging.AccessControlEventProvider">
            <summary>Defines the ability to log access control-related ETW events.</summary>
        </member>
        <member name="M:Microsoft.Windows.Azure.Security.Logging.AccessControlEventProvider.EventWriteAccessDenied(System.String,System.String,System.String,System.String,System.String)">
            <summary>Writes an AccessDenied event.</summary>
            <param name="resourceId">The ID of the resource to which access is denied.</param>
            <param name="subjectClaimType">The claim type of the subject denied access.</param>
            <param name="subjectClaimValue">The claim value of the subject denied access.</param>
            <param name="subjectOriginalIssuer">
            The claim original issuer of the subject denied access.
            </param>
            <param name="right">The right denied to the subject.</param>
            <returns>
            Returns <see langword="true"/> if the event is written; otherwise, <see langword="false"/>. If
            <see langword="false"/>, call the <see cref="M:System.Diagnostics.Eventing.EventProvider.GetLastWriteEventError"/> method to determine the
            cause of the failure.
            </returns>
        </member>
        <member name="M:Microsoft.Windows.Azure.Security.Logging.AccessControlEventProvider.EventWriteAccessGranted(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>Writes an AccessGranted event.</summary>
            <param name="resourceId">The ID of the resource to which access is granted.</param>
            <param name="subjectClaimType">The claim type of the subject granted access.</param>
            <param name="subjectClaimValue">The claim value of the subject granted access.</param>
            <param name="subjectOriginalIssuer">
            The claim original issuer of the subject granted access.
            </param>
            <param name="right">The right granted to the subject.</param>
            <param name="grantedViaResourceId">
            The ID of the resource whose policy granted access.
            </param>
            <param name="grantedViaClaimType">
            The type of the claim that caused access to be granted.
            </param>
            <param name="grantedViaClaimValue">
            The value of the claim that caused access to be granted.
            </param>
            <param name="grantedViaOriginalIssuer">
            The original issuer of the claim that caused access to be granted.
            </param>
            <param name="grantedViaRight">The right that granted access.</param>
            <returns>
            Returns <see langword="true"/> if the event is written; otherwise, <see langword="false"/>. If
            <see langword="false"/>, call the <see cref="M:System.Diagnostics.Eventing.EventProvider.GetLastWriteEventError"/> method to determine the
            cause of the failure.
            </returns>
        </member>
        <member name="M:Microsoft.Windows.Azure.Security.Logging.AccessControlEventProvider.EventWriteAddAuditEntry(System.String,System.String,System.UInt32,System.String,System.String,System.String)">
            <summary>Writes an AddAuditEntry event.</summary>
            <param name="resourceId">
            The ID of the resource to which the audit entry applies.
            </param>
            <param name="right">The right to which the audit entry applies.</param>
            <param name="auditLevel">The explicit audit level required by the entry added.</param>
            <param name="subjectClaimType">The claim type of the subject who set the entry.</param>
            <param name="subjectClaimValue">
            The claim value of the subject who set the entry.
            </param>
            <param name="subjectOriginalIssuer">
            The claim original issuer of the subject who set the entry.
            </param>
            <returns>
            Returns <see langword="true"/> if the event is written; otherwise, <see langword="false"/>. If
            <see langword="false"/>, call the <see cref="M:System.Diagnostics.Eventing.EventProvider.GetLastWriteEventError"/> method to determine the
            cause of the failure.
            </returns>
        </member>
        <member name="M:Microsoft.Windows.Azure.Security.Logging.AccessControlEventProvider.EventWriteAddAuthorizationEntry(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>Writes an AddAuthorizationEntry event.</summary>
            <param name="resourceId">
            The ID of the resource to which access is granted by the entry added.
            </param>
            <param name="claimType">
            The claim type to which access is granted by the entry added.
            </param>
            <param name="claimValue">
            The claim value to which access is granted by the entry added.
            </param>
            <param name="originalIssuer">
            The claim original issuer to which access is granted by the entry added.
            </param>
            <param name="right">The right granted by the entry added.</param>
            <param name="subjectClaimType">
            The claim type of the subject who added the entry.
            </param>
            <param name="subjectClaimValue">
            The claim value of the subject who added the entry.
            </param>
            <param name="subjectOriginalIssuer">
            The claim original issuer of the subject who added the entry.
            </param>
            <returns>
            Returns <see langword="true"/> if the event is written; otherwise, <see langword="false"/>. If
            <see langword="false"/>, call the <see cref="M:System.Diagnostics.Eventing.EventProvider.GetLastWriteEventError"/> method to determine the
            cause of the failure.
            </returns>
        </member>
        <member name="M:Microsoft.Windows.Azure.Security.Logging.AccessControlEventProvider.EventWriteRemoveAuditEntry(System.String,System.String,System.UInt32,System.String,System.String,System.String)">
            <summary>Writes a RemoveAuditEntry event.</summary>
            <param name="resourceId">
            The ID of the resource to which the removed audit entry applied.
            </param>
            <param name="right">The right to which the removed audit entry applied.</param>
            <param name="auditLevel">The audit level that was required by the entry removed.</param>
            <param name="subjectClaimType">
            The claim type of the subject who removed the entry.
            </param>
            <param name="subjectClaimValue">
            The claim value of the subject who removed the entry.
            </param>
            <param name="subjectOriginalIssuer">
            The claim original issuer of the subject who removed the entry.
            </param>
            <returns>
            Returns <see langword="true"/> if the event is written; otherwise, <see langword="false"/>. If
            <see langword="false"/>, call the <see cref="M:System.Diagnostics.Eventing.EventProvider.GetLastWriteEventError"/> method to determine the
            cause of the failure.
            </returns>
        </member>
        <member name="M:Microsoft.Windows.Azure.Security.Logging.AccessControlEventProvider.EventWriteRemoveAuthorizationEntry(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>Writes a RemoveAuthorizationEntry event.</summary>
            <param name="resourceId">
            The ID of the resource to which access was granted by the entry removed.
            </param>
            <param name="claimType">
            The claim type to which access was granted by the entry removed.
            </param>
            <param name="claimValue">
            The claim value to which access was granted by the entry removed.
            </param>
            <param name="originalIssuer">
            The claim original issuer to which access was granted by the entry removed.
            </param>
            <param name="right">The right granted by the entry removed.</param>
            <param name="subjectClaimType">
            The claim type of the subject who removed the entry.
            </param>
            <param name="subjectClaimValue">
            The claim value of the subject who removed the entry.
            </param>
            <param name="subjectOriginalIssuer">
            The claim original issuer of the subject who removed the entry.
            </param>
            <returns>
            Returns <see langword="true"/> if the event is written; otherwise, <see langword="false"/>. If
            <see langword="false"/>, call the <see cref="M:System.Diagnostics.Eventing.EventProvider.GetLastWriteEventError"/> method to determine the
            cause of the failure.
            </returns>
        </member>
        <member name="T:Microsoft.Windows.Azure.Security.Logging.AuthenticationEventProvider">
            <summary>Defines the ability to log authentication-related ETW events.</summary>
        </member>
        <member name="M:Microsoft.Windows.Azure.Security.Logging.AuthenticationEventProvider.SetCfxTraceSource(Microsoft.Windows.Azure.Fabric.Cfx.Contracts.ICfxTraceSource,System.Boolean)">
            <summary>
            Sets the global <see cref="T:Microsoft.Windows.Azure.Fabric.Cfx.Contracts.ICfxTraceSource"/> used by this class.
            </summary>
            <param name="traceSource">The new CFX trace source.</param>
            <param name="replaceExisting">true if the method should replace any
            previously registered trace source; otherwise, false.</param>
            <returns>The previously registered trace source. If <paramref name="replaceExisting"/>
            is false ******* another trace source has already been registered, that
            trace source is returned.</returns>
        </member>
        <member name="M:Microsoft.Windows.Azure.Security.Logging.AuthenticationEventProvider.EventWriteCertificateValidationCallbackReregistered(System.String)">
            <summary>Writes a CertificateValidationCallbackReregistered event.</summary>
            <param name="previousCallback">The previous callback.</param>
            <returns>
            Returns <see langword="true"/> if the event is written; otherwise, <see langword="false"/>. If
            <see langword="false"/>, call the <see cref="M:System.Diagnostics.Eventing.EventProvider.GetLastWriteEventError"/> method to determine the
            cause of the failure.
            </returns>
        </member>
        <member name="M:Microsoft.Windows.Azure.Security.Logging.AuthenticationEventProvider.EventWriteRequestSecurityTokenFailed(System.String,System.String,System.String,System.String)">
            <summary>Writes a RequestSecurityTokenFailed event.</summary>
            <param name="stsAddress">The full URL of the STS address.</param>
            <param name="appliesTo">The AppliesTo value of the RST (Request for Security Token message).</param>
            <param name="credentialType">The credential type (e.g. Windows, X509Certificate, etc.).</param>
            <param name="exceptionMessage">A message that describes the exception.</param>
            <returns>
            Returns <see langword="true"/> if the event is written; otherwise, <see langword="false"/>. If
            <see langword="false"/>, call the <see cref="M:System.Diagnostics.Eventing.EventProvider.GetLastWriteEventError"/> method to determine the
            cause of the failure.
            </returns>
        </member>
        <member name="M:Microsoft.Windows.Azure.Security.Logging.AuthenticationEventProvider.EventWriteCriticalMessage(System.String)">
            <summary>Writes a critical message event.</summary>
            <param name="message">The message to write.</param>
            <returns>
            Returns <see langword="true"/> if the event is written; otherwise, <see langword="false"/>. If
            <see langword="false"/>, call the <see cref="M:System.Diagnostics.Eventing.EventProvider.GetLastWriteEventError"/> method to determine the
            cause of the failure.
            </returns>
        </member>
        <member name="M:Microsoft.Windows.Azure.Security.Logging.AuthenticationEventProvider.EventWriteErrorMessage(System.String)">
            <summary>Writes an error message event.</summary>
            <param name="message">The message to write.</param>
            <returns>
            Returns <see langword="true"/> if the event is written; otherwise, <see langword="false"/>. If
            <see langword="false"/>, call the <see cref="M:System.Diagnostics.Eventing.EventProvider.GetLastWriteEventError"/> method to determine the
            cause of the failure.
            </returns>
        </member>
        <member name="M:Microsoft.Windows.Azure.Security.Logging.AuthenticationEventProvider.EventWriteInformationalMessage(System.String)">
            <summary>Writes an informational message event.</summary>
            <param name="message">The message to write.</param>
            <returns>
            Returns <see langword="true"/> if the event is written; otherwise, <see langword="false"/>. If
            <see langword="false"/>, call the <see cref="M:System.Diagnostics.Eventing.EventProvider.GetLastWriteEventError"/> method to determine the
            cause of the failure.
            </returns>
        </member>
        <member name="M:Microsoft.Windows.Azure.Security.Logging.AuthenticationEventProvider.EventWriteWarningMessage(System.String)">
            <summary>Writes a warning message event.</summary>
            <param name="message">The message to write.</param>
            <returns>
            Returns <see langword="true"/> if the event is written; otherwise, <see langword="false"/>. If
            <see langword="false"/>, call the <see cref="M:System.Diagnostics.Eventing.EventProvider.GetLastWriteEventError"/> method to determine the
            cause of the failure.
            </returns>
        </member>
        <member name="M:Microsoft.Windows.Azure.Security.Logging.AuthenticationEventProvider.EventWriteVerboseMessage(System.String)">
            <summary>Writes a verbose message event.</summary>
            <param name="message">The message to write.</param>
            <returns>
            Returns <see langword="true"/> if the event is written; otherwise, <see langword="false"/>. If
            <see langword="false"/>, call the <see cref="M:System.Diagnostics.Eventing.EventProvider.GetLastWriteEventError"/> method to determine the
            cause of the failure.
            </returns>
        </member>
    </members>
</doc>
